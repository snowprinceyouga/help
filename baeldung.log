2022-03-13 17:53:00 DEBUG Logging Provider: org.jboss.logging.Log4j2LoggerProvider
w2022-03-13 17:53:00 DEBUG PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@641916a2
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/F:/java/project/helpdeskproject/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		ru.edu.helpdesk.entity.Comment
		ru.edu.helpdesk.entity.Ticket
		ru.edu.helpdesk.entity.User]
	Mapping files names []
	Properties []
w2022-03-13 17:53:00 DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
w2022-03-13 17:53:00 DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
w2022-03-13 17:53:00 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
w2022-03-13 17:53:00 TRACE Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [jdbc] -> [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl]
w2022-03-13 17:53:00 TRACE Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [jta] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
w2022-03-13 17:53:00 TRACE Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.JDBCTransactionFactory] -> [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl]
w2022-03-13 17:53:00 TRACE Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.JTATransactionFactory] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
w2022-03-13 17:53:00 TRACE Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.CMTTransactionFactory] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
w2022-03-13 17:53:00 TRACE Registering named strategy selector [org.hibernate.hql.spi.id.MultiTableBulkIdStrategy] : [persistent] -> [org.hibernate.hql.spi.id.persistent.PersistentTableBulkIdStrategy]
w2022-03-13 17:53:00 TRACE Registering named strategy selector [org.hibernate.hql.spi.id.MultiTableBulkIdStrategy] : [global_temporary] -> [org.hibernate.hql.spi.id.global.GlobalTemporaryTableBulkIdStrategy]
w2022-03-13 17:53:00 TRACE Registering named strategy selector [org.hibernate.hql.spi.id.MultiTableBulkIdStrategy] : [local_temporary] -> [org.hibernate.hql.spi.id.local.LocalTemporaryTableBulkIdStrategy]
w2022-03-13 17:53:00 TRACE Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [default] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl]
w2022-03-13 17:53:00 TRACE Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [jpa] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl]
w2022-03-13 17:53:00 TRACE Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [legacy-jpa] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl]
w2022-03-13 17:53:00 TRACE Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [legacy-hbm] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl]
w2022-03-13 17:53:00 TRACE Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [component-path] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl]
w2022-03-13 17:53:00 TRACE Registering named strategy selector [org.hibernate.cache.spi.CacheKeysFactory] : [default] -> [org.hibernate.cache.internal.DefaultCacheKeysFactory]
w2022-03-13 17:53:00 TRACE Registering named strategy selector [org.hibernate.cache.spi.CacheKeysFactory] : [simple] -> [org.hibernate.cache.internal.SimpleCacheKeysFactory]
w2022-03-13 17:53:00 INFO  HHH000412: Hibernate ORM core version 5.6.5.Final
w2022-03-13 17:53:00 DEBUG HHH000206: hibernate.properties not found
w2022-03-13 17:53:00 DEBUG Overriding existing service binding [org.hibernate.secure.spi.JaccService]
w2022-03-13 17:53:00 TRACE Initializing service [role=org.hibernate.engine.config.spi.ConfigurationService]
w2022-03-13 17:53:00 TRACE Initializing service [role=org.hibernate.cache.spi.RegionFactory]
w2022-03-13 17:53:00 DEBUG Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
w2022-03-13 17:53:00 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
w2022-03-13 17:53:00 INFO  HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
w2022-03-13 17:53:00 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@4bee0b74
w2022-03-13 17:53:00 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@4bee0b74
w2022-03-13 17:53:00 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4bee0b74
w2022-03-13 17:53:00 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5bd3f159
w2022-03-13 17:53:00 DEBUG Adding type registration true_false -> org.hibernate.type.TrueFalseType@2c8c3e96
w2022-03-13 17:53:00 DEBUG Adding type registration yes_no -> org.hibernate.type.YesNoType@5b8cdec5
w2022-03-13 17:53:00 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@10a8308
w2022-03-13 17:53:00 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@10a8308
w2022-03-13 17:53:00 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@10a8308
w2022-03-13 17:53:00 DEBUG Adding type registration character -> org.hibernate.type.CharacterType@5ea4672e
w2022-03-13 17:53:00 DEBUG Adding type registration char -> org.hibernate.type.CharacterType@5ea4672e
w2022-03-13 17:53:00 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5ea4672e
w2022-03-13 17:53:00 DEBUG Adding type registration short -> org.hibernate.type.ShortType@2198e159
w2022-03-13 17:53:00 DEBUG Adding type registration short -> org.hibernate.type.ShortType@2198e159
w2022-03-13 17:53:00 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2198e159
w2022-03-13 17:53:00 DEBUG Adding type registration integer -> org.hibernate.type.IntegerType@474b94a5
w2022-03-13 17:53:00 DEBUG Adding type registration int -> org.hibernate.type.IntegerType@474b94a5
w2022-03-13 17:53:00 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@474b94a5
w2022-03-13 17:53:00 DEBUG Adding type registration long -> org.hibernate.type.LongType@45695f3e
w2022-03-13 17:53:00 DEBUG Adding type registration long -> org.hibernate.type.LongType@45695f3e
w2022-03-13 17:53:00 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.LongType@45695f3e
w2022-03-13 17:53:00 DEBUG Adding type registration float -> org.hibernate.type.FloatType@61b58f86
w2022-03-13 17:53:00 DEBUG Adding type registration float -> org.hibernate.type.FloatType@61b58f86
w2022-03-13 17:53:00 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.FloatType@61b58f86
w2022-03-13 17:53:00 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@27b0bc94
w2022-03-13 17:53:00 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@27b0bc94
w2022-03-13 17:53:00 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@27b0bc94
w2022-03-13 17:53:00 DEBUG Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5d476c2f
w2022-03-13 17:53:00 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5d476c2f
w2022-03-13 17:53:00 DEBUG Adding type registration big_integer -> org.hibernate.type.BigIntegerType@676382f6
w2022-03-13 17:53:00 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@676382f6
w2022-03-13 17:53:00 DEBUG Adding type registration string -> org.hibernate.type.StringType@5f60a9e6
w2022-03-13 17:53:00 DEBUG Adding type registration java.lang.String -> org.hibernate.type.StringType@5f60a9e6
w2022-03-13 17:53:00 DEBUG Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6f7a030c
w2022-03-13 17:53:00 DEBUG Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6458d8ab
w2022-03-13 17:53:00 DEBUG Adding type registration url -> org.hibernate.type.UrlType@e405231
w2022-03-13 17:53:00 DEBUG Adding type registration java.net.URL -> org.hibernate.type.UrlType@e405231
w2022-03-13 17:53:00 DEBUG Adding type registration Duration -> org.hibernate.type.DurationType@373a39e5
w2022-03-13 17:53:00 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.DurationType@373a39e5
w2022-03-13 17:53:00 DEBUG Adding type registration Instant -> org.hibernate.type.InstantType@2ade2247
w2022-03-13 17:53:00 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2ade2247
w2022-03-13 17:53:00 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3210d362
w2022-03-13 17:53:00 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3210d362
w2022-03-13 17:53:00 DEBUG Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3aaa40b8
w2022-03-13 17:53:00 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3aaa40b8
w2022-03-13 17:53:00 DEBUG Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@67ab0221
w2022-03-13 17:53:00 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@67ab0221
w2022-03-13 17:53:00 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@8c5bec6
w2022-03-13 17:53:00 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@8c5bec6
w2022-03-13 17:53:00 DEBUG Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4f944e1a
w2022-03-13 17:53:00 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4f944e1a
w2022-03-13 17:53:00 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4b4261be
w2022-03-13 17:53:00 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4b4261be
w2022-03-13 17:53:00 DEBUG Adding type registration date -> org.hibernate.type.DateType@30738d93
w2022-03-13 17:53:00 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.DateType@30738d93
w2022-03-13 17:53:00 DEBUG Adding type registration time -> org.hibernate.type.TimeType@45ef13fc
w2022-03-13 17:53:00 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.TimeType@45ef13fc
w2022-03-13 17:53:00 DEBUG Adding type registration timestamp -> org.hibernate.type.TimestampType@79a7b89b
w2022-03-13 17:53:00 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@79a7b89b
w2022-03-13 17:53:00 DEBUG Adding type registration java.util.Date -> org.hibernate.type.TimestampType@79a7b89b
w2022-03-13 17:53:00 DEBUG Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5455a9e
w2022-03-13 17:53:00 DEBUG Adding type registration calendar -> org.hibernate.type.CalendarType@600449a6
w2022-03-13 17:53:00 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@600449a6
w2022-03-13 17:53:00 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@600449a6
w2022-03-13 17:53:00 DEBUG Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@597cbf48
w2022-03-13 17:53:00 DEBUG Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@684728f8
w2022-03-13 17:53:00 DEBUG Adding type registration locale -> org.hibernate.type.LocaleType@24553c08
w2022-03-13 17:53:00 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@24553c08
w2022-03-13 17:53:00 DEBUG Adding type registration currency -> org.hibernate.type.CurrencyType@473b11c3
w2022-03-13 17:53:00 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@473b11c3
w2022-03-13 17:53:00 DEBUG Adding type registration timezone -> org.hibernate.type.TimeZoneType@195499b7
w2022-03-13 17:53:00 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@195499b7
w2022-03-13 17:53:00 DEBUG Adding type registration class -> org.hibernate.type.ClassType@680c3adf
w2022-03-13 17:53:00 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.ClassType@680c3adf
w2022-03-13 17:53:00 DEBUG Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3a0c1d64
w2022-03-13 17:53:00 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3a0c1d64
w2022-03-13 17:53:00 DEBUG Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@73f9cc4d
w2022-03-13 17:53:00 DEBUG Adding type registration binary -> org.hibernate.type.BinaryType@2597605d
w2022-03-13 17:53:00 DEBUG Adding type registration byte[] -> org.hibernate.type.BinaryType@2597605d
w2022-03-13 17:53:00 DEBUG Adding type registration [B -> org.hibernate.type.BinaryType@2597605d
w2022-03-13 17:53:00 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@69617490
w2022-03-13 17:53:00 DEBUG Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@69617490
w2022-03-13 17:53:00 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@69617490
w2022-03-13 17:53:00 DEBUG Adding type registration row_version -> org.hibernate.type.RowVersionType@6db91bbd
w2022-03-13 17:53:00 DEBUG Adding type registration image -> org.hibernate.type.ImageType@782dc45a
w2022-03-13 17:53:00 DEBUG Adding type registration characters -> org.hibernate.type.CharArrayType@764b75e9
w2022-03-13 17:53:00 DEBUG Adding type registration char[] -> org.hibernate.type.CharArrayType@764b75e9
w2022-03-13 17:53:00 DEBUG Adding type registration [C -> org.hibernate.type.CharArrayType@764b75e9
w2022-03-13 17:53:00 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1f131bfa
w2022-03-13 17:53:00 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1f131bfa
w2022-03-13 17:53:00 DEBUG Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1f131bfa
w2022-03-13 17:53:00 DEBUG Adding type registration text -> org.hibernate.type.TextType@193bfe95
w2022-03-13 17:53:00 DEBUG Adding type registration ntext -> org.hibernate.type.NTextType@527aec5
w2022-03-13 17:53:00 DEBUG Adding type registration blob -> org.hibernate.type.BlobType@361d33c9
w2022-03-13 17:53:00 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@361d33c9
w2022-03-13 17:53:00 DEBUG Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@641e4d22
w2022-03-13 17:53:00 DEBUG Adding type registration clob -> org.hibernate.type.ClobType@592fb9bd
w2022-03-13 17:53:00 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@592fb9bd
w2022-03-13 17:53:00 DEBUG Adding type registration nclob -> org.hibernate.type.NClobType@1acf1e17
w2022-03-13 17:53:00 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1acf1e17
w2022-03-13 17:53:00 DEBUG Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@351eda59
w2022-03-13 17:53:00 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@263bceb4
w2022-03-13 17:53:00 DEBUG Adding type registration serializable -> org.hibernate.type.SerializableType@7b4f0fc4
w2022-03-13 17:53:00 DEBUG Adding type registration object -> org.hibernate.type.ObjectType@79166b72
w2022-03-13 17:53:00 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@79166b72
w2022-03-13 17:53:00 DEBUG Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7a8e369a
w2022-03-13 17:53:00 DEBUG Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@30899f42
w2022-03-13 17:53:00 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7c98db8
w2022-03-13 17:53:00 DEBUG Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@354d1773
w2022-03-13 17:53:00 DEBUG Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3efcdda6
w2022-03-13 17:53:00 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@427326b4
w2022-03-13 17:53:00 DEBUG Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@99cd70f
w2022-03-13 17:53:00 DEBUG Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@54b7bfc0
w2022-03-13 17:53:00 TRACE Initializing service [role=org.hibernate.boot.cfgxml.spi.CfgXmlAccessService]
w2022-03-13 17:53:00 INFO  HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
w2022-03-13 17:53:00 TRACE Initializing service [role=org.hibernate.engine.jdbc.dialect.spi.DialectResolver]
w2022-03-13 17:53:00 DEBUG Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@73455977] into BootstrapContext; was [null]
w2022-03-13 17:53:00 DEBUG ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@73455977) [was null]
w2022-03-13 17:53:00 DEBUG Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@2585ef50] into BootstrapContext; was [null]
w2022-03-13 17:53:00 DEBUG Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@7d3c58a0] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@1ebfc350]
w2022-03-13 17:53:00 DEBUG Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@73455977]
w2022-03-13 17:53:00 DEBUG ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@73455977]
w2022-03-13 17:53:00 TRACE Initializing service [role=org.hibernate.id.factory.spi.MutableIdentifierGeneratorFactory]
w2022-03-13 17:53:00 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
w2022-03-13 17:53:00 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
w2022-03-13 17:53:00 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
w2022-03-13 17:53:00 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
w2022-03-13 17:53:00 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
w2022-03-13 17:53:00 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
w2022-03-13 17:53:00 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
w2022-03-13 17:53:00 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
w2022-03-13 17:53:00 DEBUG Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
w2022-03-13 17:53:00 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
w2022-03-13 17:53:00 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
w2022-03-13 17:53:00 DEBUG Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
w2022-03-13 17:53:00 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
w2022-03-13 17:53:00 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
w2022-03-13 17:53:00 TRACE Initializing service [role=org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
w2022-03-13 17:53:00 TRACE Initializing service [role=org.hibernate.engine.jdbc.dialect.spi.DialectFactory]
w2022-03-13 17:53:00 TRACE Initializing service [role=org.hibernate.engine.jdbc.connections.spi.ConnectionProvider]
w2022-03-13 17:53:00 TRACE Initializing service [role=org.hibernate.engine.jndi.spi.JndiService]
w2022-03-13 17:53:00 DEBUG Database ->
       name : SQLite
    version : 3.36.0
      major : 3
      minor : 36
w2022-03-13 17:53:00 DEBUG Driver ->
       name : SQLite JDBC
    version : 3.36.0.3
      major : 3
      minor : 36
w2022-03-13 17:53:00 DEBUG JDBC version : 2.1
w2022-03-13 17:53:00 INFO  HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
w2022-03-13 17:53:00 DEBUG JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
w2022-03-13 17:53:00 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [null]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [null]
w2022-03-13 17:53:00 DEBUG HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [2] less than 4
w2022-03-13 17:53:00 TRACE Initializing service [role=org.hibernate.resource.beans.spi.ManagedBeanRegistry]
w2022-03-13 17:53:00 TRACE Initializing service [role=org.hibernate.engine.jdbc.spi.JdbcServices]
w2022-03-13 17:53:00 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@73d65b8] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4ded6d45]
w2022-03-13 17:53:00 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
w2022-03-13 17:53:00 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.Comment
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [DTYPE]
w2022-03-13 17:53:00 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-13 17:53:00 DEBUG Import with entity name Comment
w2022-03-13 17:53:00 TRACE Import: Comment -> ru.edu.helpdesk.entity.Comment
w2022-03-13 17:53:00 TRACE Import: ru.edu.helpdesk.entity.Comment -> ru.edu.helpdesk.entity.Comment
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [Comment]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [Comment]
w2022-03-13 17:53:00 DEBUG Bind entity ru.edu.helpdesk.entity.Comment on table comment
w2022-03-13 17:53:00 TRACE Processing annotations of ru.edu.helpdesk.entity.Comment.id
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [id]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [id]
w2022-03-13 17:53:00 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-13 17:53:00 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Comment] is safe
w2022-03-13 17:53:00 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Comment
w2022-03-13 17:53:00 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-13 17:53:00 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Comment:id]
w2022-03-13 17:53:00 DEBUG building SimpleValue for id
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [id]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [id]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [id]
w2022-03-13 17:53:00 DEBUG Building property id
w2022-03-13 17:53:00 TRACE Cascading id with null
w2022-03-13 17:53:00 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-13 17:53:00 TRACE Bind @Id on id
w2022-03-13 17:53:00 TRACE Processing annotations of ru.edu.helpdesk.entity.Comment.message
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [message]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [message]
w2022-03-13 17:53:00 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=message, insertable=true, updatable=true, unique=false}
w2022-03-13 17:53:00 DEBUG MetadataSourceProcessor property message with lazy=false
w2022-03-13 17:53:00 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Comment:message]
w2022-03-13 17:53:00 DEBUG building SimpleValue for message
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [message]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [message]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [message]
w2022-03-13 17:53:00 DEBUG Building property message
w2022-03-13 17:53:00 TRACE Cascading message with null
w2022-03-13 17:53:00 TRACE Processing annotations of ru.edu.helpdesk.entity.Comment.ticket
w2022-03-13 17:53:00 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [ticket]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [ticket]
w2022-03-13 17:53:00 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=ticket, insertable=true, updatable=true, unique=false}
w2022-03-13 17:53:00 DEBUG Building property ticket
w2022-03-13 17:53:00 TRACE Cascading ticket with none
w2022-03-13 17:53:00 TRACE Processing annotations of ru.edu.helpdesk.entity.Comment.user
w2022-03-13 17:53:00 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [user]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [user]
w2022-03-13 17:53:00 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=user, insertable=true, updatable=true, unique=false}
w2022-03-13 17:53:00 DEBUG Building property user
w2022-03-13 17:53:00 TRACE Cascading user with none
w2022-03-13 17:53:00 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.Ticket
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [DTYPE]
w2022-03-13 17:53:00 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-13 17:53:00 DEBUG Import with entity name Ticket
w2022-03-13 17:53:00 TRACE Import: Ticket -> ru.edu.helpdesk.entity.Ticket
w2022-03-13 17:53:00 TRACE Import: ru.edu.helpdesk.entity.Ticket -> ru.edu.helpdesk.entity.Ticket
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [Ticket]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [Ticket]
w2022-03-13 17:53:00 DEBUG Bind entity ru.edu.helpdesk.entity.Ticket on table ticket
w2022-03-13 17:53:00 TRACE Processing annotations of ru.edu.helpdesk.entity.Ticket.id
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [id]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [id]
w2022-03-13 17:53:00 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-13 17:53:00 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Ticket] is safe
w2022-03-13 17:53:00 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Ticket
w2022-03-13 17:53:00 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-13 17:53:00 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:id]
w2022-03-13 17:53:00 DEBUG building SimpleValue for id
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [id]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [id]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [id]
w2022-03-13 17:53:00 DEBUG Building property id
w2022-03-13 17:53:00 TRACE Cascading id with null
w2022-03-13 17:53:00 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-13 17:53:00 TRACE Bind @Id on id
w2022-03-13 17:53:00 TRACE Processing annotations of ru.edu.helpdesk.entity.Ticket.client
w2022-03-13 17:53:00 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [client]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [client]
w2022-03-13 17:53:00 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=client, insertable=true, updatable=true, unique=false}
w2022-03-13 17:53:00 DEBUG Building property client
w2022-03-13 17:53:00 TRACE Cascading client with none
w2022-03-13 17:53:00 TRACE Processing annotations of ru.edu.helpdesk.entity.Ticket.status
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [status]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [status]
w2022-03-13 17:53:00 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=status, insertable=true, updatable=true, unique=false}
w2022-03-13 17:53:00 DEBUG MetadataSourceProcessor property status with lazy=false
w2022-03-13 17:53:00 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:status]
w2022-03-13 17:53:00 DEBUG building SimpleValue for status
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [status]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [status]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [status]
w2022-03-13 17:53:00 DEBUG Building property status
w2022-03-13 17:53:00 TRACE Cascading status with null
w2022-03-13 17:53:00 TRACE Processing annotations of ru.edu.helpdesk.entity.Ticket.support
w2022-03-13 17:53:00 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [support]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [support]
w2022-03-13 17:53:00 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=support, insertable=true, updatable=true, unique=false}
w2022-03-13 17:53:00 DEBUG Building property support
w2022-03-13 17:53:00 TRACE Cascading support with none
w2022-03-13 17:53:00 TRACE Processing annotations of ru.edu.helpdesk.entity.Ticket.title
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [title]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [title]
w2022-03-13 17:53:00 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=title, insertable=true, updatable=true, unique=false}
w2022-03-13 17:53:00 DEBUG MetadataSourceProcessor property title with lazy=false
w2022-03-13 17:53:00 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:title]
w2022-03-13 17:53:00 DEBUG building SimpleValue for title
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [title]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [title]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [title]
w2022-03-13 17:53:00 DEBUG Building property title
w2022-03-13 17:53:00 TRACE Cascading title with null
w2022-03-13 17:53:00 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.User
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [DTYPE]
w2022-03-13 17:53:00 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-13 17:53:00 DEBUG Import with entity name User
w2022-03-13 17:53:00 TRACE Import: User -> ru.edu.helpdesk.entity.User
w2022-03-13 17:53:00 TRACE Import: ru.edu.helpdesk.entity.User -> ru.edu.helpdesk.entity.User
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [User]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [User]
w2022-03-13 17:53:00 DEBUG Bind entity ru.edu.helpdesk.entity.User on table user
w2022-03-13 17:53:00 TRACE Processing annotations of ru.edu.helpdesk.entity.User.id
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [id]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [id]
w2022-03-13 17:53:00 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-13 17:53:00 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.User] is safe
w2022-03-13 17:53:00 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.User
w2022-03-13 17:53:00 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-13 17:53:00 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:id]
w2022-03-13 17:53:00 DEBUG building SimpleValue for id
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [id]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [id]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [id]
w2022-03-13 17:53:00 DEBUG Building property id
w2022-03-13 17:53:00 TRACE Cascading id with null
w2022-03-13 17:53:00 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-13 17:53:00 TRACE Bind @Id on id
w2022-03-13 17:53:00 TRACE Processing annotations of ru.edu.helpdesk.entity.User.firstName
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [firstName]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [firstName]
w2022-03-13 17:53:00 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
w2022-03-13 17:53:00 DEBUG MetadataSourceProcessor property firstName with lazy=false
w2022-03-13 17:53:00 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:firstName]
w2022-03-13 17:53:00 DEBUG building SimpleValue for firstName
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [firstName]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [firstName]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [firstName]
w2022-03-13 17:53:00 DEBUG Building property firstName
w2022-03-13 17:53:00 TRACE Cascading firstName with null
w2022-03-13 17:53:00 TRACE Processing annotations of ru.edu.helpdesk.entity.User.lastName
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [lastName]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [lastName]
w2022-03-13 17:53:00 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
w2022-03-13 17:53:00 DEBUG MetadataSourceProcessor property lastName with lazy=false
w2022-03-13 17:53:00 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:lastName]
w2022-03-13 17:53:00 DEBUG building SimpleValue for lastName
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [lastName]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [lastName]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [lastName]
w2022-03-13 17:53:00 DEBUG Building property lastName
w2022-03-13 17:53:00 TRACE Cascading lastName with null
w2022-03-13 17:53:00 TRACE Processing annotations of ru.edu.helpdesk.entity.User.login
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [login]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [login]
w2022-03-13 17:53:00 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=login, insertable=true, updatable=true, unique=false}
w2022-03-13 17:53:00 DEBUG MetadataSourceProcessor property login with lazy=false
w2022-03-13 17:53:00 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:login]
w2022-03-13 17:53:00 DEBUG building SimpleValue for login
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [login]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [login]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [login]
w2022-03-13 17:53:00 DEBUG Building property login
w2022-03-13 17:53:00 TRACE Cascading login with null
w2022-03-13 17:53:00 TRACE Processing annotations of ru.edu.helpdesk.entity.User.password
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [password]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [password]
w2022-03-13 17:53:00 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
w2022-03-13 17:53:00 DEBUG MetadataSourceProcessor property password with lazy=false
w2022-03-13 17:53:00 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:password]
w2022-03-13 17:53:00 DEBUG building SimpleValue for password
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [password]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [password]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [password]
w2022-03-13 17:53:00 DEBUG Building property password
w2022-03-13 17:53:00 TRACE Cascading password with null
w2022-03-13 17:53:00 TRACE Processing annotations of ru.edu.helpdesk.entity.User.role
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [role]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [role]
w2022-03-13 17:53:00 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=role, insertable=true, updatable=true, unique=false}
w2022-03-13 17:53:00 DEBUG MetadataSourceProcessor property role with lazy=false
w2022-03-13 17:53:00 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:role]
w2022-03-13 17:53:00 DEBUG building SimpleValue for role
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [role]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [role]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [role]
w2022-03-13 17:53:00 DEBUG Building property role
w2022-03-13 17:53:00 TRACE Cascading role with null
w2022-03-13 17:53:00 DEBUG Starting fillSimpleValue for id
w2022-03-13 17:53:00 DEBUG Starting fillSimpleValue for message
w2022-03-13 17:53:00 DEBUG Starting fillSimpleValue for id
w2022-03-13 17:53:00 DEBUG Starting fillSimpleValue for status
w2022-03-13 17:53:00 DEBUG Starting fillSimpleValue for title
w2022-03-13 17:53:00 DEBUG Starting fillSimpleValue for id
w2022-03-13 17:53:00 DEBUG Starting fillSimpleValue for firstName
w2022-03-13 17:53:00 DEBUG Starting fillSimpleValue for lastName
w2022-03-13 17:53:00 DEBUG Starting fillSimpleValue for login
w2022-03-13 17:53:00 DEBUG Starting fillSimpleValue for password
w2022-03-13 17:53:00 DEBUG Starting fillSimpleValue for role
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [id]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [Ticket]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [id]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [ticket_id]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [ticket_id]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [id]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [ticket_id]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [ticket_id]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [id]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [User]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [id]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [user_id]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [user_id]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [id]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [user_id]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [user_id]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [id]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [User]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [id]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [client_id]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [client_id]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [id]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [client_id]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [client_id]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [id]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [User]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [id]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [support_id]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [support_id]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [id]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [support_id]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [support_id]
w2022-03-13 17:53:00 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [comment]
w2022-03-13 17:53:00 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [ticket]
w2022-03-13 17:53:00 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [user]
w2022-03-13 17:53:00 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.Ticket
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [ticket_id]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [FKsyf8wt2qb7rhcau6v3p4axrba]
w2022-03-13 17:53:00 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [user_id]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [FK8kcum44fvpupyw6f5baccx25c]
w2022-03-13 17:53:00 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [client_id]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [FK7v6x2b5726qcm64ffjp000kpf]
w2022-03-13 17:53:00 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [support_id]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [FKahkbjox3e6egooh829vpxkaqw]
w2022-03-13 17:53:00 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.Ticket
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [ticket_id]
w2022-03-13 17:53:00 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [user_id]
w2022-03-13 17:53:00 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [client_id]
w2022-03-13 17:53:00 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [support_id]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [null]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [null]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [hibernate_sequence]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [next_val]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [null]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [null]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [hibernate_sequence]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [next_val]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [null]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [null]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [hibernate_sequence]
w2022-03-13 17:53:00 TRACE Normalizing identifier quoting [next_val]
w2022-03-13 17:53:00 TRACE Initializing service [role=org.hibernate.boot.spi.SessionFactoryBuilderService]
w2022-03-13 17:53:00 TRACE Interpreting BatchFetchStyle from setting : null
w2022-03-13 17:53:00 TRACE Initializing service [role=org.hibernate.bytecode.spi.BytecodeProvider]
w2022-03-13 17:53:00 DEBUG Building session factory
w2022-03-13 17:53:00 DEBUG SessionFactory name : null
w2022-03-13 17:53:00 DEBUG Automatic flush during beforeCompletion(): enabled
w2022-03-13 17:53:00 DEBUG Automatic session close at end of transaction: disabled
w2022-03-13 17:53:00 DEBUG Statistics: disabled
w2022-03-13 17:53:00 DEBUG Deleted entity synthetic identifier rollback: disabled
w2022-03-13 17:53:00 DEBUG Default entity-mode: pojo
w2022-03-13 17:53:00 DEBUG Check Nullability in Core (should be disabled when Bean Validation is on): enabled
w2022-03-13 17:53:00 DEBUG Allow initialization of lazy state outside session : disabled
w2022-03-13 17:53:00 DEBUG Using BatchFetchStyle : LEGACY
w2022-03-13 17:53:00 DEBUG Default batch fetch size: -1
w2022-03-13 17:53:00 DEBUG Maximum outer join fetch depth: null
w2022-03-13 17:53:00 DEBUG Default null ordering: NONE
w2022-03-13 17:53:00 DEBUG Order SQL updates by primary key: disabled
w2022-03-13 17:53:00 DEBUG Order SQL inserts for batching: disabled
w2022-03-13 17:53:00 DEBUG multi-tenancy strategy : NONE
w2022-03-13 17:53:00 DEBUG JTA Track by Thread: enabled
w2022-03-13 17:53:00 DEBUG Query language substitutions: {}
w2022-03-13 17:53:00 DEBUG Named query checking : enabled
w2022-03-13 17:53:00 DEBUG Second-level cache: disabled
w2022-03-13 17:53:00 DEBUG Second-level query cache: disabled
w2022-03-13 17:53:00 DEBUG Second-level query cache factory: null
w2022-03-13 17:53:00 DEBUG Second-level cache region prefix: null
w2022-03-13 17:53:00 DEBUG Optimize second-level cache for minimal puts: disabled
w2022-03-13 17:53:00 DEBUG Structured second-level cache entries: disabled
w2022-03-13 17:53:00 DEBUG Second-level cache direct-reference entries: disabled
w2022-03-13 17:53:00 DEBUG Automatic eviction of collection cache: disabled
w2022-03-13 17:53:00 DEBUG JDBC batch size: 1
w2022-03-13 17:53:00 DEBUG JDBC batch updates for versioned data: enabled
w2022-03-13 17:53:00 DEBUG Scrollable result sets: disabled
w2022-03-13 17:53:00 DEBUG Wrap result sets: disabled
w2022-03-13 17:53:00 DEBUG JDBC3 getGeneratedKeys(): enabled
w2022-03-13 17:53:00 DEBUG JDBC result set fetch size: null
w2022-03-13 17:53:00 DEBUG Connection release mode: ON_CLOSE
w2022-03-13 17:53:00 DEBUG Generate SQL with comments: disabled
w2022-03-13 17:53:00 DEBUG JPA compliance - query : disabled
w2022-03-13 17:53:00 DEBUG JPA compliance - closed-handling : disabled
w2022-03-13 17:53:00 DEBUG JPA compliance - lists : disabled
w2022-03-13 17:53:00 DEBUG JPA compliance - transactions : disabled
w2022-03-13 17:53:00 TRACE Initializing service [role=org.hibernate.service.spi.SessionFactoryServiceRegistryFactory]
w2022-03-13 17:53:00 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-13 17:53:00 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-13 17:53:00 TRACE Initializing service [role=org.hibernate.cache.spi.CacheImplementor]
w2022-03-13 17:53:00 DEBUG Session factory constructed with filter configurations : {}
w2022-03-13 17:53:00 DEBUG Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=true, java.specification.version=1.8, file.encoding.pkg=sun.io, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@447bbed2, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.SQLiteDialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\charsets.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\cldrdata.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\dnsns.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\jaccess.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\localedata.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\nashorn.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunec.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunmscapi.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\zipfs.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jce.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jfr.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jsse.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\management-agent.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\resources.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\rt.jar;F:\java\project\helpdeskproject\target\classes;C:\Users\snowp\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\2.6.4\spring-boot-starter-data-jpa-2.6.4.jar;C:\Users\snowp\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\2.6.4\spring-boot-starter-jdbc-2.6.4.jar;C:\Users\snowp\.m2\repository\com\zaxxer\HikariCP\4.0.3\HikariCP-4.0.3.jar;C:\Users\snowp\.m2\repository\org\springframework\spring-jdbc\5.3.16\spring-jdbc-5.3.16.jar;C:\Users\snowp\.m2\repository\jakarta\transaction\jakarta.transaction-api\1.3.3\jakarta.transaction-api-1.3.3.jar;C:\Users\snowp\.m2\repository\jakarta\persistence\jakarta.persistence-api\2.2.3\jakarta.persistence-api-2.2.3.jar;C:\Users\snowp\.m2\repository\org\hibernate\hibernate-core\5.6.5.Final\hibernate-core-5.6.5.Final.jar;C:\Users\snowp\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\snowp\.m2\repository\net\bytebuddy\byte-buddy\1.11.22\byte-buddy-1.11.22.jar;C:\Users\snowp\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\snowp\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\snowp\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\snowp\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\snowp\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.6\jaxb-runtime-2.3.6.jar;C:\Users\snowp\.m2\repository\org\glassfish\jaxb\txw2\2.3.6\txw2-2.3.6.jar;C:\Users\snowp\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.12\istack-commons-runtime-3.0.12.jar;C:\Users\snowp\.m2\repository\com\sun\activation\jakarta.activation\1.2.2\jakarta.activation-1.2.2.jar;C:\Users\snowp\.m2\repository\org\springframework\data\spring-data-jpa\2.6.2\spring-data-jpa-2.6.2.jar;C:\Users\snowp\.m2\repository\org\springframework\data\spring-data-commons\2.6.2\spring-data-commons-2.6.2.jar;C:\Users\snowp\.m2\repository\org\springframework\spring-orm\5.3.16\spring-orm-5.3.16.jar;C:\Users\snowp\.m2\repository\org\springframework\spring-context\5.3.16\spring-context-5.3.16.jar;C:\Users\snowp\.m2\repository\org\springframework\spring-tx\5.3.16\spring-tx-5.3.16.jar;C:\Users\snowp\.m2\repository\org\springframework\spring-beans\5.3.16\spring-beans-5.3.16.jar;C:\Users\snowp\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\snowp\.m2\repository\org\springframework\spring-aspects\5.3.16\spring-aspects-5.3.16.jar;C:\Users\snowp\.m2\repository\org\springframework\boot\spring-boot-starter-web\2.6.4\spring-boot-starter-web-2.6.4.jar;C:\Users\snowp\.m2\repository\org\springframework\boot\spring-boot-starter\2.6.4\spring-boot-starter-2.6.4.jar;C:\Users\snowp\.m2\repository\org\springframework\boot\spring-boot-starter-logging\2.6.4\spring-boot-starter-logging-2.6.4.jar;C:\Users\snowp\.m2\repository\ch\qos\logback\logback-classic\1.2.10\logback-classic-1.2.10.jar;C:\Users\snowp\.m2\repository\ch\qos\logback\logback-core\1.2.10\logback-core-1.2.10.jar;C:\Users\snowp\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.17.1\log4j-to-slf4j-2.17.1.jar;C:\Users\snowp\.m2\repository\org\slf4j\jul-to-slf4j\1.7.36\jul-to-slf4j-1.7.36.jar;C:\Users\snowp\.m2\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;C:\Users\snowp\.m2\repository\org\yaml\snakeyaml\1.29\snakeyaml-1.29.jar;C:\Users\snowp\.m2\repository\org\springframework\boot\spring-boot-starter-json\2.6.4\spring-boot-starter-json-2.6.4.jar;C:\Users\snowp\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.13.1\jackson-datatype-jdk8-2.13.1.jar;C:\Users\snowp\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.13.1\jackson-datatype-jsr310-2.13.1.jar;C:\Users\snowp\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.13.1\jackson-module-parameter-names-2.13.1.jar;C:\Users\snowp\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\2.6.4\spring-boot-starter-tomcat-2.6.4.jar;C:\Users\snowp\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.58\tomcat-embed-core-9.0.58.jar;C:\Users\snowp\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\9.0.58\tomcat-embed-el-9.0.58.jar;C:\Users\snowp\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.58\tomcat-embed-websocket-9.0.58.jar;C:\Users\snowp\.m2\repository\org\springframework\spring-web\5.3.16\spring-web-5.3.16.jar;C:\Users\snowp\.m2\repository\org\springframework\spring-webmvc\5.3.16\spring-webmvc-5.3.16.jar;C:\Users\snowp\.m2\repository\org\springframework\spring-expression\5.3.16\spring-expression-5.3.16.jar;C:\Users\snowp\.m2\repository\org\springframework\boot\spring-boot-devtools\2.6.4\spring-boot-devtools-2.6.4.jar;C:\Users\snowp\.m2\repository\org\springframework\boot\spring-boot\2.6.4\spring-boot-2.6.4.jar;C:\Users\snowp\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\2.6.4\spring-boot-autoconfigure-2.6.4.jar;C:\Users\snowp\.m2\repository\org\xerial\sqlite-jdbc\3.36.0.3\sqlite-jdbc-3.36.0.3.jar;C:\Users\snowp\.m2\repository\com\zsoltfabok\sqlite-dialect\1.0\sqlite-dialect-1.0.jar;C:\Users\snowp\.m2\repository\org\springframework\boot\spring-boot-starter-aop\2.6.2\spring-boot-starter-aop-2.6.2.jar;C:\Users\snowp\.m2\repository\org\springframework\spring-aop\5.3.16\spring-aop-5.3.16.jar;C:\Users\snowp\.m2\repository\org\aspectj\aspectjweaver\1.9.7\aspectjweaver-1.9.7.jar;C:\Users\snowp\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.3\jakarta.xml.bind-api-2.3.3.jar;C:\Users\snowp\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.2\jakarta.activation-api-1.2.2.jar;C:\Users\snowp\.m2\repository\org\springframework\spring-core\5.3.16\spring-core-5.3.16.jar;C:\Users\snowp\.m2\repository\org\springframework\spring-jcl\5.3.16\spring-jcl-5.3.16.jar;C:\Users\snowp\.m2\repository\org\projectlombok\lombok\1.18.22\lombok-1.18.22.jar;C:\Users\snowp\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\2.6.4\spring-boot-starter-thymeleaf-2.6.4.jar;C:\Users\snowp\.m2\repository\org\thymeleaf\thymeleaf-spring5\3.0.15.RELEASE\thymeleaf-spring5-3.0.15.RELEASE.jar;C:\Users\snowp\.m2\repository\org\thymeleaf\thymeleaf\3.0.15.RELEASE\thymeleaf-3.0.15.RELEASE.jar;C:\Users\snowp\.m2\repository\org\attoparser\attoparser\2.0.5.RELEASE\attoparser-2.0.5.RELEASE.jar;C:\Users\snowp\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\snowp\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-java8time\3.0.4.RELEASE\thymeleaf-extras-java8time-3.0.4.RELEASE.jar;C:\Users\snowp\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.1\jackson-databind-2.13.1.jar;C:\Users\snowp\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.1\jackson-annotations-2.13.1.jar;C:\Users\snowp\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.1\jackson-core-2.13.1.jar;C:\Users\snowp\.m2\repository\org\apache\logging\log4j\log4j-api\2.4.1\log4j-api-2.4.1.jar;C:\Users\snowp\.m2\repository\org\apache\logging\log4j\log4j-core\2.4.1\log4j-core-2.4.1.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.2\lib\idea_rt.jar, java.vm.vendor=Temurin, sun.arch.data.model=64, user.variant=, java.vendor.url=https://adoptium.net/, catalina.useNaming=false, user.timezone=Europe/Moscow, jakarta.persistence.sharedCache.mode=UNSPECIFIED, os.name=Windows 10, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), user.country=RU, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\bin, sun.java.command=ru.edu.helpdesk.HelpdeskApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@2c6b4b4a, com.sun.management.jmxremote=, javax.persistence.sharedCache.mode=UNSPECIFIED, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, user.home=C:\Users\snowp, user.language=ru, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre, file.separator=\, spring.output.ansi.enabled=always, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, sun.boot.class.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\resources.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\rt.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\sunrsasign.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jsse.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jce.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\charsets.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jfr.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\classes, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_312-b07, user.name=snowp, spring.jmx.enabled=true, path.separator=;, os.version=10.0, java.endorsed.dirs=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\endorsed, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=default, spring.beaninfo.ignore=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=C:\Users\snowp\AppData\Local\Temp\, catalina.home=C:\Users\snowp\AppData\Local\Temp\tomcat.8080.8909183598870916895, java.version=1.8.0_312, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=F:\java\project\helpdeskproject, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=7328, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\snowp\AppData\Local\Temp\tomcat.8080.8909183598870916895, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@35058ebc, java.library.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;"C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;";"C:\Program Files\apache-maven-3.8.4\bin;";C:\Program Files (x86)\Common Files\Intel\Shared Libraries\redist\intel64\compiler;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\dotnet\;C:\Program Files\Git\cmd;C:\Program Files\curl\curl-7.81.0-win64-mingw\bin;C:\Program Files\nodejs\;"C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;";C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot;C:\Users\snowp\AppData\Local\Microsoft\WindowsApps;C:\Users\snowp\AppData\Local\atom\bin;C:\Users\snowp\AppData\Local\Microsoft\WindowsApps;C:\Program Files\apache-maven-3.8.4\bin;;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2021.3\bin;;C:\Users\snowp\AppData\Roaming\npm;C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.2\bin;;., java.vendor=Temurin, java.vm.info=mixed mode, java.vm.version=25.312-b07, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, java.ext.dirs=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, hibernate.connection.datasource=HikariDataSource (HikariPool-1), hibernate.hbm2ddl.import_files=data/import.sql, java.class.version=52.0}
w2022-03-13 17:53:00 TRACE Initializing service [role=org.hibernate.engine.query.spi.NativeQueryInterpreter]
w2022-03-13 17:53:01 DEBUG Skipping JACC integration as it was not enabled
w2022-03-13 17:53:01 DEBUG Using ORDINAL-based conversion for Enum ru.edu.helpdesk.entity.UserRole
w2022-03-13 17:53:01 DEBUG Using ORDINAL-based conversion for Enum ru.edu.helpdesk.entity.TicketStatus
w2022-03-13 17:53:01 DEBUG Instantiated session factory
w2022-03-13 17:53:01 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@73d65b8] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@4ad9bc1a]
w2022-03-13 17:53:01 TRACE Initializing service [role=org.hibernate.persister.spi.PersisterFactory]
w2022-03-13 17:53:01 TRACE Initializing service [role=org.hibernate.persister.spi.PersisterClassResolver]
w2022-03-13 17:53:01 TRACE Initializing service [role=org.hibernate.property.access.spi.PropertyAccessStrategyResolver]
w2022-03-13 17:53:01 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.User] is safe
w2022-03-13 17:53:01 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.User
w2022-03-13 17:53:01 TRACE Initializing service [role=org.hibernate.bytecode.spi.ProxyFactoryFactory]
w2022-03-13 17:53:01 TRACE Skipping duplicate registration of path [firstName], existing type = [org.hibernate.type.StringType@5f60a9e6], incoming type = [org.hibernate.type.StringType@5f60a9e6]
w2022-03-13 17:53:01 TRACE Skipping duplicate registration of path [lastName], existing type = [org.hibernate.type.StringType@5f60a9e6], incoming type = [org.hibernate.type.StringType@5f60a9e6]
w2022-03-13 17:53:01 TRACE Skipping duplicate registration of path [login], existing type = [org.hibernate.type.StringType@5f60a9e6], incoming type = [org.hibernate.type.StringType@5f60a9e6]
w2022-03-13 17:53:01 TRACE Skipping duplicate registration of path [password], existing type = [org.hibernate.type.StringType@5f60a9e6], incoming type = [org.hibernate.type.StringType@5f60a9e6]
w2022-03-13 17:53:01 TRACE Skipping duplicate registration of path [role], existing type = [org.hibernate.type.CustomType@6564f896], incoming type = [org.hibernate.type.CustomType@6564f896]
w2022-03-13 17:53:01 TRACE Skipping duplicate registration of path [id], existing type = [org.hibernate.type.LongType@45695f3e], incoming type = [org.hibernate.type.LongType@45695f3e]
w2022-03-13 17:53:01 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-13 17:53:01 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-13 17:53:01 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-13 17:53:01 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-13 17:53:01 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Ticket] is safe
w2022-03-13 17:53:01 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Ticket
w2022-03-13 17:53:01 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-13 17:53:01 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-13 17:53:01 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-13 17:53:01 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-13 17:53:01 TRACE Skipping duplicate registration of path [client.id], existing type = [org.hibernate.type.LongType@45695f3e], incoming type = [org.hibernate.type.LongType@45695f3e]
w2022-03-13 17:53:01 TRACE Skipping duplicate registration of path [support.id], existing type = [org.hibernate.type.LongType@45695f3e], incoming type = [org.hibernate.type.LongType@45695f3e]
w2022-03-13 17:53:01 TRACE Skipping duplicate registration of path [client], existing type = [org.hibernate.type.ManyToOneType(ru.edu.helpdesk.entity.User)], incoming type = [org.hibernate.type.ManyToOneType(ru.edu.helpdesk.entity.User)]
w2022-03-13 17:53:01 TRACE Skipping duplicate registration of path [client.id], existing type = [org.hibernate.type.LongType@45695f3e], incoming type = [org.hibernate.type.LongType@45695f3e]
w2022-03-13 17:53:01 TRACE Skipping duplicate registration of path [client.id], existing type = [org.hibernate.type.LongType@45695f3e], incoming type = [org.hibernate.type.LongType@45695f3e]
w2022-03-13 17:53:01 TRACE Skipping duplicate registration of path [status], existing type = [org.hibernate.type.CustomType@4fd21151], incoming type = [org.hibernate.type.CustomType@4fd21151]
w2022-03-13 17:53:01 TRACE Skipping duplicate registration of path [support], existing type = [org.hibernate.type.ManyToOneType(ru.edu.helpdesk.entity.User)], incoming type = [org.hibernate.type.ManyToOneType(ru.edu.helpdesk.entity.User)]
w2022-03-13 17:53:01 TRACE Skipping duplicate registration of path [support.id], existing type = [org.hibernate.type.LongType@45695f3e], incoming type = [org.hibernate.type.LongType@45695f3e]
w2022-03-13 17:53:01 TRACE Skipping duplicate registration of path [support.id], existing type = [org.hibernate.type.LongType@45695f3e], incoming type = [org.hibernate.type.LongType@45695f3e]
w2022-03-13 17:53:01 TRACE Skipping duplicate registration of path [title], existing type = [org.hibernate.type.StringType@5f60a9e6], incoming type = [org.hibernate.type.StringType@5f60a9e6]
w2022-03-13 17:53:01 TRACE Skipping duplicate registration of path [id], existing type = [org.hibernate.type.LongType@45695f3e], incoming type = [org.hibernate.type.LongType@45695f3e]
w2022-03-13 17:53:01 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-13 17:53:01 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-13 17:53:01 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-13 17:53:01 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-13 17:53:01 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Comment] is safe
w2022-03-13 17:53:01 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Comment
w2022-03-13 17:53:01 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-13 17:53:01 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-13 17:53:01 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-13 17:53:01 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-13 17:53:01 TRACE Skipping duplicate registration of path [ticket.id], existing type = [org.hibernate.type.LongType@45695f3e], incoming type = [org.hibernate.type.LongType@45695f3e]
w2022-03-13 17:53:01 TRACE Skipping duplicate registration of path [user.id], existing type = [org.hibernate.type.LongType@45695f3e], incoming type = [org.hibernate.type.LongType@45695f3e]
w2022-03-13 17:53:01 TRACE Skipping duplicate registration of path [message], existing type = [org.hibernate.type.StringType@5f60a9e6], incoming type = [org.hibernate.type.StringType@5f60a9e6]
w2022-03-13 17:53:01 TRACE Skipping duplicate registration of path [ticket], existing type = [org.hibernate.type.ManyToOneType(ru.edu.helpdesk.entity.Ticket)], incoming type = [org.hibernate.type.ManyToOneType(ru.edu.helpdesk.entity.Ticket)]
w2022-03-13 17:53:01 TRACE Skipping duplicate registration of path [ticket.id], existing type = [org.hibernate.type.LongType@45695f3e], incoming type = [org.hibernate.type.LongType@45695f3e]
w2022-03-13 17:53:01 TRACE Skipping duplicate registration of path [ticket.id], existing type = [org.hibernate.type.LongType@45695f3e], incoming type = [org.hibernate.type.LongType@45695f3e]
w2022-03-13 17:53:01 TRACE Skipping duplicate registration of path [user], existing type = [org.hibernate.type.ManyToOneType(ru.edu.helpdesk.entity.User)], incoming type = [org.hibernate.type.ManyToOneType(ru.edu.helpdesk.entity.User)]
w2022-03-13 17:53:01 TRACE Skipping duplicate registration of path [user.id], existing type = [org.hibernate.type.LongType@45695f3e], incoming type = [org.hibernate.type.LongType@45695f3e]
w2022-03-13 17:53:01 TRACE Skipping duplicate registration of path [user.id], existing type = [org.hibernate.type.LongType@45695f3e], incoming type = [org.hibernate.type.LongType@45695f3e]
w2022-03-13 17:53:01 TRACE Skipping duplicate registration of path [id], existing type = [org.hibernate.type.LongType@45695f3e], incoming type = [org.hibernate.type.LongType@45695f3e]
w2022-03-13 17:53:01 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.User
w2022-03-13 17:53:01 DEBUG  Version select: select id from user where id =?
w2022-03-13 17:53:01 DEBUG  Snapshot select: select user_.id, user_.first_name as first_na2_2_, user_.last_name as last_nam3_2_, user_.login as login4_2_, user_.password as password5_2_, user_.role as role6_2_ from user user_ where user_.id=?
w2022-03-13 17:53:01 DEBUG  Insert 0: insert into user (first_name, last_name, login, password, role, id) values (?, ?, ?, ?, ?, ?)
w2022-03-13 17:53:01 DEBUG  Update 0: update user set first_name=?, last_name=?, login=?, password=?, role=? where id=?
w2022-03-13 17:53:01 DEBUG  Delete 0: delete from user where id=?
w2022-03-13 17:53:01 TRACE  Starting root entity : ru.edu.helpdesk.entity.User
w2022-03-13 17:53:01 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5cb9771]
w2022-03-13 17:53:01 TRACE Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2f7d250b
w2022-03-13 17:53:01 TRACE .. Registering AssociationKey : AssociationKey(table=user, columns={id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2f7d250b
w2022-03-13 17:53:01 TRACE >> Starting entity identifier : ru.edu.helpdesk.entity.User
w2022-03-13 17:53:01 DEBUG Visiting attribute path : firstName
w2022-03-13 17:53:01 TRACE >> Starting attribute Attribute(name=firstName, type=string [non-identifier])
w2022-03-13 17:53:01 TRACE << Finishing up attribute : Attribute(name=firstName, type=string [non-identifier])
w2022-03-13 17:53:01 DEBUG Visiting attribute path : lastName
w2022-03-13 17:53:01 TRACE >> Starting attribute Attribute(name=lastName, type=string [non-identifier])
w2022-03-13 17:53:01 TRACE << Finishing up attribute : Attribute(name=lastName, type=string [non-identifier])
w2022-03-13 17:53:01 DEBUG Visiting attribute path : login
w2022-03-13 17:53:01 TRACE >> Starting attribute Attribute(name=login, type=string [non-identifier])
w2022-03-13 17:53:01 TRACE << Finishing up attribute : Attribute(name=login, type=string [non-identifier])
w2022-03-13 17:53:01 DEBUG Visiting attribute path : password
w2022-03-13 17:53:01 TRACE >> Starting attribute Attribute(name=password, type=string [non-identifier])
w2022-03-13 17:53:01 TRACE << Finishing up attribute : Attribute(name=password, type=string [non-identifier])
w2022-03-13 17:53:01 DEBUG Visiting attribute path : role
w2022-03-13 17:53:01 TRACE >> Starting attribute Attribute(name=role, type=org.hibernate.type.EnumType [non-identifier])
w2022-03-13 17:53:01 TRACE << Finishing up attribute : Attribute(name=role, type=org.hibernate.type.EnumType [non-identifier])
w2022-03-13 17:53:01 TRACE Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2f7d250b
w2022-03-13 17:53:01 TRACE  Finished root entity : ru.edu.helpdesk.entity.User
w2022-03-13 17:53:01 DEBUG Building LoadPlan...
w2022-03-13 17:53:01 DEBUG processing queryspace <gen:0>
w2022-03-13 17:53:01 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.User)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

w2022-03-13 17:53:01 DEBUG Static select for entity ru.edu.helpdesk.entity.User [NONE]: select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-13 17:53:01 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.Ticket
w2022-03-13 17:53:01 DEBUG  Version select: select id from ticket where id =?
w2022-03-13 17:53:01 DEBUG  Snapshot select: select ticket_.id, ticket_.client_id as client_i4_1_, ticket_.status as status2_1_, ticket_.support_id as support_5_1_, ticket_.title as title3_1_ from ticket ticket_ where ticket_.id=?
w2022-03-13 17:53:01 DEBUG  Insert 0: insert into ticket (client_id, status, support_id, title, id) values (?, ?, ?, ?, ?)
w2022-03-13 17:53:01 DEBUG  Update 0: update ticket set client_id=?, status=?, support_id=?, title=? where id=?
w2022-03-13 17:53:01 DEBUG  Delete 0: delete from ticket where id=?
w2022-03-13 17:53:01 TRACE  Starting root entity : ru.edu.helpdesk.entity.Ticket
w2022-03-13 17:53:01 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d81dbb8]
w2022-03-13 17:53:01 TRACE Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@73f97b4
w2022-03-13 17:53:01 TRACE .. Registering AssociationKey : AssociationKey(table=ticket, columns={id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@73f97b4
w2022-03-13 17:53:01 TRACE >> Starting entity identifier : ru.edu.helpdesk.entity.Ticket
w2022-03-13 17:53:01 DEBUG Visiting attribute path : client
w2022-03-13 17:53:01 TRACE >> Starting attribute Attribute(name=client, type=ru.edu.helpdesk.entity.User [non-identifier,association])
w2022-03-13 17:53:01 DEBUG Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a3d24f]
w2022-03-13 17:53:01 TRACE Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@379fcd92
w2022-03-13 17:53:01 TRACE .... Registering AssociationKey : AssociationKey(table=ticket, columns={client_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@379fcd92
w2022-03-13 17:53:01 TRACE >>>> Starting entity identifier : ru.edu.helpdesk.entity.User
w2022-03-13 17:53:01 DEBUG Visiting attribute path : client.firstName
w2022-03-13 17:53:01 TRACE >>>> Starting attribute Attribute(name=firstName, type=string [non-identifier])
w2022-03-13 17:53:01 TRACE <<<< Finishing up attribute : Attribute(name=firstName, type=string [non-identifier])
w2022-03-13 17:53:01 DEBUG Visiting attribute path : client.lastName
w2022-03-13 17:53:01 TRACE >>>> Starting attribute Attribute(name=lastName, type=string [non-identifier])
w2022-03-13 17:53:01 TRACE <<<< Finishing up attribute : Attribute(name=lastName, type=string [non-identifier])
w2022-03-13 17:53:01 DEBUG Visiting attribute path : client.login
w2022-03-13 17:53:01 TRACE >>>> Starting attribute Attribute(name=login, type=string [non-identifier])
w2022-03-13 17:53:01 TRACE <<<< Finishing up attribute : Attribute(name=login, type=string [non-identifier])
w2022-03-13 17:53:01 DEBUG Visiting attribute path : client.password
w2022-03-13 17:53:01 TRACE >>>> Starting attribute Attribute(name=password, type=string [non-identifier])
w2022-03-13 17:53:01 TRACE <<<< Finishing up attribute : Attribute(name=password, type=string [non-identifier])
w2022-03-13 17:53:01 DEBUG Visiting attribute path : client.role
w2022-03-13 17:53:01 TRACE >>>> Starting attribute Attribute(name=role, type=org.hibernate.type.EnumType [non-identifier])
w2022-03-13 17:53:01 TRACE <<<< Finishing up attribute : Attribute(name=role, type=org.hibernate.type.EnumType [non-identifier])
w2022-03-13 17:53:01 TRACE Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@379fcd92
w2022-03-13 17:53:01 TRACE << Finishing up attribute : Attribute(name=client, type=ru.edu.helpdesk.entity.User [non-identifier,association])
w2022-03-13 17:53:01 DEBUG Visiting attribute path : status
w2022-03-13 17:53:01 TRACE >> Starting attribute Attribute(name=status, type=org.hibernate.type.EnumType [non-identifier])
w2022-03-13 17:53:01 TRACE << Finishing up attribute : Attribute(name=status, type=org.hibernate.type.EnumType [non-identifier])
w2022-03-13 17:53:01 DEBUG Visiting attribute path : support
w2022-03-13 17:53:01 TRACE >> Starting attribute Attribute(name=support, type=ru.edu.helpdesk.entity.User [non-identifier,association])
w2022-03-13 17:53:01 DEBUG Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@146c05c6]
w2022-03-13 17:53:01 TRACE Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@7d846206
w2022-03-13 17:53:01 TRACE .... Registering AssociationKey : AssociationKey(table=ticket, columns={support_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@7d846206
w2022-03-13 17:53:01 TRACE >>>> Starting entity identifier : ru.edu.helpdesk.entity.User
w2022-03-13 17:53:01 DEBUG Visiting attribute path : support.firstName
w2022-03-13 17:53:01 TRACE >>>> Starting attribute Attribute(name=firstName, type=string [non-identifier])
w2022-03-13 17:53:01 TRACE <<<< Finishing up attribute : Attribute(name=firstName, type=string [non-identifier])
w2022-03-13 17:53:01 DEBUG Visiting attribute path : support.lastName
w2022-03-13 17:53:01 TRACE >>>> Starting attribute Attribute(name=lastName, type=string [non-identifier])
w2022-03-13 17:53:01 TRACE <<<< Finishing up attribute : Attribute(name=lastName, type=string [non-identifier])
w2022-03-13 17:53:01 DEBUG Visiting attribute path : support.login
w2022-03-13 17:53:01 TRACE >>>> Starting attribute Attribute(name=login, type=string [non-identifier])
w2022-03-13 17:53:01 TRACE <<<< Finishing up attribute : Attribute(name=login, type=string [non-identifier])
w2022-03-13 17:53:01 DEBUG Visiting attribute path : support.password
w2022-03-13 17:53:01 TRACE >>>> Starting attribute Attribute(name=password, type=string [non-identifier])
w2022-03-13 17:53:01 TRACE <<<< Finishing up attribute : Attribute(name=password, type=string [non-identifier])
w2022-03-13 17:53:01 DEBUG Visiting attribute path : support.role
w2022-03-13 17:53:01 TRACE >>>> Starting attribute Attribute(name=role, type=org.hibernate.type.EnumType [non-identifier])
w2022-03-13 17:53:01 TRACE <<<< Finishing up attribute : Attribute(name=role, type=org.hibernate.type.EnumType [non-identifier])
w2022-03-13 17:53:01 TRACE Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@7d846206
w2022-03-13 17:53:01 TRACE << Finishing up attribute : Attribute(name=support, type=ru.edu.helpdesk.entity.User [non-identifier,association])
w2022-03-13 17:53:01 DEBUG Visiting attribute path : title
w2022-03-13 17:53:01 TRACE >> Starting attribute Attribute(name=title, type=string [non-identifier])
w2022-03-13 17:53:01 TRACE << Finishing up attribute : Attribute(name=title, type=string [non-identifier])
w2022-03-13 17:53:01 TRACE Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@73f97b4
w2022-03-13 17:53:01 TRACE  Finished root entity : ru.edu.helpdesk.entity.Ticket
w2022-03-13 17:53:01 DEBUG Building LoadPlan...
w2022-03-13 17:53:01 DEBUG processing queryspace <gen:0>
w2022-03-13 17:53:01 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.Ticket)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.Ticket, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.Ticket)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:1>, path=ru.edu.helpdesk.entity.Ticket.client)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:2>, path=ru.edu.helpdesk.entity.Ticket.support)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.Ticket)
          - SQL table alias mapping - ticket0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(client)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
          - JOIN (JoinDefinedByMetadata(support)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user2_
                - alias suffix - 2_
                - suffixed key columns - {id1_2_2_}

w2022-03-13 17:53:01 DEBUG Static select for entity ru.edu.helpdesk.entity.Ticket [NONE]: select ticket0_.id as id1_1_0_, ticket0_.client_id as client_i4_1_0_, ticket0_.status as status2_1_0_, ticket0_.support_id as support_5_1_0_, ticket0_.title as title3_1_0_, user1_.id as id1_2_1_, user1_.first_name as first_na2_2_1_, user1_.last_name as last_nam3_2_1_, user1_.login as login4_2_1_, user1_.password as password5_2_1_, user1_.role as role6_2_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id left outer join user user2_ on ticket0_.support_id=user2_.id where ticket0_.id=?
w2022-03-13 17:53:01 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.Comment
w2022-03-13 17:53:01 DEBUG  Version select: select id from comment where id =?
w2022-03-13 17:53:01 DEBUG  Snapshot select: select comment_.id, comment_.message as message2_0_, comment_.ticket_id as ticket_i3_0_, comment_.user_id as user_id4_0_ from comment comment_ where comment_.id=?
w2022-03-13 17:53:01 DEBUG  Insert 0: insert into comment (message, ticket_id, user_id, id) values (?, ?, ?, ?)
w2022-03-13 17:53:01 DEBUG  Update 0: update comment set message=?, ticket_id=?, user_id=? where id=?
w2022-03-13 17:53:01 DEBUG  Delete 0: delete from comment where id=?
w2022-03-13 17:53:01 TRACE  Starting root entity : ru.edu.helpdesk.entity.Comment
w2022-03-13 17:53:01 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c22dbda]
w2022-03-13 17:53:01 TRACE Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@60dbe4b0
w2022-03-13 17:53:01 TRACE .. Registering AssociationKey : AssociationKey(table=comment, columns={id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@60dbe4b0
w2022-03-13 17:53:01 TRACE >> Starting entity identifier : ru.edu.helpdesk.entity.Comment
w2022-03-13 17:53:01 DEBUG Visiting attribute path : message
w2022-03-13 17:53:01 TRACE >> Starting attribute Attribute(name=message, type=string [non-identifier])
w2022-03-13 17:53:01 TRACE << Finishing up attribute : Attribute(name=message, type=string [non-identifier])
w2022-03-13 17:53:01 DEBUG Visiting attribute path : ticket
w2022-03-13 17:53:01 TRACE >> Starting attribute Attribute(name=ticket, type=ru.edu.helpdesk.entity.Ticket [non-identifier,association])
w2022-03-13 17:53:01 DEBUG Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@630cee7c]
w2022-03-13 17:53:01 TRACE Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@56fc18f1
w2022-03-13 17:53:01 TRACE .... Registering AssociationKey : AssociationKey(table=comment, columns={ticket_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@56fc18f1
w2022-03-13 17:53:01 TRACE >>>> Starting entity identifier : ru.edu.helpdesk.entity.Ticket
w2022-03-13 17:53:01 DEBUG Visiting attribute path : ticket.client
w2022-03-13 17:53:01 TRACE >>>> Starting attribute Attribute(name=client, type=ru.edu.helpdesk.entity.User [non-identifier,association])
w2022-03-13 17:53:01 DEBUG Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c5ae5ff]
w2022-03-13 17:53:01 TRACE Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@331b7ea0
w2022-03-13 17:53:01 TRACE ...... Registering AssociationKey : AssociationKey(table=ticket, columns={client_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@331b7ea0
w2022-03-13 17:53:01 TRACE >>>>>> Starting entity identifier : ru.edu.helpdesk.entity.User
w2022-03-13 17:53:01 DEBUG Visiting attribute path : ticket.client.firstName
w2022-03-13 17:53:01 TRACE >>>>>> Starting attribute Attribute(name=firstName, type=string [non-identifier])
w2022-03-13 17:53:01 TRACE <<<<<< Finishing up attribute : Attribute(name=firstName, type=string [non-identifier])
w2022-03-13 17:53:01 DEBUG Visiting attribute path : ticket.client.lastName
w2022-03-13 17:53:01 TRACE >>>>>> Starting attribute Attribute(name=lastName, type=string [non-identifier])
w2022-03-13 17:53:01 TRACE <<<<<< Finishing up attribute : Attribute(name=lastName, type=string [non-identifier])
w2022-03-13 17:53:01 DEBUG Visiting attribute path : ticket.client.login
w2022-03-13 17:53:01 TRACE >>>>>> Starting attribute Attribute(name=login, type=string [non-identifier])
w2022-03-13 17:53:01 TRACE <<<<<< Finishing up attribute : Attribute(name=login, type=string [non-identifier])
w2022-03-13 17:53:01 DEBUG Visiting attribute path : ticket.client.password
w2022-03-13 17:53:01 TRACE >>>>>> Starting attribute Attribute(name=password, type=string [non-identifier])
w2022-03-13 17:53:01 TRACE <<<<<< Finishing up attribute : Attribute(name=password, type=string [non-identifier])
w2022-03-13 17:53:01 DEBUG Visiting attribute path : ticket.client.role
w2022-03-13 17:53:01 TRACE >>>>>> Starting attribute Attribute(name=role, type=org.hibernate.type.EnumType [non-identifier])
w2022-03-13 17:53:01 TRACE <<<<<< Finishing up attribute : Attribute(name=role, type=org.hibernate.type.EnumType [non-identifier])
w2022-03-13 17:53:01 TRACE Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@331b7ea0
w2022-03-13 17:53:01 TRACE <<<< Finishing up attribute : Attribute(name=client, type=ru.edu.helpdesk.entity.User [non-identifier,association])
w2022-03-13 17:53:01 DEBUG Visiting attribute path : ticket.status
w2022-03-13 17:53:01 TRACE >>>> Starting attribute Attribute(name=status, type=org.hibernate.type.EnumType [non-identifier])
w2022-03-13 17:53:01 TRACE <<<< Finishing up attribute : Attribute(name=status, type=org.hibernate.type.EnumType [non-identifier])
w2022-03-13 17:53:01 DEBUG Visiting attribute path : ticket.support
w2022-03-13 17:53:01 TRACE >>>> Starting attribute Attribute(name=support, type=ru.edu.helpdesk.entity.User [non-identifier,association])
w2022-03-13 17:53:01 DEBUG Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37e019b1]
w2022-03-13 17:53:01 TRACE Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@16db42c
w2022-03-13 17:53:01 TRACE ...... Registering AssociationKey : AssociationKey(table=ticket, columns={support_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@16db42c
w2022-03-13 17:53:01 TRACE >>>>>> Starting entity identifier : ru.edu.helpdesk.entity.User
w2022-03-13 17:53:01 DEBUG Visiting attribute path : ticket.support.firstName
w2022-03-13 17:53:01 TRACE >>>>>> Starting attribute Attribute(name=firstName, type=string [non-identifier])
w2022-03-13 17:53:01 TRACE <<<<<< Finishing up attribute : Attribute(name=firstName, type=string [non-identifier])
w2022-03-13 17:53:01 DEBUG Visiting attribute path : ticket.support.lastName
w2022-03-13 17:53:01 TRACE >>>>>> Starting attribute Attribute(name=lastName, type=string [non-identifier])
w2022-03-13 17:53:01 TRACE <<<<<< Finishing up attribute : Attribute(name=lastName, type=string [non-identifier])
w2022-03-13 17:53:01 DEBUG Visiting attribute path : ticket.support.login
w2022-03-13 17:53:01 TRACE >>>>>> Starting attribute Attribute(name=login, type=string [non-identifier])
w2022-03-13 17:53:01 TRACE <<<<<< Finishing up attribute : Attribute(name=login, type=string [non-identifier])
w2022-03-13 17:53:01 DEBUG Visiting attribute path : ticket.support.password
w2022-03-13 17:53:01 TRACE >>>>>> Starting attribute Attribute(name=password, type=string [non-identifier])
w2022-03-13 17:53:01 TRACE <<<<<< Finishing up attribute : Attribute(name=password, type=string [non-identifier])
w2022-03-13 17:53:01 DEBUG Visiting attribute path : ticket.support.role
w2022-03-13 17:53:01 TRACE >>>>>> Starting attribute Attribute(name=role, type=org.hibernate.type.EnumType [non-identifier])
w2022-03-13 17:53:01 TRACE <<<<<< Finishing up attribute : Attribute(name=role, type=org.hibernate.type.EnumType [non-identifier])
w2022-03-13 17:53:01 TRACE Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@16db42c
w2022-03-13 17:53:01 TRACE <<<< Finishing up attribute : Attribute(name=support, type=ru.edu.helpdesk.entity.User [non-identifier,association])
w2022-03-13 17:53:01 DEBUG Visiting attribute path : ticket.title
w2022-03-13 17:53:01 TRACE >>>> Starting attribute Attribute(name=title, type=string [non-identifier])
w2022-03-13 17:53:01 TRACE <<<< Finishing up attribute : Attribute(name=title, type=string [non-identifier])
w2022-03-13 17:53:01 TRACE Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@56fc18f1
w2022-03-13 17:53:01 TRACE << Finishing up attribute : Attribute(name=ticket, type=ru.edu.helpdesk.entity.Ticket [non-identifier,association])
w2022-03-13 17:53:01 DEBUG Visiting attribute path : user
w2022-03-13 17:53:01 TRACE >> Starting attribute Attribute(name=user, type=ru.edu.helpdesk.entity.User [non-identifier,association])
w2022-03-13 17:53:01 DEBUG Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ac3cce3]
w2022-03-13 17:53:01 TRACE Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@32455765
w2022-03-13 17:53:01 TRACE .... Registering AssociationKey : AssociationKey(table=comment, columns={user_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@32455765
w2022-03-13 17:53:01 TRACE >>>> Starting entity identifier : ru.edu.helpdesk.entity.User
w2022-03-13 17:53:01 DEBUG Visiting attribute path : user.firstName
w2022-03-13 17:53:01 TRACE >>>> Starting attribute Attribute(name=firstName, type=string [non-identifier])
w2022-03-13 17:53:01 TRACE <<<< Finishing up attribute : Attribute(name=firstName, type=string [non-identifier])
w2022-03-13 17:53:01 DEBUG Visiting attribute path : user.lastName
w2022-03-13 17:53:01 TRACE >>>> Starting attribute Attribute(name=lastName, type=string [non-identifier])
w2022-03-13 17:53:01 TRACE <<<< Finishing up attribute : Attribute(name=lastName, type=string [non-identifier])
w2022-03-13 17:53:01 DEBUG Visiting attribute path : user.login
w2022-03-13 17:53:01 TRACE >>>> Starting attribute Attribute(name=login, type=string [non-identifier])
w2022-03-13 17:53:01 TRACE <<<< Finishing up attribute : Attribute(name=login, type=string [non-identifier])
w2022-03-13 17:53:01 DEBUG Visiting attribute path : user.password
w2022-03-13 17:53:01 TRACE >>>> Starting attribute Attribute(name=password, type=string [non-identifier])
w2022-03-13 17:53:01 TRACE <<<< Finishing up attribute : Attribute(name=password, type=string [non-identifier])
w2022-03-13 17:53:01 DEBUG Visiting attribute path : user.role
w2022-03-13 17:53:01 TRACE >>>> Starting attribute Attribute(name=role, type=org.hibernate.type.EnumType [non-identifier])
w2022-03-13 17:53:01 TRACE <<<< Finishing up attribute : Attribute(name=role, type=org.hibernate.type.EnumType [non-identifier])
w2022-03-13 17:53:01 TRACE Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@32455765
w2022-03-13 17:53:01 TRACE << Finishing up attribute : Attribute(name=user, type=ru.edu.helpdesk.entity.User [non-identifier,association])
w2022-03-13 17:53:01 TRACE Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@60dbe4b0
w2022-03-13 17:53:01 TRACE  Finished root entity : ru.edu.helpdesk.entity.Comment
w2022-03-13 17:53:01 DEBUG Building LoadPlan...
w2022-03-13 17:53:01 DEBUG processing queryspace <gen:0>
w2022-03-13 17:53:01 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.Comment)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.Comment, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.Comment)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.Ticket, querySpaceUid=<gen:1>, path=ru.edu.helpdesk.entity.Comment.ticket)
             - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:2>, path=ru.edu.helpdesk.entity.Comment.ticket.client)
             - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:3>, path=ru.edu.helpdesk.entity.Comment.ticket.support)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:4>, path=ru.edu.helpdesk.entity.Comment.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(ticket)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ru.edu.helpdesk.entity.Ticket)
                - SQL table alias mapping - ticket1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(client)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=ru.edu.helpdesk.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}
                - JOIN (JoinDefinedByMetadata(support)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=ru.edu.helpdesk.entity.User)
                      - SQL table alias mapping - user3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_2_3_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user4_
                - alias suffix - 4_
                - suffixed key columns - {id1_2_4_}

w2022-03-13 17:53:01 DEBUG Static select for entity ru.edu.helpdesk.entity.Comment [NONE]: select comment0_.id as id1_0_0_, comment0_.message as message2_0_0_, comment0_.ticket_id as ticket_i3_0_0_, comment0_.user_id as user_id4_0_0_, ticket1_.id as id1_1_1_, ticket1_.client_id as client_i4_1_1_, ticket1_.status as status2_1_1_, ticket1_.support_id as support_5_1_1_, ticket1_.title as title3_1_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_, user3_.id as id1_2_3_, user3_.first_name as first_na2_2_3_, user3_.last_name as last_nam3_2_3_, user3_.login as login4_2_3_, user3_.password as password5_2_3_, user3_.role as role6_2_3_, user4_.id as id1_2_4_, user4_.first_name as first_na2_2_4_, user4_.last_name as last_nam3_2_4_, user4_.login as login4_2_4_, user4_.password as password5_2_4_, user4_.role as role6_2_4_ from comment comment0_ left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id left outer join user user2_ on ticket1_.client_id=user2_.id left outer join user user3_ on ticket1_.support_id=user3_.id left outer join user user4_ on comment0_.user_id=user4_.id where comment0_.id=?
w2022-03-13 17:53:01 TRACE Wrapping up metadata context...
w2022-03-13 17:53:01 TRACE Starting entity [ru.edu.helpdesk.entity.User]
w2022-03-13 17:53:01 TRACE Building identifier attribute [User.id]
w2022-03-13 17:53:01 TRACE Starting attribute metadata determination [id]
w2022-03-13 17:53:01 TRACE     Determined member [private java.lang.Long ru.edu.helpdesk.entity.User.id]
w2022-03-13 17:53:01 TRACE     Determined type [name=long, class=org.hibernate.type.LongType]
w2022-03-13 17:53:01 TRACE Building attribute [User.firstName]
w2022-03-13 17:53:01 TRACE Starting attribute metadata determination [firstName]
w2022-03-13 17:53:01 TRACE     Determined member [private java.lang.String ru.edu.helpdesk.entity.User.firstName]
w2022-03-13 17:53:01 TRACE     Determined type [name=string, class=org.hibernate.type.StringType]
w2022-03-13 17:53:01 TRACE Building attribute [User.lastName]
w2022-03-13 17:53:01 TRACE Starting attribute metadata determination [lastName]
w2022-03-13 17:53:01 TRACE     Determined member [private java.lang.String ru.edu.helpdesk.entity.User.lastName]
w2022-03-13 17:53:01 TRACE     Determined type [name=string, class=org.hibernate.type.StringType]
w2022-03-13 17:53:01 TRACE Building attribute [User.login]
w2022-03-13 17:53:01 TRACE Starting attribute metadata determination [login]
w2022-03-13 17:53:01 TRACE     Determined member [private java.lang.String ru.edu.helpdesk.entity.User.login]
w2022-03-13 17:53:01 TRACE     Determined type [name=string, class=org.hibernate.type.StringType]
w2022-03-13 17:53:01 TRACE Building attribute [User.password]
w2022-03-13 17:53:01 TRACE Starting attribute metadata determination [password]
w2022-03-13 17:53:01 TRACE     Determined member [private java.lang.String ru.edu.helpdesk.entity.User.password]
w2022-03-13 17:53:01 TRACE     Determined type [name=string, class=org.hibernate.type.StringType]
w2022-03-13 17:53:01 TRACE Building attribute [User.role]
w2022-03-13 17:53:01 TRACE Starting attribute metadata determination [role]
w2022-03-13 17:53:01 TRACE     Determined member [private ru.edu.helpdesk.entity.UserRole ru.edu.helpdesk.entity.User.role]
w2022-03-13 17:53:01 TRACE     Determined type [name=org.hibernate.type.EnumType, class=org.hibernate.type.CustomType]
w2022-03-13 17:53:01 TRACE Completed entity [ru.edu.helpdesk.entity.User]
w2022-03-13 17:53:01 TRACE Starting entity [ru.edu.helpdesk.entity.Ticket]
w2022-03-13 17:53:01 TRACE Building identifier attribute [Ticket.id]
w2022-03-13 17:53:01 TRACE Starting attribute metadata determination [id]
w2022-03-13 17:53:01 TRACE     Determined member [private java.lang.Long ru.edu.helpdesk.entity.Ticket.id]
w2022-03-13 17:53:01 TRACE     Determined type [name=long, class=org.hibernate.type.LongType]
w2022-03-13 17:53:01 TRACE Building attribute [Ticket.client]
w2022-03-13 17:53:01 TRACE Starting attribute metadata determination [client]
w2022-03-13 17:53:01 TRACE     Determined member [private ru.edu.helpdesk.entity.User ru.edu.helpdesk.entity.Ticket.client]
w2022-03-13 17:53:01 TRACE     Determined type [name=ru.edu.helpdesk.entity.User, class=org.hibernate.type.ManyToOneType]
w2022-03-13 17:53:01 TRACE Building attribute [Ticket.status]
w2022-03-13 17:53:01 TRACE Starting attribute metadata determination [status]
w2022-03-13 17:53:01 TRACE     Determined member [private ru.edu.helpdesk.entity.TicketStatus ru.edu.helpdesk.entity.Ticket.status]
w2022-03-13 17:53:01 TRACE     Determined type [name=org.hibernate.type.EnumType, class=org.hibernate.type.CustomType]
w2022-03-13 17:53:01 TRACE Building attribute [Ticket.support]
w2022-03-13 17:53:01 TRACE Starting attribute metadata determination [support]
w2022-03-13 17:53:01 TRACE     Determined member [private ru.edu.helpdesk.entity.User ru.edu.helpdesk.entity.Ticket.support]
w2022-03-13 17:53:01 TRACE     Determined type [name=ru.edu.helpdesk.entity.User, class=org.hibernate.type.ManyToOneType]
w2022-03-13 17:53:01 TRACE Building attribute [Ticket.title]
w2022-03-13 17:53:01 TRACE Starting attribute metadata determination [title]
w2022-03-13 17:53:01 TRACE     Determined member [private java.lang.String ru.edu.helpdesk.entity.Ticket.title]
w2022-03-13 17:53:01 TRACE     Determined type [name=string, class=org.hibernate.type.StringType]
w2022-03-13 17:53:01 TRACE Completed entity [ru.edu.helpdesk.entity.Ticket]
w2022-03-13 17:53:01 TRACE Starting entity [ru.edu.helpdesk.entity.Comment]
w2022-03-13 17:53:01 TRACE Building identifier attribute [Comment.id]
w2022-03-13 17:53:01 TRACE Starting attribute metadata determination [id]
w2022-03-13 17:53:01 TRACE     Determined member [private java.lang.Long ru.edu.helpdesk.entity.Comment.id]
w2022-03-13 17:53:01 TRACE     Determined type [name=long, class=org.hibernate.type.LongType]
w2022-03-13 17:53:01 TRACE Building attribute [Comment.message]
w2022-03-13 17:53:01 TRACE Starting attribute metadata determination [message]
w2022-03-13 17:53:01 TRACE     Determined member [private java.lang.String ru.edu.helpdesk.entity.Comment.message]
w2022-03-13 17:53:01 TRACE     Determined type [name=string, class=org.hibernate.type.StringType]
w2022-03-13 17:53:01 TRACE Building attribute [Comment.ticket]
w2022-03-13 17:53:01 TRACE Starting attribute metadata determination [ticket]
w2022-03-13 17:53:01 TRACE     Determined member [private ru.edu.helpdesk.entity.Ticket ru.edu.helpdesk.entity.Comment.ticket]
w2022-03-13 17:53:01 TRACE     Determined type [name=ru.edu.helpdesk.entity.Ticket, class=org.hibernate.type.ManyToOneType]
w2022-03-13 17:53:01 TRACE Building attribute [Comment.user]
w2022-03-13 17:53:01 TRACE Starting attribute metadata determination [user]
w2022-03-13 17:53:01 TRACE     Determined member [private ru.edu.helpdesk.entity.User ru.edu.helpdesk.entity.Comment.user]
w2022-03-13 17:53:01 TRACE     Determined type [name=ru.edu.helpdesk.entity.User, class=org.hibernate.type.ManyToOneType]
w2022-03-13 17:53:01 TRACE Completed entity [ru.edu.helpdesk.entity.Comment]
w2022-03-13 17:53:01 TRACE Normalizing identifier quoting [null]
w2022-03-13 17:53:01 TRACE Normalizing identifier quoting [null]
w2022-03-13 17:53:01 TRACE Initializing service [role=org.hibernate.tool.schema.spi.SchemaManagementTool]
w2022-03-13 17:53:01 TRACE Initializing service [role=org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder]
w2022-03-13 17:53:01 TRACE Initializing service [role=org.hibernate.tool.hbm2ddl.ImportSqlCommandExtractor]
w2022-03-13 17:53:01 DEBUG drop table if exists comment
w2022-03-13 17:53:01 DEBUG drop table if exists hibernate_sequence
w2022-03-13 17:53:01 DEBUG drop table if exists ticket
w2022-03-13 17:53:01 DEBUG drop table if exists user
w2022-03-13 17:53:01 DEBUG create table comment (id bigint not null, message varchar(255) not null, ticket_id bigint, user_id bigint, primary key (id))
w2022-03-13 17:53:01 DEBUG create table hibernate_sequence (next_val bigint)
w2022-03-13 17:53:01 DEBUG insert into hibernate_sequence values ( 1 )
w2022-03-13 17:53:01 DEBUG create table ticket (id bigint not null, status integer, title varchar(255) not null, client_id bigint, support_id bigint, primary key (id))
w2022-03-13 17:53:01 DEBUG create table user (id bigint not null, first_name varchar(255), last_name varchar(255), login varchar(255) not null, password varchar(255) not null, role integer, primary key (id))
w2022-03-13 17:53:01 INFO  HHH000476: Executing import script 'file:/F:/java/project/helpdeskproject/target/classes/data/import.sql'
w2022-03-13 17:53:01 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (1, 'admin', 'admin', 'admin', 'admin', 0)
w2022-03-13 17:53:01 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (2, 'support', 'support', 'support', 'support', 1)
w2022-03-13 17:53:01 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (3, 'user1', 'user1', 'user1', 'user1', 2)
w2022-03-13 17:53:01 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (4, 'user2', 'user2', 'user2', 'user2', 2)
w2022-03-13 17:53:01 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (5, 1, 'Hello user1', 3, 2)
w2022-03-13 17:53:01 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (6, 0, 'Title2', 3, NULL)
w2022-03-13 17:53:01 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (7, 0, 'Message user2', 4, NULL)
w2022-03-13 17:53:01 DEBUG UPDATE hibernate_sequence SET next_val = 8 WHERE next_val = 1
w2022-03-13 17:53:01 TRACE Initializing service [role=org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform]
w2022-03-13 17:53:01 INFO  HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
w2022-03-13 17:53:01 DEBUG Checking 0 named HQL queries
w2022-03-13 17:53:01 DEBUG Checking 0 named SQL queries
w2022-03-13 17:53:01 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-13 17:53:01 TRACE Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@4ad9bc1a] for TypeConfiguration
w2022-03-13 17:53:01 DEBUG Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5f458304
w2022-03-13 17:53:01 DEBUG Registering SessionFactory: dc718cd5-fd80-4100-b440-4d04b4ca9fad (<unnamed>)
w2022-03-13 17:53:01 DEBUG Not binding SessionFactory to JNDI, no JNDI name configured
w2022-03-13 17:53:01 TRACE Opening Hibernate Session.  tenant=null
w2022-03-13 17:53:01 TRACE Initializing service [role=org.hibernate.stat.spi.StatisticsImplementor]
w2022-03-13 17:53:01 DEBUG Statistics initialized [enabled=false]
w2022-03-13 17:53:01 TRACE Initializing service [role=org.hibernate.jmx.spi.JmxService]
w2022-03-13 17:53:01 TRACE Opened Session [1a59f46f-c343-484d-9fc0-5889adf55242] at timestamp: 1647183181501
w2022-03-13 17:53:01 TRACE Closing session [1a59f46f-c343-484d-9fc0-5889adf55242]
w2022-03-13 17:53:01 TRACE Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@1a1376a0]
w2022-03-13 17:53:01 TRACE Releasing JDBC resources
w2022-03-13 17:53:01 TRACE Closing logical connection
w2022-03-13 17:53:01 TRACE Logical connection closed
w2022-03-13 17:53:01 TRACE Opening Hibernate Session.  tenant=null
w2022-03-13 17:53:01 TRACE Opened Session [649a974f-1f2d-4e71-8f18-79450fc509b0] at timestamp: 1647183181527
w2022-03-13 17:53:01 TRACE Closing session [649a974f-1f2d-4e71-8f18-79450fc509b0]
w2022-03-13 17:53:01 TRACE Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@425c004e]
w2022-03-13 17:53:01 TRACE Releasing JDBC resources
w2022-03-13 17:53:01 TRACE Closing logical connection
w2022-03-13 17:53:01 TRACE Logical connection closed
w2022-03-13 17:53:01 TRACE Opening Hibernate Session.  tenant=null
w2022-03-13 17:53:01 TRACE Opened Session [892f66b0-65b4-4756-8b37-debd881bc9a5] at timestamp: 1647183181571
w2022-03-13 17:53:01 TRACE Closing session [892f66b0-65b4-4756-8b37-debd881bc9a5]
w2022-03-13 17:53:01 TRACE Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@2e27802d]
w2022-03-13 17:53:01 TRACE Releasing JDBC resources
w2022-03-13 17:53:01 TRACE Closing logical connection
w2022-03-13 17:53:01 TRACE Logical connection closed
w2022-03-13 17:53:01 TRACE Opening Hibernate Session.  tenant=null
w2022-03-13 17:53:01 TRACE Opened Session [c73766b6-4975-4f43-8e7b-8f998d5900bb] at timestamp: 1647183181619
w2022-03-13 17:53:01 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-13 17:53:01 TRACE Closing session [c73766b6-4975-4f43-8e7b-8f998d5900bb]
w2022-03-13 17:53:01 TRACE Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@228219c4]
w2022-03-13 17:53:01 TRACE Releasing JDBC resources
w2022-03-13 17:53:01 TRACE Closing logical connection
w2022-03-13 17:53:01 TRACE Logical connection closed
w2022-03-13 17:53:01 TRACE Opening Hibernate Session.  tenant=null
w2022-03-13 17:53:01 TRACE Opened Session [1d29989c-7aef-43a5-86cc-e44333ecc6a9] at timestamp: 1647183181623
w2022-03-13 17:53:01 TRACE Closing session [1d29989c-7aef-43a5-86cc-e44333ecc6a9]
w2022-03-13 17:53:01 TRACE Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@41d4e619]
w2022-03-13 17:53:01 TRACE Releasing JDBC resources
w2022-03-13 17:53:01 TRACE Closing logical connection
w2022-03-13 17:53:01 TRACE Logical connection closed
w2022-03-13 17:53:01 TRACE Opening Hibernate Session.  tenant=null
w2022-03-13 17:53:01 TRACE Opened Session [a36fe106-d79f-4d0e-bcfa-6adcf384cb69] at timestamp: 1647183181679
w2022-03-13 17:53:01 TRACE Closing session [a36fe106-d79f-4d0e-bcfa-6adcf384cb69]
w2022-03-13 17:53:01 TRACE Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@4d4f2088]
w2022-03-13 17:53:01 TRACE Releasing JDBC resources
w2022-03-13 17:53:01 TRACE Closing logical connection
w2022-03-13 17:53:01 TRACE Logical connection closed
w2022-03-13 17:53:01 TRACE Opening Hibernate Session.  tenant=null
w2022-03-13 17:53:01 TRACE Opened Session [815bdfef-304c-491b-86c3-45ac4240d322] at timestamp: 1647183181685
w2022-03-13 17:53:01 TRACE Closing session [815bdfef-304c-491b-86c3-45ac4240d322]
w2022-03-13 17:53:01 TRACE Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@8605ca1]
w2022-03-13 17:53:01 TRACE Releasing JDBC resources
w2022-03-13 17:53:01 TRACE Closing logical connection
w2022-03-13 17:53:01 TRACE Logical connection closed
w2022-03-13 17:53:01 TRACE Opening Hibernate Session.  tenant=null
w2022-03-13 17:53:01 TRACE Opened Session [54e5e537-9098-4203-af5c-73427c1bcf91] at timestamp: 1647183181697
w2022-03-13 17:53:01 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-13 17:53:01 TRACE Closing session [54e5e537-9098-4203-af5c-73427c1bcf91]
w2022-03-13 17:53:01 TRACE Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@7f4b9a53]
w2022-03-13 17:53:01 TRACE Releasing JDBC resources
w2022-03-13 17:53:01 TRACE Closing logical connection
w2022-03-13 17:53:01 TRACE Logical connection closed
w2022-03-13 17:53:01 TRACE Opening Hibernate Session.  tenant=null
w2022-03-13 17:53:01 TRACE Opened Session [87da7401-a69f-4141-a7c7-d40cf74c105e] at timestamp: 1647183181698
w2022-03-13 17:53:01 TRACE Closing session [87da7401-a69f-4141-a7c7-d40cf74c105e]
w2022-03-13 17:53:01 TRACE Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@22341f68]
w2022-03-13 17:53:01 TRACE Releasing JDBC resources
w2022-03-13 17:53:01 TRACE Closing logical connection
w2022-03-13 17:53:01 TRACE Logical connection closed
w2022-03-13 17:53:01 TRACE Opening Hibernate Session.  tenant=null
w2022-03-13 17:53:01 TRACE Opened Session [b6674ad1-151d-43e6-8b0d-dee148c72ea9] at timestamp: 1647183181708
w2022-03-13 17:53:01 TRACE Closing session [b6674ad1-151d-43e6-8b0d-dee148c72ea9]
w2022-03-13 17:53:01 TRACE Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@4312a9d4]
w2022-03-13 17:53:01 TRACE Releasing JDBC resources
w2022-03-13 17:53:01 TRACE Closing logical connection
w2022-03-13 17:53:01 TRACE Logical connection closed
w2022-03-13 17:53:01 TRACE Opening Hibernate Session.  tenant=null
w2022-03-13 17:53:01 TRACE Opened Session [b8255941-4661-4207-baea-1147de3053c0] at timestamp: 1647183181712
w2022-03-13 17:53:01 TRACE Closing session [b8255941-4661-4207-baea-1147de3053c0]
w2022-03-13 17:53:01 TRACE Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@3326349f]
w2022-03-13 17:53:01 TRACE Releasing JDBC resources
w2022-03-13 17:53:01 TRACE Closing logical connection
w2022-03-13 17:53:01 TRACE Logical connection closed
w2022-03-13 17:53:01 TRACE Opening Hibernate Session.  tenant=null
w2022-03-13 17:53:01 TRACE Opened Session [4b50bb18-78f9-4745-8db7-af62fe944df7] at timestamp: 1647183181724
w2022-03-13 17:53:01 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-13 17:53:01 TRACE Closing session [4b50bb18-78f9-4745-8db7-af62fe944df7]
w2022-03-13 17:53:01 TRACE Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@70036ec4]
w2022-03-13 17:53:01 TRACE Releasing JDBC resources
w2022-03-13 17:53:01 TRACE Closing logical connection
w2022-03-13 17:53:01 TRACE Logical connection closed
w2022-03-13 17:53:01 TRACE Opening Hibernate Session.  tenant=null
w2022-03-13 17:53:01 TRACE Opened Session [0839d5dc-b250-4c63-b342-13f30b57c736] at timestamp: 1647183181725
w2022-03-13 17:53:01 TRACE Closing session [0839d5dc-b250-4c63-b342-13f30b57c736]
w2022-03-13 17:53:01 TRACE Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@5c596e3b]
w2022-03-13 17:53:01 TRACE Releasing JDBC resources
w2022-03-13 17:53:01 TRACE Closing logical connection
w2022-03-13 17:53:01 TRACE Logical connection closed
w2022-03-13 17:53:17 TRACE Opening Hibernate Session.  tenant=null
w2022-03-13 17:53:17 TRACE Opened Session [cf538dfc-d2ca-41ff-a986-281b399ec608] at timestamp: 1647183197371
w2022-03-13 17:53:17 TRACE Closing session [cf538dfc-d2ca-41ff-a986-281b399ec608]
w2022-03-13 17:53:17 TRACE Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@44585929]
w2022-03-13 17:53:17 TRACE Releasing JDBC resources
w2022-03-13 17:53:17 TRACE Closing logical connection
w2022-03-13 17:53:17 TRACE Logical connection closed
w2022-03-13 17:53:17 TRACE Opening Hibernate Session.  tenant=null
w2022-03-13 17:53:17 TRACE Opened Session [16a5751d-1f9d-468c-8d0e-9356238f9487] at timestamp: 1647183197380
w2022-03-13 17:53:17 TRACE Closing session [16a5751d-1f9d-468c-8d0e-9356238f9487]
w2022-03-13 17:53:17 TRACE Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@1456376d]
w2022-03-13 17:53:17 TRACE Releasing JDBC resources
w2022-03-13 17:53:17 TRACE Closing logical connection
w2022-03-13 17:53:17 TRACE Logical connection closed
w2022-03-13 17:53:23 TRACE Opening Hibernate Session.  tenant=null
w2022-03-13 17:53:23 TRACE Opened Session [295aae25-23f1-471c-8103-dcfcbe0331e9] at timestamp: 1647183203160
w2022-03-13 17:53:23 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-13 17:53:23 DEBUG begin
w2022-03-13 17:53:23 TRACE Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
w2022-03-13 17:53:23 TRACE Transaction begun via JDBC Connection.setAutoCommit(false)
w2022-03-13 17:53:23 TRACE ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
w2022-03-13 17:53:23 DEBUG Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
w2022-03-13 17:53:23 TRACE Unable to locate HQL query plan in cache; generating (select generatedAlias0 from User as generatedAlias0)
w2022-03-13 17:53:23 TRACE Initializing service [role=org.hibernate.hql.spi.QueryTranslatorFactory]
w2022-03-13 17:53:23 DEBUG QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@2c46cb88
w2022-03-13 17:53:23 DEBUG parse() - HQL: select generatedAlias0 from ru.edu.helpdesk.entity.User as generatedAlias0
w2022-03-13 17:53:23 TRACE -> statement
w2022-03-13 17:53:23 TRACE ---> selectStatement
w2022-03-13 17:53:23 TRACE -----> queryRule
w2022-03-13 17:53:23 TRACE -------> selectFrom
w2022-03-13 17:53:23 TRACE ---------> selectClause
w2022-03-13 17:53:23 TRACE -----------> selectedPropertiesList
w2022-03-13 17:53:23 TRACE -------------> aliasedExpression
w2022-03-13 17:53:23 TRACE ---------------> expression
w2022-03-13 17:53:23 TRACE -----------------> logicalOrExpression
w2022-03-13 17:53:23 TRACE -------------------> logicalAndExpression
w2022-03-13 17:53:23 TRACE ---------------------> negatedExpression
w2022-03-13 17:53:23 TRACE -----------------------> equalityExpression
w2022-03-13 17:53:23 TRACE -------------------------> relationalExpression
w2022-03-13 17:53:23 TRACE ---------------------------> concatenation
w2022-03-13 17:53:23 TRACE -----------------------------> additiveExpression
w2022-03-13 17:53:23 TRACE -------------------------------> multiplyExpression
w2022-03-13 17:53:23 TRACE ---------------------------------> unaryExpression
w2022-03-13 17:53:23 TRACE -----------------------------------> atom
w2022-03-13 17:53:23 TRACE -------------------------------------> primaryExpression
w2022-03-13 17:53:23 TRACE ---------------------------------------> identPrimary
w2022-03-13 17:53:23 TRACE -----------------------------------------> identPrimaryBase
w2022-03-13 17:53:23 TRACE -------------------------------------------> identifier
w2022-03-13 17:53:23 TRACE <------------------------------------------- identifier
w2022-03-13 17:53:23 TRACE <----------------------------------------- identPrimaryBase
w2022-03-13 17:53:23 TRACE <--------------------------------------- identPrimary
w2022-03-13 17:53:23 TRACE <------------------------------------- primaryExpression
w2022-03-13 17:53:23 TRACE <----------------------------------- atom
w2022-03-13 17:53:23 TRACE <--------------------------------- unaryExpression
w2022-03-13 17:53:23 TRACE <------------------------------- multiplyExpression
w2022-03-13 17:53:23 TRACE <----------------------------- additiveExpression
w2022-03-13 17:53:23 TRACE <--------------------------- concatenation
w2022-03-13 17:53:23 TRACE <------------------------- relationalExpression
w2022-03-13 17:53:23 TRACE <----------------------- equalityExpression
w2022-03-13 17:53:23 TRACE <--------------------- negatedExpression
w2022-03-13 17:53:23 TRACE <------------------- logicalAndExpression
w2022-03-13 17:53:23 TRACE <----------------- logicalOrExpression
w2022-03-13 17:53:23 TRACE <--------------- expression
w2022-03-13 17:53:23 TRACE <------------- aliasedExpression
w2022-03-13 17:53:23 TRACE <----------- selectedPropertiesList
w2022-03-13 17:53:23 TRACE <--------- selectClause
w2022-03-13 17:53:23 TRACE ---------> fromClause
w2022-03-13 17:53:23 TRACE -----------> fromRange
w2022-03-13 17:53:23 TRACE -------------> fromClassOrOuterQueryPath
w2022-03-13 17:53:23 TRACE ---------------> path
w2022-03-13 17:53:23 TRACE -----------------> identifier
w2022-03-13 17:53:23 TRACE <----------------- identifier
w2022-03-13 17:53:23 TRACE -----------------> identifier
w2022-03-13 17:53:23 TRACE <----------------- identifier
w2022-03-13 17:53:23 TRACE -----------------> identifier
w2022-03-13 17:53:23 TRACE <----------------- identifier
w2022-03-13 17:53:23 TRACE -----------------> identifier
w2022-03-13 17:53:23 TRACE <----------------- identifier
w2022-03-13 17:53:23 TRACE -----------------> identifier
w2022-03-13 17:53:23 TRACE <----------------- identifier
w2022-03-13 17:53:23 TRACE <--------------- path
w2022-03-13 17:53:23 TRACE ---------------> asAlias
w2022-03-13 17:53:23 TRACE -----------------> alias
w2022-03-13 17:53:23 TRACE -------------------> identifier
w2022-03-13 17:53:23 TRACE <------------------- identifier
w2022-03-13 17:53:23 TRACE <----------------- alias
w2022-03-13 17:53:23 TRACE <--------------- asAlias
w2022-03-13 17:53:23 TRACE <------------- fromClassOrOuterQueryPath
w2022-03-13 17:53:23 TRACE <----------- fromRange
w2022-03-13 17:53:23 TRACE <--------- fromClause
w2022-03-13 17:53:23 TRACE <------- selectFrom
w2022-03-13 17:53:23 TRACE <----- queryRule
w2022-03-13 17:53:23 TRACE <--- selectStatement
w2022-03-13 17:53:23 TRACE <- statement
w2022-03-13 17:53:23 DEBUG throwQueryException() : no errors
w2022-03-13 17:53:23 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'ru'
       |     |  |  |  |  \-[IDENT] Node: 'edu'
       |     |  |  |  \-[IDENT] Node: 'helpdesk'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'User'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

w2022-03-13 17:53:23 DEBUG select << begin [level=1, statement=select]
w2022-03-13 17:53:23 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.User (generatedAlias0) -> user0_
w2022-03-13 17:53:23 DEBUG Resolved : generatedAlias0 -> user0_.id
w2022-03-13 17:53:23 DEBUG select : finishing up [level=1, statement=select]
w2022-03-13 17:53:23 DEBUG processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) )
w2022-03-13 17:53:23 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity User): [user]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.User)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

w2022-03-13 17:53:23 DEBUG Using FROM fragment [user user0_]
w2022-03-13 17:53:23 DEBUG select >> end [level=1, statement=select]
w2022-03-13 17:53:23 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_2_' {alias=generatedAlias0, className=ru.edu.helpdesk.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.first_name as first_na2_2_, user0_.last_name as last_nam3_2_, user0_.login as login4_2_, user0_.password as password5_2_, user0_.role as role6_2_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=ru.edu.helpdesk.entity.User}}

w2022-03-13 17:53:23 DEBUG throwQueryException() : no errors
w2022-03-13 17:53:23 DEBUG HQL: select generatedAlias0 from ru.edu.helpdesk.entity.User as generatedAlias0
w2022-03-13 17:53:23 DEBUG SQL: select user0_.id as id1_2_, user0_.first_name as first_na2_2_, user0_.last_name as last_nam3_2_, user0_.login as login4_2_, user0_.password as password5_2_, user0_.role as role6_2_ from user user0_
w2022-03-13 17:53:23 DEBUG throwQueryException() : no errors
w2022-03-13 17:53:23 TRACE Find: select generatedAlias0 from User as generatedAlias0
w2022-03-13 17:53:23 TRACE Named parameters: {}
w2022-03-13 17:53:23 DEBUG select user0_.id as id1_2_, user0_.first_name as first_na2_2_, user0_.last_name as last_nam3_2_, user0_.login as login4_2_, user0_.password as password5_2_, user0_.role as role6_2_ from user user0_
w2022-03-13 17:53:23 TRACE Registering statement [HikariProxyPreparedStatement@1192023146 wrapping select user0_.id as id1_2_, user0_.first_name as first_na2_2_, user0_.last_name as last_nam3_2_, user0_.login as login4_2_, user0_.password as password5_2_, user0_.role as role6_2_ from user user0_ 
 parameters=null]
w2022-03-13 17:53:23 TRACE Registering last query statement [HikariProxyPreparedStatement@1192023146 wrapping select user0_.id as id1_2_, user0_.first_name as first_na2_2_, user0_.last_name as last_nam3_2_, user0_.login as login4_2_, user0_.password as password5_2_, user0_.role as role6_2_ from user user0_ 
 parameters=null]
w2022-03-13 17:53:23 TRACE Bound [1] parameters total
w2022-03-13 17:53:23 TRACE Registering result set [HikariProxyResultSet@2100552760 wrapping org.sqlite.jdbc4.JDBC4ResultSet@1be7e996]
w2022-03-13 17:53:23 TRACE Processing result set
w2022-03-13 17:53:23 DEBUG Result set row: 0
w2022-03-13 17:53:23 TRACE extracted value ([id1_2_] : [BIGINT]) - [1]
w2022-03-13 17:53:23 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.User#1]
w2022-03-13 17:53:23 TRACE Initializing object from ResultSet: [ru.edu.helpdesk.entity.User#1]
w2022-03-13 17:53:23 TRACE Hydrating entity: [ru.edu.helpdesk.entity.User#1]
w2022-03-13 17:53:23 TRACE extracted value ([first_na2_2_] : [VARCHAR]) - [admin]
w2022-03-13 17:53:23 TRACE extracted value ([last_nam3_2_] : [VARCHAR]) - [admin]
w2022-03-13 17:53:23 TRACE extracted value ([login4_2_] : [VARCHAR]) - [admin]
w2022-03-13 17:53:23 TRACE extracted value ([password5_2_] : [VARCHAR]) - [admin]
w2022-03-13 17:53:23 TRACE extracted value ([role6_2_] : [INTEGER]) - [ADMIN]
w2022-03-13 17:53:23 DEBUG Result set row: 1
w2022-03-13 17:53:23 TRACE extracted value ([id1_2_] : [BIGINT]) - [2]
w2022-03-13 17:53:23 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.User#2]
w2022-03-13 17:53:23 TRACE Initializing object from ResultSet: [ru.edu.helpdesk.entity.User#2]
w2022-03-13 17:53:23 TRACE Hydrating entity: [ru.edu.helpdesk.entity.User#2]
w2022-03-13 17:53:23 TRACE extracted value ([first_na2_2_] : [VARCHAR]) - [support]
w2022-03-13 17:53:23 TRACE extracted value ([last_nam3_2_] : [VARCHAR]) - [support]
w2022-03-13 17:53:23 TRACE extracted value ([login4_2_] : [VARCHAR]) - [support]
w2022-03-13 17:53:23 TRACE extracted value ([password5_2_] : [VARCHAR]) - [support]
w2022-03-13 17:53:23 TRACE extracted value ([role6_2_] : [INTEGER]) - [SUPPORT]
w2022-03-13 17:53:23 DEBUG Result set row: 2
w2022-03-13 17:53:23 TRACE extracted value ([id1_2_] : [BIGINT]) - [3]
w2022-03-13 17:53:23 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.User#3]
w2022-03-13 17:53:23 TRACE Initializing object from ResultSet: [ru.edu.helpdesk.entity.User#3]
w2022-03-13 17:53:23 TRACE Hydrating entity: [ru.edu.helpdesk.entity.User#3]
w2022-03-13 17:53:23 TRACE extracted value ([first_na2_2_] : [VARCHAR]) - [user1]
w2022-03-13 17:53:23 TRACE extracted value ([last_nam3_2_] : [VARCHAR]) - [user1]
w2022-03-13 17:53:23 TRACE extracted value ([login4_2_] : [VARCHAR]) - [user1]
w2022-03-13 17:53:23 TRACE extracted value ([password5_2_] : [VARCHAR]) - [user1]
w2022-03-13 17:53:23 TRACE extracted value ([role6_2_] : [INTEGER]) - [USER]
w2022-03-13 17:53:23 DEBUG Result set row: 3
w2022-03-13 17:53:23 TRACE extracted value ([id1_2_] : [BIGINT]) - [4]
w2022-03-13 17:53:23 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.User#4]
w2022-03-13 17:53:23 TRACE Initializing object from ResultSet: [ru.edu.helpdesk.entity.User#4]
w2022-03-13 17:53:23 TRACE Hydrating entity: [ru.edu.helpdesk.entity.User#4]
w2022-03-13 17:53:23 TRACE extracted value ([first_na2_2_] : [VARCHAR]) - [user2]
w2022-03-13 17:53:23 TRACE extracted value ([last_nam3_2_] : [VARCHAR]) - [user2]
w2022-03-13 17:53:23 TRACE extracted value ([login4_2_] : [VARCHAR]) - [user2]
w2022-03-13 17:53:23 TRACE extracted value ([password5_2_] : [VARCHAR]) - [user2]
w2022-03-13 17:53:23 TRACE extracted value ([role6_2_] : [INTEGER]) - [USER]
w2022-03-13 17:53:23 TRACE Done processing result set (4 rows)
w2022-03-13 17:53:23 TRACE Total objects hydrated: 4
w2022-03-13 17:53:23 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#1]
w2022-03-13 17:53:23 DEBUG Processing attribute `firstName` : value = admin
w2022-03-13 17:53:23 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-13 17:53:23 DEBUG Processing attribute `lastName` : value = admin
w2022-03-13 17:53:23 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-13 17:53:23 DEBUG Processing attribute `login` : value = admin
w2022-03-13 17:53:23 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-13 17:53:23 DEBUG Processing attribute `password` : value = admin
w2022-03-13 17:53:23 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-13 17:53:23 DEBUG Processing attribute `role` : value = ADMIN
w2022-03-13 17:53:23 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-13 17:53:23 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#1]
w2022-03-13 17:53:23 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#2]
w2022-03-13 17:53:23 DEBUG Processing attribute `firstName` : value = support
w2022-03-13 17:53:23 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-13 17:53:23 DEBUG Processing attribute `lastName` : value = support
w2022-03-13 17:53:23 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-13 17:53:23 DEBUG Processing attribute `login` : value = support
w2022-03-13 17:53:23 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-13 17:53:23 DEBUG Processing attribute `password` : value = support
w2022-03-13 17:53:23 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-13 17:53:23 DEBUG Processing attribute `role` : value = SUPPORT
w2022-03-13 17:53:23 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-13 17:53:23 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#2]
w2022-03-13 17:53:23 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#3]
w2022-03-13 17:53:23 DEBUG Processing attribute `firstName` : value = user1
w2022-03-13 17:53:23 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-13 17:53:23 DEBUG Processing attribute `lastName` : value = user1
w2022-03-13 17:53:23 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-13 17:53:23 DEBUG Processing attribute `login` : value = user1
w2022-03-13 17:53:23 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-13 17:53:23 DEBUG Processing attribute `password` : value = user1
w2022-03-13 17:53:23 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-13 17:53:23 DEBUG Processing attribute `role` : value = USER
w2022-03-13 17:53:23 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-13 17:53:23 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#3]
w2022-03-13 17:53:23 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#4]
w2022-03-13 17:53:23 DEBUG Processing attribute `firstName` : value = user2
w2022-03-13 17:53:23 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-13 17:53:23 DEBUG Processing attribute `lastName` : value = user2
w2022-03-13 17:53:23 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-13 17:53:23 DEBUG Processing attribute `login` : value = user2
w2022-03-13 17:53:23 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-13 17:53:23 DEBUG Processing attribute `password` : value = user2
w2022-03-13 17:53:23 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-13 17:53:23 DEBUG Processing attribute `role` : value = USER
w2022-03-13 17:53:23 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-13 17:53:23 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#4]
w2022-03-13 17:53:23 TRACE Releasing statement [HikariProxyPreparedStatement@1192023146 wrapping select user0_.id as id1_2_, user0_.first_name as first_na2_2_, user0_.last_name as last_nam3_2_, user0_.login as login4_2_, user0_.password as password5_2_, user0_.role as role6_2_ from user user0_ 
 parameters=null]
w2022-03-13 17:53:23 TRACE Closing result set [HikariProxyResultSet@2100552760 wrapping org.sqlite.jdbc4.JDBC4ResultSet@1be7e996]
w2022-03-13 17:53:23 TRACE Closing prepared statement [HikariProxyPreparedStatement@1192023146 wrapping select user0_.id as id1_2_, user0_.first_name as first_na2_2_, user0_.last_name as last_nam3_2_, user0_.login as login4_2_, user0_.password as password5_2_, user0_.role as role6_2_ from user user0_ 
 parameters=null]
w2022-03-13 17:53:23 TRACE Starting after statement execution processing [ON_CLOSE]
w2022-03-13 17:53:23 TRACE Initializing non-lazy collections
w2022-03-13 17:53:23 DEBUG committing
w2022-03-13 17:53:23 TRACE ResourceLocalTransactionCoordinatorImpl#beforeCompletionCallback
w2022-03-13 17:53:23 TRACE SessionImpl#beforeTransactionCompletion()
w2022-03-13 17:53:23 TRACE LogicalConnection#beforeTransactionCompletion
w2022-03-13 17:53:23 TRACE SynchronizationRegistryStandardImpl.notifySynchronizationsBeforeTransactionCompletion
w2022-03-13 17:53:23 TRACE Preparing to commit transaction via JDBC Connection.commit()
w2022-03-13 17:53:23 TRACE Transaction committed via JDBC Connection.commit()
w2022-03-13 17:53:23 TRACE re-enabling auto-commit on JDBC Connection after completion of JDBC-based transaction
w2022-03-13 17:53:23 TRACE LogicalConnection#afterTransaction
w2022-03-13 17:53:23 TRACE Releasing JDBC resources
w2022-03-13 17:53:23 TRACE ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(true)
w2022-03-13 17:53:23 TRACE SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(3)
w2022-03-13 17:53:23 TRACE SessionImpl#afterTransactionCompletion(successful=true, delayed=false)
w2022-03-13 17:53:23 TRACE Closing session [295aae25-23f1-471c-8103-dcfcbe0331e9]
w2022-03-13 17:53:23 TRACE Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@1f17472a]
w2022-03-13 17:53:23 TRACE Releasing JDBC resources
w2022-03-13 17:53:23 TRACE Closing logical connection
w2022-03-13 17:53:23 TRACE Releasing JDBC resources
w2022-03-13 17:53:23 TRACE Logical connection closed
w2022-03-13 21:01:18 DEBUG Logging Provider: org.jboss.logging.Log4j2LoggerProvider
w2022-03-13 21:01:18 DEBUG PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@7aa52917
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/F:/java/project/helpdeskproject/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		ru.edu.helpdesk.entity.Comment
		ru.edu.helpdesk.entity.Ticket
		ru.edu.helpdesk.entity.User]
	Mapping files names []
	Properties []
w2022-03-13 21:01:18 DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
w2022-03-13 21:01:18 DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
w2022-03-13 21:01:18 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
w2022-03-13 21:01:18 INFO  HHH000412: Hibernate ORM core version 5.6.5.Final
w2022-03-13 21:01:18 DEBUG HHH000206: hibernate.properties not found
w2022-03-13 21:01:18 DEBUG Overriding existing service binding [org.hibernate.secure.spi.JaccService]
w2022-03-13 21:01:18 DEBUG Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
w2022-03-13 21:01:18 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
w2022-03-13 21:01:18 INFO  HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
w2022-03-13 21:01:18 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@10f110b0
w2022-03-13 21:01:18 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@10f110b0
w2022-03-13 21:01:18 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@10f110b0
w2022-03-13 21:01:18 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@144469d4
w2022-03-13 21:01:18 DEBUG Adding type registration true_false -> org.hibernate.type.TrueFalseType@7a137008
w2022-03-13 21:01:18 DEBUG Adding type registration yes_no -> org.hibernate.type.YesNoType@4a55ee67
w2022-03-13 21:01:18 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@58584489
w2022-03-13 21:01:18 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@58584489
w2022-03-13 21:01:18 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@58584489
w2022-03-13 21:01:18 DEBUG Adding type registration character -> org.hibernate.type.CharacterType@e4795c6
w2022-03-13 21:01:18 DEBUG Adding type registration char -> org.hibernate.type.CharacterType@e4795c6
w2022-03-13 21:01:18 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@e4795c6
w2022-03-13 21:01:18 DEBUG Adding type registration short -> org.hibernate.type.ShortType@1d2ac2bd
w2022-03-13 21:01:18 DEBUG Adding type registration short -> org.hibernate.type.ShortType@1d2ac2bd
w2022-03-13 21:01:18 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1d2ac2bd
w2022-03-13 21:01:18 DEBUG Adding type registration integer -> org.hibernate.type.IntegerType@3154ada8
w2022-03-13 21:01:18 DEBUG Adding type registration int -> org.hibernate.type.IntegerType@3154ada8
w2022-03-13 21:01:18 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3154ada8
w2022-03-13 21:01:18 DEBUG Adding type registration long -> org.hibernate.type.LongType@771f585e
w2022-03-13 21:01:18 DEBUG Adding type registration long -> org.hibernate.type.LongType@771f585e
w2022-03-13 21:01:18 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.LongType@771f585e
w2022-03-13 21:01:18 DEBUG Adding type registration float -> org.hibernate.type.FloatType@5d4d97e4
w2022-03-13 21:01:18 DEBUG Adding type registration float -> org.hibernate.type.FloatType@5d4d97e4
w2022-03-13 21:01:18 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5d4d97e4
w2022-03-13 21:01:18 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@343856c6
w2022-03-13 21:01:18 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@343856c6
w2022-03-13 21:01:18 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@343856c6
w2022-03-13 21:01:18 DEBUG Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2734edd9
w2022-03-13 21:01:18 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2734edd9
w2022-03-13 21:01:18 DEBUG Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7d7cc81b
w2022-03-13 21:01:18 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7d7cc81b
w2022-03-13 21:01:18 DEBUG Adding type registration string -> org.hibernate.type.StringType@27476983
w2022-03-13 21:01:18 DEBUG Adding type registration java.lang.String -> org.hibernate.type.StringType@27476983
w2022-03-13 21:01:18 DEBUG Adding type registration nstring -> org.hibernate.type.StringNVarcharType@58846dc
w2022-03-13 21:01:18 DEBUG Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@b9993e3
w2022-03-13 21:01:18 DEBUG Adding type registration url -> org.hibernate.type.UrlType@1662f1fe
w2022-03-13 21:01:18 DEBUG Adding type registration java.net.URL -> org.hibernate.type.UrlType@1662f1fe
w2022-03-13 21:01:18 DEBUG Adding type registration Duration -> org.hibernate.type.DurationType@7d4ed4f
w2022-03-13 21:01:18 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7d4ed4f
w2022-03-13 21:01:18 DEBUG Adding type registration Instant -> org.hibernate.type.InstantType@30ea9b69
w2022-03-13 21:01:18 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.InstantType@30ea9b69
w2022-03-13 21:01:18 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@585dd0cb
w2022-03-13 21:01:18 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@585dd0cb
w2022-03-13 21:01:18 DEBUG Adding type registration LocalDate -> org.hibernate.type.LocalDateType@286250b6
w2022-03-13 21:01:18 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@286250b6
w2022-03-13 21:01:18 DEBUG Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@4a5a3bcb
w2022-03-13 21:01:18 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@4a5a3bcb
w2022-03-13 21:01:18 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@abc86f
w2022-03-13 21:01:18 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@abc86f
w2022-03-13 21:01:18 DEBUG Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5e0879a5
w2022-03-13 21:01:18 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5e0879a5
w2022-03-13 21:01:18 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@144074f3
w2022-03-13 21:01:18 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@144074f3
w2022-03-13 21:01:18 DEBUG Adding type registration date -> org.hibernate.type.DateType@53db8590
w2022-03-13 21:01:18 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.DateType@53db8590
w2022-03-13 21:01:18 DEBUG Adding type registration time -> org.hibernate.type.TimeType@1a46b8e1
w2022-03-13 21:01:18 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1a46b8e1
w2022-03-13 21:01:18 DEBUG Adding type registration timestamp -> org.hibernate.type.TimestampType@1dc0a298
w2022-03-13 21:01:18 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1dc0a298
w2022-03-13 21:01:18 DEBUG Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1dc0a298
w2022-03-13 21:01:18 DEBUG Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7a3c16b8
w2022-03-13 21:01:18 DEBUG Adding type registration calendar -> org.hibernate.type.CalendarType@64d8c78e
w2022-03-13 21:01:18 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@64d8c78e
w2022-03-13 21:01:18 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@64d8c78e
w2022-03-13 21:01:18 DEBUG Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@341c59bc
w2022-03-13 21:01:18 DEBUG Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@25be6633
w2022-03-13 21:01:18 DEBUG Adding type registration locale -> org.hibernate.type.LocaleType@2ed72da6
w2022-03-13 21:01:18 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2ed72da6
w2022-03-13 21:01:18 DEBUG Adding type registration currency -> org.hibernate.type.CurrencyType@1945086b
w2022-03-13 21:01:18 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1945086b
w2022-03-13 21:01:18 DEBUG Adding type registration timezone -> org.hibernate.type.TimeZoneType@621e2d55
w2022-03-13 21:01:18 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@621e2d55
w2022-03-13 21:01:18 DEBUG Adding type registration class -> org.hibernate.type.ClassType@31b692f
w2022-03-13 21:01:18 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.ClassType@31b692f
w2022-03-13 21:01:18 DEBUG Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7f290b38
w2022-03-13 21:01:18 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7f290b38
w2022-03-13 21:01:18 DEBUG Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@39d6a5f5
w2022-03-13 21:01:18 DEBUG Adding type registration binary -> org.hibernate.type.BinaryType@1052f741
w2022-03-13 21:01:18 DEBUG Adding type registration byte[] -> org.hibernate.type.BinaryType@1052f741
w2022-03-13 21:01:18 DEBUG Adding type registration [B -> org.hibernate.type.BinaryType@1052f741
w2022-03-13 21:01:18 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4eed729
w2022-03-13 21:01:18 DEBUG Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4eed729
w2022-03-13 21:01:18 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4eed729
w2022-03-13 21:01:18 DEBUG Adding type registration row_version -> org.hibernate.type.RowVersionType@48e12761
w2022-03-13 21:01:18 DEBUG Adding type registration image -> org.hibernate.type.ImageType@53d314da
w2022-03-13 21:01:18 DEBUG Adding type registration characters -> org.hibernate.type.CharArrayType@238ee549
w2022-03-13 21:01:18 DEBUG Adding type registration char[] -> org.hibernate.type.CharArrayType@238ee549
w2022-03-13 21:01:18 DEBUG Adding type registration [C -> org.hibernate.type.CharArrayType@238ee549
w2022-03-13 21:01:18 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@23e09408
w2022-03-13 21:01:18 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@23e09408
w2022-03-13 21:01:18 DEBUG Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@23e09408
w2022-03-13 21:01:18 DEBUG Adding type registration text -> org.hibernate.type.TextType@37b0adc8
w2022-03-13 21:01:18 DEBUG Adding type registration ntext -> org.hibernate.type.NTextType@1d6fb26d
w2022-03-13 21:01:18 DEBUG Adding type registration blob -> org.hibernate.type.BlobType@68a6b9e7
w2022-03-13 21:01:18 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@68a6b9e7
w2022-03-13 21:01:18 DEBUG Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@14051bd5
w2022-03-13 21:01:18 DEBUG Adding type registration clob -> org.hibernate.type.ClobType@45681972
w2022-03-13 21:01:18 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@45681972
w2022-03-13 21:01:18 DEBUG Adding type registration nclob -> org.hibernate.type.NClobType@5f896340
w2022-03-13 21:01:18 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5f896340
w2022-03-13 21:01:18 DEBUG Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@51d766c1
w2022-03-13 21:01:18 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4feedeb2
w2022-03-13 21:01:18 DEBUG Adding type registration serializable -> org.hibernate.type.SerializableType@29e0a34
w2022-03-13 21:01:18 DEBUG Adding type registration object -> org.hibernate.type.ObjectType@5e191893
w2022-03-13 21:01:18 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5e191893
w2022-03-13 21:01:18 DEBUG Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@42d22f7d
w2022-03-13 21:01:18 DEBUG Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@54196a34
w2022-03-13 21:01:18 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4f81fe63
w2022-03-13 21:01:18 DEBUG Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@69bdc763
w2022-03-13 21:01:18 DEBUG Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3a47a4ee
w2022-03-13 21:01:18 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@25102158
w2022-03-13 21:01:18 DEBUG Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@65a2b17f
w2022-03-13 21:01:18 DEBUG Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@62a3f477
w2022-03-13 21:01:18 INFO  HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
w2022-03-13 21:01:18 DEBUG Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@675a3b0] into BootstrapContext; was [null]
w2022-03-13 21:01:18 DEBUG ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@675a3b0) [was null]
w2022-03-13 21:01:18 DEBUG Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@e312891] into BootstrapContext; was [null]
w2022-03-13 21:01:18 DEBUG Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@7163622a] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@30eec6a4]
w2022-03-13 21:01:18 DEBUG Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@675a3b0]
w2022-03-13 21:01:18 DEBUG ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@675a3b0]
w2022-03-13 21:01:18 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
w2022-03-13 21:01:18 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
w2022-03-13 21:01:18 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
w2022-03-13 21:01:18 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
w2022-03-13 21:01:18 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
w2022-03-13 21:01:18 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
w2022-03-13 21:01:18 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
w2022-03-13 21:01:18 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
w2022-03-13 21:01:18 DEBUG Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
w2022-03-13 21:01:18 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
w2022-03-13 21:01:18 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
w2022-03-13 21:01:18 DEBUG Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
w2022-03-13 21:01:18 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
w2022-03-13 21:01:18 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
w2022-03-13 21:01:18 DEBUG Database ->
       name : SQLite
    version : 3.36.0
      major : 3
      minor : 36
w2022-03-13 21:01:18 DEBUG Driver ->
       name : SQLite JDBC
    version : 3.36.0.3
      major : 3
      minor : 36
w2022-03-13 21:01:18 DEBUG JDBC version : 2.1
w2022-03-13 21:01:18 INFO  HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
w2022-03-13 21:01:18 DEBUG JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
w2022-03-13 21:01:18 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
w2022-03-13 21:01:18 DEBUG HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [2] less than 4
w2022-03-13 21:01:18 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5801e8d7] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@658d2efb]
w2022-03-13 21:01:18 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
w2022-03-13 21:01:18 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.Comment
w2022-03-13 21:01:18 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-13 21:01:18 DEBUG Import with entity name Comment
w2022-03-13 21:01:18 DEBUG Bind entity ru.edu.helpdesk.entity.Comment on table comment
w2022-03-13 21:01:18 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-13 21:01:18 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Comment] is safe
w2022-03-13 21:01:18 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Comment
w2022-03-13 21:01:18 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-13 21:01:18 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Comment:id]
w2022-03-13 21:01:18 DEBUG building SimpleValue for id
w2022-03-13 21:01:18 DEBUG Building property id
w2022-03-13 21:01:18 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-13 21:01:18 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=message, insertable=true, updatable=true, unique=false}
w2022-03-13 21:01:18 DEBUG MetadataSourceProcessor property message with lazy=false
w2022-03-13 21:01:18 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Comment:message]
w2022-03-13 21:01:18 DEBUG building SimpleValue for message
w2022-03-13 21:01:18 DEBUG Building property message
w2022-03-13 21:01:18 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-13 21:01:18 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=ticket, insertable=true, updatable=true, unique=false}
w2022-03-13 21:01:18 DEBUG Building property ticket
w2022-03-13 21:01:18 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-13 21:01:18 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=user, insertable=true, updatable=true, unique=false}
w2022-03-13 21:01:18 DEBUG Building property user
w2022-03-13 21:01:18 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.Ticket
w2022-03-13 21:01:18 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-13 21:01:18 DEBUG Import with entity name Ticket
w2022-03-13 21:01:18 DEBUG Bind entity ru.edu.helpdesk.entity.Ticket on table ticket
w2022-03-13 21:01:18 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-13 21:01:18 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Ticket] is safe
w2022-03-13 21:01:18 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Ticket
w2022-03-13 21:01:18 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-13 21:01:18 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:id]
w2022-03-13 21:01:18 DEBUG building SimpleValue for id
w2022-03-13 21:01:18 DEBUG Building property id
w2022-03-13 21:01:18 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-13 21:01:18 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-13 21:01:18 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=client, insertable=true, updatable=true, unique=false}
w2022-03-13 21:01:18 DEBUG Building property client
w2022-03-13 21:01:18 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=status, insertable=true, updatable=true, unique=false}
w2022-03-13 21:01:18 DEBUG MetadataSourceProcessor property status with lazy=false
w2022-03-13 21:01:18 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:status]
w2022-03-13 21:01:18 DEBUG building SimpleValue for status
w2022-03-13 21:01:18 DEBUG Building property status
w2022-03-13 21:01:18 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-13 21:01:18 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=support, insertable=true, updatable=true, unique=false}
w2022-03-13 21:01:18 DEBUG Building property support
w2022-03-13 21:01:18 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=title, insertable=true, updatable=true, unique=false}
w2022-03-13 21:01:18 DEBUG MetadataSourceProcessor property title with lazy=false
w2022-03-13 21:01:18 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:title]
w2022-03-13 21:01:18 DEBUG building SimpleValue for title
w2022-03-13 21:01:18 DEBUG Building property title
w2022-03-13 21:01:18 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.User
w2022-03-13 21:01:18 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-13 21:01:18 DEBUG Import with entity name User
w2022-03-13 21:01:18 DEBUG Bind entity ru.edu.helpdesk.entity.User on table user
w2022-03-13 21:01:18 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-13 21:01:18 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.User] is safe
w2022-03-13 21:01:18 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.User
w2022-03-13 21:01:18 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-13 21:01:18 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:id]
w2022-03-13 21:01:18 DEBUG building SimpleValue for id
w2022-03-13 21:01:18 DEBUG Building property id
w2022-03-13 21:01:18 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-13 21:01:18 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
w2022-03-13 21:01:18 DEBUG MetadataSourceProcessor property firstName with lazy=false
w2022-03-13 21:01:18 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:firstName]
w2022-03-13 21:01:18 DEBUG building SimpleValue for firstName
w2022-03-13 21:01:18 DEBUG Building property firstName
w2022-03-13 21:01:18 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
w2022-03-13 21:01:18 DEBUG MetadataSourceProcessor property lastName with lazy=false
w2022-03-13 21:01:18 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:lastName]
w2022-03-13 21:01:18 DEBUG building SimpleValue for lastName
w2022-03-13 21:01:18 DEBUG Building property lastName
w2022-03-13 21:01:18 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=login, insertable=true, updatable=true, unique=false}
w2022-03-13 21:01:18 DEBUG MetadataSourceProcessor property login with lazy=false
w2022-03-13 21:01:18 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:login]
w2022-03-13 21:01:18 DEBUG building SimpleValue for login
w2022-03-13 21:01:18 DEBUG Building property login
w2022-03-13 21:01:18 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
w2022-03-13 21:01:18 DEBUG MetadataSourceProcessor property password with lazy=false
w2022-03-13 21:01:18 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:password]
w2022-03-13 21:01:18 DEBUG building SimpleValue for password
w2022-03-13 21:01:18 DEBUG Building property password
w2022-03-13 21:01:18 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=role, insertable=true, updatable=true, unique=false}
w2022-03-13 21:01:18 DEBUG MetadataSourceProcessor property role with lazy=false
w2022-03-13 21:01:18 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:role]
w2022-03-13 21:01:18 DEBUG building SimpleValue for role
w2022-03-13 21:01:18 DEBUG Building property role
w2022-03-13 21:01:18 DEBUG Starting fillSimpleValue for id
w2022-03-13 21:01:18 DEBUG Starting fillSimpleValue for message
w2022-03-13 21:01:18 DEBUG Starting fillSimpleValue for id
w2022-03-13 21:01:18 DEBUG Starting fillSimpleValue for status
w2022-03-13 21:01:18 DEBUG Starting fillSimpleValue for title
w2022-03-13 21:01:18 DEBUG Starting fillSimpleValue for id
w2022-03-13 21:01:18 DEBUG Starting fillSimpleValue for firstName
w2022-03-13 21:01:18 DEBUG Starting fillSimpleValue for lastName
w2022-03-13 21:01:18 DEBUG Starting fillSimpleValue for login
w2022-03-13 21:01:18 DEBUG Starting fillSimpleValue for password
w2022-03-13 21:01:18 DEBUG Starting fillSimpleValue for role
w2022-03-13 21:01:18 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [comment]
w2022-03-13 21:01:18 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [ticket]
w2022-03-13 21:01:18 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [user]
w2022-03-13 21:01:18 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.Ticket
w2022-03-13 21:01:18 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-13 21:01:18 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-13 21:01:18 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-13 21:01:18 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.Ticket
w2022-03-13 21:01:18 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-13 21:01:18 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-13 21:01:18 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-13 21:01:18 DEBUG Building session factory
w2022-03-13 21:01:18 DEBUG SessionFactory name : null
w2022-03-13 21:01:18 DEBUG Automatic flush during beforeCompletion(): enabled
w2022-03-13 21:01:18 DEBUG Automatic session close at end of transaction: disabled
w2022-03-13 21:01:18 DEBUG Statistics: disabled
w2022-03-13 21:01:18 DEBUG Deleted entity synthetic identifier rollback: disabled
w2022-03-13 21:01:18 DEBUG Default entity-mode: pojo
w2022-03-13 21:01:18 DEBUG Check Nullability in Core (should be disabled when Bean Validation is on): enabled
w2022-03-13 21:01:18 DEBUG Allow initialization of lazy state outside session : disabled
w2022-03-13 21:01:18 DEBUG Using BatchFetchStyle : LEGACY
w2022-03-13 21:01:18 DEBUG Default batch fetch size: -1
w2022-03-13 21:01:18 DEBUG Maximum outer join fetch depth: null
w2022-03-13 21:01:18 DEBUG Default null ordering: NONE
w2022-03-13 21:01:18 DEBUG Order SQL updates by primary key: disabled
w2022-03-13 21:01:18 DEBUG Order SQL inserts for batching: disabled
w2022-03-13 21:01:18 DEBUG multi-tenancy strategy : NONE
w2022-03-13 21:01:18 DEBUG JTA Track by Thread: enabled
w2022-03-13 21:01:18 DEBUG Query language substitutions: {}
w2022-03-13 21:01:18 DEBUG Named query checking : enabled
w2022-03-13 21:01:18 DEBUG Second-level cache: disabled
w2022-03-13 21:01:18 DEBUG Second-level query cache: disabled
w2022-03-13 21:01:18 DEBUG Second-level query cache factory: null
w2022-03-13 21:01:18 DEBUG Second-level cache region prefix: null
w2022-03-13 21:01:18 DEBUG Optimize second-level cache for minimal puts: disabled
w2022-03-13 21:01:18 DEBUG Structured second-level cache entries: disabled
w2022-03-13 21:01:18 DEBUG Second-level cache direct-reference entries: disabled
w2022-03-13 21:01:18 DEBUG Automatic eviction of collection cache: disabled
w2022-03-13 21:01:18 DEBUG JDBC batch size: 1
w2022-03-13 21:01:18 DEBUG JDBC batch updates for versioned data: enabled
w2022-03-13 21:01:18 DEBUG Scrollable result sets: disabled
w2022-03-13 21:01:18 DEBUG Wrap result sets: disabled
w2022-03-13 21:01:18 DEBUG JDBC3 getGeneratedKeys(): enabled
w2022-03-13 21:01:18 DEBUG JDBC result set fetch size: null
w2022-03-13 21:01:18 DEBUG Connection release mode: ON_CLOSE
w2022-03-13 21:01:18 DEBUG Generate SQL with comments: disabled
w2022-03-13 21:01:18 DEBUG JPA compliance - query : disabled
w2022-03-13 21:01:18 DEBUG JPA compliance - closed-handling : disabled
w2022-03-13 21:01:18 DEBUG JPA compliance - lists : disabled
w2022-03-13 21:01:18 DEBUG JPA compliance - transactions : disabled
w2022-03-13 21:01:18 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-13 21:01:18 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-13 21:01:18 DEBUG Session factory constructed with filter configurations : {}
w2022-03-13 21:01:18 DEBUG Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=true, java.specification.version=1.8, file.encoding.pkg=sun.io, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@479c4e5d, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.SQLiteDialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\charsets.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\cldrdata.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\dnsns.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\jaccess.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\localedata.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\nashorn.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunec.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunmscapi.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\zipfs.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jce.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jfr.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jsse.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\management-agent.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\resources.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\rt.jar;F:\java\project\helpdeskproject\target\classes;C:\Users\snowp\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\2.6.4\spring-boot-starter-data-jpa-2.6.4.jar;C:\Users\snowp\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\2.6.4\spring-boot-starter-jdbc-2.6.4.jar;C:\Users\snowp\.m2\repository\com\zaxxer\HikariCP\4.0.3\HikariCP-4.0.3.jar;C:\Users\snowp\.m2\repository\org\springframework\spring-jdbc\5.3.16\spring-jdbc-5.3.16.jar;C:\Users\snowp\.m2\repository\jakarta\transaction\jakarta.transaction-api\1.3.3\jakarta.transaction-api-1.3.3.jar;C:\Users\snowp\.m2\repository\jakarta\persistence\jakarta.persistence-api\2.2.3\jakarta.persistence-api-2.2.3.jar;C:\Users\snowp\.m2\repository\org\hibernate\hibernate-core\5.6.5.Final\hibernate-core-5.6.5.Final.jar;C:\Users\snowp\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\snowp\.m2\repository\net\bytebuddy\byte-buddy\1.11.22\byte-buddy-1.11.22.jar;C:\Users\snowp\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\snowp\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\snowp\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\snowp\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\snowp\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.6\jaxb-runtime-2.3.6.jar;C:\Users\snowp\.m2\repository\org\glassfish\jaxb\txw2\2.3.6\txw2-2.3.6.jar;C:\Users\snowp\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.12\istack-commons-runtime-3.0.12.jar;C:\Users\snowp\.m2\repository\com\sun\activation\jakarta.activation\1.2.2\jakarta.activation-1.2.2.jar;C:\Users\snowp\.m2\repository\org\springframework\data\spring-data-jpa\2.6.2\spring-data-jpa-2.6.2.jar;C:\Users\snowp\.m2\repository\org\springframework\data\spring-data-commons\2.6.2\spring-data-commons-2.6.2.jar;C:\Users\snowp\.m2\repository\org\springframework\spring-orm\5.3.16\spring-orm-5.3.16.jar;C:\Users\snowp\.m2\repository\org\springframework\spring-context\5.3.16\spring-context-5.3.16.jar;C:\Users\snowp\.m2\repository\org\springframework\spring-tx\5.3.16\spring-tx-5.3.16.jar;C:\Users\snowp\.m2\repository\org\springframework\spring-beans\5.3.16\spring-beans-5.3.16.jar;C:\Users\snowp\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\snowp\.m2\repository\org\springframework\spring-aspects\5.3.16\spring-aspects-5.3.16.jar;C:\Users\snowp\.m2\repository\org\springframework\boot\spring-boot-starter-web\2.6.4\spring-boot-starter-web-2.6.4.jar;C:\Users\snowp\.m2\repository\org\springframework\boot\spring-boot-starter\2.6.4\spring-boot-starter-2.6.4.jar;C:\Users\snowp\.m2\repository\org\springframework\boot\spring-boot-starter-logging\2.6.4\spring-boot-starter-logging-2.6.4.jar;C:\Users\snowp\.m2\repository\ch\qos\logback\logback-classic\1.2.10\logback-classic-1.2.10.jar;C:\Users\snowp\.m2\repository\ch\qos\logback\logback-core\1.2.10\logback-core-1.2.10.jar;C:\Users\snowp\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.17.1\log4j-to-slf4j-2.17.1.jar;C:\Users\snowp\.m2\repository\org\slf4j\jul-to-slf4j\1.7.36\jul-to-slf4j-1.7.36.jar;C:\Users\snowp\.m2\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;C:\Users\snowp\.m2\repository\org\yaml\snakeyaml\1.29\snakeyaml-1.29.jar;C:\Users\snowp\.m2\repository\org\springframework\boot\spring-boot-starter-json\2.6.4\spring-boot-starter-json-2.6.4.jar;C:\Users\snowp\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.13.1\jackson-datatype-jdk8-2.13.1.jar;C:\Users\snowp\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.13.1\jackson-datatype-jsr310-2.13.1.jar;C:\Users\snowp\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.13.1\jackson-module-parameter-names-2.13.1.jar;C:\Users\snowp\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\2.6.4\spring-boot-starter-tomcat-2.6.4.jar;C:\Users\snowp\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.58\tomcat-embed-core-9.0.58.jar;C:\Users\snowp\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\9.0.58\tomcat-embed-el-9.0.58.jar;C:\Users\snowp\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.58\tomcat-embed-websocket-9.0.58.jar;C:\Users\snowp\.m2\repository\org\springframework\spring-web\5.3.16\spring-web-5.3.16.jar;C:\Users\snowp\.m2\repository\org\springframework\spring-webmvc\5.3.16\spring-webmvc-5.3.16.jar;C:\Users\snowp\.m2\repository\org\springframework\spring-expression\5.3.16\spring-expression-5.3.16.jar;C:\Users\snowp\.m2\repository\org\springframework\boot\spring-boot-devtools\2.6.4\spring-boot-devtools-2.6.4.jar;C:\Users\snowp\.m2\repository\org\springframework\boot\spring-boot\2.6.4\spring-boot-2.6.4.jar;C:\Users\snowp\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\2.6.4\spring-boot-autoconfigure-2.6.4.jar;C:\Users\snowp\.m2\repository\org\xerial\sqlite-jdbc\3.36.0.3\sqlite-jdbc-3.36.0.3.jar;C:\Users\snowp\.m2\repository\com\zsoltfabok\sqlite-dialect\1.0\sqlite-dialect-1.0.jar;C:\Users\snowp\.m2\repository\org\springframework\boot\spring-boot-starter-aop\2.6.2\spring-boot-starter-aop-2.6.2.jar;C:\Users\snowp\.m2\repository\org\springframework\spring-aop\5.3.16\spring-aop-5.3.16.jar;C:\Users\snowp\.m2\repository\org\aspectj\aspectjweaver\1.9.7\aspectjweaver-1.9.7.jar;C:\Users\snowp\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.3\jakarta.xml.bind-api-2.3.3.jar;C:\Users\snowp\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.2\jakarta.activation-api-1.2.2.jar;C:\Users\snowp\.m2\repository\org\springframework\spring-core\5.3.16\spring-core-5.3.16.jar;C:\Users\snowp\.m2\repository\org\springframework\spring-jcl\5.3.16\spring-jcl-5.3.16.jar;C:\Users\snowp\.m2\repository\org\projectlombok\lombok\1.18.22\lombok-1.18.22.jar;C:\Users\snowp\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\2.6.4\spring-boot-starter-thymeleaf-2.6.4.jar;C:\Users\snowp\.m2\repository\org\thymeleaf\thymeleaf-spring5\3.0.15.RELEASE\thymeleaf-spring5-3.0.15.RELEASE.jar;C:\Users\snowp\.m2\repository\org\thymeleaf\thymeleaf\3.0.15.RELEASE\thymeleaf-3.0.15.RELEASE.jar;C:\Users\snowp\.m2\repository\org\attoparser\attoparser\2.0.5.RELEASE\attoparser-2.0.5.RELEASE.jar;C:\Users\snowp\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\snowp\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-java8time\3.0.4.RELEASE\thymeleaf-extras-java8time-3.0.4.RELEASE.jar;C:\Users\snowp\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.1\jackson-databind-2.13.1.jar;C:\Users\snowp\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.1\jackson-annotations-2.13.1.jar;C:\Users\snowp\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.1\jackson-core-2.13.1.jar;C:\Users\snowp\.m2\repository\org\apache\logging\log4j\log4j-api\2.4.1\log4j-api-2.4.1.jar;C:\Users\snowp\.m2\repository\org\apache\logging\log4j\log4j-core\2.4.1\log4j-core-2.4.1.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.2\lib\idea_rt.jar, java.vm.vendor=Temurin, sun.arch.data.model=64, user.variant=, java.vendor.url=https://adoptium.net/, catalina.useNaming=false, user.timezone=Europe/Moscow, jakarta.persistence.sharedCache.mode=UNSPECIFIED, os.name=Windows 10, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), user.country=RU, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\bin, sun.java.command=ru.edu.helpdesk.HelpdeskApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@48708e83, com.sun.management.jmxremote=, javax.persistence.sharedCache.mode=UNSPECIFIED, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, user.home=C:\Users\snowp, user.language=ru, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre, file.separator=\, spring.output.ansi.enabled=always, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, sun.boot.class.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\resources.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\rt.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\sunrsasign.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jsse.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jce.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\charsets.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jfr.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\classes, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_312-b07, user.name=snowp, spring.jmx.enabled=true, path.separator=;, os.version=10.0, java.endorsed.dirs=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\endorsed, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=default, spring.beaninfo.ignore=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=C:\Users\snowp\AppData\Local\Temp\, catalina.home=C:\Users\snowp\AppData\Local\Temp\tomcat.8080.629409350242195005, java.version=1.8.0_312, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=F:\java\project\helpdeskproject, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=14096, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\snowp\AppData\Local\Temp\tomcat.8080.629409350242195005, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@217ee44e, java.library.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;"C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;";"C:\Program Files\apache-maven-3.8.4\bin;";C:\Program Files (x86)\Common Files\Intel\Shared Libraries\redist\intel64\compiler;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\dotnet\;C:\Program Files\Git\cmd;C:\Program Files\curl\curl-7.81.0-win64-mingw\bin;C:\Program Files\nodejs\;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot;C:\Users\snowp\AppData\Local\Microsoft\WindowsApps;C:\Users\snowp\AppData\Local\atom\bin;C:\Users\snowp\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2021.3\bin;C:\Users\snowp\AppData\Roaming\npm;C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.2\bin;., java.vendor=Temurin, java.vm.info=mixed mode, java.vm.version=25.312-b07, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, java.ext.dirs=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, hibernate.connection.datasource=HikariDataSource (HikariPool-1), hibernate.hbm2ddl.import_files=data/import.sql, java.class.version=52.0}
w2022-03-13 21:01:18 DEBUG Skipping JACC integration as it was not enabled
w2022-03-13 21:01:18 DEBUG Using ORDINAL-based conversion for Enum ru.edu.helpdesk.entity.UserRole
w2022-03-13 21:01:18 DEBUG Using ORDINAL-based conversion for Enum ru.edu.helpdesk.entity.TicketStatus
w2022-03-13 21:01:18 DEBUG Instantiated session factory
w2022-03-13 21:01:18 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5801e8d7] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@730f7a6d]
w2022-03-13 21:01:18 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.User] is safe
w2022-03-13 21:01:18 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.User
w2022-03-13 21:01:18 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-13 21:01:18 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-13 21:01:18 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-13 21:01:18 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-13 21:01:18 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Ticket] is safe
w2022-03-13 21:01:18 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Ticket
w2022-03-13 21:01:18 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-13 21:01:18 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-13 21:01:18 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-13 21:01:18 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-13 21:01:18 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-13 21:01:18 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-13 21:01:18 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-13 21:01:18 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-13 21:01:18 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Comment] is safe
w2022-03-13 21:01:18 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Comment
w2022-03-13 21:01:18 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-13 21:01:18 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-13 21:01:18 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-13 21:01:18 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-13 21:01:18 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.User
w2022-03-13 21:01:18 DEBUG  Version select: select id from user where id =?
w2022-03-13 21:01:18 DEBUG  Snapshot select: select user_.id, user_.first_name as first_na2_2_, user_.last_name as last_nam3_2_, user_.login as login4_2_, user_.password as password5_2_, user_.role as role6_2_ from user user_ where user_.id=?
w2022-03-13 21:01:18 DEBUG  Insert 0: insert into user (first_name, last_name, login, password, role, id) values (?, ?, ?, ?, ?, ?)
w2022-03-13 21:01:18 DEBUG  Update 0: update user set first_name=?, last_name=?, login=?, password=?, role=? where id=?
w2022-03-13 21:01:18 DEBUG  Delete 0: delete from user where id=?
w2022-03-13 21:01:18 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e167d36]
w2022-03-13 21:01:18 DEBUG Visiting attribute path : firstName
w2022-03-13 21:01:18 DEBUG Visiting attribute path : lastName
w2022-03-13 21:01:18 DEBUG Visiting attribute path : login
w2022-03-13 21:01:18 DEBUG Visiting attribute path : password
w2022-03-13 21:01:18 DEBUG Visiting attribute path : role
w2022-03-13 21:01:18 DEBUG Building LoadPlan...
w2022-03-13 21:01:18 DEBUG processing queryspace <gen:0>
w2022-03-13 21:01:18 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.User)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

w2022-03-13 21:01:18 DEBUG Static select for entity ru.edu.helpdesk.entity.User [NONE]: select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-13 21:01:18 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.Ticket
w2022-03-13 21:01:18 DEBUG  Version select: select id from ticket where id =?
w2022-03-13 21:01:18 DEBUG  Snapshot select: select ticket_.id, ticket_.client_id as client_i4_1_, ticket_.status as status2_1_, ticket_.support_id as support_5_1_, ticket_.title as title3_1_ from ticket ticket_ where ticket_.id=?
w2022-03-13 21:01:18 DEBUG  Insert 0: insert into ticket (client_id, status, support_id, title, id) values (?, ?, ?, ?, ?)
w2022-03-13 21:01:18 DEBUG  Update 0: update ticket set client_id=?, status=?, support_id=?, title=? where id=?
w2022-03-13 21:01:18 DEBUG  Delete 0: delete from ticket where id=?
w2022-03-13 21:01:18 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20efb80d]
w2022-03-13 21:01:18 DEBUG Visiting attribute path : client
w2022-03-13 21:01:18 DEBUG Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@617c2005]
w2022-03-13 21:01:18 DEBUG Visiting attribute path : client.firstName
w2022-03-13 21:01:18 DEBUG Visiting attribute path : client.lastName
w2022-03-13 21:01:18 DEBUG Visiting attribute path : client.login
w2022-03-13 21:01:18 DEBUG Visiting attribute path : client.password
w2022-03-13 21:01:18 DEBUG Visiting attribute path : client.role
w2022-03-13 21:01:18 DEBUG Visiting attribute path : status
w2022-03-13 21:01:18 DEBUG Visiting attribute path : support
w2022-03-13 21:01:18 DEBUG Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f00db11]
w2022-03-13 21:01:18 DEBUG Visiting attribute path : support.firstName
w2022-03-13 21:01:18 DEBUG Visiting attribute path : support.lastName
w2022-03-13 21:01:18 DEBUG Visiting attribute path : support.login
w2022-03-13 21:01:18 DEBUG Visiting attribute path : support.password
w2022-03-13 21:01:18 DEBUG Visiting attribute path : support.role
w2022-03-13 21:01:18 DEBUG Visiting attribute path : title
w2022-03-13 21:01:18 DEBUG Building LoadPlan...
w2022-03-13 21:01:18 DEBUG processing queryspace <gen:0>
w2022-03-13 21:01:18 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.Ticket)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.Ticket, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.Ticket)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:1>, path=ru.edu.helpdesk.entity.Ticket.client)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:2>, path=ru.edu.helpdesk.entity.Ticket.support)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.Ticket)
          - SQL table alias mapping - ticket0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(client)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
          - JOIN (JoinDefinedByMetadata(support)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user2_
                - alias suffix - 2_
                - suffixed key columns - {id1_2_2_}

w2022-03-13 21:01:18 DEBUG Static select for entity ru.edu.helpdesk.entity.Ticket [NONE]: select ticket0_.id as id1_1_0_, ticket0_.client_id as client_i4_1_0_, ticket0_.status as status2_1_0_, ticket0_.support_id as support_5_1_0_, ticket0_.title as title3_1_0_, user1_.id as id1_2_1_, user1_.first_name as first_na2_2_1_, user1_.last_name as last_nam3_2_1_, user1_.login as login4_2_1_, user1_.password as password5_2_1_, user1_.role as role6_2_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id left outer join user user2_ on ticket0_.support_id=user2_.id where ticket0_.id=?
w2022-03-13 21:01:18 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.Comment
w2022-03-13 21:01:18 DEBUG  Version select: select id from comment where id =?
w2022-03-13 21:01:18 DEBUG  Snapshot select: select comment_.id, comment_.message as message2_0_, comment_.ticket_id as ticket_i3_0_, comment_.user_id as user_id4_0_ from comment comment_ where comment_.id=?
w2022-03-13 21:01:18 DEBUG  Insert 0: insert into comment (message, ticket_id, user_id, id) values (?, ?, ?, ?)
w2022-03-13 21:01:18 DEBUG  Update 0: update comment set message=?, ticket_id=?, user_id=? where id=?
w2022-03-13 21:01:18 DEBUG  Delete 0: delete from comment where id=?
w2022-03-13 21:01:18 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15d74d50]
w2022-03-13 21:01:18 DEBUG Visiting attribute path : message
w2022-03-13 21:01:18 DEBUG Visiting attribute path : ticket
w2022-03-13 21:01:18 DEBUG Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b7116de]
w2022-03-13 21:01:18 DEBUG Visiting attribute path : ticket.client
w2022-03-13 21:01:18 DEBUG Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67acb88d]
w2022-03-13 21:01:18 DEBUG Visiting attribute path : ticket.client.firstName
w2022-03-13 21:01:18 DEBUG Visiting attribute path : ticket.client.lastName
w2022-03-13 21:01:18 DEBUG Visiting attribute path : ticket.client.login
w2022-03-13 21:01:18 DEBUG Visiting attribute path : ticket.client.password
w2022-03-13 21:01:18 DEBUG Visiting attribute path : ticket.client.role
w2022-03-13 21:01:18 DEBUG Visiting attribute path : ticket.status
w2022-03-13 21:01:18 DEBUG Visiting attribute path : ticket.support
w2022-03-13 21:01:18 DEBUG Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2be23df2]
w2022-03-13 21:01:18 DEBUG Visiting attribute path : ticket.support.firstName
w2022-03-13 21:01:18 DEBUG Visiting attribute path : ticket.support.lastName
w2022-03-13 21:01:18 DEBUG Visiting attribute path : ticket.support.login
w2022-03-13 21:01:18 DEBUG Visiting attribute path : ticket.support.password
w2022-03-13 21:01:18 DEBUG Visiting attribute path : ticket.support.role
w2022-03-13 21:01:18 DEBUG Visiting attribute path : ticket.title
w2022-03-13 21:01:18 DEBUG Visiting attribute path : user
w2022-03-13 21:01:18 DEBUG Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17805d80]
w2022-03-13 21:01:18 DEBUG Visiting attribute path : user.firstName
w2022-03-13 21:01:18 DEBUG Visiting attribute path : user.lastName
w2022-03-13 21:01:18 DEBUG Visiting attribute path : user.login
w2022-03-13 21:01:18 DEBUG Visiting attribute path : user.password
w2022-03-13 21:01:18 DEBUG Visiting attribute path : user.role
w2022-03-13 21:01:18 DEBUG Building LoadPlan...
w2022-03-13 21:01:18 DEBUG processing queryspace <gen:0>
w2022-03-13 21:01:18 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.Comment)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.Comment, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.Comment)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.Ticket, querySpaceUid=<gen:1>, path=ru.edu.helpdesk.entity.Comment.ticket)
             - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:2>, path=ru.edu.helpdesk.entity.Comment.ticket.client)
             - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:3>, path=ru.edu.helpdesk.entity.Comment.ticket.support)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:4>, path=ru.edu.helpdesk.entity.Comment.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(ticket)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ru.edu.helpdesk.entity.Ticket)
                - SQL table alias mapping - ticket1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(client)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=ru.edu.helpdesk.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}
                - JOIN (JoinDefinedByMetadata(support)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=ru.edu.helpdesk.entity.User)
                      - SQL table alias mapping - user3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_2_3_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user4_
                - alias suffix - 4_
                - suffixed key columns - {id1_2_4_}

w2022-03-13 21:01:18 DEBUG Static select for entity ru.edu.helpdesk.entity.Comment [NONE]: select comment0_.id as id1_0_0_, comment0_.message as message2_0_0_, comment0_.ticket_id as ticket_i3_0_0_, comment0_.user_id as user_id4_0_0_, ticket1_.id as id1_1_1_, ticket1_.client_id as client_i4_1_1_, ticket1_.status as status2_1_1_, ticket1_.support_id as support_5_1_1_, ticket1_.title as title3_1_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_, user3_.id as id1_2_3_, user3_.first_name as first_na2_2_3_, user3_.last_name as last_nam3_2_3_, user3_.login as login4_2_3_, user3_.password as password5_2_3_, user3_.role as role6_2_3_, user4_.id as id1_2_4_, user4_.first_name as first_na2_2_4_, user4_.last_name as last_nam3_2_4_, user4_.login as login4_2_4_, user4_.password as password5_2_4_, user4_.role as role6_2_4_ from comment comment0_ left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id left outer join user user2_ on ticket1_.client_id=user2_.id left outer join user user3_ on ticket1_.support_id=user3_.id left outer join user user4_ on comment0_.user_id=user4_.id where comment0_.id=?
w2022-03-13 21:01:18 DEBUG drop table if exists comment
w2022-03-13 21:01:18 DEBUG drop table if exists hibernate_sequence
w2022-03-13 21:01:18 DEBUG drop table if exists ticket
w2022-03-13 21:01:18 DEBUG drop table if exists user
w2022-03-13 21:01:18 DEBUG create table comment (id bigint not null, message varchar(255) not null, ticket_id bigint, user_id bigint, primary key (id))
w2022-03-13 21:01:18 DEBUG create table hibernate_sequence (next_val bigint)
w2022-03-13 21:01:18 DEBUG insert into hibernate_sequence values ( 1 )
w2022-03-13 21:01:18 DEBUG create table ticket (id bigint not null, status integer, title varchar(255) not null, client_id bigint, support_id bigint, primary key (id))
w2022-03-13 21:01:19 DEBUG create table user (id bigint not null, first_name varchar(255), last_name varchar(255), login varchar(255) not null, password varchar(255) not null, role integer, primary key (id))
w2022-03-13 21:01:19 INFO  HHH000476: Executing import script 'file:/F:/java/project/helpdeskproject/target/classes/data/import.sql'
w2022-03-13 21:01:19 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (1, 'admin', 'admin', 'admin', 'admin', 0)
w2022-03-13 21:01:19 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (2, 'support', 'support', 'support', 'support', 1)
w2022-03-13 21:01:19 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (3, 'user1', 'user1', 'user1', 'user1', 2)
w2022-03-13 21:01:19 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (4, 'user2', 'user2', 'user2', 'user2', 2)
w2022-03-13 21:01:19 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (5, 1, 'Hello user1', 3, 2)
w2022-03-13 21:01:19 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (6, 0, 'Title2', 3, NULL)
w2022-03-13 21:01:19 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (7, 0, 'Message user2', 4, NULL)
w2022-03-13 21:01:19 DEBUG UPDATE hibernate_sequence SET next_val = 8 WHERE next_val = 1
w2022-03-13 21:01:19 INFO  HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
w2022-03-13 21:01:19 DEBUG Checking 0 named HQL queries
w2022-03-13 21:01:19 DEBUG Checking 0 named SQL queries
w2022-03-13 21:01:19 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-13 21:01:19 DEBUG Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5da0d739
w2022-03-13 21:01:19 DEBUG Registering SessionFactory: 648ac65b-02aa-4c08-a61f-4c8eac7b54f3 (<unnamed>)
w2022-03-13 21:01:19 DEBUG Not binding SessionFactory to JNDI, no JNDI name configured
w2022-03-13 21:01:19 DEBUG Statistics initialized [enabled=false]
w2022-03-13 21:01:19 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-13 21:01:19 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-13 21:01:19 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-13 21:01:23 DEBUG Rendered criteria query -> select generatedAlias0 from Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-13 21:01:23 DEBUG QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@275927b2
w2022-03-13 21:01:23 DEBUG parse() - HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-13 21:01:23 DEBUG throwQueryException() : no errors
w2022-03-13 21:01:23 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[IDENT] Node: 'ru'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'edu'
    |  |  |  |  |  |  \-[IDENT] Node: 'helpdesk'
    |  |  |  |  |  \-[IDENT] Node: 'entity'
    |  |  |  |  \-[IDENT] Node: 'Ticket'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'client'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias1'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

w2022-03-13 21:01:23 DEBUG select << begin [level=1, statement=select]
w2022-03-13 21:01:23 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.Ticket (generatedAlias0) -> ticket0_
w2022-03-13 21:01:23 DEBUG Resolved : generatedAlias0 -> ticket0_.id
w2022-03-13 21:01:23 DEBUG getDataType() : client -> org.hibernate.type.ManyToOneType(ru.edu.helpdesk.entity.User)
w2022-03-13 21:01:23 DEBUG dereferenceEntityJoin() : generating join for client in ru.edu.helpdesk.entity.Ticket (generatedAlias1) parent = [ {null} ]
w2022-03-13 21:01:23 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.User (generatedAlias1) -> user1_
w2022-03-13 21:01:23 DEBUG addJoinByPathMap() : generatedAlias0.client -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}
w2022-03-13 21:01:23 DEBUG Resolved : generatedAlias0.client -> ticket0_.client_id
w2022-03-13 21:01:23 DEBUG createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'user user1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Ticket.client,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}

w2022-03-13 21:01:23 DEBUG Resolved : generatedAlias0 -> ticket0_.id
w2022-03-13 21:01:23 DEBUG Resolved : generatedAlias1 -> user1_.id
w2022-03-13 21:01:23 DEBUG getDataType() : id -> org.hibernate.type.LongType@771f585e
w2022-03-13 21:01:23 DEBUG Resolved : generatedAlias1.id -> user1_.id
w2022-03-13 21:01:23 DEBUG select : finishing up [level=1, statement=select]
w2022-03-13 21:01:23 DEBUG processQuery() :  ( SELECT ( {select clause} ticket0_.id ) ( FromClause{level=1} ( ticket ticket0_ user user1_ ) ) ( where ( = ( user1_.id user1_.id id ) ? ) ) )
w2022-03-13 21:01:23 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Ticket): [ticket]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.Ticket)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.User)
          | path: generatedAlias1.id
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.User)
          |  | originalText: generatedAlias1
          |  \-IdentNode
          |    persister: null
          |    originalText: id
          \-ParameterNode

w2022-03-13 21:01:23 DEBUG Using FROM fragment [ticket ticket0_]
w2022-03-13 21:01:23 DEBUG Using FROM fragment [left outer join user user1_ on ticket0_.client_id=user1_.id]
w2022-03-13 21:01:23 DEBUG select >> end [level=1, statement=select]
w2022-03-13 21:01:23 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (ticket,user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'ticket0_.id as id1_1_' {alias=generatedAlias0, className=ru.edu.helpdesk.entity.Ticket, tableAlias=ticket0_}
    |  \-[SQL_TOKEN] SqlFragment: 'ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[ticket0_, user1_], fromElementsByPath=[generatedAlias0.client], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'ticket ticket0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=ticket,tableAlias=ticket0_,origin=null,columns={,className=ru.edu.helpdesk.entity.Ticket}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join user user1_ on ticket0_.client_id=user1_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Ticket.client,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user1_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias1.id,tableAlias=user1_,className=ru.edu.helpdesk.entity.User,classAlias=generatedAlias1}
          |  +-[ALIAS_REF] IdentNode: 'user1_.id' {alias=generatedAlias1, className=ru.edu.helpdesk.entity.User, tableAlias=user1_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LongType@771f585e}

w2022-03-13 21:01:23 DEBUG throwQueryException() : no errors
w2022-03-13 21:01:23 DEBUG HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-13 21:01:23 DEBUG SQL: select ticket0_.id as id1_1_, ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id where user1_.id=?
w2022-03-13 21:01:23 DEBUG throwQueryException() : no errors
w2022-03-13 21:01:23 DEBUG select ticket0_.id as id1_1_, ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id where user1_.id=?
w2022-03-14 23:54:27 DEBUG Logging Provider: org.jboss.logging.Log4j2LoggerProvider
w2022-03-14 23:54:27 DEBUG PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@7aa52917
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/%d0%9e%d0%bb%d1%8c%d0%b3%d0%b0/Desktop/Java/Project/Project1/helpdeskproject/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		ru.edu.helpdesk.entity.Comment
		ru.edu.helpdesk.entity.Ticket
		ru.edu.helpdesk.entity.User]
	Mapping files names []
	Properties []
w2022-03-14 23:54:27 DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
w2022-03-14 23:54:27 DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
w2022-03-14 23:54:27 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
w2022-03-14 23:54:27 INFO  HHH000412: Hibernate ORM core version 5.6.5.Final
w2022-03-14 23:54:27 DEBUG HHH000206: hibernate.properties not found
w2022-03-14 23:54:27 DEBUG Overriding existing service binding [org.hibernate.secure.spi.JaccService]
w2022-03-14 23:54:27 DEBUG Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
w2022-03-14 23:54:27 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
w2022-03-14 23:54:27 INFO  HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
w2022-03-14 23:54:27 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@307640e5
w2022-03-14 23:54:27 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@307640e5
w2022-03-14 23:54:27 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@307640e5
w2022-03-14 23:54:27 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1fdc5f26
w2022-03-14 23:54:27 DEBUG Adding type registration true_false -> org.hibernate.type.TrueFalseType@3f304302
w2022-03-14 23:54:27 DEBUG Adding type registration yes_no -> org.hibernate.type.YesNoType@2c3236bb
w2022-03-14 23:54:27 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@57c38ccc
w2022-03-14 23:54:27 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@57c38ccc
w2022-03-14 23:54:27 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@57c38ccc
w2022-03-14 23:54:27 DEBUG Adding type registration character -> org.hibernate.type.CharacterType@52754595
w2022-03-14 23:54:27 DEBUG Adding type registration char -> org.hibernate.type.CharacterType@52754595
w2022-03-14 23:54:27 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@52754595
w2022-03-14 23:54:27 DEBUG Adding type registration short -> org.hibernate.type.ShortType@5767df84
w2022-03-14 23:54:27 DEBUG Adding type registration short -> org.hibernate.type.ShortType@5767df84
w2022-03-14 23:54:27 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5767df84
w2022-03-14 23:54:27 DEBUG Adding type registration integer -> org.hibernate.type.IntegerType@2f75272
w2022-03-14 23:54:27 DEBUG Adding type registration int -> org.hibernate.type.IntegerType@2f75272
w2022-03-14 23:54:27 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2f75272
w2022-03-14 23:54:27 DEBUG Adding type registration long -> org.hibernate.type.LongType@3e5cc828
w2022-03-14 23:54:27 DEBUG Adding type registration long -> org.hibernate.type.LongType@3e5cc828
w2022-03-14 23:54:27 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.LongType@3e5cc828
w2022-03-14 23:54:27 DEBUG Adding type registration float -> org.hibernate.type.FloatType@3d749af3
w2022-03-14 23:54:27 DEBUG Adding type registration float -> org.hibernate.type.FloatType@3d749af3
w2022-03-14 23:54:27 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3d749af3
w2022-03-14 23:54:27 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@77ef0b48
w2022-03-14 23:54:27 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@77ef0b48
w2022-03-14 23:54:27 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@77ef0b48
w2022-03-14 23:54:27 DEBUG Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@675a3b0
w2022-03-14 23:54:27 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@675a3b0
w2022-03-14 23:54:27 DEBUG Adding type registration big_integer -> org.hibernate.type.BigIntegerType@e312891
w2022-03-14 23:54:27 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@e312891
w2022-03-14 23:54:27 DEBUG Adding type registration string -> org.hibernate.type.StringType@2db05e09
w2022-03-14 23:54:27 DEBUG Adding type registration java.lang.String -> org.hibernate.type.StringType@2db05e09
w2022-03-14 23:54:27 DEBUG Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7aa7e288
w2022-03-14 23:54:27 DEBUG Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@52498f72
w2022-03-14 23:54:27 DEBUG Adding type registration url -> org.hibernate.type.UrlType@325b19a0
w2022-03-14 23:54:27 DEBUG Adding type registration java.net.URL -> org.hibernate.type.UrlType@325b19a0
w2022-03-14 23:54:27 DEBUG Adding type registration Duration -> org.hibernate.type.DurationType@14b5cf30
w2022-03-14 23:54:27 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.DurationType@14b5cf30
w2022-03-14 23:54:27 DEBUG Adding type registration Instant -> org.hibernate.type.InstantType@5e1c1999
w2022-03-14 23:54:27 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5e1c1999
w2022-03-14 23:54:27 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@aff1609
w2022-03-14 23:54:27 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@aff1609
w2022-03-14 23:54:27 DEBUG Adding type registration LocalDate -> org.hibernate.type.LocalDateType@68840ef0
w2022-03-14 23:54:27 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@68840ef0
w2022-03-14 23:54:27 DEBUG Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@362edd0a
w2022-03-14 23:54:27 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@362edd0a
w2022-03-14 23:54:27 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5cac6599
w2022-03-14 23:54:27 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5cac6599
w2022-03-14 23:54:27 DEBUG Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2dc583b1
w2022-03-14 23:54:27 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2dc583b1
w2022-03-14 23:54:27 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@12cfd7ce
w2022-03-14 23:54:27 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@12cfd7ce
w2022-03-14 23:54:27 DEBUG Adding type registration date -> org.hibernate.type.DateType@6fc9a500
w2022-03-14 23:54:27 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.DateType@6fc9a500
w2022-03-14 23:54:27 DEBUG Adding type registration time -> org.hibernate.type.TimeType@1fa6d5ba
w2022-03-14 23:54:27 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1fa6d5ba
w2022-03-14 23:54:27 DEBUG Adding type registration timestamp -> org.hibernate.type.TimestampType@56af4131
w2022-03-14 23:54:27 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@56af4131
w2022-03-14 23:54:27 DEBUG Adding type registration java.util.Date -> org.hibernate.type.TimestampType@56af4131
w2022-03-14 23:54:27 DEBUG Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4d91e284
w2022-03-14 23:54:27 DEBUG Adding type registration calendar -> org.hibernate.type.CalendarType@9aa79fe
w2022-03-14 23:54:27 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@9aa79fe
w2022-03-14 23:54:27 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@9aa79fe
w2022-03-14 23:54:27 DEBUG Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7b7a578
w2022-03-14 23:54:27 DEBUG Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@71282e2c
w2022-03-14 23:54:27 DEBUG Adding type registration locale -> org.hibernate.type.LocaleType@65d6babf
w2022-03-14 23:54:27 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@65d6babf
w2022-03-14 23:54:27 DEBUG Adding type registration currency -> org.hibernate.type.CurrencyType@3920246c
w2022-03-14 23:54:27 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3920246c
w2022-03-14 23:54:27 DEBUG Adding type registration timezone -> org.hibernate.type.TimeZoneType@4a2d899d
w2022-03-14 23:54:27 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4a2d899d
w2022-03-14 23:54:27 DEBUG Adding type registration class -> org.hibernate.type.ClassType@56636bff
w2022-03-14 23:54:27 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.ClassType@56636bff
w2022-03-14 23:54:27 DEBUG Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@45f6867c
w2022-03-14 23:54:27 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@45f6867c
w2022-03-14 23:54:27 DEBUG Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@48e0fb9
w2022-03-14 23:54:27 DEBUG Adding type registration binary -> org.hibernate.type.BinaryType@5c1a9288
w2022-03-14 23:54:27 DEBUG Adding type registration byte[] -> org.hibernate.type.BinaryType@5c1a9288
w2022-03-14 23:54:27 DEBUG Adding type registration [B -> org.hibernate.type.BinaryType@5c1a9288
w2022-03-14 23:54:27 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6f82ee8f
w2022-03-14 23:54:27 DEBUG Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6f82ee8f
w2022-03-14 23:54:27 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6f82ee8f
w2022-03-14 23:54:27 DEBUG Adding type registration row_version -> org.hibernate.type.RowVersionType@387f0cf3
w2022-03-14 23:54:27 DEBUG Adding type registration image -> org.hibernate.type.ImageType@2bd9fab5
w2022-03-14 23:54:27 DEBUG Adding type registration characters -> org.hibernate.type.CharArrayType@166c4b22
w2022-03-14 23:54:27 DEBUG Adding type registration char[] -> org.hibernate.type.CharArrayType@166c4b22
w2022-03-14 23:54:27 DEBUG Adding type registration [C -> org.hibernate.type.CharArrayType@166c4b22
w2022-03-14 23:54:27 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@25dba8fa
w2022-03-14 23:54:27 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@25dba8fa
w2022-03-14 23:54:27 DEBUG Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@25dba8fa
w2022-03-14 23:54:27 DEBUG Adding type registration text -> org.hibernate.type.TextType@16df90a4
w2022-03-14 23:54:27 DEBUG Adding type registration ntext -> org.hibernate.type.NTextType@45b79354
w2022-03-14 23:54:27 DEBUG Adding type registration blob -> org.hibernate.type.BlobType@7fcecd37
w2022-03-14 23:54:27 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7fcecd37
w2022-03-14 23:54:27 DEBUG Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5b323b32
w2022-03-14 23:54:27 DEBUG Adding type registration clob -> org.hibernate.type.ClobType@6e56f008
w2022-03-14 23:54:27 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6e56f008
w2022-03-14 23:54:27 DEBUG Adding type registration nclob -> org.hibernate.type.NClobType@2bddec77
w2022-03-14 23:54:27 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2bddec77
w2022-03-14 23:54:27 DEBUG Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4af2f296
w2022-03-14 23:54:27 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@71d7bf95
w2022-03-14 23:54:27 DEBUG Adding type registration serializable -> org.hibernate.type.SerializableType@63521c8a
w2022-03-14 23:54:27 DEBUG Adding type registration object -> org.hibernate.type.ObjectType@531b111f
w2022-03-14 23:54:27 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@531b111f
w2022-03-14 23:54:27 DEBUG Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@50a36034
w2022-03-14 23:54:27 DEBUG Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5b3b10d6
w2022-03-14 23:54:27 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@14d585ad
w2022-03-14 23:54:27 DEBUG Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@373c1c50
w2022-03-14 23:54:27 DEBUG Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7cd57843
w2022-03-14 23:54:27 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7feb6aaf
w2022-03-14 23:54:27 DEBUG Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@47ab6012
w2022-03-14 23:54:27 DEBUG Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@10a22a2b
w2022-03-14 23:54:27 INFO  HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
w2022-03-14 23:54:27 DEBUG Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@21bfa056] into BootstrapContext; was [null]
w2022-03-14 23:54:27 DEBUG ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@21bfa056) [was null]
w2022-03-14 23:54:27 DEBUG Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@3734eeaf] into BootstrapContext; was [null]
w2022-03-14 23:54:27 DEBUG Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@39d34594] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@71541a8a]
w2022-03-14 23:54:27 DEBUG Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@21bfa056]
w2022-03-14 23:54:27 DEBUG ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@21bfa056]
w2022-03-14 23:54:27 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
w2022-03-14 23:54:27 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
w2022-03-14 23:54:27 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
w2022-03-14 23:54:27 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
w2022-03-14 23:54:27 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
w2022-03-14 23:54:27 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
w2022-03-14 23:54:27 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
w2022-03-14 23:54:27 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
w2022-03-14 23:54:27 DEBUG Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
w2022-03-14 23:54:27 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
w2022-03-14 23:54:27 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
w2022-03-14 23:54:27 DEBUG Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
w2022-03-14 23:54:27 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
w2022-03-14 23:54:27 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
w2022-03-14 23:54:28 DEBUG Database ->
       name : SQLite
    version : 3.36.0
      major : 3
      minor : 36
w2022-03-14 23:54:28 DEBUG Driver ->
       name : SQLite JDBC
    version : 3.36.0.3
      major : 3
      minor : 36
w2022-03-14 23:54:28 DEBUG JDBC version : 2.1
w2022-03-14 23:54:28 INFO  HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
w2022-03-14 23:54:28 DEBUG JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
w2022-03-14 23:54:28 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
w2022-03-14 23:54:28 DEBUG HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [2] less than 4
w2022-03-14 23:54:28 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@590a680e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@92258de]
w2022-03-14 23:54:28 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
w2022-03-14 23:54:28 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.Comment
w2022-03-14 23:54:28 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-14 23:54:28 DEBUG Import with entity name Comment
w2022-03-14 23:54:28 DEBUG Bind entity ru.edu.helpdesk.entity.Comment on table comment
w2022-03-14 23:54:28 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-14 23:54:28 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Comment] is safe
w2022-03-14 23:54:28 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Comment
w2022-03-14 23:54:28 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-14 23:54:28 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Comment:id]
w2022-03-14 23:54:28 DEBUG building SimpleValue for id
w2022-03-14 23:54:28 DEBUG Building property id
w2022-03-14 23:54:28 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-14 23:54:28 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=message, insertable=true, updatable=true, unique=false}
w2022-03-14 23:54:28 DEBUG MetadataSourceProcessor property message with lazy=false
w2022-03-14 23:54:28 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Comment:message]
w2022-03-14 23:54:28 DEBUG building SimpleValue for message
w2022-03-14 23:54:28 DEBUG Building property message
w2022-03-14 23:54:28 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-14 23:54:28 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=ticket, insertable=true, updatable=true, unique=false}
w2022-03-14 23:54:28 DEBUG Building property ticket
w2022-03-14 23:54:28 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-14 23:54:28 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=user, insertable=true, updatable=true, unique=false}
w2022-03-14 23:54:28 DEBUG Building property user
w2022-03-14 23:54:28 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.Ticket
w2022-03-14 23:54:28 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-14 23:54:28 DEBUG Import with entity name Ticket
w2022-03-14 23:54:28 DEBUG Bind entity ru.edu.helpdesk.entity.Ticket on table ticket
w2022-03-14 23:54:28 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-14 23:54:28 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Ticket] is safe
w2022-03-14 23:54:28 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Ticket
w2022-03-14 23:54:28 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-14 23:54:28 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:id]
w2022-03-14 23:54:28 DEBUG building SimpleValue for id
w2022-03-14 23:54:28 DEBUG Building property id
w2022-03-14 23:54:28 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-14 23:54:28 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-14 23:54:28 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=client, insertable=true, updatable=true, unique=false}
w2022-03-14 23:54:28 DEBUG Building property client
w2022-03-14 23:54:28 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=status, insertable=true, updatable=true, unique=false}
w2022-03-14 23:54:28 DEBUG MetadataSourceProcessor property status with lazy=false
w2022-03-14 23:54:28 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:status]
w2022-03-14 23:54:28 DEBUG building SimpleValue for status
w2022-03-14 23:54:28 DEBUG Building property status
w2022-03-14 23:54:28 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-14 23:54:28 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=support, insertable=true, updatable=true, unique=false}
w2022-03-14 23:54:28 DEBUG Building property support
w2022-03-14 23:54:28 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=title, insertable=true, updatable=true, unique=false}
w2022-03-14 23:54:28 DEBUG MetadataSourceProcessor property title with lazy=false
w2022-03-14 23:54:28 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:title]
w2022-03-14 23:54:28 DEBUG building SimpleValue for title
w2022-03-14 23:54:28 DEBUG Building property title
w2022-03-14 23:54:28 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.User
w2022-03-14 23:54:28 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-14 23:54:28 DEBUG Import with entity name User
w2022-03-14 23:54:28 DEBUG Bind entity ru.edu.helpdesk.entity.User on table user
w2022-03-14 23:54:28 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-14 23:54:28 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.User] is safe
w2022-03-14 23:54:28 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.User
w2022-03-14 23:54:28 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-14 23:54:28 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:id]
w2022-03-14 23:54:28 DEBUG building SimpleValue for id
w2022-03-14 23:54:28 DEBUG Building property id
w2022-03-14 23:54:28 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-14 23:54:28 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
w2022-03-14 23:54:28 DEBUG MetadataSourceProcessor property firstName with lazy=false
w2022-03-14 23:54:28 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:firstName]
w2022-03-14 23:54:28 DEBUG building SimpleValue for firstName
w2022-03-14 23:54:28 DEBUG Building property firstName
w2022-03-14 23:54:28 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
w2022-03-14 23:54:28 DEBUG MetadataSourceProcessor property lastName with lazy=false
w2022-03-14 23:54:28 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:lastName]
w2022-03-14 23:54:28 DEBUG building SimpleValue for lastName
w2022-03-14 23:54:28 DEBUG Building property lastName
w2022-03-14 23:54:28 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=login, insertable=true, updatable=true, unique=false}
w2022-03-14 23:54:28 DEBUG MetadataSourceProcessor property login with lazy=false
w2022-03-14 23:54:28 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:login]
w2022-03-14 23:54:28 DEBUG building SimpleValue for login
w2022-03-14 23:54:28 DEBUG Building property login
w2022-03-14 23:54:28 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
w2022-03-14 23:54:28 DEBUG MetadataSourceProcessor property password with lazy=false
w2022-03-14 23:54:28 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:password]
w2022-03-14 23:54:28 DEBUG building SimpleValue for password
w2022-03-14 23:54:28 DEBUG Building property password
w2022-03-14 23:54:28 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=role, insertable=true, updatable=true, unique=false}
w2022-03-14 23:54:28 DEBUG MetadataSourceProcessor property role with lazy=false
w2022-03-14 23:54:28 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:role]
w2022-03-14 23:54:28 DEBUG building SimpleValue for role
w2022-03-14 23:54:28 DEBUG Building property role
w2022-03-14 23:54:28 DEBUG Starting fillSimpleValue for id
w2022-03-14 23:54:28 DEBUG Starting fillSimpleValue for message
w2022-03-14 23:54:28 DEBUG Starting fillSimpleValue for id
w2022-03-14 23:54:28 DEBUG Starting fillSimpleValue for status
w2022-03-14 23:54:28 DEBUG Starting fillSimpleValue for title
w2022-03-14 23:54:28 DEBUG Starting fillSimpleValue for id
w2022-03-14 23:54:28 DEBUG Starting fillSimpleValue for firstName
w2022-03-14 23:54:28 DEBUG Starting fillSimpleValue for lastName
w2022-03-14 23:54:28 DEBUG Starting fillSimpleValue for login
w2022-03-14 23:54:28 DEBUG Starting fillSimpleValue for password
w2022-03-14 23:54:28 DEBUG Starting fillSimpleValue for role
w2022-03-14 23:54:28 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [comment]
w2022-03-14 23:54:28 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [ticket]
w2022-03-14 23:54:28 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [user]
w2022-03-14 23:54:28 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.Ticket
w2022-03-14 23:54:28 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-14 23:54:28 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-14 23:54:28 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-14 23:54:28 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.Ticket
w2022-03-14 23:54:28 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-14 23:54:28 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-14 23:54:28 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-14 23:54:28 DEBUG Building session factory
w2022-03-14 23:54:28 DEBUG SessionFactory name : null
w2022-03-14 23:54:28 DEBUG Automatic flush during beforeCompletion(): enabled
w2022-03-14 23:54:28 DEBUG Automatic session close at end of transaction: disabled
w2022-03-14 23:54:28 DEBUG Statistics: disabled
w2022-03-14 23:54:28 DEBUG Deleted entity synthetic identifier rollback: disabled
w2022-03-14 23:54:28 DEBUG Default entity-mode: pojo
w2022-03-14 23:54:28 DEBUG Check Nullability in Core (should be disabled when Bean Validation is on): enabled
w2022-03-14 23:54:28 DEBUG Allow initialization of lazy state outside session : disabled
w2022-03-14 23:54:28 DEBUG Using BatchFetchStyle : LEGACY
w2022-03-14 23:54:28 DEBUG Default batch fetch size: -1
w2022-03-14 23:54:28 DEBUG Maximum outer join fetch depth: null
w2022-03-14 23:54:28 DEBUG Default null ordering: NONE
w2022-03-14 23:54:28 DEBUG Order SQL updates by primary key: disabled
w2022-03-14 23:54:28 DEBUG Order SQL inserts for batching: disabled
w2022-03-14 23:54:28 DEBUG multi-tenancy strategy : NONE
w2022-03-14 23:54:28 DEBUG JTA Track by Thread: enabled
w2022-03-14 23:54:28 DEBUG Query language substitutions: {}
w2022-03-14 23:54:28 DEBUG Named query checking : enabled
w2022-03-14 23:54:28 DEBUG Second-level cache: disabled
w2022-03-14 23:54:28 DEBUG Second-level query cache: disabled
w2022-03-14 23:54:28 DEBUG Second-level query cache factory: null
w2022-03-14 23:54:28 DEBUG Second-level cache region prefix: null
w2022-03-14 23:54:28 DEBUG Optimize second-level cache for minimal puts: disabled
w2022-03-14 23:54:28 DEBUG Structured second-level cache entries: disabled
w2022-03-14 23:54:28 DEBUG Second-level cache direct-reference entries: disabled
w2022-03-14 23:54:28 DEBUG Automatic eviction of collection cache: disabled
w2022-03-14 23:54:28 DEBUG JDBC batch size: 1
w2022-03-14 23:54:28 DEBUG JDBC batch updates for versioned data: enabled
w2022-03-14 23:54:28 DEBUG Scrollable result sets: disabled
w2022-03-14 23:54:28 DEBUG Wrap result sets: disabled
w2022-03-14 23:54:28 DEBUG JDBC3 getGeneratedKeys(): enabled
w2022-03-14 23:54:28 DEBUG JDBC result set fetch size: null
w2022-03-14 23:54:28 DEBUG Connection release mode: ON_CLOSE
w2022-03-14 23:54:28 DEBUG Generate SQL with comments: disabled
w2022-03-14 23:54:28 DEBUG JPA compliance - query : disabled
w2022-03-14 23:54:28 DEBUG JPA compliance - closed-handling : disabled
w2022-03-14 23:54:28 DEBUG JPA compliance - lists : disabled
w2022-03-14 23:54:28 DEBUG JPA compliance - transactions : disabled
w2022-03-14 23:54:28 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-14 23:54:28 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-14 23:54:28 DEBUG Session factory constructed with filter configurations : {}
w2022-03-14 23:54:28 DEBUG Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=true, java.specification.version=1.8, file.encoding.pkg=sun.io, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@1c4fc05, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.SQLiteDialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\charsets.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\cldrdata.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\dnsns.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\jaccess.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\localedata.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\nashorn.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunec.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunmscapi.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\zipfs.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jce.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jfr.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jsse.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\management-agent.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\resources.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\rt.jar;C:\Users\Ольга\Desktop\Java\Project\Project1\helpdeskproject\target\classes;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\2.6.4\spring-boot-starter-data-jpa-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\2.6.4\spring-boot-starter-jdbc-2.6.4.jar;C:\Users\Ольга\.m2\repository\com\zaxxer\HikariCP\4.0.3\HikariCP-4.0.3.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-jdbc\5.3.16\spring-jdbc-5.3.16.jar;C:\Users\Ольга\.m2\repository\jakarta\transaction\jakarta.transaction-api\1.3.3\jakarta.transaction-api-1.3.3.jar;C:\Users\Ольга\.m2\repository\jakarta\persistence\jakarta.persistence-api\2.2.3\jakarta.persistence-api-2.2.3.jar;C:\Users\Ольга\.m2\repository\org\hibernate\hibernate-core\5.6.5.Final\hibernate-core-5.6.5.Final.jar;C:\Users\Ольга\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy\1.11.22\byte-buddy-1.11.22.jar;C:\Users\Ольга\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ольга\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Ольга\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.6\jaxb-runtime-2.3.6.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\txw2\2.3.6\txw2-2.3.6.jar;C:\Users\Ольга\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.12\istack-commons-runtime-3.0.12.jar;C:\Users\Ольга\.m2\repository\com\sun\activation\jakarta.activation\1.2.2\jakarta.activation-1.2.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\data\spring-data-jpa\2.6.2\spring-data-jpa-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\data\spring-data-commons\2.6.2\spring-data-commons-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-orm\5.3.16\spring-orm-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-context\5.3.16\spring-context-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-tx\5.3.16\spring-tx-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-beans\5.3.16\spring-beans-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-aspects\5.3.16\spring-aspects-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-security\2.6.4\spring-boot-starter-security-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter\2.6.4\spring-boot-starter-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-logging\2.6.4\spring-boot-starter-logging-2.6.4.jar;C:\Users\Ольга\.m2\repository\ch\qos\logback\logback-classic\1.2.10\logback-classic-1.2.10.jar;C:\Users\Ольга\.m2\repository\ch\qos\logback\logback-core\1.2.10\logback-core-1.2.10.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.17.1\log4j-to-slf4j-2.17.1.jar;C:\Users\Ольга\.m2\repository\org\slf4j\jul-to-slf4j\1.7.36\jul-to-slf4j-1.7.36.jar;C:\Users\Ольга\.m2\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;C:\Users\Ольга\.m2\repository\org\yaml\snakeyaml\1.29\snakeyaml-1.29.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-aop\5.3.16\spring-aop-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-config\5.6.2\spring-security-config-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-web\5.6.2\spring-security-web-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-expression\5.3.16\spring-expression-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-web\2.6.4\spring-boot-starter-web-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-json\2.6.4\spring-boot-starter-json-2.6.4.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.13.1\jackson-datatype-jdk8-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.13.1\jackson-datatype-jsr310-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.13.1\jackson-module-parameter-names-2.13.1.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\2.6.4\spring-boot-starter-tomcat-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.58\tomcat-embed-core-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\9.0.58\tomcat-embed-el-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.58\tomcat-embed-websocket-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-web\5.3.16\spring-web-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-webmvc\5.3.16\spring-webmvc-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-devtools\2.6.4\spring-boot-devtools-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot\2.6.4\spring-boot-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\2.6.4\spring-boot-autoconfigure-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\xerial\sqlite-jdbc\3.36.0.3\sqlite-jdbc-3.36.0.3.jar;C:\Users\Ольга\.m2\repository\com\zsoltfabok\sqlite-dialect\1.0\sqlite-dialect-1.0.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-aop\2.6.2\spring-boot-starter-aop-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\aspectj\aspectjweaver\1.9.7\aspectjweaver-1.9.7.jar;C:\Users\Ольга\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.3\jakarta.xml.bind-api-2.3.3.jar;C:\Users\Ольга\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.2\jakarta.activation-api-1.2.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-core\5.3.16\spring-core-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-jcl\5.3.16\spring-jcl-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-core\5.6.2\spring-security-core-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-crypto\5.6.2\spring-security-crypto-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\projectlombok\lombok\1.18.22\lombok-1.18.22.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\2.6.4\spring-boot-starter-thymeleaf-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\thymeleaf-spring5\3.0.15.RELEASE\thymeleaf-spring5-3.0.15.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\thymeleaf\3.0.15.RELEASE\thymeleaf-3.0.15.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\attoparser\attoparser\2.0.5.RELEASE\attoparser-2.0.5.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-java8time\3.0.4.RELEASE\thymeleaf-extras-java8time-3.0.4.RELEASE.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.1\jackson-databind-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.1\jackson-annotations-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.1\jackson-core-2.13.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-api\2.4.1\log4j-api-2.4.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-core\2.4.1\log4j-core-2.4.1.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.2\lib\idea_rt.jar, java.vm.vendor=Temurin, sun.arch.data.model=64, user.variant=, java.vendor.url=https://adoptium.net/, catalina.useNaming=false, user.timezone=Europe/Moscow, jakarta.persistence.sharedCache.mode=UNSPECIFIED, os.name=Windows 10, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), user.country=RU, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\bin, sun.java.command=ru.edu.helpdesk.HelpdeskApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@30d3d45f, com.sun.management.jmxremote=, javax.persistence.sharedCache.mode=UNSPECIFIED, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, user.home=C:\Users\Ольга, user.language=ru, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre, file.separator=\, spring.output.ansi.enabled=always, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, sun.boot.class.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\resources.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\rt.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\sunrsasign.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jsse.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jce.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\charsets.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jfr.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\classes, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_312-b07, user.name=Эльдорадо, spring.jmx.enabled=true, path.separator=;, os.version=10.0, java.endorsed.dirs=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\endorsed, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=default, spring.beaninfo.ignore=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=C:\Users\134E~1\AppData\Local\Temp\, catalina.home=C:\Users\Ольга\AppData\Local\Temp\tomcat.8080.1690764788964979220, java.version=1.8.0_312, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\Ольга\Desktop\Java\Project\Project1\helpdeskproject, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=9964, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\Ольга\AppData\Local\Temp\tomcat.8080.1690764788964979220, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@7528203a, java.library.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\windows\System32\OpenSSH\;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\Program Files\apache-maven-3.8.4\bin;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Ольга\AppData\Local\Microsoft\WindowsApps;C:\Users\Ольга\AppData\Local\Programs\Microsoft VS Code\bin;C:\SQLite;C:\Users\Ольга\AppData\Roaming\npm;C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.2\bin;;., java.vendor=Temurin, java.vm.info=mixed mode, java.vm.version=25.312-b07, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, java.ext.dirs=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext;C:\windows\Sun\Java\lib\ext, hibernate.connection.datasource=HikariDataSource (HikariPool-1), hibernate.hbm2ddl.import_files=data/import.sql, java.class.version=52.0}
w2022-03-14 23:54:28 DEBUG Skipping JACC integration as it was not enabled
w2022-03-14 23:54:28 DEBUG Using ORDINAL-based conversion for Enum ru.edu.helpdesk.entity.UserRole
w2022-03-14 23:54:28 DEBUG Using ORDINAL-based conversion for Enum ru.edu.helpdesk.entity.TicketStatus
w2022-03-14 23:54:28 DEBUG Instantiated session factory
w2022-03-14 23:54:28 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@590a680e] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@140fd2d5]
w2022-03-14 23:54:28 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.User] is safe
w2022-03-14 23:54:28 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.User
w2022-03-14 23:54:28 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-14 23:54:28 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-14 23:54:28 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-14 23:54:28 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-14 23:54:28 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Ticket] is safe
w2022-03-14 23:54:28 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Ticket
w2022-03-14 23:54:28 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-14 23:54:28 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-14 23:54:28 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-14 23:54:28 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-14 23:54:28 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-14 23:54:28 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-14 23:54:28 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-14 23:54:28 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-14 23:54:28 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Comment] is safe
w2022-03-14 23:54:28 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Comment
w2022-03-14 23:54:28 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-14 23:54:28 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-14 23:54:28 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-14 23:54:28 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-14 23:54:28 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.User
w2022-03-14 23:54:28 DEBUG  Version select: select id from user where id =?
w2022-03-14 23:54:28 DEBUG  Snapshot select: select user_.id, user_.first_name as first_na2_2_, user_.last_name as last_nam3_2_, user_.login as login4_2_, user_.password as password5_2_, user_.role as role6_2_ from user user_ where user_.id=?
w2022-03-14 23:54:28 DEBUG  Insert 0: insert into user (first_name, last_name, login, password, role, id) values (?, ?, ?, ?, ?, ?)
w2022-03-14 23:54:28 DEBUG  Update 0: update user set first_name=?, last_name=?, login=?, password=?, role=? where id=?
w2022-03-14 23:54:28 DEBUG  Delete 0: delete from user where id=?
w2022-03-14 23:54:28 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@197b09e4]
w2022-03-14 23:54:28 DEBUG Visiting attribute path : firstName
w2022-03-14 23:54:28 DEBUG Visiting attribute path : lastName
w2022-03-14 23:54:28 DEBUG Visiting attribute path : login
w2022-03-14 23:54:28 DEBUG Visiting attribute path : password
w2022-03-14 23:54:28 DEBUG Visiting attribute path : role
w2022-03-14 23:54:28 DEBUG Building LoadPlan...
w2022-03-14 23:54:28 DEBUG processing queryspace <gen:0>
w2022-03-14 23:54:28 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.User)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

w2022-03-14 23:54:28 DEBUG Static select for entity ru.edu.helpdesk.entity.User [NONE]: select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-14 23:54:28 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.Ticket
w2022-03-14 23:54:28 DEBUG  Version select: select id from ticket where id =?
w2022-03-14 23:54:28 DEBUG  Snapshot select: select ticket_.id, ticket_.client_id as client_i4_1_, ticket_.status as status2_1_, ticket_.support_id as support_5_1_, ticket_.title as title3_1_ from ticket ticket_ where ticket_.id=?
w2022-03-14 23:54:28 DEBUG  Insert 0: insert into ticket (client_id, status, support_id, title, id) values (?, ?, ?, ?, ?)
w2022-03-14 23:54:28 DEBUG  Update 0: update ticket set client_id=?, status=?, support_id=?, title=? where id=?
w2022-03-14 23:54:28 DEBUG  Delete 0: delete from ticket where id=?
w2022-03-14 23:54:28 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5fc598a1]
w2022-03-14 23:54:28 DEBUG Visiting attribute path : client
w2022-03-14 23:54:28 DEBUG Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6fe9a39d]
w2022-03-14 23:54:28 DEBUG Visiting attribute path : client.firstName
w2022-03-14 23:54:28 DEBUG Visiting attribute path : client.lastName
w2022-03-14 23:54:28 DEBUG Visiting attribute path : client.login
w2022-03-14 23:54:28 DEBUG Visiting attribute path : client.password
w2022-03-14 23:54:28 DEBUG Visiting attribute path : client.role
w2022-03-14 23:54:28 DEBUG Visiting attribute path : status
w2022-03-14 23:54:28 DEBUG Visiting attribute path : support
w2022-03-14 23:54:28 DEBUG Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14ea3ba4]
w2022-03-14 23:54:28 DEBUG Visiting attribute path : support.firstName
w2022-03-14 23:54:28 DEBUG Visiting attribute path : support.lastName
w2022-03-14 23:54:28 DEBUG Visiting attribute path : support.login
w2022-03-14 23:54:28 DEBUG Visiting attribute path : support.password
w2022-03-14 23:54:28 DEBUG Visiting attribute path : support.role
w2022-03-14 23:54:28 DEBUG Visiting attribute path : title
w2022-03-14 23:54:28 DEBUG Building LoadPlan...
w2022-03-14 23:54:28 DEBUG processing queryspace <gen:0>
w2022-03-14 23:54:28 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.Ticket)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.Ticket, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.Ticket)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:1>, path=ru.edu.helpdesk.entity.Ticket.client)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:2>, path=ru.edu.helpdesk.entity.Ticket.support)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.Ticket)
          - SQL table alias mapping - ticket0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(client)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
          - JOIN (JoinDefinedByMetadata(support)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user2_
                - alias suffix - 2_
                - suffixed key columns - {id1_2_2_}

w2022-03-14 23:54:28 DEBUG Static select for entity ru.edu.helpdesk.entity.Ticket [NONE]: select ticket0_.id as id1_1_0_, ticket0_.client_id as client_i4_1_0_, ticket0_.status as status2_1_0_, ticket0_.support_id as support_5_1_0_, ticket0_.title as title3_1_0_, user1_.id as id1_2_1_, user1_.first_name as first_na2_2_1_, user1_.last_name as last_nam3_2_1_, user1_.login as login4_2_1_, user1_.password as password5_2_1_, user1_.role as role6_2_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id left outer join user user2_ on ticket0_.support_id=user2_.id where ticket0_.id=?
w2022-03-14 23:54:28 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.Comment
w2022-03-14 23:54:28 DEBUG  Version select: select id from comment where id =?
w2022-03-14 23:54:28 DEBUG  Snapshot select: select comment_.id, comment_.message as message2_0_, comment_.ticket_id as ticket_i3_0_, comment_.user_id as user_id4_0_ from comment comment_ where comment_.id=?
w2022-03-14 23:54:28 DEBUG  Insert 0: insert into comment (message, ticket_id, user_id, id) values (?, ?, ?, ?)
w2022-03-14 23:54:28 DEBUG  Update 0: update comment set message=?, ticket_id=?, user_id=? where id=?
w2022-03-14 23:54:28 DEBUG  Delete 0: delete from comment where id=?
w2022-03-14 23:54:28 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31074106]
w2022-03-14 23:54:28 DEBUG Visiting attribute path : message
w2022-03-14 23:54:28 DEBUG Visiting attribute path : ticket
w2022-03-14 23:54:28 DEBUG Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@87fa319]
w2022-03-14 23:54:28 DEBUG Visiting attribute path : ticket.client
w2022-03-14 23:54:28 DEBUG Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ff3d915]
w2022-03-14 23:54:28 DEBUG Visiting attribute path : ticket.client.firstName
w2022-03-14 23:54:28 DEBUG Visiting attribute path : ticket.client.lastName
w2022-03-14 23:54:28 DEBUG Visiting attribute path : ticket.client.login
w2022-03-14 23:54:28 DEBUG Visiting attribute path : ticket.client.password
w2022-03-14 23:54:28 DEBUG Visiting attribute path : ticket.client.role
w2022-03-14 23:54:28 DEBUG Visiting attribute path : ticket.status
w2022-03-14 23:54:28 DEBUG Visiting attribute path : ticket.support
w2022-03-14 23:54:28 DEBUG Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9c87232]
w2022-03-14 23:54:28 DEBUG Visiting attribute path : ticket.support.firstName
w2022-03-14 23:54:28 DEBUG Visiting attribute path : ticket.support.lastName
w2022-03-14 23:54:28 DEBUG Visiting attribute path : ticket.support.login
w2022-03-14 23:54:28 DEBUG Visiting attribute path : ticket.support.password
w2022-03-14 23:54:28 DEBUG Visiting attribute path : ticket.support.role
w2022-03-14 23:54:28 DEBUG Visiting attribute path : ticket.title
w2022-03-14 23:54:28 DEBUG Visiting attribute path : user
w2022-03-14 23:54:28 DEBUG Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2113a0c3]
w2022-03-14 23:54:28 DEBUG Visiting attribute path : user.firstName
w2022-03-14 23:54:28 DEBUG Visiting attribute path : user.lastName
w2022-03-14 23:54:28 DEBUG Visiting attribute path : user.login
w2022-03-14 23:54:28 DEBUG Visiting attribute path : user.password
w2022-03-14 23:54:28 DEBUG Visiting attribute path : user.role
w2022-03-14 23:54:28 DEBUG Building LoadPlan...
w2022-03-14 23:54:28 DEBUG processing queryspace <gen:0>
w2022-03-14 23:54:28 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.Comment)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.Comment, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.Comment)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.Ticket, querySpaceUid=<gen:1>, path=ru.edu.helpdesk.entity.Comment.ticket)
             - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:2>, path=ru.edu.helpdesk.entity.Comment.ticket.client)
             - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:3>, path=ru.edu.helpdesk.entity.Comment.ticket.support)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:4>, path=ru.edu.helpdesk.entity.Comment.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(ticket)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ru.edu.helpdesk.entity.Ticket)
                - SQL table alias mapping - ticket1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(client)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=ru.edu.helpdesk.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}
                - JOIN (JoinDefinedByMetadata(support)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=ru.edu.helpdesk.entity.User)
                      - SQL table alias mapping - user3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_2_3_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user4_
                - alias suffix - 4_
                - suffixed key columns - {id1_2_4_}

w2022-03-14 23:54:28 DEBUG Static select for entity ru.edu.helpdesk.entity.Comment [NONE]: select comment0_.id as id1_0_0_, comment0_.message as message2_0_0_, comment0_.ticket_id as ticket_i3_0_0_, comment0_.user_id as user_id4_0_0_, ticket1_.id as id1_1_1_, ticket1_.client_id as client_i4_1_1_, ticket1_.status as status2_1_1_, ticket1_.support_id as support_5_1_1_, ticket1_.title as title3_1_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_, user3_.id as id1_2_3_, user3_.first_name as first_na2_2_3_, user3_.last_name as last_nam3_2_3_, user3_.login as login4_2_3_, user3_.password as password5_2_3_, user3_.role as role6_2_3_, user4_.id as id1_2_4_, user4_.first_name as first_na2_2_4_, user4_.last_name as last_nam3_2_4_, user4_.login as login4_2_4_, user4_.password as password5_2_4_, user4_.role as role6_2_4_ from comment comment0_ left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id left outer join user user2_ on ticket1_.client_id=user2_.id left outer join user user3_ on ticket1_.support_id=user3_.id left outer join user user4_ on comment0_.user_id=user4_.id where comment0_.id=?
w2022-03-14 23:54:28 DEBUG drop table if exists comment
w2022-03-14 23:54:28 DEBUG drop table if exists hibernate_sequence
w2022-03-14 23:54:28 DEBUG drop table if exists ticket
w2022-03-14 23:54:28 DEBUG drop table if exists user
w2022-03-14 23:54:28 DEBUG create table comment (id bigint not null, message varchar(255) not null, ticket_id bigint, user_id bigint, primary key (id))
w2022-03-14 23:54:28 DEBUG create table hibernate_sequence (next_val bigint)
w2022-03-14 23:54:28 DEBUG insert into hibernate_sequence values ( 1 )
w2022-03-14 23:54:28 DEBUG create table ticket (id bigint not null, status integer, title varchar(255) not null, client_id bigint, support_id bigint, primary key (id))
w2022-03-14 23:54:28 DEBUG create table user (id bigint not null, first_name varchar(255), last_name varchar(255), login varchar(255) not null, password varchar(255) not null, role integer, primary key (id))
w2022-03-14 23:54:28 INFO  HHH000476: Executing import script 'file:/C:/Users/%d0%9e%d0%bb%d1%8c%d0%b3%d0%b0/Desktop/Java/Project/Project1/helpdeskproject/target/classes/data/import.sql'
w2022-03-14 23:54:28 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (1, 'admin', 'admin', 'admin', 'admin', 0)
w2022-03-14 23:54:28 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (2, 'support', 'support', 'support', 'support', 1)
w2022-03-14 23:54:28 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (3, 'user1', 'user1', 'user1', 'user1', 2)
w2022-03-14 23:54:28 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (4, 'user2', 'user2', 'user2', 'user2', 2)
w2022-03-14 23:54:28 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (5, 1, 'Hello user1', 3, 2)
w2022-03-14 23:54:28 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (6, 0, 'Title2', 3, NULL)
w2022-03-14 23:54:28 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (7, 0, 'Message user2', 4, NULL)
w2022-03-14 23:54:28 DEBUG UPDATE hibernate_sequence SET next_val = 8 WHERE next_val = 1
w2022-03-14 23:54:28 INFO  HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
w2022-03-14 23:54:28 DEBUG Checking 0 named HQL queries
w2022-03-14 23:54:28 DEBUG Checking 0 named SQL queries
w2022-03-14 23:54:28 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-14 23:54:28 DEBUG Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4bc6d2ed
w2022-03-14 23:54:28 DEBUG Registering SessionFactory: 0eb11130-0673-42d3-9fdd-59894d04fb88 (<unnamed>)
w2022-03-14 23:54:28 DEBUG Not binding SessionFactory to JNDI, no JNDI name configured
w2022-03-14 23:54:29 DEBUG Statistics initialized [enabled=false]
w2022-03-14 23:54:29 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-14 23:54:29 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-14 23:54:29 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-14 23:54:29 DEBUG HHH000031: Closing
w2022-03-14 23:54:29 DEBUG Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@43f738b] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@140fd2d5]
w2022-03-14 23:54:29 DEBUG Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
w2022-03-14 23:54:29 DEBUG Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
w2022-03-15 00:02:13 DEBUG Logging Provider: org.jboss.logging.Log4j2LoggerProvider
w2022-03-15 00:02:13 DEBUG PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@25cab7d7
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/%d0%9e%d0%bb%d1%8c%d0%b3%d0%b0/Desktop/Java/Project/Project1/helpdeskproject/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		ru.edu.helpdesk.entity.Comment
		ru.edu.helpdesk.entity.Ticket
		ru.edu.helpdesk.entity.User]
	Mapping files names []
	Properties []
w2022-03-15 00:02:13 DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
w2022-03-15 00:02:13 DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
w2022-03-15 00:02:13 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
w2022-03-15 00:02:13 INFO  HHH000412: Hibernate ORM core version 5.6.5.Final
w2022-03-15 00:02:13 DEBUG HHH000206: hibernate.properties not found
w2022-03-15 00:02:13 DEBUG Overriding existing service binding [org.hibernate.secure.spi.JaccService]
w2022-03-15 00:02:13 DEBUG Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
w2022-03-15 00:02:13 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
w2022-03-15 00:02:13 INFO  HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
w2022-03-15 00:02:13 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@6fbef85e
w2022-03-15 00:02:13 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@6fbef85e
w2022-03-15 00:02:13 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6fbef85e
w2022-03-15 00:02:13 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3f846e29
w2022-03-15 00:02:13 DEBUG Adding type registration true_false -> org.hibernate.type.TrueFalseType@40d85673
w2022-03-15 00:02:13 DEBUG Adding type registration yes_no -> org.hibernate.type.YesNoType@437cd213
w2022-03-15 00:02:13 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@c95317e
w2022-03-15 00:02:13 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@c95317e
w2022-03-15 00:02:13 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@c95317e
w2022-03-15 00:02:13 DEBUG Adding type registration character -> org.hibernate.type.CharacterType@70e8c17b
w2022-03-15 00:02:13 DEBUG Adding type registration char -> org.hibernate.type.CharacterType@70e8c17b
w2022-03-15 00:02:13 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@70e8c17b
w2022-03-15 00:02:13 DEBUG Adding type registration short -> org.hibernate.type.ShortType@3fb0274d
w2022-03-15 00:02:13 DEBUG Adding type registration short -> org.hibernate.type.ShortType@3fb0274d
w2022-03-15 00:02:13 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3fb0274d
w2022-03-15 00:02:13 DEBUG Adding type registration integer -> org.hibernate.type.IntegerType@6148d952
w2022-03-15 00:02:13 DEBUG Adding type registration int -> org.hibernate.type.IntegerType@6148d952
w2022-03-15 00:02:13 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6148d952
w2022-03-15 00:02:13 DEBUG Adding type registration long -> org.hibernate.type.LongType@4d45695d
w2022-03-15 00:02:13 DEBUG Adding type registration long -> org.hibernate.type.LongType@4d45695d
w2022-03-15 00:02:13 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.LongType@4d45695d
w2022-03-15 00:02:13 DEBUG Adding type registration float -> org.hibernate.type.FloatType@56853462
w2022-03-15 00:02:13 DEBUG Adding type registration float -> org.hibernate.type.FloatType@56853462
w2022-03-15 00:02:13 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.FloatType@56853462
w2022-03-15 00:02:13 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@17f46133
w2022-03-15 00:02:13 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@17f46133
w2022-03-15 00:02:13 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@17f46133
w2022-03-15 00:02:13 DEBUG Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6ac7dd31
w2022-03-15 00:02:13 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6ac7dd31
w2022-03-15 00:02:13 DEBUG Adding type registration big_integer -> org.hibernate.type.BigIntegerType@37a9e5be
w2022-03-15 00:02:13 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@37a9e5be
w2022-03-15 00:02:13 DEBUG Adding type registration string -> org.hibernate.type.StringType@5ff06b87
w2022-03-15 00:02:13 DEBUG Adding type registration java.lang.String -> org.hibernate.type.StringType@5ff06b87
w2022-03-15 00:02:13 DEBUG Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1acbfa8f
w2022-03-15 00:02:13 DEBUG Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@29f9119d
w2022-03-15 00:02:13 DEBUG Adding type registration url -> org.hibernate.type.UrlType@7807cb1d
w2022-03-15 00:02:13 DEBUG Adding type registration java.net.URL -> org.hibernate.type.UrlType@7807cb1d
w2022-03-15 00:02:13 DEBUG Adding type registration Duration -> org.hibernate.type.DurationType@51f8b3b6
w2022-03-15 00:02:13 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.DurationType@51f8b3b6
w2022-03-15 00:02:13 DEBUG Adding type registration Instant -> org.hibernate.type.InstantType@2cf6ecbb
w2022-03-15 00:02:13 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2cf6ecbb
w2022-03-15 00:02:13 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@dd44af
w2022-03-15 00:02:13 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@dd44af
w2022-03-15 00:02:13 DEBUG Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4ee30d77
w2022-03-15 00:02:13 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4ee30d77
w2022-03-15 00:02:13 DEBUG Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@4f85fb63
w2022-03-15 00:02:13 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@4f85fb63
w2022-03-15 00:02:13 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2453dc6a
w2022-03-15 00:02:13 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2453dc6a
w2022-03-15 00:02:13 DEBUG Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@6c90e428
w2022-03-15 00:02:13 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@6c90e428
w2022-03-15 00:02:13 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@782a50fe
w2022-03-15 00:02:13 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@782a50fe
w2022-03-15 00:02:13 DEBUG Adding type registration date -> org.hibernate.type.DateType@d715e67
w2022-03-15 00:02:13 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.DateType@d715e67
w2022-03-15 00:02:13 DEBUG Adding type registration time -> org.hibernate.type.TimeType@43cd38dc
w2022-03-15 00:02:13 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.TimeType@43cd38dc
w2022-03-15 00:02:13 DEBUG Adding type registration timestamp -> org.hibernate.type.TimestampType@7d14f138
w2022-03-15 00:02:13 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7d14f138
w2022-03-15 00:02:13 DEBUG Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7d14f138
w2022-03-15 00:02:13 DEBUG Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@544cb884
w2022-03-15 00:02:13 DEBUG Adding type registration calendar -> org.hibernate.type.CalendarType@11007657
w2022-03-15 00:02:13 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@11007657
w2022-03-15 00:02:13 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@11007657
w2022-03-15 00:02:13 DEBUG Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@42c415a3
w2022-03-15 00:02:13 DEBUG Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@1573f955
w2022-03-15 00:02:13 DEBUG Adding type registration locale -> org.hibernate.type.LocaleType@50b238c2
w2022-03-15 00:02:13 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@50b238c2
w2022-03-15 00:02:13 DEBUG Adding type registration currency -> org.hibernate.type.CurrencyType@1decdd0e
w2022-03-15 00:02:13 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1decdd0e
w2022-03-15 00:02:13 DEBUG Adding type registration timezone -> org.hibernate.type.TimeZoneType@100c66d8
w2022-03-15 00:02:13 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@100c66d8
w2022-03-15 00:02:13 DEBUG Adding type registration class -> org.hibernate.type.ClassType@75298194
w2022-03-15 00:02:13 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.ClassType@75298194
w2022-03-15 00:02:13 DEBUG Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3a1013e9
w2022-03-15 00:02:13 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3a1013e9
w2022-03-15 00:02:13 DEBUG Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2537bc22
w2022-03-15 00:02:13 DEBUG Adding type registration binary -> org.hibernate.type.BinaryType@69c3e1d9
w2022-03-15 00:02:13 DEBUG Adding type registration byte[] -> org.hibernate.type.BinaryType@69c3e1d9
w2022-03-15 00:02:13 DEBUG Adding type registration [B -> org.hibernate.type.BinaryType@69c3e1d9
w2022-03-15 00:02:13 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@732f85ec
w2022-03-15 00:02:13 DEBUG Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@732f85ec
w2022-03-15 00:02:13 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@732f85ec
w2022-03-15 00:02:13 DEBUG Adding type registration row_version -> org.hibernate.type.RowVersionType@5fadf848
w2022-03-15 00:02:13 DEBUG Adding type registration image -> org.hibernate.type.ImageType@18f35069
w2022-03-15 00:02:13 DEBUG Adding type registration characters -> org.hibernate.type.CharArrayType@ef393c3
w2022-03-15 00:02:13 DEBUG Adding type registration char[] -> org.hibernate.type.CharArrayType@ef393c3
w2022-03-15 00:02:13 DEBUG Adding type registration [C -> org.hibernate.type.CharArrayType@ef393c3
w2022-03-15 00:02:13 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@34c702a6
w2022-03-15 00:02:13 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@34c702a6
w2022-03-15 00:02:13 DEBUG Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@34c702a6
w2022-03-15 00:02:13 DEBUG Adding type registration text -> org.hibernate.type.TextType@31dcbb27
w2022-03-15 00:02:13 DEBUG Adding type registration ntext -> org.hibernate.type.NTextType@6e0167f9
w2022-03-15 00:02:13 DEBUG Adding type registration blob -> org.hibernate.type.BlobType@545d44d9
w2022-03-15 00:02:13 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@545d44d9
w2022-03-15 00:02:13 DEBUG Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@30613667
w2022-03-15 00:02:13 DEBUG Adding type registration clob -> org.hibernate.type.ClobType@43826681
w2022-03-15 00:02:13 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@43826681
w2022-03-15 00:02:13 DEBUG Adding type registration nclob -> org.hibernate.type.NClobType@1f4694e3
w2022-03-15 00:02:13 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1f4694e3
w2022-03-15 00:02:13 DEBUG Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@340c53f3
w2022-03-15 00:02:13 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2c1f810b
w2022-03-15 00:02:13 DEBUG Adding type registration serializable -> org.hibernate.type.SerializableType@152f0c77
w2022-03-15 00:02:13 DEBUG Adding type registration object -> org.hibernate.type.ObjectType@7414e017
w2022-03-15 00:02:13 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7414e017
w2022-03-15 00:02:13 DEBUG Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3c0eb741
w2022-03-15 00:02:13 DEBUG Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6f49fc8f
w2022-03-15 00:02:13 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@46bd4e13
w2022-03-15 00:02:13 DEBUG Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@eeea268
w2022-03-15 00:02:13 DEBUG Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4713a84b
w2022-03-15 00:02:13 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@679e89a2
w2022-03-15 00:02:13 DEBUG Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4bff9e94
w2022-03-15 00:02:13 DEBUG Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@30799861
w2022-03-15 00:02:13 INFO  HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
w2022-03-15 00:02:13 DEBUG Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@3d040be] into BootstrapContext; was [null]
w2022-03-15 00:02:13 DEBUG ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@3d040be) [was null]
w2022-03-15 00:02:13 DEBUG Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@4465fe4a] into BootstrapContext; was [null]
w2022-03-15 00:02:13 DEBUG Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@2aeb74f0] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@57f78b7a]
w2022-03-15 00:02:13 DEBUG Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@3d040be]
w2022-03-15 00:02:13 DEBUG ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@3d040be]
w2022-03-15 00:02:13 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
w2022-03-15 00:02:13 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
w2022-03-15 00:02:13 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
w2022-03-15 00:02:13 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
w2022-03-15 00:02:13 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
w2022-03-15 00:02:13 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
w2022-03-15 00:02:13 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
w2022-03-15 00:02:13 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
w2022-03-15 00:02:13 DEBUG Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
w2022-03-15 00:02:13 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
w2022-03-15 00:02:13 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
w2022-03-15 00:02:13 DEBUG Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
w2022-03-15 00:02:13 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
w2022-03-15 00:02:13 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
w2022-03-15 00:02:13 DEBUG Database ->
       name : SQLite
    version : 3.36.0
      major : 3
      minor : 36
w2022-03-15 00:02:13 DEBUG Driver ->
       name : SQLite JDBC
    version : 3.36.0.3
      major : 3
      minor : 36
w2022-03-15 00:02:13 DEBUG JDBC version : 2.1
w2022-03-15 00:02:13 INFO  HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
w2022-03-15 00:02:13 DEBUG JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
w2022-03-15 00:02:13 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
w2022-03-15 00:02:13 DEBUG HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [2] less than 4
w2022-03-15 00:02:13 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@35c20fec] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@774edee6]
w2022-03-15 00:02:13 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
w2022-03-15 00:02:13 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.Comment
w2022-03-15 00:02:13 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 00:02:13 DEBUG Import with entity name Comment
w2022-03-15 00:02:13 DEBUG Bind entity ru.edu.helpdesk.entity.Comment on table comment
w2022-03-15 00:02:14 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 00:02:14 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Comment] is safe
w2022-03-15 00:02:14 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Comment
w2022-03-15 00:02:14 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 00:02:14 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Comment:id]
w2022-03-15 00:02:14 DEBUG building SimpleValue for id
w2022-03-15 00:02:14 DEBUG Building property id
w2022-03-15 00:02:14 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 00:02:14 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=message, insertable=true, updatable=true, unique=false}
w2022-03-15 00:02:14 DEBUG MetadataSourceProcessor property message with lazy=false
w2022-03-15 00:02:14 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Comment:message]
w2022-03-15 00:02:14 DEBUG building SimpleValue for message
w2022-03-15 00:02:14 DEBUG Building property message
w2022-03-15 00:02:14 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 00:02:14 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=ticket, insertable=true, updatable=true, unique=false}
w2022-03-15 00:02:14 DEBUG Building property ticket
w2022-03-15 00:02:14 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 00:02:14 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=user, insertable=true, updatable=true, unique=false}
w2022-03-15 00:02:14 DEBUG Building property user
w2022-03-15 00:02:14 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 00:02:14 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 00:02:14 DEBUG Import with entity name Ticket
w2022-03-15 00:02:14 DEBUG Bind entity ru.edu.helpdesk.entity.Ticket on table ticket
w2022-03-15 00:02:14 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 00:02:14 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Ticket] is safe
w2022-03-15 00:02:14 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Ticket
w2022-03-15 00:02:14 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 00:02:14 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:id]
w2022-03-15 00:02:14 DEBUG building SimpleValue for id
w2022-03-15 00:02:14 DEBUG Building property id
w2022-03-15 00:02:14 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 00:02:14 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 00:02:14 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=client, insertable=true, updatable=true, unique=false}
w2022-03-15 00:02:14 DEBUG Building property client
w2022-03-15 00:02:14 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=status, insertable=true, updatable=true, unique=false}
w2022-03-15 00:02:14 DEBUG MetadataSourceProcessor property status with lazy=false
w2022-03-15 00:02:14 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:status]
w2022-03-15 00:02:14 DEBUG building SimpleValue for status
w2022-03-15 00:02:14 DEBUG Building property status
w2022-03-15 00:02:14 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 00:02:14 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=support, insertable=true, updatable=true, unique=false}
w2022-03-15 00:02:14 DEBUG Building property support
w2022-03-15 00:02:14 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=title, insertable=true, updatable=true, unique=false}
w2022-03-15 00:02:14 DEBUG MetadataSourceProcessor property title with lazy=false
w2022-03-15 00:02:14 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:title]
w2022-03-15 00:02:14 DEBUG building SimpleValue for title
w2022-03-15 00:02:14 DEBUG Building property title
w2022-03-15 00:02:14 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.User
w2022-03-15 00:02:14 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 00:02:14 DEBUG Import with entity name User
w2022-03-15 00:02:14 DEBUG Bind entity ru.edu.helpdesk.entity.User on table user
w2022-03-15 00:02:14 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 00:02:14 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.User] is safe
w2022-03-15 00:02:14 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.User
w2022-03-15 00:02:14 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 00:02:14 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:id]
w2022-03-15 00:02:14 DEBUG building SimpleValue for id
w2022-03-15 00:02:14 DEBUG Building property id
w2022-03-15 00:02:14 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 00:02:14 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
w2022-03-15 00:02:14 DEBUG MetadataSourceProcessor property firstName with lazy=false
w2022-03-15 00:02:14 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:firstName]
w2022-03-15 00:02:14 DEBUG building SimpleValue for firstName
w2022-03-15 00:02:14 DEBUG Building property firstName
w2022-03-15 00:02:14 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
w2022-03-15 00:02:14 DEBUG MetadataSourceProcessor property lastName with lazy=false
w2022-03-15 00:02:14 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:lastName]
w2022-03-15 00:02:14 DEBUG building SimpleValue for lastName
w2022-03-15 00:02:14 DEBUG Building property lastName
w2022-03-15 00:02:14 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=login, insertable=true, updatable=true, unique=false}
w2022-03-15 00:02:14 DEBUG MetadataSourceProcessor property login with lazy=false
w2022-03-15 00:02:14 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:login]
w2022-03-15 00:02:14 DEBUG building SimpleValue for login
w2022-03-15 00:02:14 DEBUG Building property login
w2022-03-15 00:02:14 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
w2022-03-15 00:02:14 DEBUG MetadataSourceProcessor property password with lazy=false
w2022-03-15 00:02:14 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:password]
w2022-03-15 00:02:14 DEBUG building SimpleValue for password
w2022-03-15 00:02:14 DEBUG Building property password
w2022-03-15 00:02:14 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=role, insertable=true, updatable=true, unique=false}
w2022-03-15 00:02:14 DEBUG MetadataSourceProcessor property role with lazy=false
w2022-03-15 00:02:14 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:role]
w2022-03-15 00:02:14 DEBUG building SimpleValue for role
w2022-03-15 00:02:14 DEBUG Building property role
w2022-03-15 00:02:14 DEBUG Starting fillSimpleValue for id
w2022-03-15 00:02:14 DEBUG Starting fillSimpleValue for message
w2022-03-15 00:02:14 DEBUG Starting fillSimpleValue for id
w2022-03-15 00:02:14 DEBUG Starting fillSimpleValue for status
w2022-03-15 00:02:14 DEBUG Starting fillSimpleValue for title
w2022-03-15 00:02:14 DEBUG Starting fillSimpleValue for id
w2022-03-15 00:02:14 DEBUG Starting fillSimpleValue for firstName
w2022-03-15 00:02:14 DEBUG Starting fillSimpleValue for lastName
w2022-03-15 00:02:14 DEBUG Starting fillSimpleValue for login
w2022-03-15 00:02:14 DEBUG Starting fillSimpleValue for password
w2022-03-15 00:02:14 DEBUG Starting fillSimpleValue for role
w2022-03-15 00:02:14 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [comment]
w2022-03-15 00:02:14 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [ticket]
w2022-03-15 00:02:14 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [user]
w2022-03-15 00:02:14 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 00:02:14 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 00:02:14 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 00:02:14 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 00:02:14 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 00:02:14 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 00:02:14 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 00:02:14 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 00:02:14 DEBUG Building session factory
w2022-03-15 00:02:14 DEBUG SessionFactory name : null
w2022-03-15 00:02:14 DEBUG Automatic flush during beforeCompletion(): enabled
w2022-03-15 00:02:14 DEBUG Automatic session close at end of transaction: disabled
w2022-03-15 00:02:14 DEBUG Statistics: disabled
w2022-03-15 00:02:14 DEBUG Deleted entity synthetic identifier rollback: disabled
w2022-03-15 00:02:14 DEBUG Default entity-mode: pojo
w2022-03-15 00:02:14 DEBUG Check Nullability in Core (should be disabled when Bean Validation is on): enabled
w2022-03-15 00:02:14 DEBUG Allow initialization of lazy state outside session : disabled
w2022-03-15 00:02:14 DEBUG Using BatchFetchStyle : LEGACY
w2022-03-15 00:02:14 DEBUG Default batch fetch size: -1
w2022-03-15 00:02:14 DEBUG Maximum outer join fetch depth: null
w2022-03-15 00:02:14 DEBUG Default null ordering: NONE
w2022-03-15 00:02:14 DEBUG Order SQL updates by primary key: disabled
w2022-03-15 00:02:14 DEBUG Order SQL inserts for batching: disabled
w2022-03-15 00:02:14 DEBUG multi-tenancy strategy : NONE
w2022-03-15 00:02:14 DEBUG JTA Track by Thread: enabled
w2022-03-15 00:02:14 DEBUG Query language substitutions: {}
w2022-03-15 00:02:14 DEBUG Named query checking : enabled
w2022-03-15 00:02:14 DEBUG Second-level cache: disabled
w2022-03-15 00:02:14 DEBUG Second-level query cache: disabled
w2022-03-15 00:02:14 DEBUG Second-level query cache factory: null
w2022-03-15 00:02:14 DEBUG Second-level cache region prefix: null
w2022-03-15 00:02:14 DEBUG Optimize second-level cache for minimal puts: disabled
w2022-03-15 00:02:14 DEBUG Structured second-level cache entries: disabled
w2022-03-15 00:02:14 DEBUG Second-level cache direct-reference entries: disabled
w2022-03-15 00:02:14 DEBUG Automatic eviction of collection cache: disabled
w2022-03-15 00:02:14 DEBUG JDBC batch size: 1
w2022-03-15 00:02:14 DEBUG JDBC batch updates for versioned data: enabled
w2022-03-15 00:02:14 DEBUG Scrollable result sets: disabled
w2022-03-15 00:02:14 DEBUG Wrap result sets: disabled
w2022-03-15 00:02:14 DEBUG JDBC3 getGeneratedKeys(): enabled
w2022-03-15 00:02:14 DEBUG JDBC result set fetch size: null
w2022-03-15 00:02:14 DEBUG Connection release mode: ON_CLOSE
w2022-03-15 00:02:14 DEBUG Generate SQL with comments: disabled
w2022-03-15 00:02:14 DEBUG JPA compliance - query : disabled
w2022-03-15 00:02:14 DEBUG JPA compliance - closed-handling : disabled
w2022-03-15 00:02:14 DEBUG JPA compliance - lists : disabled
w2022-03-15 00:02:14 DEBUG JPA compliance - transactions : disabled
w2022-03-15 00:02:14 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 00:02:14 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 00:02:14 DEBUG Session factory constructed with filter configurations : {}
w2022-03-15 00:02:14 DEBUG Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=true, java.specification.version=1.8, file.encoding.pkg=sun.io, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@34832404, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.SQLiteDialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\charsets.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\cldrdata.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\dnsns.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\jaccess.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\localedata.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\nashorn.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunec.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunmscapi.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\zipfs.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jce.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jfr.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jsse.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\management-agent.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\resources.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\rt.jar;C:\Users\Ольга\Desktop\Java\Project\Project1\helpdeskproject\target\classes;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\2.6.4\spring-boot-starter-data-jpa-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\2.6.4\spring-boot-starter-jdbc-2.6.4.jar;C:\Users\Ольга\.m2\repository\com\zaxxer\HikariCP\4.0.3\HikariCP-4.0.3.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-jdbc\5.3.16\spring-jdbc-5.3.16.jar;C:\Users\Ольга\.m2\repository\jakarta\transaction\jakarta.transaction-api\1.3.3\jakarta.transaction-api-1.3.3.jar;C:\Users\Ольга\.m2\repository\jakarta\persistence\jakarta.persistence-api\2.2.3\jakarta.persistence-api-2.2.3.jar;C:\Users\Ольга\.m2\repository\org\hibernate\hibernate-core\5.6.5.Final\hibernate-core-5.6.5.Final.jar;C:\Users\Ольга\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy\1.11.22\byte-buddy-1.11.22.jar;C:\Users\Ольга\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ольга\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Ольга\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.6\jaxb-runtime-2.3.6.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\txw2\2.3.6\txw2-2.3.6.jar;C:\Users\Ольга\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.12\istack-commons-runtime-3.0.12.jar;C:\Users\Ольга\.m2\repository\com\sun\activation\jakarta.activation\1.2.2\jakarta.activation-1.2.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\data\spring-data-jpa\2.6.2\spring-data-jpa-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\data\spring-data-commons\2.6.2\spring-data-commons-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-orm\5.3.16\spring-orm-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-context\5.3.16\spring-context-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-tx\5.3.16\spring-tx-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-beans\5.3.16\spring-beans-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-aspects\5.3.16\spring-aspects-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-security\2.6.4\spring-boot-starter-security-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter\2.6.4\spring-boot-starter-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-logging\2.6.4\spring-boot-starter-logging-2.6.4.jar;C:\Users\Ольга\.m2\repository\ch\qos\logback\logback-classic\1.2.10\logback-classic-1.2.10.jar;C:\Users\Ольга\.m2\repository\ch\qos\logback\logback-core\1.2.10\logback-core-1.2.10.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.17.1\log4j-to-slf4j-2.17.1.jar;C:\Users\Ольга\.m2\repository\org\slf4j\jul-to-slf4j\1.7.36\jul-to-slf4j-1.7.36.jar;C:\Users\Ольга\.m2\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;C:\Users\Ольга\.m2\repository\org\yaml\snakeyaml\1.29\snakeyaml-1.29.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-aop\5.3.16\spring-aop-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-config\5.6.2\spring-security-config-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-web\5.6.2\spring-security-web-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-expression\5.3.16\spring-expression-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-web\2.6.4\spring-boot-starter-web-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-json\2.6.4\spring-boot-starter-json-2.6.4.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.13.1\jackson-datatype-jdk8-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.13.1\jackson-datatype-jsr310-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.13.1\jackson-module-parameter-names-2.13.1.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\2.6.4\spring-boot-starter-tomcat-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.58\tomcat-embed-core-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\9.0.58\tomcat-embed-el-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.58\tomcat-embed-websocket-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-web\5.3.16\spring-web-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-webmvc\5.3.16\spring-webmvc-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-devtools\2.6.4\spring-boot-devtools-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot\2.6.4\spring-boot-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\2.6.4\spring-boot-autoconfigure-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\xerial\sqlite-jdbc\3.36.0.3\sqlite-jdbc-3.36.0.3.jar;C:\Users\Ольга\.m2\repository\com\zsoltfabok\sqlite-dialect\1.0\sqlite-dialect-1.0.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-aop\2.6.2\spring-boot-starter-aop-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\aspectj\aspectjweaver\1.9.7\aspectjweaver-1.9.7.jar;C:\Users\Ольга\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.3\jakarta.xml.bind-api-2.3.3.jar;C:\Users\Ольга\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.2\jakarta.activation-api-1.2.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-core\5.3.16\spring-core-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-jcl\5.3.16\spring-jcl-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-core\5.6.2\spring-security-core-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-crypto\5.6.2\spring-security-crypto-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\projectlombok\lombok\1.18.22\lombok-1.18.22.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\2.6.4\spring-boot-starter-thymeleaf-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\thymeleaf-spring5\3.0.15.RELEASE\thymeleaf-spring5-3.0.15.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\thymeleaf\3.0.15.RELEASE\thymeleaf-3.0.15.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\attoparser\attoparser\2.0.5.RELEASE\attoparser-2.0.5.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-java8time\3.0.4.RELEASE\thymeleaf-extras-java8time-3.0.4.RELEASE.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.1\jackson-databind-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.1\jackson-annotations-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.1\jackson-core-2.13.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-api\2.4.1\log4j-api-2.4.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-core\2.4.1\log4j-core-2.4.1.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.2\lib\idea_rt.jar, java.vm.vendor=Temurin, sun.arch.data.model=64, user.variant=, java.vendor.url=https://adoptium.net/, catalina.useNaming=false, user.timezone=Europe/Moscow, jakarta.persistence.sharedCache.mode=UNSPECIFIED, os.name=Windows 10, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), user.country=RU, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\bin, sun.java.command=ru.edu.helpdesk.HelpdeskApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@49da0de3, com.sun.management.jmxremote=, javax.persistence.sharedCache.mode=UNSPECIFIED, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, user.home=C:\Users\Ольга, user.language=ru, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre, file.separator=\, spring.output.ansi.enabled=always, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, sun.boot.class.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\resources.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\rt.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\sunrsasign.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jsse.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jce.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\charsets.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jfr.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\classes, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_312-b07, user.name=Эльдорадо, spring.jmx.enabled=true, path.separator=;, os.version=10.0, java.endorsed.dirs=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\endorsed, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=default, spring.beaninfo.ignore=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=C:\Users\134E~1\AppData\Local\Temp\, catalina.home=C:\Users\Ольга\AppData\Local\Temp\tomcat.8080.8683975537120991915, java.version=1.8.0_312, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\Ольга\Desktop\Java\Project\Project1\helpdeskproject, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=13764, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\Ольга\AppData\Local\Temp\tomcat.8080.8683975537120991915, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@699eafc7, java.library.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\windows\System32\OpenSSH\;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\Program Files\apache-maven-3.8.4\bin;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Ольга\AppData\Local\Microsoft\WindowsApps;C:\Users\Ольга\AppData\Local\Programs\Microsoft VS Code\bin;C:\SQLite;C:\Users\Ольга\AppData\Roaming\npm;C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.2\bin;;., java.vendor=Temurin, java.vm.info=mixed mode, java.vm.version=25.312-b07, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, java.ext.dirs=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext;C:\windows\Sun\Java\lib\ext, hibernate.connection.datasource=HikariDataSource (HikariPool-1), hibernate.hbm2ddl.import_files=data/import.sql, java.class.version=52.0}
w2022-03-15 00:02:14 DEBUG Skipping JACC integration as it was not enabled
w2022-03-15 00:02:14 DEBUG Using ORDINAL-based conversion for Enum ru.edu.helpdesk.entity.UserRole
w2022-03-15 00:02:14 DEBUG Using ORDINAL-based conversion for Enum ru.edu.helpdesk.entity.TicketStatus
w2022-03-15 00:02:14 DEBUG Instantiated session factory
w2022-03-15 00:02:14 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@35c20fec] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@72af996b]
w2022-03-15 00:02:14 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.User] is safe
w2022-03-15 00:02:14 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.User
w2022-03-15 00:02:14 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:02:14 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:02:14 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:02:14 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:02:14 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Ticket] is safe
w2022-03-15 00:02:14 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Ticket
w2022-03-15 00:02:14 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:02:14 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:02:14 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:02:14 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:02:14 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:02:14 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:02:14 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:02:14 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:02:14 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Comment] is safe
w2022-03-15 00:02:14 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Comment
w2022-03-15 00:02:14 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:02:14 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:02:14 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:02:14 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:02:14 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.User
w2022-03-15 00:02:14 DEBUG  Version select: select id from user where id =?
w2022-03-15 00:02:14 DEBUG  Snapshot select: select user_.id, user_.first_name as first_na2_2_, user_.last_name as last_nam3_2_, user_.login as login4_2_, user_.password as password5_2_, user_.role as role6_2_ from user user_ where user_.id=?
w2022-03-15 00:02:14 DEBUG  Insert 0: insert into user (first_name, last_name, login, password, role, id) values (?, ?, ?, ?, ?, ?)
w2022-03-15 00:02:14 DEBUG  Update 0: update user set first_name=?, last_name=?, login=?, password=?, role=? where id=?
w2022-03-15 00:02:14 DEBUG  Delete 0: delete from user where id=?
w2022-03-15 00:02:14 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@646e264a]
w2022-03-15 00:02:14 DEBUG Visiting attribute path : firstName
w2022-03-15 00:02:14 DEBUG Visiting attribute path : lastName
w2022-03-15 00:02:14 DEBUG Visiting attribute path : login
w2022-03-15 00:02:14 DEBUG Visiting attribute path : password
w2022-03-15 00:02:14 DEBUG Visiting attribute path : role
w2022-03-15 00:02:14 DEBUG Building LoadPlan...
w2022-03-15 00:02:14 DEBUG processing queryspace <gen:0>
w2022-03-15 00:02:14 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.User)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

w2022-03-15 00:02:14 DEBUG Static select for entity ru.edu.helpdesk.entity.User [NONE]: select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 00:02:14 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.Ticket
w2022-03-15 00:02:14 DEBUG  Version select: select id from ticket where id =?
w2022-03-15 00:02:14 DEBUG  Snapshot select: select ticket_.id, ticket_.client_id as client_i4_1_, ticket_.status as status2_1_, ticket_.support_id as support_5_1_, ticket_.title as title3_1_ from ticket ticket_ where ticket_.id=?
w2022-03-15 00:02:14 DEBUG  Insert 0: insert into ticket (client_id, status, support_id, title, id) values (?, ?, ?, ?, ?)
w2022-03-15 00:02:14 DEBUG  Update 0: update ticket set client_id=?, status=?, support_id=?, title=? where id=?
w2022-03-15 00:02:14 DEBUG  Delete 0: delete from ticket where id=?
w2022-03-15 00:02:14 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ec0ec9d]
w2022-03-15 00:02:14 DEBUG Visiting attribute path : client
w2022-03-15 00:02:14 DEBUG Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6756ffe2]
w2022-03-15 00:02:14 DEBUG Visiting attribute path : client.firstName
w2022-03-15 00:02:14 DEBUG Visiting attribute path : client.lastName
w2022-03-15 00:02:14 DEBUG Visiting attribute path : client.login
w2022-03-15 00:02:14 DEBUG Visiting attribute path : client.password
w2022-03-15 00:02:14 DEBUG Visiting attribute path : client.role
w2022-03-15 00:02:14 DEBUG Visiting attribute path : status
w2022-03-15 00:02:14 DEBUG Visiting attribute path : support
w2022-03-15 00:02:14 DEBUG Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26f1fba8]
w2022-03-15 00:02:14 DEBUG Visiting attribute path : support.firstName
w2022-03-15 00:02:14 DEBUG Visiting attribute path : support.lastName
w2022-03-15 00:02:14 DEBUG Visiting attribute path : support.login
w2022-03-15 00:02:14 DEBUG Visiting attribute path : support.password
w2022-03-15 00:02:14 DEBUG Visiting attribute path : support.role
w2022-03-15 00:02:14 DEBUG Visiting attribute path : title
w2022-03-15 00:02:14 DEBUG Building LoadPlan...
w2022-03-15 00:02:14 DEBUG processing queryspace <gen:0>
w2022-03-15 00:02:14 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.Ticket)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.Ticket, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.Ticket)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:1>, path=ru.edu.helpdesk.entity.Ticket.client)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:2>, path=ru.edu.helpdesk.entity.Ticket.support)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.Ticket)
          - SQL table alias mapping - ticket0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(client)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
          - JOIN (JoinDefinedByMetadata(support)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user2_
                - alias suffix - 2_
                - suffixed key columns - {id1_2_2_}

w2022-03-15 00:02:14 DEBUG Static select for entity ru.edu.helpdesk.entity.Ticket [NONE]: select ticket0_.id as id1_1_0_, ticket0_.client_id as client_i4_1_0_, ticket0_.status as status2_1_0_, ticket0_.support_id as support_5_1_0_, ticket0_.title as title3_1_0_, user1_.id as id1_2_1_, user1_.first_name as first_na2_2_1_, user1_.last_name as last_nam3_2_1_, user1_.login as login4_2_1_, user1_.password as password5_2_1_, user1_.role as role6_2_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id left outer join user user2_ on ticket0_.support_id=user2_.id where ticket0_.id=?
w2022-03-15 00:02:14 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.Comment
w2022-03-15 00:02:14 DEBUG  Version select: select id from comment where id =?
w2022-03-15 00:02:14 DEBUG  Snapshot select: select comment_.id, comment_.message as message2_0_, comment_.ticket_id as ticket_i3_0_, comment_.user_id as user_id4_0_ from comment comment_ where comment_.id=?
w2022-03-15 00:02:14 DEBUG  Insert 0: insert into comment (message, ticket_id, user_id, id) values (?, ?, ?, ?)
w2022-03-15 00:02:14 DEBUG  Update 0: update comment set message=?, ticket_id=?, user_id=? where id=?
w2022-03-15 00:02:14 DEBUG  Delete 0: delete from comment where id=?
w2022-03-15 00:02:14 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39cd545a]
w2022-03-15 00:02:14 DEBUG Visiting attribute path : message
w2022-03-15 00:02:14 DEBUG Visiting attribute path : ticket
w2022-03-15 00:02:14 DEBUG Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a714126]
w2022-03-15 00:02:14 DEBUG Visiting attribute path : ticket.client
w2022-03-15 00:02:14 DEBUG Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22bfb794]
w2022-03-15 00:02:14 DEBUG Visiting attribute path : ticket.client.firstName
w2022-03-15 00:02:14 DEBUG Visiting attribute path : ticket.client.lastName
w2022-03-15 00:02:14 DEBUG Visiting attribute path : ticket.client.login
w2022-03-15 00:02:14 DEBUG Visiting attribute path : ticket.client.password
w2022-03-15 00:02:14 DEBUG Visiting attribute path : ticket.client.role
w2022-03-15 00:02:14 DEBUG Visiting attribute path : ticket.status
w2022-03-15 00:02:14 DEBUG Visiting attribute path : ticket.support
w2022-03-15 00:02:14 DEBUG Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e608c90]
w2022-03-15 00:02:14 DEBUG Visiting attribute path : ticket.support.firstName
w2022-03-15 00:02:14 DEBUG Visiting attribute path : ticket.support.lastName
w2022-03-15 00:02:14 DEBUG Visiting attribute path : ticket.support.login
w2022-03-15 00:02:14 DEBUG Visiting attribute path : ticket.support.password
w2022-03-15 00:02:14 DEBUG Visiting attribute path : ticket.support.role
w2022-03-15 00:02:14 DEBUG Visiting attribute path : ticket.title
w2022-03-15 00:02:14 DEBUG Visiting attribute path : user
w2022-03-15 00:02:14 DEBUG Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a478714]
w2022-03-15 00:02:14 DEBUG Visiting attribute path : user.firstName
w2022-03-15 00:02:14 DEBUG Visiting attribute path : user.lastName
w2022-03-15 00:02:14 DEBUG Visiting attribute path : user.login
w2022-03-15 00:02:14 DEBUG Visiting attribute path : user.password
w2022-03-15 00:02:14 DEBUG Visiting attribute path : user.role
w2022-03-15 00:02:14 DEBUG Building LoadPlan...
w2022-03-15 00:02:14 DEBUG processing queryspace <gen:0>
w2022-03-15 00:02:14 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.Comment)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.Comment, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.Comment)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.Ticket, querySpaceUid=<gen:1>, path=ru.edu.helpdesk.entity.Comment.ticket)
             - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:2>, path=ru.edu.helpdesk.entity.Comment.ticket.client)
             - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:3>, path=ru.edu.helpdesk.entity.Comment.ticket.support)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:4>, path=ru.edu.helpdesk.entity.Comment.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(ticket)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ru.edu.helpdesk.entity.Ticket)
                - SQL table alias mapping - ticket1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(client)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=ru.edu.helpdesk.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}
                - JOIN (JoinDefinedByMetadata(support)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=ru.edu.helpdesk.entity.User)
                      - SQL table alias mapping - user3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_2_3_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user4_
                - alias suffix - 4_
                - suffixed key columns - {id1_2_4_}

w2022-03-15 00:02:14 DEBUG Static select for entity ru.edu.helpdesk.entity.Comment [NONE]: select comment0_.id as id1_0_0_, comment0_.message as message2_0_0_, comment0_.ticket_id as ticket_i3_0_0_, comment0_.user_id as user_id4_0_0_, ticket1_.id as id1_1_1_, ticket1_.client_id as client_i4_1_1_, ticket1_.status as status2_1_1_, ticket1_.support_id as support_5_1_1_, ticket1_.title as title3_1_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_, user3_.id as id1_2_3_, user3_.first_name as first_na2_2_3_, user3_.last_name as last_nam3_2_3_, user3_.login as login4_2_3_, user3_.password as password5_2_3_, user3_.role as role6_2_3_, user4_.id as id1_2_4_, user4_.first_name as first_na2_2_4_, user4_.last_name as last_nam3_2_4_, user4_.login as login4_2_4_, user4_.password as password5_2_4_, user4_.role as role6_2_4_ from comment comment0_ left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id left outer join user user2_ on ticket1_.client_id=user2_.id left outer join user user3_ on ticket1_.support_id=user3_.id left outer join user user4_ on comment0_.user_id=user4_.id where comment0_.id=?
w2022-03-15 00:02:14 DEBUG drop table if exists comment
w2022-03-15 00:02:14 DEBUG drop table if exists hibernate_sequence
w2022-03-15 00:02:14 DEBUG drop table if exists ticket
w2022-03-15 00:02:14 DEBUG drop table if exists user
w2022-03-15 00:02:14 DEBUG create table comment (id bigint not null, message varchar(255) not null, ticket_id bigint, user_id bigint, primary key (id))
w2022-03-15 00:02:14 DEBUG create table hibernate_sequence (next_val bigint)
w2022-03-15 00:02:14 DEBUG insert into hibernate_sequence values ( 1 )
w2022-03-15 00:02:14 DEBUG create table ticket (id bigint not null, status integer, title varchar(255) not null, client_id bigint, support_id bigint, primary key (id))
w2022-03-15 00:02:14 DEBUG create table user (id bigint not null, first_name varchar(255), last_name varchar(255), login varchar(255) not null, password varchar(255) not null, role integer, primary key (id))
w2022-03-15 00:02:14 INFO  HHH000476: Executing import script 'file:/C:/Users/%d0%9e%d0%bb%d1%8c%d0%b3%d0%b0/Desktop/Java/Project/Project1/helpdeskproject/target/classes/data/import.sql'
w2022-03-15 00:02:14 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (1, 'admin', 'admin', 'admin', 'admin', 0)
w2022-03-15 00:02:14 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (2, 'support', 'support', 'support', 'support', 1)
w2022-03-15 00:02:14 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (3, 'user1', 'user1', 'user1', 'user1', 2)
w2022-03-15 00:02:14 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (4, 'user2', 'user2', 'user2', 'user2', 2)
w2022-03-15 00:02:14 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (5, 1, 'Hello user1', 3, 2)
w2022-03-15 00:02:14 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (6, 0, 'Title2', 3, NULL)
w2022-03-15 00:02:14 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (7, 0, 'Message user2', 4, NULL)
w2022-03-15 00:02:14 DEBUG UPDATE hibernate_sequence SET next_val = 8 WHERE next_val = 1
w2022-03-15 00:02:14 INFO  HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
w2022-03-15 00:02:14 DEBUG Checking 0 named HQL queries
w2022-03-15 00:02:14 DEBUG Checking 0 named SQL queries
w2022-03-15 00:02:14 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 00:02:14 DEBUG Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@403a5526
w2022-03-15 00:02:14 DEBUG Registering SessionFactory: b37c51e0-5ef8-46f2-bcf4-b8ffe2f285f7 (<unnamed>)
w2022-03-15 00:02:14 DEBUG Not binding SessionFactory to JNDI, no JNDI name configured
w2022-03-15 00:02:14 DEBUG Statistics initialized [enabled=false]
w2022-03-15 00:02:14 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 00:02:14 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 00:02:15 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 00:02:57 DEBUG Rendered criteria query -> select generatedAlias0 from Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 00:02:57 DEBUG QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@66414f68
w2022-03-15 00:02:57 DEBUG parse() - HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 00:02:57 DEBUG throwQueryException() : no errors
w2022-03-15 00:02:57 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[IDENT] Node: 'ru'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'edu'
    |  |  |  |  |  |  \-[IDENT] Node: 'helpdesk'
    |  |  |  |  |  \-[IDENT] Node: 'entity'
    |  |  |  |  \-[IDENT] Node: 'Ticket'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'client'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias1'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

w2022-03-15 00:02:57 DEBUG select << begin [level=1, statement=select]
w2022-03-15 00:02:57 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.Ticket (generatedAlias0) -> ticket0_
w2022-03-15 00:02:57 DEBUG Resolved : generatedAlias0 -> ticket0_.id
w2022-03-15 00:02:57 DEBUG getDataType() : client -> org.hibernate.type.ManyToOneType(ru.edu.helpdesk.entity.User)
w2022-03-15 00:02:57 DEBUG dereferenceEntityJoin() : generating join for client in ru.edu.helpdesk.entity.Ticket (generatedAlias1) parent = [ {null} ]
w2022-03-15 00:02:57 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.User (generatedAlias1) -> user1_
w2022-03-15 00:02:57 DEBUG addJoinByPathMap() : generatedAlias0.client -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}
w2022-03-15 00:02:57 DEBUG Resolved : generatedAlias0.client -> ticket0_.client_id
w2022-03-15 00:02:57 DEBUG createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'user user1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Ticket.client,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}

w2022-03-15 00:02:57 DEBUG Resolved : generatedAlias0 -> ticket0_.id
w2022-03-15 00:02:57 DEBUG Resolved : generatedAlias1 -> user1_.id
w2022-03-15 00:02:57 DEBUG getDataType() : id -> org.hibernate.type.LongType@4d45695d
w2022-03-15 00:02:57 DEBUG Resolved : generatedAlias1.id -> user1_.id
w2022-03-15 00:02:57 DEBUG select : finishing up [level=1, statement=select]
w2022-03-15 00:02:57 DEBUG processQuery() :  ( SELECT ( {select clause} ticket0_.id ) ( FromClause{level=1} ( ticket ticket0_ user user1_ ) ) ( where ( = ( user1_.id user1_.id id ) ? ) ) )
w2022-03-15 00:02:57 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Ticket): [ticket]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.Ticket)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.User)
          | path: generatedAlias1.id
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.User)
          |  | originalText: generatedAlias1
          |  \-IdentNode
          |    persister: null
          |    originalText: id
          \-ParameterNode

w2022-03-15 00:02:57 DEBUG Using FROM fragment [ticket ticket0_]
w2022-03-15 00:02:57 DEBUG Using FROM fragment [left outer join user user1_ on ticket0_.client_id=user1_.id]
w2022-03-15 00:02:57 DEBUG select >> end [level=1, statement=select]
w2022-03-15 00:02:57 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (ticket,user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'ticket0_.id as id1_1_' {alias=generatedAlias0, className=ru.edu.helpdesk.entity.Ticket, tableAlias=ticket0_}
    |  \-[SQL_TOKEN] SqlFragment: 'ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[ticket0_, user1_], fromElementsByPath=[generatedAlias0.client], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'ticket ticket0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=ticket,tableAlias=ticket0_,origin=null,columns={,className=ru.edu.helpdesk.entity.Ticket}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join user user1_ on ticket0_.client_id=user1_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Ticket.client,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user1_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias1.id,tableAlias=user1_,className=ru.edu.helpdesk.entity.User,classAlias=generatedAlias1}
          |  +-[ALIAS_REF] IdentNode: 'user1_.id' {alias=generatedAlias1, className=ru.edu.helpdesk.entity.User, tableAlias=user1_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LongType@4d45695d}

w2022-03-15 00:02:57 DEBUG throwQueryException() : no errors
w2022-03-15 00:02:57 DEBUG HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 00:02:57 DEBUG SQL: select ticket0_.id as id1_1_, ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id where user1_.id=?
w2022-03-15 00:02:57 DEBUG throwQueryException() : no errors
w2022-03-15 00:02:57 DEBUG select ticket0_.id as id1_1_, ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id where user1_.id=?
w2022-03-15 00:13:01 DEBUG Logging Provider: org.jboss.logging.Log4j2LoggerProvider
w2022-03-15 00:13:01 DEBUG PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@641916a2
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/%d0%9e%d0%bb%d1%8c%d0%b3%d0%b0/Desktop/Java/Project/Project1/helpdeskproject/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		ru.edu.helpdesk.entity.Comment
		ru.edu.helpdesk.entity.Ticket
		ru.edu.helpdesk.entity.User]
	Mapping files names []
	Properties []
w2022-03-15 00:13:01 DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
w2022-03-15 00:13:01 DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
w2022-03-15 00:13:01 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
w2022-03-15 00:13:01 INFO  HHH000412: Hibernate ORM core version 5.6.5.Final
w2022-03-15 00:13:01 DEBUG HHH000206: hibernate.properties not found
w2022-03-15 00:13:01 DEBUG Overriding existing service binding [org.hibernate.secure.spi.JaccService]
w2022-03-15 00:13:01 DEBUG Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
w2022-03-15 00:13:01 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
w2022-03-15 00:13:01 INFO  HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
w2022-03-15 00:13:01 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@1f976fb5
w2022-03-15 00:13:01 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@1f976fb5
w2022-03-15 00:13:01 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1f976fb5
w2022-03-15 00:13:01 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1bafed1e
w2022-03-15 00:13:01 DEBUG Adding type registration true_false -> org.hibernate.type.TrueFalseType@29113ac2
w2022-03-15 00:13:01 DEBUG Adding type registration yes_no -> org.hibernate.type.YesNoType@7106c5d8
w2022-03-15 00:13:01 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@11117d1c
w2022-03-15 00:13:01 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@11117d1c
w2022-03-15 00:13:01 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@11117d1c
w2022-03-15 00:13:01 DEBUG Adding type registration character -> org.hibernate.type.CharacterType@45fb7235
w2022-03-15 00:13:01 DEBUG Adding type registration char -> org.hibernate.type.CharacterType@45fb7235
w2022-03-15 00:13:01 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@45fb7235
w2022-03-15 00:13:01 DEBUG Adding type registration short -> org.hibernate.type.ShortType@35d69e25
w2022-03-15 00:13:01 DEBUG Adding type registration short -> org.hibernate.type.ShortType@35d69e25
w2022-03-15 00:13:01 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.ShortType@35d69e25
w2022-03-15 00:13:01 DEBUG Adding type registration integer -> org.hibernate.type.IntegerType@15ecd2c8
w2022-03-15 00:13:01 DEBUG Adding type registration int -> org.hibernate.type.IntegerType@15ecd2c8
w2022-03-15 00:13:01 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@15ecd2c8
w2022-03-15 00:13:01 DEBUG Adding type registration long -> org.hibernate.type.LongType@15dd12dc
w2022-03-15 00:13:01 DEBUG Adding type registration long -> org.hibernate.type.LongType@15dd12dc
w2022-03-15 00:13:01 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.LongType@15dd12dc
w2022-03-15 00:13:01 DEBUG Adding type registration float -> org.hibernate.type.FloatType@5153c525
w2022-03-15 00:13:01 DEBUG Adding type registration float -> org.hibernate.type.FloatType@5153c525
w2022-03-15 00:13:01 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5153c525
w2022-03-15 00:13:01 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@35e8ef77
w2022-03-15 00:13:01 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@35e8ef77
w2022-03-15 00:13:01 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@35e8ef77
w2022-03-15 00:13:01 DEBUG Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6f2f1e30
w2022-03-15 00:13:01 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6f2f1e30
w2022-03-15 00:13:01 DEBUG Adding type registration big_integer -> org.hibernate.type.BigIntegerType@794feef6
w2022-03-15 00:13:01 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@794feef6
w2022-03-15 00:13:01 DEBUG Adding type registration string -> org.hibernate.type.StringType@35cce4d9
w2022-03-15 00:13:01 DEBUG Adding type registration java.lang.String -> org.hibernate.type.StringType@35cce4d9
w2022-03-15 00:13:01 DEBUG Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6850da32
w2022-03-15 00:13:01 DEBUG Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@75ea0413
w2022-03-15 00:13:01 DEBUG Adding type registration url -> org.hibernate.type.UrlType@3795bfa3
w2022-03-15 00:13:01 DEBUG Adding type registration java.net.URL -> org.hibernate.type.UrlType@3795bfa3
w2022-03-15 00:13:01 DEBUG Adding type registration Duration -> org.hibernate.type.DurationType@399d59cd
w2022-03-15 00:13:01 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.DurationType@399d59cd
w2022-03-15 00:13:01 DEBUG Adding type registration Instant -> org.hibernate.type.InstantType@349edfd3
w2022-03-15 00:13:01 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.InstantType@349edfd3
w2022-03-15 00:13:01 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@b3d48bd
w2022-03-15 00:13:01 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@b3d48bd
w2022-03-15 00:13:01 DEBUG Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4c859ba
w2022-03-15 00:13:01 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4c859ba
w2022-03-15 00:13:01 DEBUG Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@10283123
w2022-03-15 00:13:01 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@10283123
w2022-03-15 00:13:01 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@29d2fd3d
w2022-03-15 00:13:01 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@29d2fd3d
w2022-03-15 00:13:01 DEBUG Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@30721b4c
w2022-03-15 00:13:01 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@30721b4c
w2022-03-15 00:13:01 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5925a6d5
w2022-03-15 00:13:01 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5925a6d5
w2022-03-15 00:13:01 DEBUG Adding type registration date -> org.hibernate.type.DateType@3c853ca6
w2022-03-15 00:13:01 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.DateType@3c853ca6
w2022-03-15 00:13:01 DEBUG Adding type registration time -> org.hibernate.type.TimeType@7297f0f1
w2022-03-15 00:13:01 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7297f0f1
w2022-03-15 00:13:01 DEBUG Adding type registration timestamp -> org.hibernate.type.TimestampType@36283240
w2022-03-15 00:13:01 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@36283240
w2022-03-15 00:13:01 DEBUG Adding type registration java.util.Date -> org.hibernate.type.TimestampType@36283240
w2022-03-15 00:13:01 DEBUG Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1578c96a
w2022-03-15 00:13:01 DEBUG Adding type registration calendar -> org.hibernate.type.CalendarType@3daeb624
w2022-03-15 00:13:01 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3daeb624
w2022-03-15 00:13:01 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3daeb624
w2022-03-15 00:13:01 DEBUG Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3117ee7d
w2022-03-15 00:13:01 DEBUG Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@575fc4a8
w2022-03-15 00:13:01 DEBUG Adding type registration locale -> org.hibernate.type.LocaleType@a25c67b
w2022-03-15 00:13:01 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@a25c67b
w2022-03-15 00:13:01 DEBUG Adding type registration currency -> org.hibernate.type.CurrencyType@60471763
w2022-03-15 00:13:01 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@60471763
w2022-03-15 00:13:01 DEBUG Adding type registration timezone -> org.hibernate.type.TimeZoneType@6fe71b93
w2022-03-15 00:13:01 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6fe71b93
w2022-03-15 00:13:01 DEBUG Adding type registration class -> org.hibernate.type.ClassType@30d84563
w2022-03-15 00:13:01 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.ClassType@30d84563
w2022-03-15 00:13:01 DEBUG Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4cc7e6a3
w2022-03-15 00:13:01 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4cc7e6a3
w2022-03-15 00:13:01 DEBUG Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6a829494
w2022-03-15 00:13:01 DEBUG Adding type registration binary -> org.hibernate.type.BinaryType@2decc425
w2022-03-15 00:13:01 DEBUG Adding type registration byte[] -> org.hibernate.type.BinaryType@2decc425
w2022-03-15 00:13:01 DEBUG Adding type registration [B -> org.hibernate.type.BinaryType@2decc425
w2022-03-15 00:13:01 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@55794e1f
w2022-03-15 00:13:01 DEBUG Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@55794e1f
w2022-03-15 00:13:01 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@55794e1f
w2022-03-15 00:13:01 DEBUG Adding type registration row_version -> org.hibernate.type.RowVersionType@c16a20
w2022-03-15 00:13:01 DEBUG Adding type registration image -> org.hibernate.type.ImageType@401c0e8d
w2022-03-15 00:13:01 DEBUG Adding type registration characters -> org.hibernate.type.CharArrayType@12b34bff
w2022-03-15 00:13:01 DEBUG Adding type registration char[] -> org.hibernate.type.CharArrayType@12b34bff
w2022-03-15 00:13:01 DEBUG Adding type registration [C -> org.hibernate.type.CharArrayType@12b34bff
w2022-03-15 00:13:01 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@48196ace
w2022-03-15 00:13:01 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@48196ace
w2022-03-15 00:13:01 DEBUG Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@48196ace
w2022-03-15 00:13:01 DEBUG Adding type registration text -> org.hibernate.type.TextType@243bfd46
w2022-03-15 00:13:01 DEBUG Adding type registration ntext -> org.hibernate.type.NTextType@5288cd01
w2022-03-15 00:13:01 DEBUG Adding type registration blob -> org.hibernate.type.BlobType@2e435942
w2022-03-15 00:13:01 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2e435942
w2022-03-15 00:13:01 DEBUG Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@30827389
w2022-03-15 00:13:01 DEBUG Adding type registration clob -> org.hibernate.type.ClobType@24e2da8b
w2022-03-15 00:13:01 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@24e2da8b
w2022-03-15 00:13:01 DEBUG Adding type registration nclob -> org.hibernate.type.NClobType@5beef8be
w2022-03-15 00:13:01 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5beef8be
w2022-03-15 00:13:01 DEBUG Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2c312fa5
w2022-03-15 00:13:01 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2bc92453
w2022-03-15 00:13:01 DEBUG Adding type registration serializable -> org.hibernate.type.SerializableType@232dca8d
w2022-03-15 00:13:01 DEBUG Adding type registration object -> org.hibernate.type.ObjectType@43042c70
w2022-03-15 00:13:01 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@43042c70
w2022-03-15 00:13:01 DEBUG Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@70620f59
w2022-03-15 00:13:01 DEBUG Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@12e7ca89
w2022-03-15 00:13:01 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@f9498a7
w2022-03-15 00:13:01 DEBUG Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2f45acc6
w2022-03-15 00:13:01 DEBUG Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4f3d66b0
w2022-03-15 00:13:01 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@63224e5c
w2022-03-15 00:13:01 DEBUG Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@48d8b33f
w2022-03-15 00:13:01 DEBUG Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4a79157e
w2022-03-15 00:13:01 INFO  HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
w2022-03-15 00:13:01 DEBUG Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@75e10814] into BootstrapContext; was [null]
w2022-03-15 00:13:01 DEBUG ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@75e10814) [was null]
w2022-03-15 00:13:01 DEBUG Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@4acaf0f] into BootstrapContext; was [null]
w2022-03-15 00:13:01 DEBUG Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@74f9b681] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@20353b98]
w2022-03-15 00:13:01 DEBUG Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@75e10814]
w2022-03-15 00:13:01 DEBUG ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@75e10814]
w2022-03-15 00:13:01 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
w2022-03-15 00:13:01 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
w2022-03-15 00:13:01 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
w2022-03-15 00:13:01 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
w2022-03-15 00:13:01 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
w2022-03-15 00:13:01 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
w2022-03-15 00:13:01 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
w2022-03-15 00:13:01 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
w2022-03-15 00:13:01 DEBUG Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
w2022-03-15 00:13:01 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
w2022-03-15 00:13:01 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
w2022-03-15 00:13:01 DEBUG Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
w2022-03-15 00:13:01 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
w2022-03-15 00:13:01 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
w2022-03-15 00:13:01 DEBUG Database ->
       name : SQLite
    version : 3.36.0
      major : 3
      minor : 36
w2022-03-15 00:13:01 DEBUG Driver ->
       name : SQLite JDBC
    version : 3.36.0.3
      major : 3
      minor : 36
w2022-03-15 00:13:01 DEBUG JDBC version : 2.1
w2022-03-15 00:13:01 INFO  HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
w2022-03-15 00:13:01 DEBUG JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
w2022-03-15 00:13:01 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
w2022-03-15 00:13:01 DEBUG HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [2] less than 4
w2022-03-15 00:13:01 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@731070c9] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@306c98c8]
w2022-03-15 00:13:01 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
w2022-03-15 00:13:01 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.Comment
w2022-03-15 00:13:01 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 00:13:01 DEBUG Import with entity name Comment
w2022-03-15 00:13:01 DEBUG Bind entity ru.edu.helpdesk.entity.Comment on table comment
w2022-03-15 00:13:01 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 00:13:01 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Comment] is safe
w2022-03-15 00:13:01 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Comment
w2022-03-15 00:13:01 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 00:13:01 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Comment:id]
w2022-03-15 00:13:01 DEBUG building SimpleValue for id
w2022-03-15 00:13:01 DEBUG Building property id
w2022-03-15 00:13:01 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 00:13:01 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=message, insertable=true, updatable=true, unique=false}
w2022-03-15 00:13:01 DEBUG MetadataSourceProcessor property message with lazy=false
w2022-03-15 00:13:01 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Comment:message]
w2022-03-15 00:13:01 DEBUG building SimpleValue for message
w2022-03-15 00:13:01 DEBUG Building property message
w2022-03-15 00:13:01 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 00:13:01 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=ticket, insertable=true, updatable=true, unique=false}
w2022-03-15 00:13:01 DEBUG Building property ticket
w2022-03-15 00:13:01 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 00:13:01 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=user, insertable=true, updatable=true, unique=false}
w2022-03-15 00:13:01 DEBUG Building property user
w2022-03-15 00:13:01 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 00:13:01 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 00:13:01 DEBUG Import with entity name Ticket
w2022-03-15 00:13:01 DEBUG Bind entity ru.edu.helpdesk.entity.Ticket on table ticket
w2022-03-15 00:13:01 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 00:13:01 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Ticket] is safe
w2022-03-15 00:13:01 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Ticket
w2022-03-15 00:13:01 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 00:13:01 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:id]
w2022-03-15 00:13:01 DEBUG building SimpleValue for id
w2022-03-15 00:13:01 DEBUG Building property id
w2022-03-15 00:13:01 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 00:13:01 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 00:13:01 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=client, insertable=true, updatable=true, unique=false}
w2022-03-15 00:13:01 DEBUG Building property client
w2022-03-15 00:13:01 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=status, insertable=true, updatable=true, unique=false}
w2022-03-15 00:13:01 DEBUG MetadataSourceProcessor property status with lazy=false
w2022-03-15 00:13:01 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:status]
w2022-03-15 00:13:01 DEBUG building SimpleValue for status
w2022-03-15 00:13:01 DEBUG Building property status
w2022-03-15 00:13:01 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 00:13:01 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=support, insertable=true, updatable=true, unique=false}
w2022-03-15 00:13:01 DEBUG Building property support
w2022-03-15 00:13:01 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=title, insertable=true, updatable=true, unique=false}
w2022-03-15 00:13:01 DEBUG MetadataSourceProcessor property title with lazy=false
w2022-03-15 00:13:01 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:title]
w2022-03-15 00:13:01 DEBUG building SimpleValue for title
w2022-03-15 00:13:01 DEBUG Building property title
w2022-03-15 00:13:01 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.User
w2022-03-15 00:13:01 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 00:13:01 DEBUG Import with entity name User
w2022-03-15 00:13:01 DEBUG Bind entity ru.edu.helpdesk.entity.User on table user
w2022-03-15 00:13:01 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 00:13:01 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.User] is safe
w2022-03-15 00:13:01 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.User
w2022-03-15 00:13:01 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 00:13:01 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:id]
w2022-03-15 00:13:01 DEBUG building SimpleValue for id
w2022-03-15 00:13:01 DEBUG Building property id
w2022-03-15 00:13:01 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 00:13:01 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
w2022-03-15 00:13:01 DEBUG MetadataSourceProcessor property firstName with lazy=false
w2022-03-15 00:13:01 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:firstName]
w2022-03-15 00:13:01 DEBUG building SimpleValue for firstName
w2022-03-15 00:13:01 DEBUG Building property firstName
w2022-03-15 00:13:01 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
w2022-03-15 00:13:01 DEBUG MetadataSourceProcessor property lastName with lazy=false
w2022-03-15 00:13:01 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:lastName]
w2022-03-15 00:13:01 DEBUG building SimpleValue for lastName
w2022-03-15 00:13:01 DEBUG Building property lastName
w2022-03-15 00:13:01 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=login, insertable=true, updatable=true, unique=false}
w2022-03-15 00:13:01 DEBUG MetadataSourceProcessor property login with lazy=false
w2022-03-15 00:13:01 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:login]
w2022-03-15 00:13:01 DEBUG building SimpleValue for login
w2022-03-15 00:13:01 DEBUG Building property login
w2022-03-15 00:13:01 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
w2022-03-15 00:13:01 DEBUG MetadataSourceProcessor property password with lazy=false
w2022-03-15 00:13:01 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:password]
w2022-03-15 00:13:01 DEBUG building SimpleValue for password
w2022-03-15 00:13:01 DEBUG Building property password
w2022-03-15 00:13:01 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=role, insertable=true, updatable=true, unique=false}
w2022-03-15 00:13:01 DEBUG MetadataSourceProcessor property role with lazy=false
w2022-03-15 00:13:01 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:role]
w2022-03-15 00:13:01 DEBUG building SimpleValue for role
w2022-03-15 00:13:01 DEBUG Building property role
w2022-03-15 00:13:01 DEBUG Starting fillSimpleValue for id
w2022-03-15 00:13:01 DEBUG Starting fillSimpleValue for message
w2022-03-15 00:13:01 DEBUG Starting fillSimpleValue for id
w2022-03-15 00:13:01 DEBUG Starting fillSimpleValue for status
w2022-03-15 00:13:01 DEBUG Starting fillSimpleValue for title
w2022-03-15 00:13:01 DEBUG Starting fillSimpleValue for id
w2022-03-15 00:13:01 DEBUG Starting fillSimpleValue for firstName
w2022-03-15 00:13:01 DEBUG Starting fillSimpleValue for lastName
w2022-03-15 00:13:01 DEBUG Starting fillSimpleValue for login
w2022-03-15 00:13:01 DEBUG Starting fillSimpleValue for password
w2022-03-15 00:13:01 DEBUG Starting fillSimpleValue for role
w2022-03-15 00:13:01 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [comment]
w2022-03-15 00:13:01 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [ticket]
w2022-03-15 00:13:01 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [user]
w2022-03-15 00:13:01 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 00:13:01 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 00:13:01 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 00:13:01 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 00:13:01 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 00:13:01 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 00:13:01 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 00:13:01 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 00:13:01 DEBUG Building session factory
w2022-03-15 00:13:01 DEBUG SessionFactory name : null
w2022-03-15 00:13:01 DEBUG Automatic flush during beforeCompletion(): enabled
w2022-03-15 00:13:01 DEBUG Automatic session close at end of transaction: disabled
w2022-03-15 00:13:01 DEBUG Statistics: disabled
w2022-03-15 00:13:01 DEBUG Deleted entity synthetic identifier rollback: disabled
w2022-03-15 00:13:01 DEBUG Default entity-mode: pojo
w2022-03-15 00:13:01 DEBUG Check Nullability in Core (should be disabled when Bean Validation is on): enabled
w2022-03-15 00:13:01 DEBUG Allow initialization of lazy state outside session : disabled
w2022-03-15 00:13:01 DEBUG Using BatchFetchStyle : LEGACY
w2022-03-15 00:13:01 DEBUG Default batch fetch size: -1
w2022-03-15 00:13:01 DEBUG Maximum outer join fetch depth: null
w2022-03-15 00:13:01 DEBUG Default null ordering: NONE
w2022-03-15 00:13:01 DEBUG Order SQL updates by primary key: disabled
w2022-03-15 00:13:01 DEBUG Order SQL inserts for batching: disabled
w2022-03-15 00:13:01 DEBUG multi-tenancy strategy : NONE
w2022-03-15 00:13:01 DEBUG JTA Track by Thread: enabled
w2022-03-15 00:13:01 DEBUG Query language substitutions: {}
w2022-03-15 00:13:01 DEBUG Named query checking : enabled
w2022-03-15 00:13:01 DEBUG Second-level cache: disabled
w2022-03-15 00:13:01 DEBUG Second-level query cache: disabled
w2022-03-15 00:13:01 DEBUG Second-level query cache factory: null
w2022-03-15 00:13:01 DEBUG Second-level cache region prefix: null
w2022-03-15 00:13:01 DEBUG Optimize second-level cache for minimal puts: disabled
w2022-03-15 00:13:01 DEBUG Structured second-level cache entries: disabled
w2022-03-15 00:13:01 DEBUG Second-level cache direct-reference entries: disabled
w2022-03-15 00:13:01 DEBUG Automatic eviction of collection cache: disabled
w2022-03-15 00:13:01 DEBUG JDBC batch size: 1
w2022-03-15 00:13:01 DEBUG JDBC batch updates for versioned data: enabled
w2022-03-15 00:13:01 DEBUG Scrollable result sets: disabled
w2022-03-15 00:13:01 DEBUG Wrap result sets: disabled
w2022-03-15 00:13:01 DEBUG JDBC3 getGeneratedKeys(): enabled
w2022-03-15 00:13:01 DEBUG JDBC result set fetch size: null
w2022-03-15 00:13:01 DEBUG Connection release mode: ON_CLOSE
w2022-03-15 00:13:01 DEBUG Generate SQL with comments: disabled
w2022-03-15 00:13:01 DEBUG JPA compliance - query : disabled
w2022-03-15 00:13:01 DEBUG JPA compliance - closed-handling : disabled
w2022-03-15 00:13:01 DEBUG JPA compliance - lists : disabled
w2022-03-15 00:13:01 DEBUG JPA compliance - transactions : disabled
w2022-03-15 00:13:01 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 00:13:01 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 00:13:01 DEBUG Session factory constructed with filter configurations : {}
w2022-03-15 00:13:01 DEBUG Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=true, java.specification.version=1.8, file.encoding.pkg=sun.io, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@73cf3ee, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.SQLiteDialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\charsets.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\cldrdata.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\dnsns.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\jaccess.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\localedata.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\nashorn.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunec.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunmscapi.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\zipfs.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jce.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jfr.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jsse.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\management-agent.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\resources.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\rt.jar;C:\Users\Ольга\Desktop\Java\Project\Project1\helpdeskproject\target\classes;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\2.6.4\spring-boot-starter-data-jpa-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\2.6.4\spring-boot-starter-jdbc-2.6.4.jar;C:\Users\Ольга\.m2\repository\com\zaxxer\HikariCP\4.0.3\HikariCP-4.0.3.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-jdbc\5.3.16\spring-jdbc-5.3.16.jar;C:\Users\Ольга\.m2\repository\jakarta\transaction\jakarta.transaction-api\1.3.3\jakarta.transaction-api-1.3.3.jar;C:\Users\Ольга\.m2\repository\jakarta\persistence\jakarta.persistence-api\2.2.3\jakarta.persistence-api-2.2.3.jar;C:\Users\Ольга\.m2\repository\org\hibernate\hibernate-core\5.6.5.Final\hibernate-core-5.6.5.Final.jar;C:\Users\Ольга\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy\1.11.22\byte-buddy-1.11.22.jar;C:\Users\Ольга\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ольга\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Ольга\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.6\jaxb-runtime-2.3.6.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\txw2\2.3.6\txw2-2.3.6.jar;C:\Users\Ольга\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.12\istack-commons-runtime-3.0.12.jar;C:\Users\Ольга\.m2\repository\com\sun\activation\jakarta.activation\1.2.2\jakarta.activation-1.2.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\data\spring-data-jpa\2.6.2\spring-data-jpa-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\data\spring-data-commons\2.6.2\spring-data-commons-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-orm\5.3.16\spring-orm-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-context\5.3.16\spring-context-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-tx\5.3.16\spring-tx-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-beans\5.3.16\spring-beans-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-aspects\5.3.16\spring-aspects-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-security\2.6.4\spring-boot-starter-security-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter\2.6.4\spring-boot-starter-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-logging\2.6.4\spring-boot-starter-logging-2.6.4.jar;C:\Users\Ольга\.m2\repository\ch\qos\logback\logback-classic\1.2.10\logback-classic-1.2.10.jar;C:\Users\Ольга\.m2\repository\ch\qos\logback\logback-core\1.2.10\logback-core-1.2.10.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.17.1\log4j-to-slf4j-2.17.1.jar;C:\Users\Ольга\.m2\repository\org\slf4j\jul-to-slf4j\1.7.36\jul-to-slf4j-1.7.36.jar;C:\Users\Ольга\.m2\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;C:\Users\Ольга\.m2\repository\org\yaml\snakeyaml\1.29\snakeyaml-1.29.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-aop\5.3.16\spring-aop-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-config\5.6.2\spring-security-config-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-web\5.6.2\spring-security-web-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-expression\5.3.16\spring-expression-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-web\2.6.4\spring-boot-starter-web-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-json\2.6.4\spring-boot-starter-json-2.6.4.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.13.1\jackson-datatype-jdk8-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.13.1\jackson-datatype-jsr310-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.13.1\jackson-module-parameter-names-2.13.1.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\2.6.4\spring-boot-starter-tomcat-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.58\tomcat-embed-core-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\9.0.58\tomcat-embed-el-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.58\tomcat-embed-websocket-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-web\5.3.16\spring-web-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-webmvc\5.3.16\spring-webmvc-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-devtools\2.6.4\spring-boot-devtools-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot\2.6.4\spring-boot-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\2.6.4\spring-boot-autoconfigure-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\xerial\sqlite-jdbc\3.36.0.3\sqlite-jdbc-3.36.0.3.jar;C:\Users\Ольга\.m2\repository\com\zsoltfabok\sqlite-dialect\1.0\sqlite-dialect-1.0.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-aop\2.6.2\spring-boot-starter-aop-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\aspectj\aspectjweaver\1.9.7\aspectjweaver-1.9.7.jar;C:\Users\Ольга\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.3\jakarta.xml.bind-api-2.3.3.jar;C:\Users\Ольга\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.2\jakarta.activation-api-1.2.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-core\5.3.16\spring-core-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-jcl\5.3.16\spring-jcl-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-core\5.6.2\spring-security-core-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-crypto\5.6.2\spring-security-crypto-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\projectlombok\lombok\1.18.22\lombok-1.18.22.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\2.6.4\spring-boot-starter-thymeleaf-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\thymeleaf-spring5\3.0.15.RELEASE\thymeleaf-spring5-3.0.15.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\thymeleaf\3.0.15.RELEASE\thymeleaf-3.0.15.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\attoparser\attoparser\2.0.5.RELEASE\attoparser-2.0.5.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-java8time\3.0.4.RELEASE\thymeleaf-extras-java8time-3.0.4.RELEASE.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.1\jackson-databind-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.1\jackson-annotations-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.1\jackson-core-2.13.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-api\2.4.1\log4j-api-2.4.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-core\2.4.1\log4j-core-2.4.1.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.2\lib\idea_rt.jar, java.vm.vendor=Temurin, sun.arch.data.model=64, user.variant=, java.vendor.url=https://adoptium.net/, catalina.useNaming=false, user.timezone=Europe/Moscow, jakarta.persistence.sharedCache.mode=UNSPECIFIED, os.name=Windows 10, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), user.country=RU, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\bin, sun.java.command=ru.edu.helpdesk.HelpdeskApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@6e3bed6, com.sun.management.jmxremote=, javax.persistence.sharedCache.mode=UNSPECIFIED, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, user.home=C:\Users\Ольга, user.language=ru, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre, file.separator=\, spring.output.ansi.enabled=always, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, sun.boot.class.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\resources.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\rt.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\sunrsasign.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jsse.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jce.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\charsets.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jfr.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\classes, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_312-b07, user.name=Эльдорадо, spring.jmx.enabled=true, path.separator=;, os.version=10.0, java.endorsed.dirs=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\endorsed, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=default, spring.beaninfo.ignore=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=C:\Users\134E~1\AppData\Local\Temp\, catalina.home=C:\Users\Ольга\AppData\Local\Temp\tomcat.8080.1794367688609919149, java.version=1.8.0_312, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\Ольга\Desktop\Java\Project\Project1\helpdeskproject, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=14648, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\Ольга\AppData\Local\Temp\tomcat.8080.1794367688609919149, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@5f34d329, java.library.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\windows\System32\OpenSSH\;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\Program Files\apache-maven-3.8.4\bin;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Ольга\AppData\Local\Microsoft\WindowsApps;C:\Users\Ольга\AppData\Local\Programs\Microsoft VS Code\bin;C:\SQLite;C:\Users\Ольга\AppData\Roaming\npm;C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.2\bin;;., java.vendor=Temurin, java.vm.info=mixed mode, java.vm.version=25.312-b07, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, java.ext.dirs=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext;C:\windows\Sun\Java\lib\ext, hibernate.connection.datasource=HikariDataSource (HikariPool-1), hibernate.hbm2ddl.import_files=data/import.sql, java.class.version=52.0}
w2022-03-15 00:13:01 DEBUG Skipping JACC integration as it was not enabled
w2022-03-15 00:13:01 DEBUG Using ORDINAL-based conversion for Enum ru.edu.helpdesk.entity.UserRole
w2022-03-15 00:13:01 DEBUG Using ORDINAL-based conversion for Enum ru.edu.helpdesk.entity.TicketStatus
w2022-03-15 00:13:01 DEBUG Instantiated session factory
w2022-03-15 00:13:01 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@731070c9] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@7d23f10c]
w2022-03-15 00:13:01 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.User] is safe
w2022-03-15 00:13:01 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.User
w2022-03-15 00:13:01 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:13:01 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:13:01 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:13:01 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:13:01 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Ticket] is safe
w2022-03-15 00:13:01 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Ticket
w2022-03-15 00:13:01 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:13:01 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:13:01 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:13:01 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:13:01 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:13:01 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:13:01 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:13:01 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:13:01 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Comment] is safe
w2022-03-15 00:13:01 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Comment
w2022-03-15 00:13:01 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:13:01 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:13:01 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:13:01 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:13:01 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.User
w2022-03-15 00:13:01 DEBUG  Version select: select id from user where id =?
w2022-03-15 00:13:01 DEBUG  Snapshot select: select user_.id, user_.first_name as first_na2_2_, user_.last_name as last_nam3_2_, user_.login as login4_2_, user_.password as password5_2_, user_.role as role6_2_ from user user_ where user_.id=?
w2022-03-15 00:13:01 DEBUG  Insert 0: insert into user (first_name, last_name, login, password, role, id) values (?, ?, ?, ?, ?, ?)
w2022-03-15 00:13:01 DEBUG  Update 0: update user set first_name=?, last_name=?, login=?, password=?, role=? where id=?
w2022-03-15 00:13:01 DEBUG  Delete 0: delete from user where id=?
w2022-03-15 00:13:01 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d01f968]
w2022-03-15 00:13:01 DEBUG Visiting attribute path : firstName
w2022-03-15 00:13:01 DEBUG Visiting attribute path : lastName
w2022-03-15 00:13:01 DEBUG Visiting attribute path : login
w2022-03-15 00:13:01 DEBUG Visiting attribute path : password
w2022-03-15 00:13:01 DEBUG Visiting attribute path : role
w2022-03-15 00:13:01 DEBUG Building LoadPlan...
w2022-03-15 00:13:01 DEBUG processing queryspace <gen:0>
w2022-03-15 00:13:01 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.User)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

w2022-03-15 00:13:01 DEBUG Static select for entity ru.edu.helpdesk.entity.User [NONE]: select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 00:13:01 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.Ticket
w2022-03-15 00:13:01 DEBUG  Version select: select id from ticket where id =?
w2022-03-15 00:13:01 DEBUG  Snapshot select: select ticket_.id, ticket_.client_id as client_i4_1_, ticket_.status as status2_1_, ticket_.support_id as support_5_1_, ticket_.title as title3_1_ from ticket ticket_ where ticket_.id=?
w2022-03-15 00:13:01 DEBUG  Insert 0: insert into ticket (client_id, status, support_id, title, id) values (?, ?, ?, ?, ?)
w2022-03-15 00:13:01 DEBUG  Update 0: update ticket set client_id=?, status=?, support_id=?, title=? where id=?
w2022-03-15 00:13:01 DEBUG  Delete 0: delete from ticket where id=?
w2022-03-15 00:13:01 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6bdd1125]
w2022-03-15 00:13:01 DEBUG Visiting attribute path : client
w2022-03-15 00:13:01 DEBUG Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8c114fe]
w2022-03-15 00:13:01 DEBUG Visiting attribute path : client.firstName
w2022-03-15 00:13:01 DEBUG Visiting attribute path : client.lastName
w2022-03-15 00:13:01 DEBUG Visiting attribute path : client.login
w2022-03-15 00:13:01 DEBUG Visiting attribute path : client.password
w2022-03-15 00:13:01 DEBUG Visiting attribute path : client.role
w2022-03-15 00:13:01 DEBUG Visiting attribute path : status
w2022-03-15 00:13:01 DEBUG Visiting attribute path : support
w2022-03-15 00:13:01 DEBUG Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4478628e]
w2022-03-15 00:13:01 DEBUG Visiting attribute path : support.firstName
w2022-03-15 00:13:01 DEBUG Visiting attribute path : support.lastName
w2022-03-15 00:13:01 DEBUG Visiting attribute path : support.login
w2022-03-15 00:13:01 DEBUG Visiting attribute path : support.password
w2022-03-15 00:13:01 DEBUG Visiting attribute path : support.role
w2022-03-15 00:13:01 DEBUG Visiting attribute path : title
w2022-03-15 00:13:01 DEBUG Building LoadPlan...
w2022-03-15 00:13:01 DEBUG processing queryspace <gen:0>
w2022-03-15 00:13:01 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.Ticket)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.Ticket, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.Ticket)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:1>, path=ru.edu.helpdesk.entity.Ticket.client)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:2>, path=ru.edu.helpdesk.entity.Ticket.support)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.Ticket)
          - SQL table alias mapping - ticket0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(client)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
          - JOIN (JoinDefinedByMetadata(support)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user2_
                - alias suffix - 2_
                - suffixed key columns - {id1_2_2_}

w2022-03-15 00:13:01 DEBUG Static select for entity ru.edu.helpdesk.entity.Ticket [NONE]: select ticket0_.id as id1_1_0_, ticket0_.client_id as client_i4_1_0_, ticket0_.status as status2_1_0_, ticket0_.support_id as support_5_1_0_, ticket0_.title as title3_1_0_, user1_.id as id1_2_1_, user1_.first_name as first_na2_2_1_, user1_.last_name as last_nam3_2_1_, user1_.login as login4_2_1_, user1_.password as password5_2_1_, user1_.role as role6_2_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id left outer join user user2_ on ticket0_.support_id=user2_.id where ticket0_.id=?
w2022-03-15 00:13:01 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.Comment
w2022-03-15 00:13:01 DEBUG  Version select: select id from comment where id =?
w2022-03-15 00:13:01 DEBUG  Snapshot select: select comment_.id, comment_.message as message2_0_, comment_.ticket_id as ticket_i3_0_, comment_.user_id as user_id4_0_ from comment comment_ where comment_.id=?
w2022-03-15 00:13:01 DEBUG  Insert 0: insert into comment (message, ticket_id, user_id, id) values (?, ?, ?, ?)
w2022-03-15 00:13:01 DEBUG  Update 0: update comment set message=?, ticket_id=?, user_id=? where id=?
w2022-03-15 00:13:01 DEBUG  Delete 0: delete from comment where id=?
w2022-03-15 00:13:01 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16565f51]
w2022-03-15 00:13:01 DEBUG Visiting attribute path : message
w2022-03-15 00:13:01 DEBUG Visiting attribute path : ticket
w2022-03-15 00:13:01 DEBUG Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3960973b]
w2022-03-15 00:13:01 DEBUG Visiting attribute path : ticket.client
w2022-03-15 00:13:01 DEBUG Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4bbe690d]
w2022-03-15 00:13:01 DEBUG Visiting attribute path : ticket.client.firstName
w2022-03-15 00:13:01 DEBUG Visiting attribute path : ticket.client.lastName
w2022-03-15 00:13:01 DEBUG Visiting attribute path : ticket.client.login
w2022-03-15 00:13:01 DEBUG Visiting attribute path : ticket.client.password
w2022-03-15 00:13:01 DEBUG Visiting attribute path : ticket.client.role
w2022-03-15 00:13:01 DEBUG Visiting attribute path : ticket.status
w2022-03-15 00:13:01 DEBUG Visiting attribute path : ticket.support
w2022-03-15 00:13:01 DEBUG Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57d7eab4]
w2022-03-15 00:13:01 DEBUG Visiting attribute path : ticket.support.firstName
w2022-03-15 00:13:01 DEBUG Visiting attribute path : ticket.support.lastName
w2022-03-15 00:13:01 DEBUG Visiting attribute path : ticket.support.login
w2022-03-15 00:13:01 DEBUG Visiting attribute path : ticket.support.password
w2022-03-15 00:13:01 DEBUG Visiting attribute path : ticket.support.role
w2022-03-15 00:13:01 DEBUG Visiting attribute path : ticket.title
w2022-03-15 00:13:01 DEBUG Visiting attribute path : user
w2022-03-15 00:13:01 DEBUG Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@300b3cd0]
w2022-03-15 00:13:01 DEBUG Visiting attribute path : user.firstName
w2022-03-15 00:13:01 DEBUG Visiting attribute path : user.lastName
w2022-03-15 00:13:01 DEBUG Visiting attribute path : user.login
w2022-03-15 00:13:01 DEBUG Visiting attribute path : user.password
w2022-03-15 00:13:01 DEBUG Visiting attribute path : user.role
w2022-03-15 00:13:01 DEBUG Building LoadPlan...
w2022-03-15 00:13:01 DEBUG processing queryspace <gen:0>
w2022-03-15 00:13:01 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.Comment)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.Comment, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.Comment)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.Ticket, querySpaceUid=<gen:1>, path=ru.edu.helpdesk.entity.Comment.ticket)
             - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:2>, path=ru.edu.helpdesk.entity.Comment.ticket.client)
             - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:3>, path=ru.edu.helpdesk.entity.Comment.ticket.support)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:4>, path=ru.edu.helpdesk.entity.Comment.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(ticket)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ru.edu.helpdesk.entity.Ticket)
                - SQL table alias mapping - ticket1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(client)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=ru.edu.helpdesk.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}
                - JOIN (JoinDefinedByMetadata(support)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=ru.edu.helpdesk.entity.User)
                      - SQL table alias mapping - user3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_2_3_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user4_
                - alias suffix - 4_
                - suffixed key columns - {id1_2_4_}

w2022-03-15 00:13:01 DEBUG Static select for entity ru.edu.helpdesk.entity.Comment [NONE]: select comment0_.id as id1_0_0_, comment0_.message as message2_0_0_, comment0_.ticket_id as ticket_i3_0_0_, comment0_.user_id as user_id4_0_0_, ticket1_.id as id1_1_1_, ticket1_.client_id as client_i4_1_1_, ticket1_.status as status2_1_1_, ticket1_.support_id as support_5_1_1_, ticket1_.title as title3_1_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_, user3_.id as id1_2_3_, user3_.first_name as first_na2_2_3_, user3_.last_name as last_nam3_2_3_, user3_.login as login4_2_3_, user3_.password as password5_2_3_, user3_.role as role6_2_3_, user4_.id as id1_2_4_, user4_.first_name as first_na2_2_4_, user4_.last_name as last_nam3_2_4_, user4_.login as login4_2_4_, user4_.password as password5_2_4_, user4_.role as role6_2_4_ from comment comment0_ left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id left outer join user user2_ on ticket1_.client_id=user2_.id left outer join user user3_ on ticket1_.support_id=user3_.id left outer join user user4_ on comment0_.user_id=user4_.id where comment0_.id=?
w2022-03-15 00:13:01 DEBUG drop table if exists comment
w2022-03-15 00:13:01 DEBUG drop table if exists hibernate_sequence
w2022-03-15 00:13:01 DEBUG drop table if exists ticket
w2022-03-15 00:13:01 DEBUG drop table if exists user
w2022-03-15 00:13:01 DEBUG create table comment (id bigint not null, message varchar(255) not null, ticket_id bigint, user_id bigint, primary key (id))
w2022-03-15 00:13:01 DEBUG create table hibernate_sequence (next_val bigint)
w2022-03-15 00:13:01 DEBUG insert into hibernate_sequence values ( 1 )
w2022-03-15 00:13:01 DEBUG create table ticket (id bigint not null, status integer, title varchar(255) not null, client_id bigint, support_id bigint, primary key (id))
w2022-03-15 00:13:01 DEBUG create table user (id bigint not null, first_name varchar(255), last_name varchar(255), login varchar(255) not null, password varchar(255) not null, role integer, primary key (id))
w2022-03-15 00:13:01 INFO  HHH000476: Executing import script 'file:/C:/Users/%d0%9e%d0%bb%d1%8c%d0%b3%d0%b0/Desktop/Java/Project/Project1/helpdeskproject/target/classes/data/import.sql'
w2022-03-15 00:13:01 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (1, 'admin', 'admin', 'admin', 'admin', 0)
w2022-03-15 00:13:01 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (2, 'support', 'support', 'support', 'support', 1)
w2022-03-15 00:13:01 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (3, 'user1', 'user1', 'user1', 'user1', 2)
w2022-03-15 00:13:01 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (4, 'user2', 'user2', 'user2', 'user2', 2)
w2022-03-15 00:13:02 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (1, 1, 'Hello user1', 3, 2)
w2022-03-15 00:13:02 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (2, 0, 'Title2', 3, NULL)
w2022-03-15 00:13:02 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (3, 0, 'Message user2', 4, NULL)
w2022-03-15 00:13:02 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (1, "Hello ticket1", 1, 3)
w2022-03-15 00:13:02 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (2, "Hello ticket2", 2, 3)
w2022-03-15 00:13:02 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (3, "Hello ticket11", 1, 2)
w2022-03-15 00:13:02 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (4, "Hello ticket111", 1, 2)
w2022-03-15 00:13:02 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (5, "Hello ticket22", 2, 2)
w2022-03-15 00:13:02 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (6, "Hello ticket3", 3, 4)
w2022-03-15 00:13:02 DEBUG UPDATE hibernate_sequence SET next_val = 8 WHERE next_val = 1
w2022-03-15 00:13:02 INFO  HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
w2022-03-15 00:13:02 DEBUG Checking 0 named HQL queries
w2022-03-15 00:13:02 DEBUG Checking 0 named SQL queries
w2022-03-15 00:13:02 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 00:13:02 DEBUG Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@67dc1c5e
w2022-03-15 00:13:02 DEBUG Registering SessionFactory: 759e4552-a830-46b4-b718-b72b89be00e5 (<unnamed>)
w2022-03-15 00:13:02 DEBUG Not binding SessionFactory to JNDI, no JNDI name configured
w2022-03-15 00:13:02 DEBUG Statistics initialized [enabled=false]
w2022-03-15 00:13:02 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 00:13:02 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 00:13:02 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 00:13:12 DEBUG Rendered criteria query -> select generatedAlias0 from Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 00:13:12 DEBUG QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@576802f4
w2022-03-15 00:13:12 DEBUG parse() - HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 00:13:12 DEBUG throwQueryException() : no errors
w2022-03-15 00:13:12 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[IDENT] Node: 'ru'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'edu'
    |  |  |  |  |  |  \-[IDENT] Node: 'helpdesk'
    |  |  |  |  |  \-[IDENT] Node: 'entity'
    |  |  |  |  \-[IDENT] Node: 'Ticket'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'client'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias1'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

w2022-03-15 00:13:12 DEBUG select << begin [level=1, statement=select]
w2022-03-15 00:13:12 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.Ticket (generatedAlias0) -> ticket0_
w2022-03-15 00:13:12 DEBUG Resolved : generatedAlias0 -> ticket0_.id
w2022-03-15 00:13:12 DEBUG getDataType() : client -> org.hibernate.type.ManyToOneType(ru.edu.helpdesk.entity.User)
w2022-03-15 00:13:12 DEBUG dereferenceEntityJoin() : generating join for client in ru.edu.helpdesk.entity.Ticket (generatedAlias1) parent = [ {null} ]
w2022-03-15 00:13:12 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.User (generatedAlias1) -> user1_
w2022-03-15 00:13:12 DEBUG addJoinByPathMap() : generatedAlias0.client -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}
w2022-03-15 00:13:12 DEBUG Resolved : generatedAlias0.client -> ticket0_.client_id
w2022-03-15 00:13:12 DEBUG createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'user user1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Ticket.client,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}

w2022-03-15 00:13:12 DEBUG Resolved : generatedAlias0 -> ticket0_.id
w2022-03-15 00:13:12 DEBUG Resolved : generatedAlias1 -> user1_.id
w2022-03-15 00:13:12 DEBUG getDataType() : id -> org.hibernate.type.LongType@15dd12dc
w2022-03-15 00:13:12 DEBUG Resolved : generatedAlias1.id -> user1_.id
w2022-03-15 00:13:12 DEBUG select : finishing up [level=1, statement=select]
w2022-03-15 00:13:12 DEBUG processQuery() :  ( SELECT ( {select clause} ticket0_.id ) ( FromClause{level=1} ( ticket ticket0_ user user1_ ) ) ( where ( = ( user1_.id user1_.id id ) ? ) ) )
w2022-03-15 00:13:12 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Ticket): [ticket]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.Ticket)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.User)
          | path: generatedAlias1.id
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.User)
          |  | originalText: generatedAlias1
          |  \-IdentNode
          |    persister: null
          |    originalText: id
          \-ParameterNode

w2022-03-15 00:13:12 DEBUG Using FROM fragment [ticket ticket0_]
w2022-03-15 00:13:12 DEBUG Using FROM fragment [left outer join user user1_ on ticket0_.client_id=user1_.id]
w2022-03-15 00:13:12 DEBUG select >> end [level=1, statement=select]
w2022-03-15 00:13:12 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (ticket,user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'ticket0_.id as id1_1_' {alias=generatedAlias0, className=ru.edu.helpdesk.entity.Ticket, tableAlias=ticket0_}
    |  \-[SQL_TOKEN] SqlFragment: 'ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[ticket0_, user1_], fromElementsByPath=[generatedAlias0.client], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'ticket ticket0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=ticket,tableAlias=ticket0_,origin=null,columns={,className=ru.edu.helpdesk.entity.Ticket}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join user user1_ on ticket0_.client_id=user1_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Ticket.client,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user1_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias1.id,tableAlias=user1_,className=ru.edu.helpdesk.entity.User,classAlias=generatedAlias1}
          |  +-[ALIAS_REF] IdentNode: 'user1_.id' {alias=generatedAlias1, className=ru.edu.helpdesk.entity.User, tableAlias=user1_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LongType@15dd12dc}

w2022-03-15 00:13:12 DEBUG throwQueryException() : no errors
w2022-03-15 00:13:12 DEBUG HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 00:13:12 DEBUG SQL: select ticket0_.id as id1_1_, ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id where user1_.id=?
w2022-03-15 00:13:12 DEBUG throwQueryException() : no errors
w2022-03-15 00:13:12 DEBUG select ticket0_.id as id1_1_, ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id where user1_.id=?
w2022-03-15 00:18:25 DEBUG Logging Provider: org.jboss.logging.Log4j2LoggerProvider
w2022-03-15 00:18:25 DEBUG PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@1ce545b4
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/%d0%9e%d0%bb%d1%8c%d0%b3%d0%b0/Desktop/Java/Project/Project1/helpdeskproject/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		ru.edu.helpdesk.entity.Comment
		ru.edu.helpdesk.entity.Ticket
		ru.edu.helpdesk.entity.User]
	Mapping files names []
	Properties []
w2022-03-15 00:18:25 DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
w2022-03-15 00:18:25 DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
w2022-03-15 00:18:25 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
w2022-03-15 00:18:25 INFO  HHH000412: Hibernate ORM core version 5.6.5.Final
w2022-03-15 00:18:25 DEBUG HHH000206: hibernate.properties not found
w2022-03-15 00:18:25 DEBUG Overriding existing service binding [org.hibernate.secure.spi.JaccService]
w2022-03-15 00:18:25 DEBUG Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
w2022-03-15 00:18:25 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
w2022-03-15 00:18:25 INFO  HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
w2022-03-15 00:18:25 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@38aa1e6f
w2022-03-15 00:18:25 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@38aa1e6f
w2022-03-15 00:18:25 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@38aa1e6f
w2022-03-15 00:18:25 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3d446d04
w2022-03-15 00:18:25 DEBUG Adding type registration true_false -> org.hibernate.type.TrueFalseType@548e4b4
w2022-03-15 00:18:25 DEBUG Adding type registration yes_no -> org.hibernate.type.YesNoType@6953376f
w2022-03-15 00:18:25 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@248dda23
w2022-03-15 00:18:25 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@248dda23
w2022-03-15 00:18:25 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@248dda23
w2022-03-15 00:18:25 DEBUG Adding type registration character -> org.hibernate.type.CharacterType@2c1e70d4
w2022-03-15 00:18:25 DEBUG Adding type registration char -> org.hibernate.type.CharacterType@2c1e70d4
w2022-03-15 00:18:25 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2c1e70d4
w2022-03-15 00:18:25 DEBUG Adding type registration short -> org.hibernate.type.ShortType@2a3e687f
w2022-03-15 00:18:25 DEBUG Adding type registration short -> org.hibernate.type.ShortType@2a3e687f
w2022-03-15 00:18:25 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2a3e687f
w2022-03-15 00:18:25 DEBUG Adding type registration integer -> org.hibernate.type.IntegerType@7f09aad3
w2022-03-15 00:18:25 DEBUG Adding type registration int -> org.hibernate.type.IntegerType@7f09aad3
w2022-03-15 00:18:25 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7f09aad3
w2022-03-15 00:18:25 DEBUG Adding type registration long -> org.hibernate.type.LongType@40d7ddf5
w2022-03-15 00:18:25 DEBUG Adding type registration long -> org.hibernate.type.LongType@40d7ddf5
w2022-03-15 00:18:25 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.LongType@40d7ddf5
w2022-03-15 00:18:25 DEBUG Adding type registration float -> org.hibernate.type.FloatType@5686d3cd
w2022-03-15 00:18:25 DEBUG Adding type registration float -> org.hibernate.type.FloatType@5686d3cd
w2022-03-15 00:18:25 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5686d3cd
w2022-03-15 00:18:25 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@64324429
w2022-03-15 00:18:25 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@64324429
w2022-03-15 00:18:25 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@64324429
w2022-03-15 00:18:25 DEBUG Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4f066e75
w2022-03-15 00:18:25 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4f066e75
w2022-03-15 00:18:25 DEBUG Adding type registration big_integer -> org.hibernate.type.BigIntegerType@26ab29da
w2022-03-15 00:18:25 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@26ab29da
w2022-03-15 00:18:25 DEBUG Adding type registration string -> org.hibernate.type.StringType@49e3af65
w2022-03-15 00:18:25 DEBUG Adding type registration java.lang.String -> org.hibernate.type.StringType@49e3af65
w2022-03-15 00:18:25 DEBUG Adding type registration nstring -> org.hibernate.type.StringNVarcharType@698b314b
w2022-03-15 00:18:25 DEBUG Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@41d19f35
w2022-03-15 00:18:25 DEBUG Adding type registration url -> org.hibernate.type.UrlType@411c5fd9
w2022-03-15 00:18:25 DEBUG Adding type registration java.net.URL -> org.hibernate.type.UrlType@411c5fd9
w2022-03-15 00:18:25 DEBUG Adding type registration Duration -> org.hibernate.type.DurationType@5fc07408
w2022-03-15 00:18:25 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5fc07408
w2022-03-15 00:18:25 DEBUG Adding type registration Instant -> org.hibernate.type.InstantType@1e5474dc
w2022-03-15 00:18:25 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.InstantType@1e5474dc
w2022-03-15 00:18:25 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@30b9d5e4
w2022-03-15 00:18:25 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@30b9d5e4
w2022-03-15 00:18:25 DEBUG Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6abbf985
w2022-03-15 00:18:25 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6abbf985
w2022-03-15 00:18:25 DEBUG Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@48a6e254
w2022-03-15 00:18:25 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@48a6e254
w2022-03-15 00:18:25 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4a967af5
w2022-03-15 00:18:25 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4a967af5
w2022-03-15 00:18:25 DEBUG Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@a261cc5
w2022-03-15 00:18:25 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@a261cc5
w2022-03-15 00:18:25 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@f26c0d7
w2022-03-15 00:18:25 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@f26c0d7
w2022-03-15 00:18:25 DEBUG Adding type registration date -> org.hibernate.type.DateType@6434b6bd
w2022-03-15 00:18:25 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.DateType@6434b6bd
w2022-03-15 00:18:25 DEBUG Adding type registration time -> org.hibernate.type.TimeType@58c04d0f
w2022-03-15 00:18:25 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.TimeType@58c04d0f
w2022-03-15 00:18:25 DEBUG Adding type registration timestamp -> org.hibernate.type.TimestampType@4ccad20c
w2022-03-15 00:18:25 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4ccad20c
w2022-03-15 00:18:25 DEBUG Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4ccad20c
w2022-03-15 00:18:25 DEBUG Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@54492ef5
w2022-03-15 00:18:25 DEBUG Adding type registration calendar -> org.hibernate.type.CalendarType@20174be
w2022-03-15 00:18:25 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@20174be
w2022-03-15 00:18:25 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@20174be
w2022-03-15 00:18:25 DEBUG Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6c415b0e
w2022-03-15 00:18:25 DEBUG Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@2aa6a252
w2022-03-15 00:18:25 DEBUG Adding type registration locale -> org.hibernate.type.LocaleType@42dd7c30
w2022-03-15 00:18:25 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@42dd7c30
w2022-03-15 00:18:25 DEBUG Adding type registration currency -> org.hibernate.type.CurrencyType@68fc712c
w2022-03-15 00:18:25 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@68fc712c
w2022-03-15 00:18:25 DEBUG Adding type registration timezone -> org.hibernate.type.TimeZoneType@2d600fba
w2022-03-15 00:18:25 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2d600fba
w2022-03-15 00:18:25 DEBUG Adding type registration class -> org.hibernate.type.ClassType@5376500a
w2022-03-15 00:18:25 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5376500a
w2022-03-15 00:18:25 DEBUG Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@45f3d518
w2022-03-15 00:18:25 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@45f3d518
w2022-03-15 00:18:25 DEBUG Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3b224fef
w2022-03-15 00:18:25 DEBUG Adding type registration binary -> org.hibernate.type.BinaryType@75e50a79
w2022-03-15 00:18:25 DEBUG Adding type registration byte[] -> org.hibernate.type.BinaryType@75e50a79
w2022-03-15 00:18:25 DEBUG Adding type registration [B -> org.hibernate.type.BinaryType@75e50a79
w2022-03-15 00:18:25 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@27a3a5de
w2022-03-15 00:18:25 DEBUG Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@27a3a5de
w2022-03-15 00:18:25 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@27a3a5de
w2022-03-15 00:18:25 DEBUG Adding type registration row_version -> org.hibernate.type.RowVersionType@54d7c696
w2022-03-15 00:18:25 DEBUG Adding type registration image -> org.hibernate.type.ImageType@11f6e989
w2022-03-15 00:18:25 DEBUG Adding type registration characters -> org.hibernate.type.CharArrayType@404febc2
w2022-03-15 00:18:25 DEBUG Adding type registration char[] -> org.hibernate.type.CharArrayType@404febc2
w2022-03-15 00:18:25 DEBUG Adding type registration [C -> org.hibernate.type.CharArrayType@404febc2
w2022-03-15 00:18:25 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1d7c1137
w2022-03-15 00:18:25 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1d7c1137
w2022-03-15 00:18:25 DEBUG Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1d7c1137
w2022-03-15 00:18:25 DEBUG Adding type registration text -> org.hibernate.type.TextType@79c50a77
w2022-03-15 00:18:25 DEBUG Adding type registration ntext -> org.hibernate.type.NTextType@7b34de04
w2022-03-15 00:18:25 DEBUG Adding type registration blob -> org.hibernate.type.BlobType@4aac735f
w2022-03-15 00:18:25 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4aac735f
w2022-03-15 00:18:25 DEBUG Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@c7c4328
w2022-03-15 00:18:25 DEBUG Adding type registration clob -> org.hibernate.type.ClobType@66356c90
w2022-03-15 00:18:25 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@66356c90
w2022-03-15 00:18:25 DEBUG Adding type registration nclob -> org.hibernate.type.NClobType@43e49c53
w2022-03-15 00:18:25 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@43e49c53
w2022-03-15 00:18:25 DEBUG Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@48f0a4a8
w2022-03-15 00:18:25 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2749f1d1
w2022-03-15 00:18:25 DEBUG Adding type registration serializable -> org.hibernate.type.SerializableType@4a593d46
w2022-03-15 00:18:25 DEBUG Adding type registration object -> org.hibernate.type.ObjectType@74a9995d
w2022-03-15 00:18:25 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@74a9995d
w2022-03-15 00:18:25 DEBUG Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@53bd268c
w2022-03-15 00:18:25 DEBUG Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6be62ed7
w2022-03-15 00:18:25 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3d21141d
w2022-03-15 00:18:25 DEBUG Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6a0fbf8
w2022-03-15 00:18:25 DEBUG Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3c1324e6
w2022-03-15 00:18:25 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@66593525
w2022-03-15 00:18:25 DEBUG Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@536d440f
w2022-03-15 00:18:25 DEBUG Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@52931aa1
w2022-03-15 00:18:25 INFO  HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
w2022-03-15 00:18:25 DEBUG Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@2c7353b4] into BootstrapContext; was [null]
w2022-03-15 00:18:25 DEBUG ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@2c7353b4) [was null]
w2022-03-15 00:18:25 DEBUG Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@1388ca61] into BootstrapContext; was [null]
w2022-03-15 00:18:25 DEBUG Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@29b22b2] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@41d80cf5]
w2022-03-15 00:18:25 DEBUG Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@2c7353b4]
w2022-03-15 00:18:25 DEBUG ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@2c7353b4]
w2022-03-15 00:18:25 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
w2022-03-15 00:18:25 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
w2022-03-15 00:18:25 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
w2022-03-15 00:18:25 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
w2022-03-15 00:18:25 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
w2022-03-15 00:18:25 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
w2022-03-15 00:18:25 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
w2022-03-15 00:18:25 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
w2022-03-15 00:18:25 DEBUG Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
w2022-03-15 00:18:25 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
w2022-03-15 00:18:25 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
w2022-03-15 00:18:25 DEBUG Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
w2022-03-15 00:18:25 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
w2022-03-15 00:18:25 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
w2022-03-15 00:18:25 DEBUG Database ->
       name : SQLite
    version : 3.36.0
      major : 3
      minor : 36
w2022-03-15 00:18:25 DEBUG Driver ->
       name : SQLite JDBC
    version : 3.36.0.3
      major : 3
      minor : 36
w2022-03-15 00:18:25 DEBUG JDBC version : 2.1
w2022-03-15 00:18:25 INFO  HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
w2022-03-15 00:18:25 DEBUG JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
w2022-03-15 00:18:25 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
w2022-03-15 00:18:25 DEBUG HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [2] less than 4
w2022-03-15 00:18:25 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@258ab175] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@25e706c5]
w2022-03-15 00:18:25 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
w2022-03-15 00:18:25 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.Comment
w2022-03-15 00:18:25 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 00:18:25 DEBUG Import with entity name Comment
w2022-03-15 00:18:25 DEBUG Bind entity ru.edu.helpdesk.entity.Comment on table comment
w2022-03-15 00:18:25 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 00:18:25 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Comment] is safe
w2022-03-15 00:18:25 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Comment
w2022-03-15 00:18:25 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 00:18:25 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Comment:id]
w2022-03-15 00:18:25 DEBUG building SimpleValue for id
w2022-03-15 00:18:25 DEBUG Building property id
w2022-03-15 00:18:25 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 00:18:25 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=message, insertable=true, updatable=true, unique=false}
w2022-03-15 00:18:25 DEBUG MetadataSourceProcessor property message with lazy=false
w2022-03-15 00:18:25 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Comment:message]
w2022-03-15 00:18:25 DEBUG building SimpleValue for message
w2022-03-15 00:18:25 DEBUG Building property message
w2022-03-15 00:18:25 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 00:18:25 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=ticket, insertable=true, updatable=true, unique=false}
w2022-03-15 00:18:25 DEBUG Building property ticket
w2022-03-15 00:18:25 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 00:18:25 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=user, insertable=true, updatable=true, unique=false}
w2022-03-15 00:18:25 DEBUG Building property user
w2022-03-15 00:18:25 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 00:18:25 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 00:18:25 DEBUG Import with entity name Ticket
w2022-03-15 00:18:25 DEBUG Bind entity ru.edu.helpdesk.entity.Ticket on table ticket
w2022-03-15 00:18:25 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 00:18:25 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Ticket] is safe
w2022-03-15 00:18:25 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Ticket
w2022-03-15 00:18:25 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 00:18:25 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:id]
w2022-03-15 00:18:25 DEBUG building SimpleValue for id
w2022-03-15 00:18:25 DEBUG Building property id
w2022-03-15 00:18:25 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 00:18:25 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 00:18:25 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=client, insertable=true, updatable=true, unique=false}
w2022-03-15 00:18:25 DEBUG Building property client
w2022-03-15 00:18:25 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=status, insertable=true, updatable=true, unique=false}
w2022-03-15 00:18:25 DEBUG MetadataSourceProcessor property status with lazy=false
w2022-03-15 00:18:25 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:status]
w2022-03-15 00:18:25 DEBUG building SimpleValue for status
w2022-03-15 00:18:25 DEBUG Building property status
w2022-03-15 00:18:25 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 00:18:25 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=support, insertable=true, updatable=true, unique=false}
w2022-03-15 00:18:25 DEBUG Building property support
w2022-03-15 00:18:25 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=title, insertable=true, updatable=true, unique=false}
w2022-03-15 00:18:25 DEBUG MetadataSourceProcessor property title with lazy=false
w2022-03-15 00:18:25 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:title]
w2022-03-15 00:18:25 DEBUG building SimpleValue for title
w2022-03-15 00:18:25 DEBUG Building property title
w2022-03-15 00:18:25 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.User
w2022-03-15 00:18:25 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 00:18:25 DEBUG Import with entity name User
w2022-03-15 00:18:25 DEBUG Bind entity ru.edu.helpdesk.entity.User on table user
w2022-03-15 00:18:25 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 00:18:25 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.User] is safe
w2022-03-15 00:18:25 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.User
w2022-03-15 00:18:25 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 00:18:25 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:id]
w2022-03-15 00:18:25 DEBUG building SimpleValue for id
w2022-03-15 00:18:25 DEBUG Building property id
w2022-03-15 00:18:25 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 00:18:25 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
w2022-03-15 00:18:25 DEBUG MetadataSourceProcessor property firstName with lazy=false
w2022-03-15 00:18:25 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:firstName]
w2022-03-15 00:18:25 DEBUG building SimpleValue for firstName
w2022-03-15 00:18:25 DEBUG Building property firstName
w2022-03-15 00:18:25 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
w2022-03-15 00:18:25 DEBUG MetadataSourceProcessor property lastName with lazy=false
w2022-03-15 00:18:25 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:lastName]
w2022-03-15 00:18:25 DEBUG building SimpleValue for lastName
w2022-03-15 00:18:25 DEBUG Building property lastName
w2022-03-15 00:18:25 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=login, insertable=true, updatable=true, unique=false}
w2022-03-15 00:18:25 DEBUG MetadataSourceProcessor property login with lazy=false
w2022-03-15 00:18:25 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:login]
w2022-03-15 00:18:25 DEBUG building SimpleValue for login
w2022-03-15 00:18:25 DEBUG Building property login
w2022-03-15 00:18:25 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
w2022-03-15 00:18:25 DEBUG MetadataSourceProcessor property password with lazy=false
w2022-03-15 00:18:25 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:password]
w2022-03-15 00:18:25 DEBUG building SimpleValue for password
w2022-03-15 00:18:25 DEBUG Building property password
w2022-03-15 00:18:25 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=role, insertable=true, updatable=true, unique=false}
w2022-03-15 00:18:25 DEBUG MetadataSourceProcessor property role with lazy=false
w2022-03-15 00:18:25 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:role]
w2022-03-15 00:18:25 DEBUG building SimpleValue for role
w2022-03-15 00:18:25 DEBUG Building property role
w2022-03-15 00:18:25 DEBUG Starting fillSimpleValue for id
w2022-03-15 00:18:25 DEBUG Starting fillSimpleValue for message
w2022-03-15 00:18:25 DEBUG Starting fillSimpleValue for id
w2022-03-15 00:18:25 DEBUG Starting fillSimpleValue for status
w2022-03-15 00:18:25 DEBUG Starting fillSimpleValue for title
w2022-03-15 00:18:25 DEBUG Starting fillSimpleValue for id
w2022-03-15 00:18:25 DEBUG Starting fillSimpleValue for firstName
w2022-03-15 00:18:25 DEBUG Starting fillSimpleValue for lastName
w2022-03-15 00:18:25 DEBUG Starting fillSimpleValue for login
w2022-03-15 00:18:25 DEBUG Starting fillSimpleValue for password
w2022-03-15 00:18:25 DEBUG Starting fillSimpleValue for role
w2022-03-15 00:18:25 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [comment]
w2022-03-15 00:18:25 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [ticket]
w2022-03-15 00:18:25 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [user]
w2022-03-15 00:18:25 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 00:18:25 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 00:18:25 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 00:18:25 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 00:18:25 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 00:18:25 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 00:18:25 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 00:18:25 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 00:18:25 DEBUG Building session factory
w2022-03-15 00:18:25 DEBUG SessionFactory name : null
w2022-03-15 00:18:25 DEBUG Automatic flush during beforeCompletion(): enabled
w2022-03-15 00:18:25 DEBUG Automatic session close at end of transaction: disabled
w2022-03-15 00:18:25 DEBUG Statistics: disabled
w2022-03-15 00:18:25 DEBUG Deleted entity synthetic identifier rollback: disabled
w2022-03-15 00:18:25 DEBUG Default entity-mode: pojo
w2022-03-15 00:18:25 DEBUG Check Nullability in Core (should be disabled when Bean Validation is on): enabled
w2022-03-15 00:18:25 DEBUG Allow initialization of lazy state outside session : disabled
w2022-03-15 00:18:25 DEBUG Using BatchFetchStyle : LEGACY
w2022-03-15 00:18:25 DEBUG Default batch fetch size: -1
w2022-03-15 00:18:25 DEBUG Maximum outer join fetch depth: null
w2022-03-15 00:18:25 DEBUG Default null ordering: NONE
w2022-03-15 00:18:25 DEBUG Order SQL updates by primary key: disabled
w2022-03-15 00:18:25 DEBUG Order SQL inserts for batching: disabled
w2022-03-15 00:18:25 DEBUG multi-tenancy strategy : NONE
w2022-03-15 00:18:25 DEBUG JTA Track by Thread: enabled
w2022-03-15 00:18:25 DEBUG Query language substitutions: {}
w2022-03-15 00:18:25 DEBUG Named query checking : enabled
w2022-03-15 00:18:25 DEBUG Second-level cache: disabled
w2022-03-15 00:18:25 DEBUG Second-level query cache: disabled
w2022-03-15 00:18:25 DEBUG Second-level query cache factory: null
w2022-03-15 00:18:25 DEBUG Second-level cache region prefix: null
w2022-03-15 00:18:25 DEBUG Optimize second-level cache for minimal puts: disabled
w2022-03-15 00:18:25 DEBUG Structured second-level cache entries: disabled
w2022-03-15 00:18:25 DEBUG Second-level cache direct-reference entries: disabled
w2022-03-15 00:18:25 DEBUG Automatic eviction of collection cache: disabled
w2022-03-15 00:18:25 DEBUG JDBC batch size: 1
w2022-03-15 00:18:25 DEBUG JDBC batch updates for versioned data: enabled
w2022-03-15 00:18:25 DEBUG Scrollable result sets: disabled
w2022-03-15 00:18:25 DEBUG Wrap result sets: disabled
w2022-03-15 00:18:25 DEBUG JDBC3 getGeneratedKeys(): enabled
w2022-03-15 00:18:25 DEBUG JDBC result set fetch size: null
w2022-03-15 00:18:25 DEBUG Connection release mode: ON_CLOSE
w2022-03-15 00:18:25 DEBUG Generate SQL with comments: disabled
w2022-03-15 00:18:25 DEBUG JPA compliance - query : disabled
w2022-03-15 00:18:25 DEBUG JPA compliance - closed-handling : disabled
w2022-03-15 00:18:25 DEBUG JPA compliance - lists : disabled
w2022-03-15 00:18:25 DEBUG JPA compliance - transactions : disabled
w2022-03-15 00:18:25 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 00:18:25 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 00:18:25 DEBUG Session factory constructed with filter configurations : {}
w2022-03-15 00:18:25 DEBUG Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=true, java.specification.version=1.8, file.encoding.pkg=sun.io, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@3c72be6f, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.SQLiteDialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\charsets.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\cldrdata.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\dnsns.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\jaccess.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\localedata.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\nashorn.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunec.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunmscapi.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\zipfs.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jce.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jfr.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jsse.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\management-agent.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\resources.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\rt.jar;C:\Users\Ольга\Desktop\Java\Project\Project1\helpdeskproject\target\classes;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\2.6.4\spring-boot-starter-data-jpa-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\2.6.4\spring-boot-starter-jdbc-2.6.4.jar;C:\Users\Ольга\.m2\repository\com\zaxxer\HikariCP\4.0.3\HikariCP-4.0.3.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-jdbc\5.3.16\spring-jdbc-5.3.16.jar;C:\Users\Ольга\.m2\repository\jakarta\transaction\jakarta.transaction-api\1.3.3\jakarta.transaction-api-1.3.3.jar;C:\Users\Ольга\.m2\repository\jakarta\persistence\jakarta.persistence-api\2.2.3\jakarta.persistence-api-2.2.3.jar;C:\Users\Ольга\.m2\repository\org\hibernate\hibernate-core\5.6.5.Final\hibernate-core-5.6.5.Final.jar;C:\Users\Ольга\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy\1.11.22\byte-buddy-1.11.22.jar;C:\Users\Ольга\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ольга\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Ольга\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.6\jaxb-runtime-2.3.6.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\txw2\2.3.6\txw2-2.3.6.jar;C:\Users\Ольга\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.12\istack-commons-runtime-3.0.12.jar;C:\Users\Ольга\.m2\repository\com\sun\activation\jakarta.activation\1.2.2\jakarta.activation-1.2.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\data\spring-data-jpa\2.6.2\spring-data-jpa-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\data\spring-data-commons\2.6.2\spring-data-commons-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-orm\5.3.16\spring-orm-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-context\5.3.16\spring-context-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-tx\5.3.16\spring-tx-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-beans\5.3.16\spring-beans-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-aspects\5.3.16\spring-aspects-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-security\2.6.4\spring-boot-starter-security-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter\2.6.4\spring-boot-starter-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-logging\2.6.4\spring-boot-starter-logging-2.6.4.jar;C:\Users\Ольга\.m2\repository\ch\qos\logback\logback-classic\1.2.10\logback-classic-1.2.10.jar;C:\Users\Ольга\.m2\repository\ch\qos\logback\logback-core\1.2.10\logback-core-1.2.10.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.17.1\log4j-to-slf4j-2.17.1.jar;C:\Users\Ольга\.m2\repository\org\slf4j\jul-to-slf4j\1.7.36\jul-to-slf4j-1.7.36.jar;C:\Users\Ольга\.m2\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;C:\Users\Ольга\.m2\repository\org\yaml\snakeyaml\1.29\snakeyaml-1.29.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-aop\5.3.16\spring-aop-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-config\5.6.2\spring-security-config-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-web\5.6.2\spring-security-web-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-expression\5.3.16\spring-expression-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-web\2.6.4\spring-boot-starter-web-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-json\2.6.4\spring-boot-starter-json-2.6.4.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.13.1\jackson-datatype-jdk8-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.13.1\jackson-datatype-jsr310-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.13.1\jackson-module-parameter-names-2.13.1.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\2.6.4\spring-boot-starter-tomcat-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.58\tomcat-embed-core-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\9.0.58\tomcat-embed-el-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.58\tomcat-embed-websocket-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-web\5.3.16\spring-web-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-webmvc\5.3.16\spring-webmvc-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-devtools\2.6.4\spring-boot-devtools-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot\2.6.4\spring-boot-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\2.6.4\spring-boot-autoconfigure-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\xerial\sqlite-jdbc\3.36.0.3\sqlite-jdbc-3.36.0.3.jar;C:\Users\Ольга\.m2\repository\com\zsoltfabok\sqlite-dialect\1.0\sqlite-dialect-1.0.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-aop\2.6.2\spring-boot-starter-aop-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\aspectj\aspectjweaver\1.9.7\aspectjweaver-1.9.7.jar;C:\Users\Ольга\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.3\jakarta.xml.bind-api-2.3.3.jar;C:\Users\Ольга\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.2\jakarta.activation-api-1.2.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-core\5.3.16\spring-core-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-jcl\5.3.16\spring-jcl-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-core\5.6.2\spring-security-core-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-crypto\5.6.2\spring-security-crypto-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\projectlombok\lombok\1.18.22\lombok-1.18.22.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\2.6.4\spring-boot-starter-thymeleaf-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\thymeleaf-spring5\3.0.15.RELEASE\thymeleaf-spring5-3.0.15.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\thymeleaf\3.0.15.RELEASE\thymeleaf-3.0.15.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\attoparser\attoparser\2.0.5.RELEASE\attoparser-2.0.5.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-java8time\3.0.4.RELEASE\thymeleaf-extras-java8time-3.0.4.RELEASE.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.1\jackson-databind-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.1\jackson-annotations-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.1\jackson-core-2.13.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-api\2.4.1\log4j-api-2.4.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-core\2.4.1\log4j-core-2.4.1.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.2\lib\idea_rt.jar, java.vm.vendor=Temurin, sun.arch.data.model=64, user.variant=, java.vendor.url=https://adoptium.net/, catalina.useNaming=false, user.timezone=Europe/Moscow, jakarta.persistence.sharedCache.mode=UNSPECIFIED, os.name=Windows 10, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), user.country=RU, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\bin, sun.java.command=ru.edu.helpdesk.HelpdeskApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@5d8b0852, com.sun.management.jmxremote=, javax.persistence.sharedCache.mode=UNSPECIFIED, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, user.home=C:\Users\Ольга, user.language=ru, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre, file.separator=\, spring.output.ansi.enabled=always, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, sun.boot.class.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\resources.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\rt.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\sunrsasign.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jsse.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jce.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\charsets.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jfr.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\classes, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_312-b07, user.name=Эльдорадо, spring.jmx.enabled=true, path.separator=;, os.version=10.0, java.endorsed.dirs=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\endorsed, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=default, spring.beaninfo.ignore=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=C:\Users\134E~1\AppData\Local\Temp\, catalina.home=C:\Users\Ольга\AppData\Local\Temp\tomcat.8080.4479595962328094202, java.version=1.8.0_312, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\Ольга\Desktop\Java\Project\Project1\helpdeskproject, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=11220, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\Ольга\AppData\Local\Temp\tomcat.8080.4479595962328094202, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@2e2db6be, java.library.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\windows\System32\OpenSSH\;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\Program Files\apache-maven-3.8.4\bin;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Ольга\AppData\Local\Microsoft\WindowsApps;C:\Users\Ольга\AppData\Local\Programs\Microsoft VS Code\bin;C:\SQLite;C:\Users\Ольга\AppData\Roaming\npm;C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.2\bin;;., java.vendor=Temurin, java.vm.info=mixed mode, java.vm.version=25.312-b07, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, java.ext.dirs=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext;C:\windows\Sun\Java\lib\ext, hibernate.connection.datasource=HikariDataSource (HikariPool-1), hibernate.hbm2ddl.import_files=data/import.sql, java.class.version=52.0}
w2022-03-15 00:18:25 DEBUG Skipping JACC integration as it was not enabled
w2022-03-15 00:18:25 DEBUG Using ORDINAL-based conversion for Enum ru.edu.helpdesk.entity.UserRole
w2022-03-15 00:18:25 DEBUG Using ORDINAL-based conversion for Enum ru.edu.helpdesk.entity.TicketStatus
w2022-03-15 00:18:25 DEBUG Instantiated session factory
w2022-03-15 00:18:25 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@258ab175] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@1a1210cb]
w2022-03-15 00:18:25 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.User] is safe
w2022-03-15 00:18:25 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.User
w2022-03-15 00:18:25 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:18:25 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:18:25 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:18:25 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:18:25 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Ticket] is safe
w2022-03-15 00:18:25 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Ticket
w2022-03-15 00:18:25 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:18:25 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:18:25 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:18:25 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:18:25 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:18:25 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:18:25 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:18:25 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:18:25 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Comment] is safe
w2022-03-15 00:18:25 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Comment
w2022-03-15 00:18:25 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:18:25 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:18:25 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:18:25 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:18:25 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.User
w2022-03-15 00:18:25 DEBUG  Version select: select id from user where id =?
w2022-03-15 00:18:25 DEBUG  Snapshot select: select user_.id, user_.first_name as first_na2_2_, user_.last_name as last_nam3_2_, user_.login as login4_2_, user_.password as password5_2_, user_.role as role6_2_ from user user_ where user_.id=?
w2022-03-15 00:18:25 DEBUG  Insert 0: insert into user (first_name, last_name, login, password, role, id) values (?, ?, ?, ?, ?, ?)
w2022-03-15 00:18:25 DEBUG  Update 0: update user set first_name=?, last_name=?, login=?, password=?, role=? where id=?
w2022-03-15 00:18:25 DEBUG  Delete 0: delete from user where id=?
w2022-03-15 00:18:25 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e3307b8]
w2022-03-15 00:18:25 DEBUG Visiting attribute path : firstName
w2022-03-15 00:18:25 DEBUG Visiting attribute path : lastName
w2022-03-15 00:18:25 DEBUG Visiting attribute path : login
w2022-03-15 00:18:25 DEBUG Visiting attribute path : password
w2022-03-15 00:18:25 DEBUG Visiting attribute path : role
w2022-03-15 00:18:25 DEBUG Building LoadPlan...
w2022-03-15 00:18:25 DEBUG processing queryspace <gen:0>
w2022-03-15 00:18:25 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.User)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

w2022-03-15 00:18:25 DEBUG Static select for entity ru.edu.helpdesk.entity.User [NONE]: select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 00:18:25 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.Ticket
w2022-03-15 00:18:25 DEBUG  Version select: select id from ticket where id =?
w2022-03-15 00:18:25 DEBUG  Snapshot select: select ticket_.id, ticket_.client_id as client_i4_1_, ticket_.status as status2_1_, ticket_.support_id as support_5_1_, ticket_.title as title3_1_ from ticket ticket_ where ticket_.id=?
w2022-03-15 00:18:25 DEBUG  Insert 0: insert into ticket (client_id, status, support_id, title, id) values (?, ?, ?, ?, ?)
w2022-03-15 00:18:25 DEBUG  Update 0: update ticket set client_id=?, status=?, support_id=?, title=? where id=?
w2022-03-15 00:18:25 DEBUG  Delete 0: delete from ticket where id=?
w2022-03-15 00:18:25 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2622f581]
w2022-03-15 00:18:25 DEBUG Visiting attribute path : client
w2022-03-15 00:18:25 DEBUG Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f74b25b]
w2022-03-15 00:18:25 DEBUG Visiting attribute path : client.firstName
w2022-03-15 00:18:25 DEBUG Visiting attribute path : client.lastName
w2022-03-15 00:18:25 DEBUG Visiting attribute path : client.login
w2022-03-15 00:18:25 DEBUG Visiting attribute path : client.password
w2022-03-15 00:18:25 DEBUG Visiting attribute path : client.role
w2022-03-15 00:18:25 DEBUG Visiting attribute path : status
w2022-03-15 00:18:25 DEBUG Visiting attribute path : support
w2022-03-15 00:18:25 DEBUG Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b5210c9]
w2022-03-15 00:18:25 DEBUG Visiting attribute path : support.firstName
w2022-03-15 00:18:25 DEBUG Visiting attribute path : support.lastName
w2022-03-15 00:18:25 DEBUG Visiting attribute path : support.login
w2022-03-15 00:18:25 DEBUG Visiting attribute path : support.password
w2022-03-15 00:18:25 DEBUG Visiting attribute path : support.role
w2022-03-15 00:18:25 DEBUG Visiting attribute path : title
w2022-03-15 00:18:25 DEBUG Building LoadPlan...
w2022-03-15 00:18:25 DEBUG processing queryspace <gen:0>
w2022-03-15 00:18:25 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.Ticket)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.Ticket, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.Ticket)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:1>, path=ru.edu.helpdesk.entity.Ticket.client)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:2>, path=ru.edu.helpdesk.entity.Ticket.support)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.Ticket)
          - SQL table alias mapping - ticket0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(client)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
          - JOIN (JoinDefinedByMetadata(support)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user2_
                - alias suffix - 2_
                - suffixed key columns - {id1_2_2_}

w2022-03-15 00:18:25 DEBUG Static select for entity ru.edu.helpdesk.entity.Ticket [NONE]: select ticket0_.id as id1_1_0_, ticket0_.client_id as client_i4_1_0_, ticket0_.status as status2_1_0_, ticket0_.support_id as support_5_1_0_, ticket0_.title as title3_1_0_, user1_.id as id1_2_1_, user1_.first_name as first_na2_2_1_, user1_.last_name as last_nam3_2_1_, user1_.login as login4_2_1_, user1_.password as password5_2_1_, user1_.role as role6_2_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id left outer join user user2_ on ticket0_.support_id=user2_.id where ticket0_.id=?
w2022-03-15 00:18:25 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.Comment
w2022-03-15 00:18:25 DEBUG  Version select: select id from comment where id =?
w2022-03-15 00:18:25 DEBUG  Snapshot select: select comment_.id, comment_.message as message2_0_, comment_.ticket_id as ticket_i3_0_, comment_.user_id as user_id4_0_ from comment comment_ where comment_.id=?
w2022-03-15 00:18:25 DEBUG  Insert 0: insert into comment (message, ticket_id, user_id, id) values (?, ?, ?, ?)
w2022-03-15 00:18:25 DEBUG  Update 0: update comment set message=?, ticket_id=?, user_id=? where id=?
w2022-03-15 00:18:25 DEBUG  Delete 0: delete from comment where id=?
w2022-03-15 00:18:25 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@632c38bd]
w2022-03-15 00:18:25 DEBUG Visiting attribute path : message
w2022-03-15 00:18:25 DEBUG Visiting attribute path : ticket
w2022-03-15 00:18:25 DEBUG Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e83af0b]
w2022-03-15 00:18:25 DEBUG Visiting attribute path : ticket.client
w2022-03-15 00:18:25 DEBUG Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@135b0ec1]
w2022-03-15 00:18:25 DEBUG Visiting attribute path : ticket.client.firstName
w2022-03-15 00:18:25 DEBUG Visiting attribute path : ticket.client.lastName
w2022-03-15 00:18:25 DEBUG Visiting attribute path : ticket.client.login
w2022-03-15 00:18:25 DEBUG Visiting attribute path : ticket.client.password
w2022-03-15 00:18:25 DEBUG Visiting attribute path : ticket.client.role
w2022-03-15 00:18:25 DEBUG Visiting attribute path : ticket.status
w2022-03-15 00:18:25 DEBUG Visiting attribute path : ticket.support
w2022-03-15 00:18:25 DEBUG Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@19c0fe97]
w2022-03-15 00:18:25 DEBUG Visiting attribute path : ticket.support.firstName
w2022-03-15 00:18:25 DEBUG Visiting attribute path : ticket.support.lastName
w2022-03-15 00:18:25 DEBUG Visiting attribute path : ticket.support.login
w2022-03-15 00:18:25 DEBUG Visiting attribute path : ticket.support.password
w2022-03-15 00:18:25 DEBUG Visiting attribute path : ticket.support.role
w2022-03-15 00:18:25 DEBUG Visiting attribute path : ticket.title
w2022-03-15 00:18:25 DEBUG Visiting attribute path : user
w2022-03-15 00:18:25 DEBUG Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@422abeae]
w2022-03-15 00:18:25 DEBUG Visiting attribute path : user.firstName
w2022-03-15 00:18:25 DEBUG Visiting attribute path : user.lastName
w2022-03-15 00:18:25 DEBUG Visiting attribute path : user.login
w2022-03-15 00:18:25 DEBUG Visiting attribute path : user.password
w2022-03-15 00:18:25 DEBUG Visiting attribute path : user.role
w2022-03-15 00:18:25 DEBUG Building LoadPlan...
w2022-03-15 00:18:25 DEBUG processing queryspace <gen:0>
w2022-03-15 00:18:25 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.Comment)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.Comment, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.Comment)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.Ticket, querySpaceUid=<gen:1>, path=ru.edu.helpdesk.entity.Comment.ticket)
             - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:2>, path=ru.edu.helpdesk.entity.Comment.ticket.client)
             - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:3>, path=ru.edu.helpdesk.entity.Comment.ticket.support)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:4>, path=ru.edu.helpdesk.entity.Comment.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(ticket)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ru.edu.helpdesk.entity.Ticket)
                - SQL table alias mapping - ticket1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(client)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=ru.edu.helpdesk.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}
                - JOIN (JoinDefinedByMetadata(support)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=ru.edu.helpdesk.entity.User)
                      - SQL table alias mapping - user3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_2_3_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user4_
                - alias suffix - 4_
                - suffixed key columns - {id1_2_4_}

w2022-03-15 00:18:25 DEBUG Static select for entity ru.edu.helpdesk.entity.Comment [NONE]: select comment0_.id as id1_0_0_, comment0_.message as message2_0_0_, comment0_.ticket_id as ticket_i3_0_0_, comment0_.user_id as user_id4_0_0_, ticket1_.id as id1_1_1_, ticket1_.client_id as client_i4_1_1_, ticket1_.status as status2_1_1_, ticket1_.support_id as support_5_1_1_, ticket1_.title as title3_1_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_, user3_.id as id1_2_3_, user3_.first_name as first_na2_2_3_, user3_.last_name as last_nam3_2_3_, user3_.login as login4_2_3_, user3_.password as password5_2_3_, user3_.role as role6_2_3_, user4_.id as id1_2_4_, user4_.first_name as first_na2_2_4_, user4_.last_name as last_nam3_2_4_, user4_.login as login4_2_4_, user4_.password as password5_2_4_, user4_.role as role6_2_4_ from comment comment0_ left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id left outer join user user2_ on ticket1_.client_id=user2_.id left outer join user user3_ on ticket1_.support_id=user3_.id left outer join user user4_ on comment0_.user_id=user4_.id where comment0_.id=?
w2022-03-15 00:18:25 DEBUG drop table if exists comment
w2022-03-15 00:18:25 DEBUG drop table if exists hibernate_sequence
w2022-03-15 00:18:25 DEBUG drop table if exists ticket
w2022-03-15 00:18:25 DEBUG drop table if exists user
w2022-03-15 00:18:25 DEBUG create table comment (id bigint not null, message varchar(255) not null, ticket_id bigint, user_id bigint, primary key (id))
w2022-03-15 00:18:25 DEBUG create table hibernate_sequence (next_val bigint)
w2022-03-15 00:18:25 DEBUG insert into hibernate_sequence values ( 1 )
w2022-03-15 00:18:25 DEBUG create table ticket (id bigint not null, status integer, title varchar(255) not null, client_id bigint, support_id bigint, primary key (id))
w2022-03-15 00:18:25 DEBUG create table user (id bigint not null, first_name varchar(255), last_name varchar(255), login varchar(255) not null, password varchar(255) not null, role integer, primary key (id))
w2022-03-15 00:18:26 INFO  HHH000476: Executing import script 'file:/C:/Users/%d0%9e%d0%bb%d1%8c%d0%b3%d0%b0/Desktop/Java/Project/Project1/helpdeskproject/target/classes/data/import.sql'
w2022-03-15 00:18:26 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (1, 'admin', 'admin', 'admin', 'admin', 0)
w2022-03-15 00:18:26 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (2, 'support', 'support', 'support', 'support', 1)
w2022-03-15 00:18:26 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (3, 'user1', 'user1', 'user1', 'user1', 2)
w2022-03-15 00:18:26 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (4, 'user2', 'user2', 'user2', 'user2', 2)
w2022-03-15 00:18:26 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (1, 1, 'Hello user1', 3, 2)
w2022-03-15 00:18:26 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (2, 0, 'Title2', 3, NULL)
w2022-03-15 00:18:26 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (3, 0, 'Message user2', 4, NULL)
w2022-03-15 00:18:26 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (1, "Hello ticket1", 1, 3)
w2022-03-15 00:18:26 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (2, "Hello ticket2", 2, 3)
w2022-03-15 00:18:26 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (3, "Hello ticket11", 1, 2)
w2022-03-15 00:18:26 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (4, "Hello ticket111", 1, 2)
w2022-03-15 00:18:26 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (5, "Hello ticket22", 2, 2)
w2022-03-15 00:18:26 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (6, "Hello ticket3", 3, 4)
w2022-03-15 00:18:26 DEBUG UPDATE hibernate_sequence SET next_val = 8 WHERE next_val = 1
w2022-03-15 00:18:26 INFO  HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
w2022-03-15 00:18:26 DEBUG Checking 0 named HQL queries
w2022-03-15 00:18:26 DEBUG Checking 0 named SQL queries
w2022-03-15 00:18:26 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 00:18:26 DEBUG Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@16667c0b
w2022-03-15 00:18:26 DEBUG Registering SessionFactory: 0c2d6194-a914-4e22-8a55-79a47d19d8b6 (<unnamed>)
w2022-03-15 00:18:26 DEBUG Not binding SessionFactory to JNDI, no JNDI name configured
w2022-03-15 00:18:26 DEBUG Statistics initialized [enabled=false]
w2022-03-15 00:18:26 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 00:18:26 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 00:18:26 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 00:19:32 DEBUG Logging Provider: org.jboss.logging.Log4j2LoggerProvider
w2022-03-15 00:19:32 DEBUG PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@25cab7d7
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/%d0%9e%d0%bb%d1%8c%d0%b3%d0%b0/Desktop/Java/Project/Project1/helpdeskproject/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		ru.edu.helpdesk.entity.Comment
		ru.edu.helpdesk.entity.Ticket
		ru.edu.helpdesk.entity.User]
	Mapping files names []
	Properties []
w2022-03-15 00:19:32 DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
w2022-03-15 00:19:32 DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
w2022-03-15 00:19:32 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
w2022-03-15 00:19:32 INFO  HHH000412: Hibernate ORM core version 5.6.5.Final
w2022-03-15 00:19:32 DEBUG HHH000206: hibernate.properties not found
w2022-03-15 00:19:32 DEBUG Overriding existing service binding [org.hibernate.secure.spi.JaccService]
w2022-03-15 00:19:33 DEBUG Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
w2022-03-15 00:19:33 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
w2022-03-15 00:19:33 INFO  HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
w2022-03-15 00:19:33 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@4d45695d
w2022-03-15 00:19:33 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@4d45695d
w2022-03-15 00:19:33 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4d45695d
w2022-03-15 00:19:33 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7d114cd6
w2022-03-15 00:19:33 DEBUG Adding type registration true_false -> org.hibernate.type.TrueFalseType@2e585126
w2022-03-15 00:19:33 DEBUG Adding type registration yes_no -> org.hibernate.type.YesNoType@7b49de1d
w2022-03-15 00:19:33 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@2eb3e9c9
w2022-03-15 00:19:33 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@2eb3e9c9
w2022-03-15 00:19:33 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2eb3e9c9
w2022-03-15 00:19:33 DEBUG Adding type registration character -> org.hibernate.type.CharacterType@461413da
w2022-03-15 00:19:33 DEBUG Adding type registration char -> org.hibernate.type.CharacterType@461413da
w2022-03-15 00:19:33 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@461413da
w2022-03-15 00:19:33 DEBUG Adding type registration short -> org.hibernate.type.ShortType@6e7e331
w2022-03-15 00:19:33 DEBUG Adding type registration short -> org.hibernate.type.ShortType@6e7e331
w2022-03-15 00:19:33 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6e7e331
w2022-03-15 00:19:33 DEBUG Adding type registration integer -> org.hibernate.type.IntegerType@29f9119d
w2022-03-15 00:19:33 DEBUG Adding type registration int -> org.hibernate.type.IntegerType@29f9119d
w2022-03-15 00:19:33 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@29f9119d
w2022-03-15 00:19:33 DEBUG Adding type registration long -> org.hibernate.type.LongType@7807cb1d
w2022-03-15 00:19:33 DEBUG Adding type registration long -> org.hibernate.type.LongType@7807cb1d
w2022-03-15 00:19:33 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.LongType@7807cb1d
w2022-03-15 00:19:33 DEBUG Adding type registration float -> org.hibernate.type.FloatType@51f8b3b6
w2022-03-15 00:19:33 DEBUG Adding type registration float -> org.hibernate.type.FloatType@51f8b3b6
w2022-03-15 00:19:33 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.FloatType@51f8b3b6
w2022-03-15 00:19:33 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@2cf6ecbb
w2022-03-15 00:19:33 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@2cf6ecbb
w2022-03-15 00:19:33 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2cf6ecbb
w2022-03-15 00:19:33 DEBUG Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@dd44af
w2022-03-15 00:19:33 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@dd44af
w2022-03-15 00:19:33 DEBUG Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4ee30d77
w2022-03-15 00:19:33 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4ee30d77
w2022-03-15 00:19:33 DEBUG Adding type registration string -> org.hibernate.type.StringType@4f85fb63
w2022-03-15 00:19:33 DEBUG Adding type registration java.lang.String -> org.hibernate.type.StringType@4f85fb63
w2022-03-15 00:19:33 DEBUG Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1c7da41
w2022-03-15 00:19:33 DEBUG Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@61487fd8
w2022-03-15 00:19:33 DEBUG Adding type registration url -> org.hibernate.type.UrlType@271a0c6c
w2022-03-15 00:19:33 DEBUG Adding type registration java.net.URL -> org.hibernate.type.UrlType@271a0c6c
w2022-03-15 00:19:33 DEBUG Adding type registration Duration -> org.hibernate.type.DurationType@788e3d68
w2022-03-15 00:19:33 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.DurationType@788e3d68
w2022-03-15 00:19:33 DEBUG Adding type registration Instant -> org.hibernate.type.InstantType@ee25383
w2022-03-15 00:19:33 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.InstantType@ee25383
w2022-03-15 00:19:33 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@782a50fe
w2022-03-15 00:19:33 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@782a50fe
w2022-03-15 00:19:33 DEBUG Adding type registration LocalDate -> org.hibernate.type.LocalDateType@23b94da0
w2022-03-15 00:19:33 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@23b94da0
w2022-03-15 00:19:33 DEBUG Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@4b183b38
w2022-03-15 00:19:33 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@4b183b38
w2022-03-15 00:19:33 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@21caf901
w2022-03-15 00:19:33 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@21caf901
w2022-03-15 00:19:33 DEBUG Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4c2bb21a
w2022-03-15 00:19:33 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4c2bb21a
w2022-03-15 00:19:33 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1786add
w2022-03-15 00:19:33 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1786add
w2022-03-15 00:19:33 DEBUG Adding type registration date -> org.hibernate.type.DateType@794c1c8
w2022-03-15 00:19:33 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.DateType@794c1c8
w2022-03-15 00:19:33 DEBUG Adding type registration time -> org.hibernate.type.TimeType@25915de0
w2022-03-15 00:19:33 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.TimeType@25915de0
w2022-03-15 00:19:33 DEBUG Adding type registration timestamp -> org.hibernate.type.TimestampType@418011d2
w2022-03-15 00:19:33 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@418011d2
w2022-03-15 00:19:33 DEBUG Adding type registration java.util.Date -> org.hibernate.type.TimestampType@418011d2
w2022-03-15 00:19:33 DEBUG Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3466084b
w2022-03-15 00:19:33 DEBUG Adding type registration calendar -> org.hibernate.type.CalendarType@7c3bc08e
w2022-03-15 00:19:33 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7c3bc08e
w2022-03-15 00:19:33 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7c3bc08e
w2022-03-15 00:19:33 DEBUG Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7f37ef0b
w2022-03-15 00:19:33 DEBUG Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@4242d400
w2022-03-15 00:19:33 DEBUG Adding type registration locale -> org.hibernate.type.LocaleType@471f2f0e
w2022-03-15 00:19:33 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@471f2f0e
w2022-03-15 00:19:33 DEBUG Adding type registration currency -> org.hibernate.type.CurrencyType@68cad78a
w2022-03-15 00:19:33 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@68cad78a
w2022-03-15 00:19:33 DEBUG Adding type registration timezone -> org.hibernate.type.TimeZoneType@40c55fd7
w2022-03-15 00:19:33 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@40c55fd7
w2022-03-15 00:19:33 DEBUG Adding type registration class -> org.hibernate.type.ClassType@2ac63e81
w2022-03-15 00:19:33 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2ac63e81
w2022-03-15 00:19:33 DEBUG Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@31dcbb27
w2022-03-15 00:19:33 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@31dcbb27
w2022-03-15 00:19:33 DEBUG Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6e0167f9
w2022-03-15 00:19:33 DEBUG Adding type registration binary -> org.hibernate.type.BinaryType@545d44d9
w2022-03-15 00:19:33 DEBUG Adding type registration byte[] -> org.hibernate.type.BinaryType@545d44d9
w2022-03-15 00:19:33 DEBUG Adding type registration [B -> org.hibernate.type.BinaryType@545d44d9
w2022-03-15 00:19:33 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7c018fb1
w2022-03-15 00:19:33 DEBUG Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7c018fb1
w2022-03-15 00:19:33 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7c018fb1
w2022-03-15 00:19:33 DEBUG Adding type registration row_version -> org.hibernate.type.RowVersionType@43826681
w2022-03-15 00:19:33 DEBUG Adding type registration image -> org.hibernate.type.ImageType@79aa87ba
w2022-03-15 00:19:33 DEBUG Adding type registration characters -> org.hibernate.type.CharArrayType@54c2882b
w2022-03-15 00:19:33 DEBUG Adding type registration char[] -> org.hibernate.type.CharArrayType@54c2882b
w2022-03-15 00:19:33 DEBUG Adding type registration [C -> org.hibernate.type.CharArrayType@54c2882b
w2022-03-15 00:19:33 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2c1f810b
w2022-03-15 00:19:33 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2c1f810b
w2022-03-15 00:19:33 DEBUG Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2c1f810b
w2022-03-15 00:19:33 DEBUG Adding type registration text -> org.hibernate.type.TextType@204342ae
w2022-03-15 00:19:33 DEBUG Adding type registration ntext -> org.hibernate.type.NTextType@18088009
w2022-03-15 00:19:33 DEBUG Adding type registration blob -> org.hibernate.type.BlobType@6bde865f
w2022-03-15 00:19:33 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6bde865f
w2022-03-15 00:19:33 DEBUG Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7b297348
w2022-03-15 00:19:33 DEBUG Adding type registration clob -> org.hibernate.type.ClobType@3c0eb741
w2022-03-15 00:19:33 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3c0eb741
w2022-03-15 00:19:33 DEBUG Adding type registration nclob -> org.hibernate.type.NClobType@30799861
w2022-03-15 00:19:33 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@30799861
w2022-03-15 00:19:33 DEBUG Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4e8e422c
w2022-03-15 00:19:33 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@23a27a68
w2022-03-15 00:19:33 DEBUG Adding type registration serializable -> org.hibernate.type.SerializableType@74769e50
w2022-03-15 00:19:33 DEBUG Adding type registration object -> org.hibernate.type.ObjectType@3ee41a04
w2022-03-15 00:19:33 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3ee41a04
w2022-03-15 00:19:33 DEBUG Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6f084bdb
w2022-03-15 00:19:33 DEBUG Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@71a25804
w2022-03-15 00:19:33 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5918d076
w2022-03-15 00:19:33 DEBUG Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5d8f4c9c
w2022-03-15 00:19:33 DEBUG Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@70749265
w2022-03-15 00:19:33 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@13758617
w2022-03-15 00:19:33 DEBUG Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@cf17f6f
w2022-03-15 00:19:33 DEBUG Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2bbd39c1
w2022-03-15 00:19:33 INFO  HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
w2022-03-15 00:19:33 DEBUG Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@5c70778] into BootstrapContext; was [null]
w2022-03-15 00:19:33 DEBUG ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@5c70778) [was null]
w2022-03-15 00:19:33 DEBUG Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@2a685f30] into BootstrapContext; was [null]
w2022-03-15 00:19:33 DEBUG Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@46d21db6] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@2f5d87f4]
w2022-03-15 00:19:33 DEBUG Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@5c70778]
w2022-03-15 00:19:33 DEBUG ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@5c70778]
w2022-03-15 00:19:33 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
w2022-03-15 00:19:33 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
w2022-03-15 00:19:33 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
w2022-03-15 00:19:33 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
w2022-03-15 00:19:33 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
w2022-03-15 00:19:33 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
w2022-03-15 00:19:33 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
w2022-03-15 00:19:33 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
w2022-03-15 00:19:33 DEBUG Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
w2022-03-15 00:19:33 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
w2022-03-15 00:19:33 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
w2022-03-15 00:19:33 DEBUG Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
w2022-03-15 00:19:33 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
w2022-03-15 00:19:33 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
w2022-03-15 00:19:33 DEBUG Database ->
       name : SQLite
    version : 3.36.0
      major : 3
      minor : 36
w2022-03-15 00:19:33 DEBUG Driver ->
       name : SQLite JDBC
    version : 3.36.0.3
      major : 3
      minor : 36
w2022-03-15 00:19:33 DEBUG JDBC version : 2.1
w2022-03-15 00:19:33 INFO  HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
w2022-03-15 00:19:33 DEBUG JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
w2022-03-15 00:19:33 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
w2022-03-15 00:19:33 DEBUG HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [2] less than 4
w2022-03-15 00:19:33 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@c8ac486] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@395b2d1a]
w2022-03-15 00:19:33 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
w2022-03-15 00:19:33 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.Comment
w2022-03-15 00:19:33 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 00:19:33 DEBUG Import with entity name Comment
w2022-03-15 00:19:33 DEBUG Bind entity ru.edu.helpdesk.entity.Comment on table comment
w2022-03-15 00:19:33 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 00:19:33 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Comment] is safe
w2022-03-15 00:19:33 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Comment
w2022-03-15 00:19:33 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 00:19:33 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Comment:id]
w2022-03-15 00:19:33 DEBUG building SimpleValue for id
w2022-03-15 00:19:33 DEBUG Building property id
w2022-03-15 00:19:33 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 00:19:33 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=message, insertable=true, updatable=true, unique=false}
w2022-03-15 00:19:33 DEBUG MetadataSourceProcessor property message with lazy=false
w2022-03-15 00:19:33 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Comment:message]
w2022-03-15 00:19:33 DEBUG building SimpleValue for message
w2022-03-15 00:19:33 DEBUG Building property message
w2022-03-15 00:19:33 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 00:19:33 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=ticket, insertable=true, updatable=true, unique=false}
w2022-03-15 00:19:33 DEBUG Building property ticket
w2022-03-15 00:19:33 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 00:19:33 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=user, insertable=true, updatable=true, unique=false}
w2022-03-15 00:19:33 DEBUG Building property user
w2022-03-15 00:19:33 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 00:19:33 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 00:19:33 DEBUG Import with entity name Ticket
w2022-03-15 00:19:33 DEBUG Bind entity ru.edu.helpdesk.entity.Ticket on table ticket
w2022-03-15 00:19:33 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 00:19:33 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Ticket] is safe
w2022-03-15 00:19:33 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Ticket
w2022-03-15 00:19:33 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 00:19:33 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:id]
w2022-03-15 00:19:33 DEBUG building SimpleValue for id
w2022-03-15 00:19:33 DEBUG Building property id
w2022-03-15 00:19:33 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 00:19:33 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 00:19:33 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=client, insertable=true, updatable=true, unique=false}
w2022-03-15 00:19:33 DEBUG Building property client
w2022-03-15 00:19:33 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=status, insertable=true, updatable=true, unique=false}
w2022-03-15 00:19:33 DEBUG MetadataSourceProcessor property status with lazy=false
w2022-03-15 00:19:33 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:status]
w2022-03-15 00:19:33 DEBUG building SimpleValue for status
w2022-03-15 00:19:33 DEBUG Building property status
w2022-03-15 00:19:33 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 00:19:33 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=support, insertable=true, updatable=true, unique=false}
w2022-03-15 00:19:33 DEBUG Building property support
w2022-03-15 00:19:33 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=title, insertable=true, updatable=true, unique=false}
w2022-03-15 00:19:33 DEBUG MetadataSourceProcessor property title with lazy=false
w2022-03-15 00:19:33 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:title]
w2022-03-15 00:19:33 DEBUG building SimpleValue for title
w2022-03-15 00:19:33 DEBUG Building property title
w2022-03-15 00:19:33 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.User
w2022-03-15 00:19:33 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 00:19:33 DEBUG Import with entity name User
w2022-03-15 00:19:33 DEBUG Bind entity ru.edu.helpdesk.entity.User on table user
w2022-03-15 00:19:33 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 00:19:33 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.User] is safe
w2022-03-15 00:19:33 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.User
w2022-03-15 00:19:33 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 00:19:33 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:id]
w2022-03-15 00:19:33 DEBUG building SimpleValue for id
w2022-03-15 00:19:33 DEBUG Building property id
w2022-03-15 00:19:33 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 00:19:33 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
w2022-03-15 00:19:33 DEBUG MetadataSourceProcessor property firstName with lazy=false
w2022-03-15 00:19:33 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:firstName]
w2022-03-15 00:19:33 DEBUG building SimpleValue for firstName
w2022-03-15 00:19:33 DEBUG Building property firstName
w2022-03-15 00:19:33 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
w2022-03-15 00:19:33 DEBUG MetadataSourceProcessor property lastName with lazy=false
w2022-03-15 00:19:33 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:lastName]
w2022-03-15 00:19:33 DEBUG building SimpleValue for lastName
w2022-03-15 00:19:33 DEBUG Building property lastName
w2022-03-15 00:19:33 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=login, insertable=true, updatable=true, unique=false}
w2022-03-15 00:19:33 DEBUG MetadataSourceProcessor property login with lazy=false
w2022-03-15 00:19:33 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:login]
w2022-03-15 00:19:33 DEBUG building SimpleValue for login
w2022-03-15 00:19:33 DEBUG Building property login
w2022-03-15 00:19:33 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
w2022-03-15 00:19:33 DEBUG MetadataSourceProcessor property password with lazy=false
w2022-03-15 00:19:33 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:password]
w2022-03-15 00:19:33 DEBUG building SimpleValue for password
w2022-03-15 00:19:33 DEBUG Building property password
w2022-03-15 00:19:33 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=role, insertable=true, updatable=true, unique=false}
w2022-03-15 00:19:33 DEBUG MetadataSourceProcessor property role with lazy=false
w2022-03-15 00:19:33 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:role]
w2022-03-15 00:19:33 DEBUG building SimpleValue for role
w2022-03-15 00:19:33 DEBUG Building property role
w2022-03-15 00:19:33 DEBUG Starting fillSimpleValue for id
w2022-03-15 00:19:33 DEBUG Starting fillSimpleValue for message
w2022-03-15 00:19:33 DEBUG Starting fillSimpleValue for id
w2022-03-15 00:19:33 DEBUG Starting fillSimpleValue for status
w2022-03-15 00:19:33 DEBUG Starting fillSimpleValue for title
w2022-03-15 00:19:33 DEBUG Starting fillSimpleValue for id
w2022-03-15 00:19:33 DEBUG Starting fillSimpleValue for firstName
w2022-03-15 00:19:33 DEBUG Starting fillSimpleValue for lastName
w2022-03-15 00:19:33 DEBUG Starting fillSimpleValue for login
w2022-03-15 00:19:33 DEBUG Starting fillSimpleValue for password
w2022-03-15 00:19:33 DEBUG Starting fillSimpleValue for role
w2022-03-15 00:19:33 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [comment]
w2022-03-15 00:19:33 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [ticket]
w2022-03-15 00:19:33 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [user]
w2022-03-15 00:19:33 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 00:19:33 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 00:19:33 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 00:19:33 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 00:19:33 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 00:19:33 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 00:19:33 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 00:19:33 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 00:19:33 DEBUG Building session factory
w2022-03-15 00:19:33 DEBUG SessionFactory name : null
w2022-03-15 00:19:33 DEBUG Automatic flush during beforeCompletion(): enabled
w2022-03-15 00:19:33 DEBUG Automatic session close at end of transaction: disabled
w2022-03-15 00:19:33 DEBUG Statistics: disabled
w2022-03-15 00:19:33 DEBUG Deleted entity synthetic identifier rollback: disabled
w2022-03-15 00:19:33 DEBUG Default entity-mode: pojo
w2022-03-15 00:19:33 DEBUG Check Nullability in Core (should be disabled when Bean Validation is on): enabled
w2022-03-15 00:19:33 DEBUG Allow initialization of lazy state outside session : disabled
w2022-03-15 00:19:33 DEBUG Using BatchFetchStyle : LEGACY
w2022-03-15 00:19:33 DEBUG Default batch fetch size: -1
w2022-03-15 00:19:33 DEBUG Maximum outer join fetch depth: null
w2022-03-15 00:19:33 DEBUG Default null ordering: NONE
w2022-03-15 00:19:33 DEBUG Order SQL updates by primary key: disabled
w2022-03-15 00:19:33 DEBUG Order SQL inserts for batching: disabled
w2022-03-15 00:19:33 DEBUG multi-tenancy strategy : NONE
w2022-03-15 00:19:33 DEBUG JTA Track by Thread: enabled
w2022-03-15 00:19:33 DEBUG Query language substitutions: {}
w2022-03-15 00:19:33 DEBUG Named query checking : enabled
w2022-03-15 00:19:33 DEBUG Second-level cache: disabled
w2022-03-15 00:19:33 DEBUG Second-level query cache: disabled
w2022-03-15 00:19:33 DEBUG Second-level query cache factory: null
w2022-03-15 00:19:33 DEBUG Second-level cache region prefix: null
w2022-03-15 00:19:33 DEBUG Optimize second-level cache for minimal puts: disabled
w2022-03-15 00:19:33 DEBUG Structured second-level cache entries: disabled
w2022-03-15 00:19:33 DEBUG Second-level cache direct-reference entries: disabled
w2022-03-15 00:19:33 DEBUG Automatic eviction of collection cache: disabled
w2022-03-15 00:19:33 DEBUG JDBC batch size: 1
w2022-03-15 00:19:33 DEBUG JDBC batch updates for versioned data: enabled
w2022-03-15 00:19:33 DEBUG Scrollable result sets: disabled
w2022-03-15 00:19:33 DEBUG Wrap result sets: disabled
w2022-03-15 00:19:33 DEBUG JDBC3 getGeneratedKeys(): enabled
w2022-03-15 00:19:33 DEBUG JDBC result set fetch size: null
w2022-03-15 00:19:33 DEBUG Connection release mode: ON_CLOSE
w2022-03-15 00:19:33 DEBUG Generate SQL with comments: disabled
w2022-03-15 00:19:33 DEBUG JPA compliance - query : disabled
w2022-03-15 00:19:33 DEBUG JPA compliance - closed-handling : disabled
w2022-03-15 00:19:33 DEBUG JPA compliance - lists : disabled
w2022-03-15 00:19:33 DEBUG JPA compliance - transactions : disabled
w2022-03-15 00:19:33 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 00:19:33 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 00:19:33 DEBUG Session factory constructed with filter configurations : {}
w2022-03-15 00:19:33 DEBUG Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=true, java.specification.version=1.8, file.encoding.pkg=sun.io, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@15559b7f, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.SQLiteDialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\charsets.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\cldrdata.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\dnsns.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\jaccess.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\localedata.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\nashorn.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunec.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunmscapi.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\zipfs.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jce.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jfr.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jsse.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\management-agent.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\resources.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\rt.jar;C:\Users\Ольга\Desktop\Java\Project\Project1\helpdeskproject\target\classes;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\2.6.4\spring-boot-starter-data-jpa-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\2.6.4\spring-boot-starter-jdbc-2.6.4.jar;C:\Users\Ольга\.m2\repository\com\zaxxer\HikariCP\4.0.3\HikariCP-4.0.3.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-jdbc\5.3.16\spring-jdbc-5.3.16.jar;C:\Users\Ольга\.m2\repository\jakarta\transaction\jakarta.transaction-api\1.3.3\jakarta.transaction-api-1.3.3.jar;C:\Users\Ольга\.m2\repository\jakarta\persistence\jakarta.persistence-api\2.2.3\jakarta.persistence-api-2.2.3.jar;C:\Users\Ольга\.m2\repository\org\hibernate\hibernate-core\5.6.5.Final\hibernate-core-5.6.5.Final.jar;C:\Users\Ольга\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy\1.11.22\byte-buddy-1.11.22.jar;C:\Users\Ольга\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ольга\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Ольга\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.6\jaxb-runtime-2.3.6.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\txw2\2.3.6\txw2-2.3.6.jar;C:\Users\Ольга\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.12\istack-commons-runtime-3.0.12.jar;C:\Users\Ольга\.m2\repository\com\sun\activation\jakarta.activation\1.2.2\jakarta.activation-1.2.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\data\spring-data-jpa\2.6.2\spring-data-jpa-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\data\spring-data-commons\2.6.2\spring-data-commons-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-orm\5.3.16\spring-orm-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-context\5.3.16\spring-context-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-tx\5.3.16\spring-tx-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-beans\5.3.16\spring-beans-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-aspects\5.3.16\spring-aspects-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-security\2.6.4\spring-boot-starter-security-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter\2.6.4\spring-boot-starter-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-logging\2.6.4\spring-boot-starter-logging-2.6.4.jar;C:\Users\Ольга\.m2\repository\ch\qos\logback\logback-classic\1.2.10\logback-classic-1.2.10.jar;C:\Users\Ольга\.m2\repository\ch\qos\logback\logback-core\1.2.10\logback-core-1.2.10.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.17.1\log4j-to-slf4j-2.17.1.jar;C:\Users\Ольга\.m2\repository\org\slf4j\jul-to-slf4j\1.7.36\jul-to-slf4j-1.7.36.jar;C:\Users\Ольга\.m2\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;C:\Users\Ольга\.m2\repository\org\yaml\snakeyaml\1.29\snakeyaml-1.29.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-aop\5.3.16\spring-aop-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-config\5.6.2\spring-security-config-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-web\5.6.2\spring-security-web-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-expression\5.3.16\spring-expression-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-web\2.6.4\spring-boot-starter-web-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-json\2.6.4\spring-boot-starter-json-2.6.4.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.13.1\jackson-datatype-jdk8-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.13.1\jackson-datatype-jsr310-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.13.1\jackson-module-parameter-names-2.13.1.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\2.6.4\spring-boot-starter-tomcat-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.58\tomcat-embed-core-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\9.0.58\tomcat-embed-el-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.58\tomcat-embed-websocket-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-web\5.3.16\spring-web-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-webmvc\5.3.16\spring-webmvc-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-devtools\2.6.4\spring-boot-devtools-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot\2.6.4\spring-boot-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\2.6.4\spring-boot-autoconfigure-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\xerial\sqlite-jdbc\3.36.0.3\sqlite-jdbc-3.36.0.3.jar;C:\Users\Ольга\.m2\repository\com\zsoltfabok\sqlite-dialect\1.0\sqlite-dialect-1.0.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-aop\2.6.2\spring-boot-starter-aop-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\aspectj\aspectjweaver\1.9.7\aspectjweaver-1.9.7.jar;C:\Users\Ольга\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.3\jakarta.xml.bind-api-2.3.3.jar;C:\Users\Ольга\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.2\jakarta.activation-api-1.2.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-core\5.3.16\spring-core-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-jcl\5.3.16\spring-jcl-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-core\5.6.2\spring-security-core-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-crypto\5.6.2\spring-security-crypto-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\projectlombok\lombok\1.18.22\lombok-1.18.22.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\2.6.4\spring-boot-starter-thymeleaf-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\thymeleaf-spring5\3.0.15.RELEASE\thymeleaf-spring5-3.0.15.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\thymeleaf\3.0.15.RELEASE\thymeleaf-3.0.15.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\attoparser\attoparser\2.0.5.RELEASE\attoparser-2.0.5.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-java8time\3.0.4.RELEASE\thymeleaf-extras-java8time-3.0.4.RELEASE.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.1\jackson-databind-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.1\jackson-annotations-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.1\jackson-core-2.13.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-api\2.4.1\log4j-api-2.4.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-core\2.4.1\log4j-core-2.4.1.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.2\lib\idea_rt.jar, java.vm.vendor=Temurin, sun.arch.data.model=64, user.variant=, java.vendor.url=https://adoptium.net/, catalina.useNaming=false, user.timezone=Europe/Moscow, jakarta.persistence.sharedCache.mode=UNSPECIFIED, os.name=Windows 10, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), user.country=RU, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\bin, sun.java.command=ru.edu.helpdesk.HelpdeskApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@315ca5f4, com.sun.management.jmxremote=, javax.persistence.sharedCache.mode=UNSPECIFIED, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, user.home=C:\Users\Ольга, user.language=ru, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre, file.separator=\, spring.output.ansi.enabled=always, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, sun.boot.class.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\resources.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\rt.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\sunrsasign.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jsse.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jce.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\charsets.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jfr.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\classes, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_312-b07, user.name=Эльдорадо, spring.jmx.enabled=true, path.separator=;, os.version=10.0, java.endorsed.dirs=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\endorsed, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=default, spring.beaninfo.ignore=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=C:\Users\134E~1\AppData\Local\Temp\, catalina.home=C:\Users\Ольга\AppData\Local\Temp\tomcat.8080.5873108830315948501, java.version=1.8.0_312, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\Ольга\Desktop\Java\Project\Project1\helpdeskproject, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=6236, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\Ольга\AppData\Local\Temp\tomcat.8080.5873108830315948501, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@50a3c959, java.library.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\windows\System32\OpenSSH\;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\Program Files\apache-maven-3.8.4\bin;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Ольга\AppData\Local\Microsoft\WindowsApps;C:\Users\Ольга\AppData\Local\Programs\Microsoft VS Code\bin;C:\SQLite;C:\Users\Ольга\AppData\Roaming\npm;C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.2\bin;;., java.vendor=Temurin, java.vm.info=mixed mode, java.vm.version=25.312-b07, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, java.ext.dirs=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext;C:\windows\Sun\Java\lib\ext, hibernate.connection.datasource=HikariDataSource (HikariPool-1), hibernate.hbm2ddl.import_files=data/import.sql, java.class.version=52.0}
w2022-03-15 00:19:33 DEBUG Skipping JACC integration as it was not enabled
w2022-03-15 00:19:33 DEBUG Using ORDINAL-based conversion for Enum ru.edu.helpdesk.entity.UserRole
w2022-03-15 00:19:33 DEBUG Using ORDINAL-based conversion for Enum ru.edu.helpdesk.entity.TicketStatus
w2022-03-15 00:19:33 DEBUG Instantiated session factory
w2022-03-15 00:19:33 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@c8ac486] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@461d4f91]
w2022-03-15 00:19:33 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.User] is safe
w2022-03-15 00:19:33 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.User
w2022-03-15 00:19:33 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:19:33 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:19:33 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:19:33 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:19:33 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Ticket] is safe
w2022-03-15 00:19:33 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Ticket
w2022-03-15 00:19:33 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:19:33 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:19:33 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:19:33 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:19:33 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:19:33 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:19:33 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:19:33 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:19:33 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Comment] is safe
w2022-03-15 00:19:33 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Comment
w2022-03-15 00:19:33 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:19:33 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:19:33 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:19:33 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:19:33 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.User
w2022-03-15 00:19:33 DEBUG  Version select: select id from user where id =?
w2022-03-15 00:19:33 DEBUG  Snapshot select: select user_.id, user_.first_name as first_na2_2_, user_.last_name as last_nam3_2_, user_.login as login4_2_, user_.password as password5_2_, user_.role as role6_2_ from user user_ where user_.id=?
w2022-03-15 00:19:33 DEBUG  Insert 0: insert into user (first_name, last_name, login, password, role, id) values (?, ?, ?, ?, ?, ?)
w2022-03-15 00:19:33 DEBUG  Update 0: update user set first_name=?, last_name=?, login=?, password=?, role=? where id=?
w2022-03-15 00:19:33 DEBUG  Delete 0: delete from user where id=?
w2022-03-15 00:19:33 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@113284c7]
w2022-03-15 00:19:33 DEBUG Visiting attribute path : firstName
w2022-03-15 00:19:33 DEBUG Visiting attribute path : lastName
w2022-03-15 00:19:33 DEBUG Visiting attribute path : login
w2022-03-15 00:19:33 DEBUG Visiting attribute path : password
w2022-03-15 00:19:33 DEBUG Visiting attribute path : role
w2022-03-15 00:19:33 DEBUG Building LoadPlan...
w2022-03-15 00:19:33 DEBUG processing queryspace <gen:0>
w2022-03-15 00:19:33 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.User)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

w2022-03-15 00:19:33 DEBUG Static select for entity ru.edu.helpdesk.entity.User [NONE]: select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 00:19:33 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.Ticket
w2022-03-15 00:19:33 DEBUG  Version select: select id from ticket where id =?
w2022-03-15 00:19:33 DEBUG  Snapshot select: select ticket_.id, ticket_.client_id as client_i4_1_, ticket_.status as status2_1_, ticket_.support_id as support_5_1_, ticket_.title as title3_1_ from ticket ticket_ where ticket_.id=?
w2022-03-15 00:19:33 DEBUG  Insert 0: insert into ticket (client_id, status, support_id, title, id) values (?, ?, ?, ?, ?)
w2022-03-15 00:19:33 DEBUG  Update 0: update ticket set client_id=?, status=?, support_id=?, title=? where id=?
w2022-03-15 00:19:33 DEBUG  Delete 0: delete from ticket where id=?
w2022-03-15 00:19:33 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5779f024]
w2022-03-15 00:19:33 DEBUG Visiting attribute path : client
w2022-03-15 00:19:33 DEBUG Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6aab1a54]
w2022-03-15 00:19:33 DEBUG Visiting attribute path : client.firstName
w2022-03-15 00:19:33 DEBUG Visiting attribute path : client.lastName
w2022-03-15 00:19:33 DEBUG Visiting attribute path : client.login
w2022-03-15 00:19:33 DEBUG Visiting attribute path : client.password
w2022-03-15 00:19:33 DEBUG Visiting attribute path : client.role
w2022-03-15 00:19:33 DEBUG Visiting attribute path : status
w2022-03-15 00:19:33 DEBUG Visiting attribute path : support
w2022-03-15 00:19:33 DEBUG Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e8c2191]
w2022-03-15 00:19:33 DEBUG Visiting attribute path : support.firstName
w2022-03-15 00:19:33 DEBUG Visiting attribute path : support.lastName
w2022-03-15 00:19:33 DEBUG Visiting attribute path : support.login
w2022-03-15 00:19:33 DEBUG Visiting attribute path : support.password
w2022-03-15 00:19:33 DEBUG Visiting attribute path : support.role
w2022-03-15 00:19:33 DEBUG Visiting attribute path : title
w2022-03-15 00:19:33 DEBUG Building LoadPlan...
w2022-03-15 00:19:33 DEBUG processing queryspace <gen:0>
w2022-03-15 00:19:33 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.Ticket)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.Ticket, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.Ticket)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:1>, path=ru.edu.helpdesk.entity.Ticket.client)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:2>, path=ru.edu.helpdesk.entity.Ticket.support)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.Ticket)
          - SQL table alias mapping - ticket0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(client)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
          - JOIN (JoinDefinedByMetadata(support)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user2_
                - alias suffix - 2_
                - suffixed key columns - {id1_2_2_}

w2022-03-15 00:19:33 DEBUG Static select for entity ru.edu.helpdesk.entity.Ticket [NONE]: select ticket0_.id as id1_1_0_, ticket0_.client_id as client_i4_1_0_, ticket0_.status as status2_1_0_, ticket0_.support_id as support_5_1_0_, ticket0_.title as title3_1_0_, user1_.id as id1_2_1_, user1_.first_name as first_na2_2_1_, user1_.last_name as last_nam3_2_1_, user1_.login as login4_2_1_, user1_.password as password5_2_1_, user1_.role as role6_2_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id left outer join user user2_ on ticket0_.support_id=user2_.id where ticket0_.id=?
w2022-03-15 00:19:33 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.Comment
w2022-03-15 00:19:33 DEBUG  Version select: select id from comment where id =?
w2022-03-15 00:19:33 DEBUG  Snapshot select: select comment_.id, comment_.message as message2_0_, comment_.ticket_id as ticket_i3_0_, comment_.user_id as user_id4_0_ from comment comment_ where comment_.id=?
w2022-03-15 00:19:33 DEBUG  Insert 0: insert into comment (message, ticket_id, user_id, id) values (?, ?, ?, ?)
w2022-03-15 00:19:33 DEBUG  Update 0: update comment set message=?, ticket_id=?, user_id=? where id=?
w2022-03-15 00:19:33 DEBUG  Delete 0: delete from comment where id=?
w2022-03-15 00:19:33 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@453f72f]
w2022-03-15 00:19:33 DEBUG Visiting attribute path : message
w2022-03-15 00:19:33 DEBUG Visiting attribute path : ticket
w2022-03-15 00:19:33 DEBUG Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@781a80f1]
w2022-03-15 00:19:33 DEBUG Visiting attribute path : ticket.client
w2022-03-15 00:19:33 DEBUG Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4579cee2]
w2022-03-15 00:19:33 DEBUG Visiting attribute path : ticket.client.firstName
w2022-03-15 00:19:33 DEBUG Visiting attribute path : ticket.client.lastName
w2022-03-15 00:19:33 DEBUG Visiting attribute path : ticket.client.login
w2022-03-15 00:19:33 DEBUG Visiting attribute path : ticket.client.password
w2022-03-15 00:19:33 DEBUG Visiting attribute path : ticket.client.role
w2022-03-15 00:19:33 DEBUG Visiting attribute path : ticket.status
w2022-03-15 00:19:33 DEBUG Visiting attribute path : ticket.support
w2022-03-15 00:19:33 DEBUG Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c3dee5c]
w2022-03-15 00:19:33 DEBUG Visiting attribute path : ticket.support.firstName
w2022-03-15 00:19:33 DEBUG Visiting attribute path : ticket.support.lastName
w2022-03-15 00:19:33 DEBUG Visiting attribute path : ticket.support.login
w2022-03-15 00:19:33 DEBUG Visiting attribute path : ticket.support.password
w2022-03-15 00:19:33 DEBUG Visiting attribute path : ticket.support.role
w2022-03-15 00:19:33 DEBUG Visiting attribute path : ticket.title
w2022-03-15 00:19:33 DEBUG Visiting attribute path : user
w2022-03-15 00:19:33 DEBUG Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4caf0929]
w2022-03-15 00:19:33 DEBUG Visiting attribute path : user.firstName
w2022-03-15 00:19:33 DEBUG Visiting attribute path : user.lastName
w2022-03-15 00:19:33 DEBUG Visiting attribute path : user.login
w2022-03-15 00:19:33 DEBUG Visiting attribute path : user.password
w2022-03-15 00:19:33 DEBUG Visiting attribute path : user.role
w2022-03-15 00:19:33 DEBUG Building LoadPlan...
w2022-03-15 00:19:33 DEBUG processing queryspace <gen:0>
w2022-03-15 00:19:33 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.Comment)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.Comment, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.Comment)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.Ticket, querySpaceUid=<gen:1>, path=ru.edu.helpdesk.entity.Comment.ticket)
             - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:2>, path=ru.edu.helpdesk.entity.Comment.ticket.client)
             - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:3>, path=ru.edu.helpdesk.entity.Comment.ticket.support)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:4>, path=ru.edu.helpdesk.entity.Comment.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(ticket)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ru.edu.helpdesk.entity.Ticket)
                - SQL table alias mapping - ticket1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(client)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=ru.edu.helpdesk.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}
                - JOIN (JoinDefinedByMetadata(support)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=ru.edu.helpdesk.entity.User)
                      - SQL table alias mapping - user3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_2_3_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user4_
                - alias suffix - 4_
                - suffixed key columns - {id1_2_4_}

w2022-03-15 00:19:33 DEBUG Static select for entity ru.edu.helpdesk.entity.Comment [NONE]: select comment0_.id as id1_0_0_, comment0_.message as message2_0_0_, comment0_.ticket_id as ticket_i3_0_0_, comment0_.user_id as user_id4_0_0_, ticket1_.id as id1_1_1_, ticket1_.client_id as client_i4_1_1_, ticket1_.status as status2_1_1_, ticket1_.support_id as support_5_1_1_, ticket1_.title as title3_1_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_, user3_.id as id1_2_3_, user3_.first_name as first_na2_2_3_, user3_.last_name as last_nam3_2_3_, user3_.login as login4_2_3_, user3_.password as password5_2_3_, user3_.role as role6_2_3_, user4_.id as id1_2_4_, user4_.first_name as first_na2_2_4_, user4_.last_name as last_nam3_2_4_, user4_.login as login4_2_4_, user4_.password as password5_2_4_, user4_.role as role6_2_4_ from comment comment0_ left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id left outer join user user2_ on ticket1_.client_id=user2_.id left outer join user user3_ on ticket1_.support_id=user3_.id left outer join user user4_ on comment0_.user_id=user4_.id where comment0_.id=?
w2022-03-15 00:19:33 DEBUG drop table if exists comment
w2022-03-15 00:19:33 DEBUG drop table if exists hibernate_sequence
w2022-03-15 00:19:33 DEBUG drop table if exists ticket
w2022-03-15 00:19:33 DEBUG drop table if exists user
w2022-03-15 00:19:33 DEBUG create table comment (id bigint not null, message varchar(255) not null, ticket_id bigint, user_id bigint, primary key (id))
w2022-03-15 00:19:33 DEBUG create table hibernate_sequence (next_val bigint)
w2022-03-15 00:19:33 DEBUG insert into hibernate_sequence values ( 1 )
w2022-03-15 00:19:33 DEBUG create table ticket (id bigint not null, status integer, title varchar(255) not null, client_id bigint, support_id bigint, primary key (id))
w2022-03-15 00:19:33 DEBUG create table user (id bigint not null, first_name varchar(255), last_name varchar(255), login varchar(255) not null, password varchar(255) not null, role integer, primary key (id))
w2022-03-15 00:19:33 INFO  HHH000476: Executing import script 'file:/C:/Users/%d0%9e%d0%bb%d1%8c%d0%b3%d0%b0/Desktop/Java/Project/Project1/helpdeskproject/target/classes/data/import.sql'
w2022-03-15 00:19:33 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (1, 'admin', 'admin', 'admin', 'admin', 0)
w2022-03-15 00:19:33 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (2, 'support', 'support', 'support', 'support', 1)
w2022-03-15 00:19:33 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (3, 'user1', 'user1', 'user1', 'user1', 2)
w2022-03-15 00:19:33 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (4, 'user2', 'user2', 'user2', 'user2', 2)
w2022-03-15 00:19:33 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (1, 1, 'Hello user1', 3, 2)
w2022-03-15 00:19:33 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (2, 0, 'Title2', 3, NULL)
w2022-03-15 00:19:33 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (3, 0, 'Message user2', 4, NULL)
w2022-03-15 00:19:33 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (1, "Hello ticket1", 1, 3)
w2022-03-15 00:19:33 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (2, "Hello ticket2", 2, 3)
w2022-03-15 00:19:33 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (3, "Hello ticket11", 1, 2)
w2022-03-15 00:19:33 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (4, "Hello ticket111", 1, 2)
w2022-03-15 00:19:33 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (5, "Hello ticket22", 2, 2)
w2022-03-15 00:19:33 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (6, "Hello ticket3", 3, 4)
w2022-03-15 00:19:33 DEBUG UPDATE hibernate_sequence SET next_val = 8 WHERE next_val = 1
w2022-03-15 00:19:33 INFO  HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
w2022-03-15 00:19:33 DEBUG Checking 0 named HQL queries
w2022-03-15 00:19:33 DEBUG Checking 0 named SQL queries
w2022-03-15 00:19:33 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 00:19:33 DEBUG Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3224b79
w2022-03-15 00:19:33 DEBUG Registering SessionFactory: 7d9caa41-c8bb-4d54-bfad-7d5a95bc640e (<unnamed>)
w2022-03-15 00:19:33 DEBUG Not binding SessionFactory to JNDI, no JNDI name configured
w2022-03-15 00:19:33 DEBUG Statistics initialized [enabled=false]
w2022-03-15 00:19:33 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 00:19:33 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 00:19:34 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 00:19:49 DEBUG Rendered criteria query -> select generatedAlias0 from Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 00:19:49 DEBUG QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@5d2dbf21
w2022-03-15 00:19:49 DEBUG parse() - HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 00:19:49 DEBUG throwQueryException() : no errors
w2022-03-15 00:19:49 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[IDENT] Node: 'ru'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'edu'
    |  |  |  |  |  |  \-[IDENT] Node: 'helpdesk'
    |  |  |  |  |  \-[IDENT] Node: 'entity'
    |  |  |  |  \-[IDENT] Node: 'Ticket'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'client'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias1'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

w2022-03-15 00:19:49 DEBUG select << begin [level=1, statement=select]
w2022-03-15 00:19:49 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.Ticket (generatedAlias0) -> ticket0_
w2022-03-15 00:19:49 DEBUG Resolved : generatedAlias0 -> ticket0_.id
w2022-03-15 00:19:49 DEBUG getDataType() : client -> org.hibernate.type.ManyToOneType(ru.edu.helpdesk.entity.User)
w2022-03-15 00:19:49 DEBUG dereferenceEntityJoin() : generating join for client in ru.edu.helpdesk.entity.Ticket (generatedAlias1) parent = [ {null} ]
w2022-03-15 00:19:49 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.User (generatedAlias1) -> user1_
w2022-03-15 00:19:49 DEBUG addJoinByPathMap() : generatedAlias0.client -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}
w2022-03-15 00:19:49 DEBUG Resolved : generatedAlias0.client -> ticket0_.client_id
w2022-03-15 00:19:49 DEBUG createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'user user1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Ticket.client,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}

w2022-03-15 00:19:49 DEBUG Resolved : generatedAlias0 -> ticket0_.id
w2022-03-15 00:19:49 DEBUG Resolved : generatedAlias1 -> user1_.id
w2022-03-15 00:19:49 DEBUG getDataType() : id -> org.hibernate.type.LongType@7807cb1d
w2022-03-15 00:19:49 DEBUG Resolved : generatedAlias1.id -> user1_.id
w2022-03-15 00:19:49 DEBUG select : finishing up [level=1, statement=select]
w2022-03-15 00:19:49 DEBUG processQuery() :  ( SELECT ( {select clause} ticket0_.id ) ( FromClause{level=1} ( ticket ticket0_ user user1_ ) ) ( where ( = ( user1_.id user1_.id id ) ? ) ) )
w2022-03-15 00:19:49 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Ticket): [ticket]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.Ticket)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.User)
          | path: generatedAlias1.id
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.User)
          |  | originalText: generatedAlias1
          |  \-IdentNode
          |    persister: null
          |    originalText: id
          \-ParameterNode

w2022-03-15 00:19:49 DEBUG Using FROM fragment [ticket ticket0_]
w2022-03-15 00:19:49 DEBUG Using FROM fragment [left outer join user user1_ on ticket0_.client_id=user1_.id]
w2022-03-15 00:19:49 DEBUG select >> end [level=1, statement=select]
w2022-03-15 00:19:49 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (ticket,user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'ticket0_.id as id1_1_' {alias=generatedAlias0, className=ru.edu.helpdesk.entity.Ticket, tableAlias=ticket0_}
    |  \-[SQL_TOKEN] SqlFragment: 'ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[ticket0_, user1_], fromElementsByPath=[generatedAlias0.client], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'ticket ticket0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=ticket,tableAlias=ticket0_,origin=null,columns={,className=ru.edu.helpdesk.entity.Ticket}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join user user1_ on ticket0_.client_id=user1_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Ticket.client,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user1_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias1.id,tableAlias=user1_,className=ru.edu.helpdesk.entity.User,classAlias=generatedAlias1}
          |  +-[ALIAS_REF] IdentNode: 'user1_.id' {alias=generatedAlias1, className=ru.edu.helpdesk.entity.User, tableAlias=user1_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LongType@7807cb1d}

w2022-03-15 00:19:49 DEBUG throwQueryException() : no errors
w2022-03-15 00:19:49 DEBUG HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 00:19:49 DEBUG SQL: select ticket0_.id as id1_1_, ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id where user1_.id=?
w2022-03-15 00:19:49 DEBUG throwQueryException() : no errors
w2022-03-15 00:19:49 DEBUG select ticket0_.id as id1_1_, ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id where user1_.id=?
w2022-03-15 00:19:49 DEBUG Result set row: 0
w2022-03-15 00:19:49 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 00:19:49 DEBUG Result set row: 1
w2022-03-15 00:19:49 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 00:19:49 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 00:19:49 DEBUG Processing attribute `client` : value = 3
w2022-03-15 00:19:49 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 00:19:49 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 00:19:49 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 00:19:49 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#3]
w2022-03-15 00:19:49 DEBUG Processing attribute `firstName` : value = user1
w2022-03-15 00:19:49 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 00:19:49 DEBUG Processing attribute `lastName` : value = user1
w2022-03-15 00:19:49 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 00:19:49 DEBUG Processing attribute `login` : value = user1
w2022-03-15 00:19:49 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 00:19:49 DEBUG Processing attribute `password` : value = user1
w2022-03-15 00:19:49 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 00:19:49 DEBUG Processing attribute `role` : value = USER
w2022-03-15 00:19:49 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 00:19:49 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#3]
w2022-03-15 00:19:49 DEBUG Done entity load : ru.edu.helpdesk.entity.User#3
w2022-03-15 00:19:49 DEBUG Processing attribute `status` : value = WORKING
w2022-03-15 00:19:49 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 00:19:49 DEBUG Processing attribute `support` : value = 2
w2022-03-15 00:19:49 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 00:19:49 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 00:19:49 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 00:19:49 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#2]
w2022-03-15 00:19:49 DEBUG Processing attribute `firstName` : value = support
w2022-03-15 00:19:49 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 00:19:49 DEBUG Processing attribute `lastName` : value = support
w2022-03-15 00:19:49 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 00:19:49 DEBUG Processing attribute `login` : value = support
w2022-03-15 00:19:49 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 00:19:49 DEBUG Processing attribute `password` : value = support
w2022-03-15 00:19:49 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 00:19:49 DEBUG Processing attribute `role` : value = SUPPORT
w2022-03-15 00:19:49 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 00:19:49 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#2]
w2022-03-15 00:19:49 DEBUG Done entity load : ru.edu.helpdesk.entity.User#2
w2022-03-15 00:19:49 DEBUG Processing attribute `title` : value = Hello user1
w2022-03-15 00:19:49 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 00:19:49 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 00:19:49 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 00:19:49 DEBUG Processing attribute `client` : value = 3
w2022-03-15 00:19:49 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 00:19:49 DEBUG Processing attribute `status` : value = OPEN
w2022-03-15 00:19:49 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 00:19:49 DEBUG Processing attribute `support` : value = null
w2022-03-15 00:19:49 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 00:19:49 DEBUG Processing attribute `title` : value = Title2
w2022-03-15 00:19:49 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 00:19:49 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 00:20:01 DEBUG Rendered criteria query -> select generatedAlias0 from Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 00:20:01 DEBUG select ticket0_.id as id1_1_, ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id where user1_.id=?
w2022-03-15 00:20:01 DEBUG Result set row: 0
w2022-03-15 00:20:01 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 00:20:01 DEBUG Result set row: 1
w2022-03-15 00:20:01 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 00:20:01 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 00:20:01 DEBUG Processing attribute `client` : value = 3
w2022-03-15 00:20:01 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 00:20:01 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 00:20:01 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 00:20:01 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#3]
w2022-03-15 00:20:01 DEBUG Processing attribute `firstName` : value = user1
w2022-03-15 00:20:01 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 00:20:01 DEBUG Processing attribute `lastName` : value = user1
w2022-03-15 00:20:01 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 00:20:01 DEBUG Processing attribute `login` : value = user1
w2022-03-15 00:20:01 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 00:20:01 DEBUG Processing attribute `password` : value = user1
w2022-03-15 00:20:01 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 00:20:01 DEBUG Processing attribute `role` : value = USER
w2022-03-15 00:20:01 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 00:20:01 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#3]
w2022-03-15 00:20:01 DEBUG Done entity load : ru.edu.helpdesk.entity.User#3
w2022-03-15 00:20:01 DEBUG Processing attribute `status` : value = WORKING
w2022-03-15 00:20:01 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 00:20:01 DEBUG Processing attribute `support` : value = 2
w2022-03-15 00:20:01 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 00:20:01 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 00:20:01 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 00:20:01 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#2]
w2022-03-15 00:20:01 DEBUG Processing attribute `firstName` : value = support
w2022-03-15 00:20:01 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 00:20:01 DEBUG Processing attribute `lastName` : value = support
w2022-03-15 00:20:01 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 00:20:01 DEBUG Processing attribute `login` : value = support
w2022-03-15 00:20:01 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 00:20:01 DEBUG Processing attribute `password` : value = support
w2022-03-15 00:20:01 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 00:20:01 DEBUG Processing attribute `role` : value = SUPPORT
w2022-03-15 00:20:01 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 00:20:01 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#2]
w2022-03-15 00:20:01 DEBUG Done entity load : ru.edu.helpdesk.entity.User#2
w2022-03-15 00:20:01 DEBUG Processing attribute `title` : value = Hello user1
w2022-03-15 00:20:01 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 00:20:01 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 00:20:01 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 00:20:01 DEBUG Processing attribute `client` : value = 3
w2022-03-15 00:20:01 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 00:20:01 DEBUG Processing attribute `status` : value = OPEN
w2022-03-15 00:20:01 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 00:20:01 DEBUG Processing attribute `support` : value = null
w2022-03-15 00:20:01 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 00:20:01 DEBUG Processing attribute `title` : value = Title2
w2022-03-15 00:20:01 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 00:20:01 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 00:20:06 DEBUG Rendered criteria query -> select generatedAlias0 from Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 00:20:06 DEBUG select ticket0_.id as id1_1_, ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id where user1_.id=?
w2022-03-15 00:20:06 DEBUG Result set row: 0
w2022-03-15 00:20:06 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 00:20:06 DEBUG Result set row: 1
w2022-03-15 00:20:06 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 00:20:06 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 00:20:06 DEBUG Processing attribute `client` : value = 3
w2022-03-15 00:20:06 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 00:20:06 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 00:20:06 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 00:20:06 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#3]
w2022-03-15 00:20:06 DEBUG Processing attribute `firstName` : value = user1
w2022-03-15 00:20:06 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 00:20:06 DEBUG Processing attribute `lastName` : value = user1
w2022-03-15 00:20:06 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 00:20:06 DEBUG Processing attribute `login` : value = user1
w2022-03-15 00:20:06 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 00:20:06 DEBUG Processing attribute `password` : value = user1
w2022-03-15 00:20:06 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 00:20:06 DEBUG Processing attribute `role` : value = USER
w2022-03-15 00:20:06 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 00:20:06 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#3]
w2022-03-15 00:20:06 DEBUG Done entity load : ru.edu.helpdesk.entity.User#3
w2022-03-15 00:20:06 DEBUG Processing attribute `status` : value = WORKING
w2022-03-15 00:20:06 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 00:20:06 DEBUG Processing attribute `support` : value = 2
w2022-03-15 00:20:06 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 00:20:06 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 00:20:06 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 00:20:06 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#2]
w2022-03-15 00:20:06 DEBUG Processing attribute `firstName` : value = support
w2022-03-15 00:20:06 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 00:20:06 DEBUG Processing attribute `lastName` : value = support
w2022-03-15 00:20:06 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 00:20:06 DEBUG Processing attribute `login` : value = support
w2022-03-15 00:20:06 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 00:20:06 DEBUG Processing attribute `password` : value = support
w2022-03-15 00:20:06 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 00:20:06 DEBUG Processing attribute `role` : value = SUPPORT
w2022-03-15 00:20:06 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 00:20:06 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#2]
w2022-03-15 00:20:06 DEBUG Done entity load : ru.edu.helpdesk.entity.User#2
w2022-03-15 00:20:06 DEBUG Processing attribute `title` : value = Hello user1
w2022-03-15 00:20:06 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 00:20:06 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 00:20:06 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 00:20:06 DEBUG Processing attribute `client` : value = 3
w2022-03-15 00:20:06 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 00:20:06 DEBUG Processing attribute `status` : value = OPEN
w2022-03-15 00:20:06 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 00:20:06 DEBUG Processing attribute `support` : value = null
w2022-03-15 00:20:06 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 00:20:06 DEBUG Processing attribute `title` : value = Title2
w2022-03-15 00:20:06 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 00:20:06 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 00:38:43 DEBUG Logging Provider: org.jboss.logging.Log4j2LoggerProvider
w2022-03-15 00:38:43 DEBUG PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@82953d9
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/%d0%9e%d0%bb%d1%8c%d0%b3%d0%b0/Desktop/Java/Project/Project1/helpdeskproject/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		ru.edu.helpdesk.entity.Comment
		ru.edu.helpdesk.entity.Ticket
		ru.edu.helpdesk.entity.User]
	Mapping files names []
	Properties []
w2022-03-15 00:38:43 DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
w2022-03-15 00:38:43 DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
w2022-03-15 00:38:43 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
w2022-03-15 00:38:43 INFO  HHH000412: Hibernate ORM core version 5.6.5.Final
w2022-03-15 00:38:43 DEBUG HHH000206: hibernate.properties not found
w2022-03-15 00:38:43 DEBUG Overriding existing service binding [org.hibernate.secure.spi.JaccService]
w2022-03-15 00:38:43 DEBUG Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
w2022-03-15 00:38:43 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
w2022-03-15 00:38:43 INFO  HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
w2022-03-15 00:38:43 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@331f6e07
w2022-03-15 00:38:43 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@331f6e07
w2022-03-15 00:38:43 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@331f6e07
w2022-03-15 00:38:43 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2d14b37e
w2022-03-15 00:38:43 DEBUG Adding type registration true_false -> org.hibernate.type.TrueFalseType@44ac2858
w2022-03-15 00:38:43 DEBUG Adding type registration yes_no -> org.hibernate.type.YesNoType@1bcd822c
w2022-03-15 00:38:43 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@26c41412
w2022-03-15 00:38:43 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@26c41412
w2022-03-15 00:38:43 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@26c41412
w2022-03-15 00:38:43 DEBUG Adding type registration character -> org.hibernate.type.CharacterType@30a773df
w2022-03-15 00:38:43 DEBUG Adding type registration char -> org.hibernate.type.CharacterType@30a773df
w2022-03-15 00:38:43 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@30a773df
w2022-03-15 00:38:43 DEBUG Adding type registration short -> org.hibernate.type.ShortType@35f75b05
w2022-03-15 00:38:43 DEBUG Adding type registration short -> org.hibernate.type.ShortType@35f75b05
w2022-03-15 00:38:43 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.ShortType@35f75b05
w2022-03-15 00:38:43 DEBUG Adding type registration integer -> org.hibernate.type.IntegerType@67f2bce9
w2022-03-15 00:38:43 DEBUG Adding type registration int -> org.hibernate.type.IntegerType@67f2bce9
w2022-03-15 00:38:43 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@67f2bce9
w2022-03-15 00:38:43 DEBUG Adding type registration long -> org.hibernate.type.LongType@435ac83f
w2022-03-15 00:38:43 DEBUG Adding type registration long -> org.hibernate.type.LongType@435ac83f
w2022-03-15 00:38:43 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.LongType@435ac83f
w2022-03-15 00:38:43 DEBUG Adding type registration float -> org.hibernate.type.FloatType@8239a47
w2022-03-15 00:38:43 DEBUG Adding type registration float -> org.hibernate.type.FloatType@8239a47
w2022-03-15 00:38:43 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.FloatType@8239a47
w2022-03-15 00:38:43 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@5e581b29
w2022-03-15 00:38:43 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@5e581b29
w2022-03-15 00:38:43 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5e581b29
w2022-03-15 00:38:43 DEBUG Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@db88ada
w2022-03-15 00:38:43 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@db88ada
w2022-03-15 00:38:43 DEBUG Adding type registration big_integer -> org.hibernate.type.BigIntegerType@75a89d6b
w2022-03-15 00:38:43 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@75a89d6b
w2022-03-15 00:38:43 DEBUG Adding type registration string -> org.hibernate.type.StringType@79c1462f
w2022-03-15 00:38:43 DEBUG Adding type registration java.lang.String -> org.hibernate.type.StringType@79c1462f
w2022-03-15 00:38:43 DEBUG Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7dd87c97
w2022-03-15 00:38:43 DEBUG Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3cd9780b
w2022-03-15 00:38:43 DEBUG Adding type registration url -> org.hibernate.type.UrlType@40588428
w2022-03-15 00:38:43 DEBUG Adding type registration java.net.URL -> org.hibernate.type.UrlType@40588428
w2022-03-15 00:38:43 DEBUG Adding type registration Duration -> org.hibernate.type.DurationType@1860f5bc
w2022-03-15 00:38:43 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1860f5bc
w2022-03-15 00:38:43 DEBUG Adding type registration Instant -> org.hibernate.type.InstantType@6f9d723c
w2022-03-15 00:38:43 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6f9d723c
w2022-03-15 00:38:43 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@22a85e4b
w2022-03-15 00:38:43 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@22a85e4b
w2022-03-15 00:38:43 DEBUG Adding type registration LocalDate -> org.hibernate.type.LocalDateType@831cd8b
w2022-03-15 00:38:43 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@831cd8b
w2022-03-15 00:38:43 DEBUG Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@4b549390
w2022-03-15 00:38:43 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@4b549390
w2022-03-15 00:38:43 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@653ba0a7
w2022-03-15 00:38:43 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@653ba0a7
w2022-03-15 00:38:43 DEBUG Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@6aa4c142
w2022-03-15 00:38:43 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@6aa4c142
w2022-03-15 00:38:43 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@cd50279
w2022-03-15 00:38:43 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@cd50279
w2022-03-15 00:38:43 DEBUG Adding type registration date -> org.hibernate.type.DateType@7e5c03b3
w2022-03-15 00:38:43 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.DateType@7e5c03b3
w2022-03-15 00:38:43 DEBUG Adding type registration time -> org.hibernate.type.TimeType@56bd5dae
w2022-03-15 00:38:43 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.TimeType@56bd5dae
w2022-03-15 00:38:43 DEBUG Adding type registration timestamp -> org.hibernate.type.TimestampType@14e5c2de
w2022-03-15 00:38:43 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@14e5c2de
w2022-03-15 00:38:43 DEBUG Adding type registration java.util.Date -> org.hibernate.type.TimestampType@14e5c2de
w2022-03-15 00:38:43 DEBUG Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@535a54fe
w2022-03-15 00:38:43 DEBUG Adding type registration calendar -> org.hibernate.type.CalendarType@71ccaf7e
w2022-03-15 00:38:43 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@71ccaf7e
w2022-03-15 00:38:43 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@71ccaf7e
w2022-03-15 00:38:43 DEBUG Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2758cb7a
w2022-03-15 00:38:43 DEBUG Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@36f5bb03
w2022-03-15 00:38:43 DEBUG Adding type registration locale -> org.hibernate.type.LocaleType@1271b4ec
w2022-03-15 00:38:43 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1271b4ec
w2022-03-15 00:38:43 DEBUG Adding type registration currency -> org.hibernate.type.CurrencyType@134736a8
w2022-03-15 00:38:43 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@134736a8
w2022-03-15 00:38:43 DEBUG Adding type registration timezone -> org.hibernate.type.TimeZoneType@779d6729
w2022-03-15 00:38:43 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@779d6729
w2022-03-15 00:38:43 DEBUG Adding type registration class -> org.hibernate.type.ClassType@71092802
w2022-03-15 00:38:43 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.ClassType@71092802
w2022-03-15 00:38:43 DEBUG Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3e25c3ad
w2022-03-15 00:38:43 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3e25c3ad
w2022-03-15 00:38:43 DEBUG Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1031e666
w2022-03-15 00:38:43 DEBUG Adding type registration binary -> org.hibernate.type.BinaryType@76edf80a
w2022-03-15 00:38:43 DEBUG Adding type registration byte[] -> org.hibernate.type.BinaryType@76edf80a
w2022-03-15 00:38:43 DEBUG Adding type registration [B -> org.hibernate.type.BinaryType@76edf80a
w2022-03-15 00:38:43 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@41b70ef3
w2022-03-15 00:38:43 DEBUG Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@41b70ef3
w2022-03-15 00:38:43 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@41b70ef3
w2022-03-15 00:38:43 DEBUG Adding type registration row_version -> org.hibernate.type.RowVersionType@30fc3f1b
w2022-03-15 00:38:43 DEBUG Adding type registration image -> org.hibernate.type.ImageType@7358be4d
w2022-03-15 00:38:43 DEBUG Adding type registration characters -> org.hibernate.type.CharArrayType@3fbaaf9d
w2022-03-15 00:38:43 DEBUG Adding type registration char[] -> org.hibernate.type.CharArrayType@3fbaaf9d
w2022-03-15 00:38:43 DEBUG Adding type registration [C -> org.hibernate.type.CharArrayType@3fbaaf9d
w2022-03-15 00:38:43 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5b0abcfe
w2022-03-15 00:38:43 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5b0abcfe
w2022-03-15 00:38:43 DEBUG Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5b0abcfe
w2022-03-15 00:38:43 DEBUG Adding type registration text -> org.hibernate.type.TextType@1346c3af
w2022-03-15 00:38:43 DEBUG Adding type registration ntext -> org.hibernate.type.NTextType@720cc162
w2022-03-15 00:38:43 DEBUG Adding type registration blob -> org.hibernate.type.BlobType@174fc109
w2022-03-15 00:38:43 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@174fc109
w2022-03-15 00:38:43 DEBUG Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@30334135
w2022-03-15 00:38:43 DEBUG Adding type registration clob -> org.hibernate.type.ClobType@73d889b1
w2022-03-15 00:38:43 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@73d889b1
w2022-03-15 00:38:43 DEBUG Adding type registration nclob -> org.hibernate.type.NClobType@690ea773
w2022-03-15 00:38:43 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@690ea773
w2022-03-15 00:38:43 DEBUG Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7553ff8
w2022-03-15 00:38:43 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@eb30c91
w2022-03-15 00:38:43 DEBUG Adding type registration serializable -> org.hibernate.type.SerializableType@3f4c8604
w2022-03-15 00:38:43 DEBUG Adding type registration object -> org.hibernate.type.ObjectType@1ecb3d7e
w2022-03-15 00:38:43 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1ecb3d7e
w2022-03-15 00:38:43 DEBUG Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@335e3077
w2022-03-15 00:38:43 DEBUG Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7439cbaf
w2022-03-15 00:38:43 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2628ec38
w2022-03-15 00:38:43 DEBUG Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@60a7fd40
w2022-03-15 00:38:43 DEBUG Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2238b4ab
w2022-03-15 00:38:43 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@186677f0
w2022-03-15 00:38:43 DEBUG Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@794e01e8
w2022-03-15 00:38:43 DEBUG Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@26dcae7c
w2022-03-15 00:38:43 INFO  HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
w2022-03-15 00:38:43 DEBUG Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@7ccb0f43] into BootstrapContext; was [null]
w2022-03-15 00:38:43 DEBUG ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@7ccb0f43) [was null]
w2022-03-15 00:38:43 DEBUG Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@5a02415d] into BootstrapContext; was [null]
w2022-03-15 00:38:43 DEBUG Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@4516b2ef] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@7d04a2f7]
w2022-03-15 00:38:43 DEBUG Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@7ccb0f43]
w2022-03-15 00:38:43 DEBUG ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@7ccb0f43]
w2022-03-15 00:38:43 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
w2022-03-15 00:38:43 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
w2022-03-15 00:38:43 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
w2022-03-15 00:38:43 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
w2022-03-15 00:38:43 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
w2022-03-15 00:38:43 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
w2022-03-15 00:38:43 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
w2022-03-15 00:38:43 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
w2022-03-15 00:38:43 DEBUG Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
w2022-03-15 00:38:43 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
w2022-03-15 00:38:43 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
w2022-03-15 00:38:43 DEBUG Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
w2022-03-15 00:38:43 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
w2022-03-15 00:38:43 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
w2022-03-15 00:38:43 DEBUG Database ->
       name : SQLite
    version : 3.36.0
      major : 3
      minor : 36
w2022-03-15 00:38:43 DEBUG Driver ->
       name : SQLite JDBC
    version : 3.36.0.3
      major : 3
      minor : 36
w2022-03-15 00:38:43 DEBUG JDBC version : 2.1
w2022-03-15 00:38:43 INFO  HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
w2022-03-15 00:38:43 DEBUG JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
w2022-03-15 00:38:43 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
w2022-03-15 00:38:43 DEBUG HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [2] less than 4
w2022-03-15 00:38:43 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@613dd6e7] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@c7fe0a2]
w2022-03-15 00:38:43 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
w2022-03-15 00:38:43 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.Comment
w2022-03-15 00:38:43 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 00:38:43 DEBUG Import with entity name Comment
w2022-03-15 00:38:43 DEBUG Bind entity ru.edu.helpdesk.entity.Comment on table comment
w2022-03-15 00:38:43 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 00:38:43 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Comment] is safe
w2022-03-15 00:38:43 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Comment
w2022-03-15 00:38:43 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 00:38:43 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Comment:id]
w2022-03-15 00:38:43 DEBUG building SimpleValue for id
w2022-03-15 00:38:43 DEBUG Building property id
w2022-03-15 00:38:43 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 00:38:43 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=message, insertable=true, updatable=true, unique=false}
w2022-03-15 00:38:43 DEBUG MetadataSourceProcessor property message with lazy=false
w2022-03-15 00:38:43 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Comment:message]
w2022-03-15 00:38:43 DEBUG building SimpleValue for message
w2022-03-15 00:38:43 DEBUG Building property message
w2022-03-15 00:38:43 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 00:38:43 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=ticket, insertable=true, updatable=true, unique=false}
w2022-03-15 00:38:43 DEBUG Building property ticket
w2022-03-15 00:38:43 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 00:38:43 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=user, insertable=true, updatable=true, unique=false}
w2022-03-15 00:38:43 DEBUG Building property user
w2022-03-15 00:38:43 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 00:38:43 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 00:38:43 DEBUG Import with entity name Ticket
w2022-03-15 00:38:43 DEBUG Bind entity ru.edu.helpdesk.entity.Ticket on table ticket
w2022-03-15 00:38:43 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 00:38:43 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Ticket] is safe
w2022-03-15 00:38:43 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Ticket
w2022-03-15 00:38:43 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 00:38:43 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:id]
w2022-03-15 00:38:43 DEBUG building SimpleValue for id
w2022-03-15 00:38:43 DEBUG Building property id
w2022-03-15 00:38:43 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 00:38:43 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 00:38:43 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=client, insertable=true, updatable=true, unique=false}
w2022-03-15 00:38:43 DEBUG Building property client
w2022-03-15 00:38:43 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=status, insertable=true, updatable=true, unique=false}
w2022-03-15 00:38:43 DEBUG MetadataSourceProcessor property status with lazy=false
w2022-03-15 00:38:43 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:status]
w2022-03-15 00:38:43 DEBUG building SimpleValue for status
w2022-03-15 00:38:43 DEBUG Building property status
w2022-03-15 00:38:43 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 00:38:43 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=support, insertable=true, updatable=true, unique=false}
w2022-03-15 00:38:43 DEBUG Building property support
w2022-03-15 00:38:43 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=title, insertable=true, updatable=true, unique=false}
w2022-03-15 00:38:43 DEBUG MetadataSourceProcessor property title with lazy=false
w2022-03-15 00:38:43 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:title]
w2022-03-15 00:38:43 DEBUG building SimpleValue for title
w2022-03-15 00:38:43 DEBUG Building property title
w2022-03-15 00:38:43 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.User
w2022-03-15 00:38:43 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 00:38:43 DEBUG Import with entity name User
w2022-03-15 00:38:43 DEBUG Bind entity ru.edu.helpdesk.entity.User on table user
w2022-03-15 00:38:43 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 00:38:43 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.User] is safe
w2022-03-15 00:38:43 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.User
w2022-03-15 00:38:43 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 00:38:43 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:id]
w2022-03-15 00:38:43 DEBUG building SimpleValue for id
w2022-03-15 00:38:43 DEBUG Building property id
w2022-03-15 00:38:43 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 00:38:43 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
w2022-03-15 00:38:43 DEBUG MetadataSourceProcessor property firstName with lazy=false
w2022-03-15 00:38:43 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:firstName]
w2022-03-15 00:38:43 DEBUG building SimpleValue for firstName
w2022-03-15 00:38:43 DEBUG Building property firstName
w2022-03-15 00:38:43 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
w2022-03-15 00:38:43 DEBUG MetadataSourceProcessor property lastName with lazy=false
w2022-03-15 00:38:43 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:lastName]
w2022-03-15 00:38:43 DEBUG building SimpleValue for lastName
w2022-03-15 00:38:43 DEBUG Building property lastName
w2022-03-15 00:38:43 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=login, insertable=true, updatable=true, unique=false}
w2022-03-15 00:38:43 DEBUG MetadataSourceProcessor property login with lazy=false
w2022-03-15 00:38:43 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:login]
w2022-03-15 00:38:43 DEBUG building SimpleValue for login
w2022-03-15 00:38:43 DEBUG Building property login
w2022-03-15 00:38:43 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
w2022-03-15 00:38:43 DEBUG MetadataSourceProcessor property password with lazy=false
w2022-03-15 00:38:43 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:password]
w2022-03-15 00:38:43 DEBUG building SimpleValue for password
w2022-03-15 00:38:43 DEBUG Building property password
w2022-03-15 00:38:43 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=role, insertable=true, updatable=true, unique=false}
w2022-03-15 00:38:43 DEBUG MetadataSourceProcessor property role with lazy=false
w2022-03-15 00:38:43 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:role]
w2022-03-15 00:38:43 DEBUG building SimpleValue for role
w2022-03-15 00:38:43 DEBUG Building property role
w2022-03-15 00:38:43 DEBUG Starting fillSimpleValue for id
w2022-03-15 00:38:43 DEBUG Starting fillSimpleValue for message
w2022-03-15 00:38:43 DEBUG Starting fillSimpleValue for id
w2022-03-15 00:38:43 DEBUG Starting fillSimpleValue for status
w2022-03-15 00:38:43 DEBUG Starting fillSimpleValue for title
w2022-03-15 00:38:43 DEBUG Starting fillSimpleValue for id
w2022-03-15 00:38:43 DEBUG Starting fillSimpleValue for firstName
w2022-03-15 00:38:43 DEBUG Starting fillSimpleValue for lastName
w2022-03-15 00:38:43 DEBUG Starting fillSimpleValue for login
w2022-03-15 00:38:43 DEBUG Starting fillSimpleValue for password
w2022-03-15 00:38:43 DEBUG Starting fillSimpleValue for role
w2022-03-15 00:38:43 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [comment]
w2022-03-15 00:38:43 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [ticket]
w2022-03-15 00:38:43 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [user]
w2022-03-15 00:38:43 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 00:38:43 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 00:38:43 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 00:38:43 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 00:38:43 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 00:38:43 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 00:38:43 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 00:38:43 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 00:38:43 DEBUG Building session factory
w2022-03-15 00:38:43 DEBUG SessionFactory name : null
w2022-03-15 00:38:43 DEBUG Automatic flush during beforeCompletion(): enabled
w2022-03-15 00:38:43 DEBUG Automatic session close at end of transaction: disabled
w2022-03-15 00:38:43 DEBUG Statistics: disabled
w2022-03-15 00:38:43 DEBUG Deleted entity synthetic identifier rollback: disabled
w2022-03-15 00:38:43 DEBUG Default entity-mode: pojo
w2022-03-15 00:38:43 DEBUG Check Nullability in Core (should be disabled when Bean Validation is on): enabled
w2022-03-15 00:38:43 DEBUG Allow initialization of lazy state outside session : disabled
w2022-03-15 00:38:43 DEBUG Using BatchFetchStyle : LEGACY
w2022-03-15 00:38:43 DEBUG Default batch fetch size: -1
w2022-03-15 00:38:43 DEBUG Maximum outer join fetch depth: null
w2022-03-15 00:38:43 DEBUG Default null ordering: NONE
w2022-03-15 00:38:43 DEBUG Order SQL updates by primary key: disabled
w2022-03-15 00:38:43 DEBUG Order SQL inserts for batching: disabled
w2022-03-15 00:38:43 DEBUG multi-tenancy strategy : NONE
w2022-03-15 00:38:43 DEBUG JTA Track by Thread: enabled
w2022-03-15 00:38:43 DEBUG Query language substitutions: {}
w2022-03-15 00:38:43 DEBUG Named query checking : enabled
w2022-03-15 00:38:43 DEBUG Second-level cache: disabled
w2022-03-15 00:38:43 DEBUG Second-level query cache: disabled
w2022-03-15 00:38:43 DEBUG Second-level query cache factory: null
w2022-03-15 00:38:43 DEBUG Second-level cache region prefix: null
w2022-03-15 00:38:43 DEBUG Optimize second-level cache for minimal puts: disabled
w2022-03-15 00:38:43 DEBUG Structured second-level cache entries: disabled
w2022-03-15 00:38:43 DEBUG Second-level cache direct-reference entries: disabled
w2022-03-15 00:38:43 DEBUG Automatic eviction of collection cache: disabled
w2022-03-15 00:38:43 DEBUG JDBC batch size: 1
w2022-03-15 00:38:43 DEBUG JDBC batch updates for versioned data: enabled
w2022-03-15 00:38:43 DEBUG Scrollable result sets: disabled
w2022-03-15 00:38:43 DEBUG Wrap result sets: disabled
w2022-03-15 00:38:43 DEBUG JDBC3 getGeneratedKeys(): enabled
w2022-03-15 00:38:43 DEBUG JDBC result set fetch size: null
w2022-03-15 00:38:43 DEBUG Connection release mode: ON_CLOSE
w2022-03-15 00:38:43 DEBUG Generate SQL with comments: disabled
w2022-03-15 00:38:43 DEBUG JPA compliance - query : disabled
w2022-03-15 00:38:43 DEBUG JPA compliance - closed-handling : disabled
w2022-03-15 00:38:43 DEBUG JPA compliance - lists : disabled
w2022-03-15 00:38:43 DEBUG JPA compliance - transactions : disabled
w2022-03-15 00:38:43 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 00:38:43 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 00:38:43 DEBUG Session factory constructed with filter configurations : {}
w2022-03-15 00:38:43 DEBUG Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=true, java.specification.version=1.8, file.encoding.pkg=sun.io, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@3b791707, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.SQLiteDialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\charsets.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\cldrdata.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\dnsns.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\jaccess.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\localedata.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\nashorn.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunec.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunmscapi.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\zipfs.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jce.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jfr.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jsse.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\management-agent.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\resources.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\rt.jar;C:\Users\Ольга\Desktop\Java\Project\Project1\helpdeskproject\target\classes;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\2.6.4\spring-boot-starter-data-jpa-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\2.6.4\spring-boot-starter-jdbc-2.6.4.jar;C:\Users\Ольга\.m2\repository\com\zaxxer\HikariCP\4.0.3\HikariCP-4.0.3.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-jdbc\5.3.16\spring-jdbc-5.3.16.jar;C:\Users\Ольга\.m2\repository\jakarta\transaction\jakarta.transaction-api\1.3.3\jakarta.transaction-api-1.3.3.jar;C:\Users\Ольга\.m2\repository\jakarta\persistence\jakarta.persistence-api\2.2.3\jakarta.persistence-api-2.2.3.jar;C:\Users\Ольга\.m2\repository\org\hibernate\hibernate-core\5.6.5.Final\hibernate-core-5.6.5.Final.jar;C:\Users\Ольга\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy\1.11.22\byte-buddy-1.11.22.jar;C:\Users\Ольга\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ольга\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Ольга\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.6\jaxb-runtime-2.3.6.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\txw2\2.3.6\txw2-2.3.6.jar;C:\Users\Ольга\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.12\istack-commons-runtime-3.0.12.jar;C:\Users\Ольга\.m2\repository\com\sun\activation\jakarta.activation\1.2.2\jakarta.activation-1.2.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\data\spring-data-jpa\2.6.2\spring-data-jpa-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\data\spring-data-commons\2.6.2\spring-data-commons-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-orm\5.3.16\spring-orm-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-context\5.3.16\spring-context-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-tx\5.3.16\spring-tx-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-beans\5.3.16\spring-beans-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-aspects\5.3.16\spring-aspects-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-security\2.6.4\spring-boot-starter-security-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter\2.6.4\spring-boot-starter-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-logging\2.6.4\spring-boot-starter-logging-2.6.4.jar;C:\Users\Ольга\.m2\repository\ch\qos\logback\logback-classic\1.2.10\logback-classic-1.2.10.jar;C:\Users\Ольга\.m2\repository\ch\qos\logback\logback-core\1.2.10\logback-core-1.2.10.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.17.1\log4j-to-slf4j-2.17.1.jar;C:\Users\Ольга\.m2\repository\org\slf4j\jul-to-slf4j\1.7.36\jul-to-slf4j-1.7.36.jar;C:\Users\Ольга\.m2\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;C:\Users\Ольга\.m2\repository\org\yaml\snakeyaml\1.29\snakeyaml-1.29.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-aop\5.3.16\spring-aop-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-config\5.6.2\spring-security-config-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-web\5.6.2\spring-security-web-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-expression\5.3.16\spring-expression-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-web\2.6.4\spring-boot-starter-web-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-json\2.6.4\spring-boot-starter-json-2.6.4.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.13.1\jackson-datatype-jdk8-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.13.1\jackson-datatype-jsr310-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.13.1\jackson-module-parameter-names-2.13.1.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\2.6.4\spring-boot-starter-tomcat-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.58\tomcat-embed-core-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\9.0.58\tomcat-embed-el-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.58\tomcat-embed-websocket-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-web\5.3.16\spring-web-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-webmvc\5.3.16\spring-webmvc-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-devtools\2.6.4\spring-boot-devtools-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot\2.6.4\spring-boot-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\2.6.4\spring-boot-autoconfigure-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\xerial\sqlite-jdbc\3.36.0.3\sqlite-jdbc-3.36.0.3.jar;C:\Users\Ольга\.m2\repository\com\zsoltfabok\sqlite-dialect\1.0\sqlite-dialect-1.0.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-aop\2.6.2\spring-boot-starter-aop-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\aspectj\aspectjweaver\1.9.7\aspectjweaver-1.9.7.jar;C:\Users\Ольга\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.3\jakarta.xml.bind-api-2.3.3.jar;C:\Users\Ольга\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.2\jakarta.activation-api-1.2.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-core\5.3.16\spring-core-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-jcl\5.3.16\spring-jcl-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-core\5.6.2\spring-security-core-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-crypto\5.6.2\spring-security-crypto-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\projectlombok\lombok\1.18.22\lombok-1.18.22.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\2.6.4\spring-boot-starter-thymeleaf-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\thymeleaf-spring5\3.0.15.RELEASE\thymeleaf-spring5-3.0.15.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\thymeleaf\3.0.15.RELEASE\thymeleaf-3.0.15.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\attoparser\attoparser\2.0.5.RELEASE\attoparser-2.0.5.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-java8time\3.0.4.RELEASE\thymeleaf-extras-java8time-3.0.4.RELEASE.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.1\jackson-databind-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.1\jackson-annotations-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.1\jackson-core-2.13.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-api\2.4.1\log4j-api-2.4.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-core\2.4.1\log4j-core-2.4.1.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.2\lib\idea_rt.jar, java.vm.vendor=Temurin, sun.arch.data.model=64, user.variant=, java.vendor.url=https://adoptium.net/, catalina.useNaming=false, user.timezone=Europe/Moscow, jakarta.persistence.sharedCache.mode=UNSPECIFIED, os.name=Windows 10, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), user.country=RU, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\bin, sun.java.command=ru.edu.helpdesk.HelpdeskApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@24920229, com.sun.management.jmxremote=, javax.persistence.sharedCache.mode=UNSPECIFIED, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, user.home=C:\Users\Ольга, user.language=ru, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre, file.separator=\, spring.output.ansi.enabled=always, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, sun.boot.class.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\resources.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\rt.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\sunrsasign.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jsse.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jce.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\charsets.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jfr.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\classes, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_312-b07, user.name=Эльдорадо, spring.jmx.enabled=true, path.separator=;, os.version=10.0, java.endorsed.dirs=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\endorsed, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=default, spring.beaninfo.ignore=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=C:\Users\134E~1\AppData\Local\Temp\, catalina.home=C:\Users\Ольга\AppData\Local\Temp\tomcat.8080.8160927226330501802, java.version=1.8.0_312, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\Ольга\Desktop\Java\Project\Project1\helpdeskproject, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=12820, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\Ольга\AppData\Local\Temp\tomcat.8080.8160927226330501802, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@c33614d, java.library.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\windows\System32\OpenSSH\;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\Program Files\apache-maven-3.8.4\bin;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Ольга\AppData\Local\Microsoft\WindowsApps;C:\Users\Ольга\AppData\Local\Programs\Microsoft VS Code\bin;C:\SQLite;C:\Users\Ольга\AppData\Roaming\npm;C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.2\bin;;., java.vendor=Temurin, java.vm.info=mixed mode, java.vm.version=25.312-b07, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, java.ext.dirs=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext;C:\windows\Sun\Java\lib\ext, hibernate.connection.datasource=HikariDataSource (HikariPool-1), hibernate.hbm2ddl.import_files=data/import.sql, java.class.version=52.0}
w2022-03-15 00:38:43 DEBUG Skipping JACC integration as it was not enabled
w2022-03-15 00:38:43 DEBUG Using ORDINAL-based conversion for Enum ru.edu.helpdesk.entity.UserRole
w2022-03-15 00:38:43 DEBUG Using ORDINAL-based conversion for Enum ru.edu.helpdesk.entity.TicketStatus
w2022-03-15 00:38:43 DEBUG Instantiated session factory
w2022-03-15 00:38:43 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@613dd6e7] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@68c890c8]
w2022-03-15 00:38:43 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.User] is safe
w2022-03-15 00:38:43 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.User
w2022-03-15 00:38:44 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:38:44 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:38:44 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:38:44 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:38:44 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Ticket] is safe
w2022-03-15 00:38:44 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Ticket
w2022-03-15 00:38:44 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:38:44 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:38:44 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:38:44 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:38:44 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:38:44 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:38:44 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:38:44 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:38:44 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Comment] is safe
w2022-03-15 00:38:44 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Comment
w2022-03-15 00:38:44 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:38:44 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:38:44 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:38:44 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:38:44 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.User
w2022-03-15 00:38:44 DEBUG  Version select: select id from user where id =?
w2022-03-15 00:38:44 DEBUG  Snapshot select: select user_.id, user_.first_name as first_na2_2_, user_.last_name as last_nam3_2_, user_.login as login4_2_, user_.password as password5_2_, user_.role as role6_2_ from user user_ where user_.id=?
w2022-03-15 00:38:44 DEBUG  Insert 0: insert into user (first_name, last_name, login, password, role, id) values (?, ?, ?, ?, ?, ?)
w2022-03-15 00:38:44 DEBUG  Update 0: update user set first_name=?, last_name=?, login=?, password=?, role=? where id=?
w2022-03-15 00:38:44 DEBUG  Delete 0: delete from user where id=?
w2022-03-15 00:38:44 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c6224]
w2022-03-15 00:38:44 DEBUG Visiting attribute path : firstName
w2022-03-15 00:38:44 DEBUG Visiting attribute path : lastName
w2022-03-15 00:38:44 DEBUG Visiting attribute path : login
w2022-03-15 00:38:44 DEBUG Visiting attribute path : password
w2022-03-15 00:38:44 DEBUG Visiting attribute path : role
w2022-03-15 00:38:44 DEBUG Building LoadPlan...
w2022-03-15 00:38:44 DEBUG processing queryspace <gen:0>
w2022-03-15 00:38:44 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.User)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

w2022-03-15 00:38:44 DEBUG Static select for entity ru.edu.helpdesk.entity.User [NONE]: select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 00:38:44 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.Ticket
w2022-03-15 00:38:44 DEBUG  Version select: select id from ticket where id =?
w2022-03-15 00:38:44 DEBUG  Snapshot select: select ticket_.id, ticket_.client_id as client_i4_1_, ticket_.status as status2_1_, ticket_.support_id as support_5_1_, ticket_.title as title3_1_ from ticket ticket_ where ticket_.id=?
w2022-03-15 00:38:44 DEBUG  Insert 0: insert into ticket (client_id, status, support_id, title, id) values (?, ?, ?, ?, ?)
w2022-03-15 00:38:44 DEBUG  Update 0: update ticket set client_id=?, status=?, support_id=?, title=? where id=?
w2022-03-15 00:38:44 DEBUG  Delete 0: delete from ticket where id=?
w2022-03-15 00:38:44 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34e8dabe]
w2022-03-15 00:38:44 DEBUG Visiting attribute path : client
w2022-03-15 00:38:44 DEBUG Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@599654ad]
w2022-03-15 00:38:44 DEBUG Visiting attribute path : client.firstName
w2022-03-15 00:38:44 DEBUG Visiting attribute path : client.lastName
w2022-03-15 00:38:44 DEBUG Visiting attribute path : client.login
w2022-03-15 00:38:44 DEBUG Visiting attribute path : client.password
w2022-03-15 00:38:44 DEBUG Visiting attribute path : client.role
w2022-03-15 00:38:44 DEBUG Visiting attribute path : status
w2022-03-15 00:38:44 DEBUG Visiting attribute path : support
w2022-03-15 00:38:44 DEBUG Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34a0cc8b]
w2022-03-15 00:38:44 DEBUG Visiting attribute path : support.firstName
w2022-03-15 00:38:44 DEBUG Visiting attribute path : support.lastName
w2022-03-15 00:38:44 DEBUG Visiting attribute path : support.login
w2022-03-15 00:38:44 DEBUG Visiting attribute path : support.password
w2022-03-15 00:38:44 DEBUG Visiting attribute path : support.role
w2022-03-15 00:38:44 DEBUG Visiting attribute path : title
w2022-03-15 00:38:44 DEBUG Building LoadPlan...
w2022-03-15 00:38:44 DEBUG processing queryspace <gen:0>
w2022-03-15 00:38:44 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.Ticket)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.Ticket, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.Ticket)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:1>, path=ru.edu.helpdesk.entity.Ticket.client)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:2>, path=ru.edu.helpdesk.entity.Ticket.support)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.Ticket)
          - SQL table alias mapping - ticket0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(client)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
          - JOIN (JoinDefinedByMetadata(support)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user2_
                - alias suffix - 2_
                - suffixed key columns - {id1_2_2_}

w2022-03-15 00:38:44 DEBUG Static select for entity ru.edu.helpdesk.entity.Ticket [NONE]: select ticket0_.id as id1_1_0_, ticket0_.client_id as client_i4_1_0_, ticket0_.status as status2_1_0_, ticket0_.support_id as support_5_1_0_, ticket0_.title as title3_1_0_, user1_.id as id1_2_1_, user1_.first_name as first_na2_2_1_, user1_.last_name as last_nam3_2_1_, user1_.login as login4_2_1_, user1_.password as password5_2_1_, user1_.role as role6_2_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id left outer join user user2_ on ticket0_.support_id=user2_.id where ticket0_.id=?
w2022-03-15 00:38:44 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.Comment
w2022-03-15 00:38:44 DEBUG  Version select: select id from comment where id =?
w2022-03-15 00:38:44 DEBUG  Snapshot select: select comment_.id, comment_.message as message2_0_, comment_.ticket_id as ticket_i3_0_, comment_.user_id as user_id4_0_ from comment comment_ where comment_.id=?
w2022-03-15 00:38:44 DEBUG  Insert 0: insert into comment (message, ticket_id, user_id, id) values (?, ?, ?, ?)
w2022-03-15 00:38:44 DEBUG  Update 0: update comment set message=?, ticket_id=?, user_id=? where id=?
w2022-03-15 00:38:44 DEBUG  Delete 0: delete from comment where id=?
w2022-03-15 00:38:44 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@659c04ee]
w2022-03-15 00:38:44 DEBUG Visiting attribute path : message
w2022-03-15 00:38:44 DEBUG Visiting attribute path : ticket
w2022-03-15 00:38:44 DEBUG Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ca1255c]
w2022-03-15 00:38:44 DEBUG Visiting attribute path : ticket.client
w2022-03-15 00:38:44 DEBUG Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bcab337]
w2022-03-15 00:38:44 DEBUG Visiting attribute path : ticket.client.firstName
w2022-03-15 00:38:44 DEBUG Visiting attribute path : ticket.client.lastName
w2022-03-15 00:38:44 DEBUG Visiting attribute path : ticket.client.login
w2022-03-15 00:38:44 DEBUG Visiting attribute path : ticket.client.password
w2022-03-15 00:38:44 DEBUG Visiting attribute path : ticket.client.role
w2022-03-15 00:38:44 DEBUG Visiting attribute path : ticket.status
w2022-03-15 00:38:44 DEBUG Visiting attribute path : ticket.support
w2022-03-15 00:38:44 DEBUG Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@19c7f930]
w2022-03-15 00:38:44 DEBUG Visiting attribute path : ticket.support.firstName
w2022-03-15 00:38:44 DEBUG Visiting attribute path : ticket.support.lastName
w2022-03-15 00:38:44 DEBUG Visiting attribute path : ticket.support.login
w2022-03-15 00:38:44 DEBUG Visiting attribute path : ticket.support.password
w2022-03-15 00:38:44 DEBUG Visiting attribute path : ticket.support.role
w2022-03-15 00:38:44 DEBUG Visiting attribute path : ticket.title
w2022-03-15 00:38:44 DEBUG Visiting attribute path : user
w2022-03-15 00:38:44 DEBUG Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ae85e2e]
w2022-03-15 00:38:44 DEBUG Visiting attribute path : user.firstName
w2022-03-15 00:38:44 DEBUG Visiting attribute path : user.lastName
w2022-03-15 00:38:44 DEBUG Visiting attribute path : user.login
w2022-03-15 00:38:44 DEBUG Visiting attribute path : user.password
w2022-03-15 00:38:44 DEBUG Visiting attribute path : user.role
w2022-03-15 00:38:44 DEBUG Building LoadPlan...
w2022-03-15 00:38:44 DEBUG processing queryspace <gen:0>
w2022-03-15 00:38:44 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.Comment)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.Comment, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.Comment)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.Ticket, querySpaceUid=<gen:1>, path=ru.edu.helpdesk.entity.Comment.ticket)
             - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:2>, path=ru.edu.helpdesk.entity.Comment.ticket.client)
             - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:3>, path=ru.edu.helpdesk.entity.Comment.ticket.support)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:4>, path=ru.edu.helpdesk.entity.Comment.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(ticket)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ru.edu.helpdesk.entity.Ticket)
                - SQL table alias mapping - ticket1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(client)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=ru.edu.helpdesk.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}
                - JOIN (JoinDefinedByMetadata(support)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=ru.edu.helpdesk.entity.User)
                      - SQL table alias mapping - user3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_2_3_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user4_
                - alias suffix - 4_
                - suffixed key columns - {id1_2_4_}

w2022-03-15 00:38:44 DEBUG Static select for entity ru.edu.helpdesk.entity.Comment [NONE]: select comment0_.id as id1_0_0_, comment0_.message as message2_0_0_, comment0_.ticket_id as ticket_i3_0_0_, comment0_.user_id as user_id4_0_0_, ticket1_.id as id1_1_1_, ticket1_.client_id as client_i4_1_1_, ticket1_.status as status2_1_1_, ticket1_.support_id as support_5_1_1_, ticket1_.title as title3_1_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_, user3_.id as id1_2_3_, user3_.first_name as first_na2_2_3_, user3_.last_name as last_nam3_2_3_, user3_.login as login4_2_3_, user3_.password as password5_2_3_, user3_.role as role6_2_3_, user4_.id as id1_2_4_, user4_.first_name as first_na2_2_4_, user4_.last_name as last_nam3_2_4_, user4_.login as login4_2_4_, user4_.password as password5_2_4_, user4_.role as role6_2_4_ from comment comment0_ left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id left outer join user user2_ on ticket1_.client_id=user2_.id left outer join user user3_ on ticket1_.support_id=user3_.id left outer join user user4_ on comment0_.user_id=user4_.id where comment0_.id=?
w2022-03-15 00:38:44 DEBUG drop table if exists comment
w2022-03-15 00:38:44 DEBUG drop table if exists hibernate_sequence
w2022-03-15 00:38:44 DEBUG drop table if exists ticket
w2022-03-15 00:38:44 DEBUG drop table if exists user
w2022-03-15 00:38:44 DEBUG create table comment (id bigint not null, message varchar(255) not null, ticket_id bigint, user_id bigint, primary key (id))
w2022-03-15 00:38:44 DEBUG create table hibernate_sequence (next_val bigint)
w2022-03-15 00:38:44 DEBUG insert into hibernate_sequence values ( 1 )
w2022-03-15 00:38:44 DEBUG create table ticket (id bigint not null, status integer, title varchar(255) not null, client_id bigint, support_id bigint, primary key (id))
w2022-03-15 00:38:44 DEBUG create table user (id bigint not null, first_name varchar(255), last_name varchar(255), login varchar(255) not null, password varchar(255) not null, role integer, primary key (id))
w2022-03-15 00:38:44 INFO  HHH000476: Executing import script 'file:/C:/Users/%d0%9e%d0%bb%d1%8c%d0%b3%d0%b0/Desktop/Java/Project/Project1/helpdeskproject/target/classes/data/import.sql'
w2022-03-15 00:38:44 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (1, 'admin', 'admin', 'admin', 'admin', 0)
w2022-03-15 00:38:44 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (2, 'support', 'support', 'support', 'support', 1)
w2022-03-15 00:38:44 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (3, 'user1', 'user1', 'user1', 'user1', 2)
w2022-03-15 00:38:44 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (4, 'user2', 'user2', 'user2', 'user2', 2)
w2022-03-15 00:38:44 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (1, 1, 'Hello user1', 3, 2)
w2022-03-15 00:38:44 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (2, 0, 'Title2', 3, NULL)
w2022-03-15 00:38:44 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (3, 0, 'Message user2', 4, NULL)
w2022-03-15 00:38:44 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (1, "Hello ticket1", 1, 3)
w2022-03-15 00:38:44 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (2, "Hello ticket2", 2, 3)
w2022-03-15 00:38:44 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (3, "Hello ticket11", 1, 2)
w2022-03-15 00:38:44 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (4, "Hello ticket111", 1, 2)
w2022-03-15 00:38:44 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (5, "Hello ticket22", 2, 2)
w2022-03-15 00:38:44 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (6, "Hello ticket3", 3, 4)
w2022-03-15 00:38:44 DEBUG UPDATE hibernate_sequence SET next_val = 8 WHERE next_val = 1
w2022-03-15 00:38:44 INFO  HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
w2022-03-15 00:38:44 DEBUG Checking 0 named HQL queries
w2022-03-15 00:38:44 DEBUG Checking 0 named SQL queries
w2022-03-15 00:38:44 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 00:38:44 DEBUG Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@67a9b2b5
w2022-03-15 00:38:44 DEBUG Registering SessionFactory: ebc59c37-1dae-408e-b316-ba1b74435014 (<unnamed>)
w2022-03-15 00:38:44 DEBUG Not binding SessionFactory to JNDI, no JNDI name configured
w2022-03-15 00:38:44 DEBUG Statistics initialized [enabled=false]
w2022-03-15 00:38:44 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 00:38:44 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 00:38:44 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 00:38:52 DEBUG Rendered criteria query -> select generatedAlias0 from Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 00:38:52 DEBUG QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@ad2c8c9
w2022-03-15 00:38:52 DEBUG parse() - HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 00:38:52 DEBUG throwQueryException() : no errors
w2022-03-15 00:38:52 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[IDENT] Node: 'ru'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'edu'
    |  |  |  |  |  |  \-[IDENT] Node: 'helpdesk'
    |  |  |  |  |  \-[IDENT] Node: 'entity'
    |  |  |  |  \-[IDENT] Node: 'Ticket'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'client'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias1'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

w2022-03-15 00:38:52 DEBUG select << begin [level=1, statement=select]
w2022-03-15 00:38:52 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.Ticket (generatedAlias0) -> ticket0_
w2022-03-15 00:38:52 DEBUG Resolved : generatedAlias0 -> ticket0_.id
w2022-03-15 00:38:52 DEBUG getDataType() : client -> org.hibernate.type.ManyToOneType(ru.edu.helpdesk.entity.User)
w2022-03-15 00:38:52 DEBUG dereferenceEntityJoin() : generating join for client in ru.edu.helpdesk.entity.Ticket (generatedAlias1) parent = [ {null} ]
w2022-03-15 00:38:52 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.User (generatedAlias1) -> user1_
w2022-03-15 00:38:52 DEBUG addJoinByPathMap() : generatedAlias0.client -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}
w2022-03-15 00:38:52 DEBUG Resolved : generatedAlias0.client -> ticket0_.client_id
w2022-03-15 00:38:52 DEBUG createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'user user1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Ticket.client,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}

w2022-03-15 00:38:52 DEBUG Resolved : generatedAlias0 -> ticket0_.id
w2022-03-15 00:38:52 DEBUG Resolved : generatedAlias1 -> user1_.id
w2022-03-15 00:38:52 DEBUG getDataType() : id -> org.hibernate.type.LongType@435ac83f
w2022-03-15 00:38:52 DEBUG Resolved : generatedAlias1.id -> user1_.id
w2022-03-15 00:38:52 DEBUG select : finishing up [level=1, statement=select]
w2022-03-15 00:38:52 DEBUG processQuery() :  ( SELECT ( {select clause} ticket0_.id ) ( FromClause{level=1} ( ticket ticket0_ user user1_ ) ) ( where ( = ( user1_.id user1_.id id ) ? ) ) )
w2022-03-15 00:38:52 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Ticket): [ticket]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.Ticket)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.User)
          | path: generatedAlias1.id
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.User)
          |  | originalText: generatedAlias1
          |  \-IdentNode
          |    persister: null
          |    originalText: id
          \-ParameterNode

w2022-03-15 00:38:52 DEBUG Using FROM fragment [ticket ticket0_]
w2022-03-15 00:38:52 DEBUG Using FROM fragment [left outer join user user1_ on ticket0_.client_id=user1_.id]
w2022-03-15 00:38:52 DEBUG select >> end [level=1, statement=select]
w2022-03-15 00:38:52 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (ticket,user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'ticket0_.id as id1_1_' {alias=generatedAlias0, className=ru.edu.helpdesk.entity.Ticket, tableAlias=ticket0_}
    |  \-[SQL_TOKEN] SqlFragment: 'ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[ticket0_, user1_], fromElementsByPath=[generatedAlias0.client], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'ticket ticket0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=ticket,tableAlias=ticket0_,origin=null,columns={,className=ru.edu.helpdesk.entity.Ticket}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join user user1_ on ticket0_.client_id=user1_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Ticket.client,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user1_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias1.id,tableAlias=user1_,className=ru.edu.helpdesk.entity.User,classAlias=generatedAlias1}
          |  +-[ALIAS_REF] IdentNode: 'user1_.id' {alias=generatedAlias1, className=ru.edu.helpdesk.entity.User, tableAlias=user1_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LongType@435ac83f}

w2022-03-15 00:38:52 DEBUG throwQueryException() : no errors
w2022-03-15 00:38:52 DEBUG HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 00:38:52 DEBUG SQL: select ticket0_.id as id1_1_, ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id where user1_.id=?
w2022-03-15 00:38:52 DEBUG throwQueryException() : no errors
w2022-03-15 00:38:52 DEBUG select ticket0_.id as id1_1_, ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id where user1_.id=?
w2022-03-15 00:38:52 DEBUG Result set row: 0
w2022-03-15 00:38:52 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 00:38:52 DEBUG Result set row: 1
w2022-03-15 00:38:52 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 00:38:52 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 00:38:52 DEBUG Processing attribute `client` : value = 3
w2022-03-15 00:38:52 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 00:38:52 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 00:38:52 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 00:38:52 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#3]
w2022-03-15 00:38:52 DEBUG Processing attribute `firstName` : value = user1
w2022-03-15 00:38:52 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 00:38:52 DEBUG Processing attribute `lastName` : value = user1
w2022-03-15 00:38:52 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 00:38:52 DEBUG Processing attribute `login` : value = user1
w2022-03-15 00:38:52 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 00:38:52 DEBUG Processing attribute `password` : value = user1
w2022-03-15 00:38:52 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 00:38:52 DEBUG Processing attribute `role` : value = USER
w2022-03-15 00:38:52 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 00:38:52 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#3]
w2022-03-15 00:38:52 DEBUG Done entity load : ru.edu.helpdesk.entity.User#3
w2022-03-15 00:38:52 DEBUG Processing attribute `status` : value = WORKING
w2022-03-15 00:38:52 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 00:38:52 DEBUG Processing attribute `support` : value = 2
w2022-03-15 00:38:52 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 00:38:52 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 00:38:52 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 00:38:52 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#2]
w2022-03-15 00:38:52 DEBUG Processing attribute `firstName` : value = support
w2022-03-15 00:38:52 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 00:38:52 DEBUG Processing attribute `lastName` : value = support
w2022-03-15 00:38:52 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 00:38:52 DEBUG Processing attribute `login` : value = support
w2022-03-15 00:38:52 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 00:38:52 DEBUG Processing attribute `password` : value = support
w2022-03-15 00:38:52 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 00:38:52 DEBUG Processing attribute `role` : value = SUPPORT
w2022-03-15 00:38:52 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 00:38:52 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#2]
w2022-03-15 00:38:52 DEBUG Done entity load : ru.edu.helpdesk.entity.User#2
w2022-03-15 00:38:52 DEBUG Processing attribute `title` : value = Hello user1
w2022-03-15 00:38:52 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 00:38:52 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 00:38:52 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 00:38:52 DEBUG Processing attribute `client` : value = 3
w2022-03-15 00:38:52 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 00:38:52 DEBUG Processing attribute `status` : value = OPEN
w2022-03-15 00:38:52 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 00:38:52 DEBUG Processing attribute `support` : value = null
w2022-03-15 00:38:52 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 00:38:52 DEBUG Processing attribute `title` : value = Title2
w2022-03-15 00:38:52 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 00:38:52 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 00:39:25 DEBUG Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.login=:param0
w2022-03-15 00:39:25 DEBUG parse() - HQL: select generatedAlias0 from ru.edu.helpdesk.entity.User as generatedAlias0 where generatedAlias0.login=:param0
w2022-03-15 00:39:25 DEBUG throwQueryException() : no errors
w2022-03-15 00:39:25 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'ru'
    |  |     |  |  |  |  \-[IDENT] Node: 'edu'
    |  |     |  |  |  \-[IDENT] Node: 'helpdesk'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'login'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

w2022-03-15 00:39:25 DEBUG select << begin [level=1, statement=select]
w2022-03-15 00:39:25 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.User (generatedAlias0) -> user0_
w2022-03-15 00:39:25 DEBUG Resolved : generatedAlias0 -> user0_.id
w2022-03-15 00:39:25 DEBUG Resolved : generatedAlias0 -> user0_.id
w2022-03-15 00:39:25 DEBUG getDataType() : login -> org.hibernate.type.StringType@79c1462f
w2022-03-15 00:39:25 DEBUG Resolved : generatedAlias0.login -> user0_.login
w2022-03-15 00:39:25 DEBUG select : finishing up [level=1, statement=select]
w2022-03-15 00:39:25 DEBUG processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) ( where ( = ( user0_.login user0_.id login ) ? ) ) )
w2022-03-15 00:39:25 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity User): [user]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.User)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.User)
          | path: generatedAlias0.login
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.User)
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    originalText: login
          \-ParameterNode

w2022-03-15 00:39:25 DEBUG Using FROM fragment [user user0_]
w2022-03-15 00:39:25 DEBUG select >> end [level=1, statement=select]
w2022-03-15 00:39:25 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_2_' {alias=generatedAlias0, className=ru.edu.helpdesk.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.first_name as first_na2_2_, user0_.last_name as last_nam3_2_, user0_.login as login4_2_, user0_.password as password5_2_, user0_.role as role6_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=ru.edu.helpdesk.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.login' {propertyName=login,dereferenceType=PRIMITIVE,getPropertyPath=login,path=generatedAlias0.login,tableAlias=user0_,className=ru.edu.helpdesk.entity.User,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=generatedAlias0, className=ru.edu.helpdesk.entity.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'login' {originalText=login}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@79c1462f}

w2022-03-15 00:39:25 DEBUG throwQueryException() : no errors
w2022-03-15 00:39:25 DEBUG HQL: select generatedAlias0 from ru.edu.helpdesk.entity.User as generatedAlias0 where generatedAlias0.login=:param0
w2022-03-15 00:39:25 DEBUG SQL: select user0_.id as id1_2_, user0_.first_name as first_na2_2_, user0_.last_name as last_nam3_2_, user0_.login as login4_2_, user0_.password as password5_2_, user0_.role as role6_2_ from user user0_ where user0_.login=?
w2022-03-15 00:39:25 DEBUG throwQueryException() : no errors
w2022-03-15 00:39:25 DEBUG select user0_.id as id1_2_, user0_.first_name as first_na2_2_, user0_.last_name as last_nam3_2_, user0_.login as login4_2_, user0_.password as password5_2_, user0_.role as role6_2_ from user user0_ where user0_.login=?
w2022-03-15 00:39:25 DEBUG Result set row: 0
w2022-03-15 00:39:25 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.User#1]
w2022-03-15 00:39:25 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#1]
w2022-03-15 00:39:25 DEBUG Processing attribute `firstName` : value = admin
w2022-03-15 00:39:25 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 00:39:25 DEBUG Processing attribute `lastName` : value = admin
w2022-03-15 00:39:25 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 00:39:25 DEBUG Processing attribute `login` : value = admin
w2022-03-15 00:39:25 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 00:39:25 DEBUG Processing attribute `password` : value = admin
w2022-03-15 00:39:25 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 00:39:25 DEBUG Processing attribute `role` : value = ADMIN
w2022-03-15 00:39:25 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 00:39:25 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#1]
w2022-03-15 00:39:25 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 00:39:25 DEBUG begin
w2022-03-15 00:39:25 DEBUG committing
w2022-03-15 00:43:06 DEBUG Logging Provider: org.jboss.logging.Log4j2LoggerProvider
w2022-03-15 00:43:06 DEBUG PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@70f92b97
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/%d0%9e%d0%bb%d1%8c%d0%b3%d0%b0/Desktop/Java/Project/Project1/helpdeskproject/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		ru.edu.helpdesk.entity.Comment
		ru.edu.helpdesk.entity.Ticket
		ru.edu.helpdesk.entity.User]
	Mapping files names []
	Properties []
w2022-03-15 00:43:06 DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
w2022-03-15 00:43:06 DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
w2022-03-15 00:43:06 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
w2022-03-15 00:43:06 INFO  HHH000412: Hibernate ORM core version 5.6.5.Final
w2022-03-15 00:43:06 DEBUG HHH000206: hibernate.properties not found
w2022-03-15 00:43:06 DEBUG Overriding existing service binding [org.hibernate.secure.spi.JaccService]
w2022-03-15 00:43:06 DEBUG Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
w2022-03-15 00:43:06 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
w2022-03-15 00:43:06 INFO  HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
w2022-03-15 00:43:06 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@cf32d56
w2022-03-15 00:43:06 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@cf32d56
w2022-03-15 00:43:06 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@cf32d56
w2022-03-15 00:43:06 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6e1e30e3
w2022-03-15 00:43:06 DEBUG Adding type registration true_false -> org.hibernate.type.TrueFalseType@3a522d8a
w2022-03-15 00:43:06 DEBUG Adding type registration yes_no -> org.hibernate.type.YesNoType@25b83451
w2022-03-15 00:43:06 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@4a19517c
w2022-03-15 00:43:06 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@4a19517c
w2022-03-15 00:43:06 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4a19517c
w2022-03-15 00:43:06 DEBUG Adding type registration character -> org.hibernate.type.CharacterType@129ceaa9
w2022-03-15 00:43:06 DEBUG Adding type registration char -> org.hibernate.type.CharacterType@129ceaa9
w2022-03-15 00:43:06 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@129ceaa9
w2022-03-15 00:43:06 DEBUG Adding type registration short -> org.hibernate.type.ShortType@3b3bfd13
w2022-03-15 00:43:06 DEBUG Adding type registration short -> org.hibernate.type.ShortType@3b3bfd13
w2022-03-15 00:43:06 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3b3bfd13
w2022-03-15 00:43:06 DEBUG Adding type registration integer -> org.hibernate.type.IntegerType@34be7077
w2022-03-15 00:43:06 DEBUG Adding type registration int -> org.hibernate.type.IntegerType@34be7077
w2022-03-15 00:43:06 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@34be7077
w2022-03-15 00:43:06 DEBUG Adding type registration long -> org.hibernate.type.LongType@1311758f
w2022-03-15 00:43:06 DEBUG Adding type registration long -> org.hibernate.type.LongType@1311758f
w2022-03-15 00:43:06 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.LongType@1311758f
w2022-03-15 00:43:06 DEBUG Adding type registration float -> org.hibernate.type.FloatType@a95e719
w2022-03-15 00:43:06 DEBUG Adding type registration float -> org.hibernate.type.FloatType@a95e719
w2022-03-15 00:43:06 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.FloatType@a95e719
w2022-03-15 00:43:06 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@1f07ad0f
w2022-03-15 00:43:06 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@1f07ad0f
w2022-03-15 00:43:06 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1f07ad0f
w2022-03-15 00:43:06 DEBUG Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@45ff9b5d
w2022-03-15 00:43:06 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@45ff9b5d
w2022-03-15 00:43:06 DEBUG Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6a0a0409
w2022-03-15 00:43:06 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6a0a0409
w2022-03-15 00:43:06 DEBUG Adding type registration string -> org.hibernate.type.StringType@72805bf8
w2022-03-15 00:43:06 DEBUG Adding type registration java.lang.String -> org.hibernate.type.StringType@72805bf8
w2022-03-15 00:43:06 DEBUG Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2e4823f2
w2022-03-15 00:43:06 DEBUG Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7babd2d2
w2022-03-15 00:43:06 DEBUG Adding type registration url -> org.hibernate.type.UrlType@5057f9f9
w2022-03-15 00:43:06 DEBUG Adding type registration java.net.URL -> org.hibernate.type.UrlType@5057f9f9
w2022-03-15 00:43:06 DEBUG Adding type registration Duration -> org.hibernate.type.DurationType@5d006098
w2022-03-15 00:43:06 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5d006098
w2022-03-15 00:43:06 DEBUG Adding type registration Instant -> org.hibernate.type.InstantType@3a2dbc93
w2022-03-15 00:43:06 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3a2dbc93
w2022-03-15 00:43:06 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@6011068c
w2022-03-15 00:43:06 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@6011068c
w2022-03-15 00:43:06 DEBUG Adding type registration LocalDate -> org.hibernate.type.LocalDateType@54172bf8
w2022-03-15 00:43:06 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@54172bf8
w2022-03-15 00:43:06 DEBUG Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@40b3c0a2
w2022-03-15 00:43:06 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@40b3c0a2
w2022-03-15 00:43:06 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1a2ad91a
w2022-03-15 00:43:06 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1a2ad91a
w2022-03-15 00:43:06 DEBUG Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@53417aa1
w2022-03-15 00:43:06 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@53417aa1
w2022-03-15 00:43:06 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5cdae739
w2022-03-15 00:43:06 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5cdae739
w2022-03-15 00:43:06 DEBUG Adding type registration date -> org.hibernate.type.DateType@53bb1072
w2022-03-15 00:43:06 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.DateType@53bb1072
w2022-03-15 00:43:06 DEBUG Adding type registration time -> org.hibernate.type.TimeType@335ad546
w2022-03-15 00:43:06 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.TimeType@335ad546
w2022-03-15 00:43:06 DEBUG Adding type registration timestamp -> org.hibernate.type.TimestampType@5b0cfcba
w2022-03-15 00:43:06 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5b0cfcba
w2022-03-15 00:43:06 DEBUG Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5b0cfcba
w2022-03-15 00:43:06 DEBUG Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@16cb19bd
w2022-03-15 00:43:06 DEBUG Adding type registration calendar -> org.hibernate.type.CalendarType@410a903c
w2022-03-15 00:43:06 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@410a903c
w2022-03-15 00:43:06 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@410a903c
w2022-03-15 00:43:06 DEBUG Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@9ab7068
w2022-03-15 00:43:06 DEBUG Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@bc86809
w2022-03-15 00:43:06 DEBUG Adding type registration locale -> org.hibernate.type.LocaleType@48a205e2
w2022-03-15 00:43:06 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@48a205e2
w2022-03-15 00:43:06 DEBUG Adding type registration currency -> org.hibernate.type.CurrencyType@64b7e182
w2022-03-15 00:43:06 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@64b7e182
w2022-03-15 00:43:06 DEBUG Adding type registration timezone -> org.hibernate.type.TimeZoneType@68e4b7c3
w2022-03-15 00:43:06 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@68e4b7c3
w2022-03-15 00:43:06 DEBUG Adding type registration class -> org.hibernate.type.ClassType@5948cdce
w2022-03-15 00:43:06 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5948cdce
w2022-03-15 00:43:06 DEBUG Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@11d9388c
w2022-03-15 00:43:06 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@11d9388c
w2022-03-15 00:43:06 DEBUG Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3f205b41
w2022-03-15 00:43:06 DEBUG Adding type registration binary -> org.hibernate.type.BinaryType@14b659b8
w2022-03-15 00:43:06 DEBUG Adding type registration byte[] -> org.hibernate.type.BinaryType@14b659b8
w2022-03-15 00:43:06 DEBUG Adding type registration [B -> org.hibernate.type.BinaryType@14b659b8
w2022-03-15 00:43:06 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5645ba0e
w2022-03-15 00:43:06 DEBUG Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5645ba0e
w2022-03-15 00:43:06 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5645ba0e
w2022-03-15 00:43:06 DEBUG Adding type registration row_version -> org.hibernate.type.RowVersionType@6a0ecf87
w2022-03-15 00:43:06 DEBUG Adding type registration image -> org.hibernate.type.ImageType@46072170
w2022-03-15 00:43:06 DEBUG Adding type registration characters -> org.hibernate.type.CharArrayType@c94d4f3
w2022-03-15 00:43:06 DEBUG Adding type registration char[] -> org.hibernate.type.CharArrayType@c94d4f3
w2022-03-15 00:43:06 DEBUG Adding type registration [C -> org.hibernate.type.CharArrayType@c94d4f3
w2022-03-15 00:43:06 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3a514b41
w2022-03-15 00:43:06 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3a514b41
w2022-03-15 00:43:06 DEBUG Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3a514b41
w2022-03-15 00:43:06 DEBUG Adding type registration text -> org.hibernate.type.TextType@6a46d2c2
w2022-03-15 00:43:06 DEBUG Adding type registration ntext -> org.hibernate.type.NTextType@32808d6d
w2022-03-15 00:43:06 DEBUG Adding type registration blob -> org.hibernate.type.BlobType@3c6e8469
w2022-03-15 00:43:06 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3c6e8469
w2022-03-15 00:43:06 DEBUG Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@736be398
w2022-03-15 00:43:06 DEBUG Adding type registration clob -> org.hibernate.type.ClobType@64c4882e
w2022-03-15 00:43:06 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@64c4882e
w2022-03-15 00:43:06 DEBUG Adding type registration nclob -> org.hibernate.type.NClobType@53a2ac32
w2022-03-15 00:43:06 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@53a2ac32
w2022-03-15 00:43:06 DEBUG Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@19e9b986
w2022-03-15 00:43:06 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6de1d8e0
w2022-03-15 00:43:06 DEBUG Adding type registration serializable -> org.hibernate.type.SerializableType@3b2c28b8
w2022-03-15 00:43:06 DEBUG Adding type registration object -> org.hibernate.type.ObjectType@4d8146f
w2022-03-15 00:43:06 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4d8146f
w2022-03-15 00:43:06 DEBUG Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2239e4fc
w2022-03-15 00:43:06 DEBUG Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6606e7b8
w2022-03-15 00:43:06 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2d28386e
w2022-03-15 00:43:06 DEBUG Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7ee85920
w2022-03-15 00:43:06 DEBUG Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@139b5c05
w2022-03-15 00:43:06 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@427152e9
w2022-03-15 00:43:06 DEBUG Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2e76f981
w2022-03-15 00:43:06 DEBUG Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@12eb9436
w2022-03-15 00:43:06 INFO  HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
w2022-03-15 00:43:06 DEBUG Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@17769348] into BootstrapContext; was [null]
w2022-03-15 00:43:06 DEBUG ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@17769348) [was null]
w2022-03-15 00:43:06 DEBUG Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@12df4a84] into BootstrapContext; was [null]
w2022-03-15 00:43:06 DEBUG Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@42d33aef] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@45f33990]
w2022-03-15 00:43:06 DEBUG Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@17769348]
w2022-03-15 00:43:06 DEBUG ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@17769348]
w2022-03-15 00:43:06 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
w2022-03-15 00:43:06 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
w2022-03-15 00:43:06 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
w2022-03-15 00:43:06 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
w2022-03-15 00:43:06 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
w2022-03-15 00:43:06 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
w2022-03-15 00:43:06 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
w2022-03-15 00:43:06 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
w2022-03-15 00:43:06 DEBUG Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
w2022-03-15 00:43:06 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
w2022-03-15 00:43:06 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
w2022-03-15 00:43:06 DEBUG Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
w2022-03-15 00:43:06 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
w2022-03-15 00:43:06 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
w2022-03-15 00:43:06 DEBUG Database ->
       name : SQLite
    version : 3.36.0
      major : 3
      minor : 36
w2022-03-15 00:43:06 DEBUG Driver ->
       name : SQLite JDBC
    version : 3.36.0.3
      major : 3
      minor : 36
w2022-03-15 00:43:06 DEBUG JDBC version : 2.1
w2022-03-15 00:43:06 INFO  HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
w2022-03-15 00:43:06 DEBUG JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
w2022-03-15 00:43:06 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
w2022-03-15 00:43:06 DEBUG HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [2] less than 4
w2022-03-15 00:43:06 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6a54d584] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@79721098]
w2022-03-15 00:43:06 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
w2022-03-15 00:43:06 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.Comment
w2022-03-15 00:43:06 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 00:43:06 DEBUG Import with entity name Comment
w2022-03-15 00:43:06 DEBUG Bind entity ru.edu.helpdesk.entity.Comment on table comment
w2022-03-15 00:43:06 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 00:43:06 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Comment] is safe
w2022-03-15 00:43:06 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Comment
w2022-03-15 00:43:06 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 00:43:06 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Comment:id]
w2022-03-15 00:43:06 DEBUG building SimpleValue for id
w2022-03-15 00:43:06 DEBUG Building property id
w2022-03-15 00:43:06 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 00:43:06 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=message, insertable=true, updatable=true, unique=false}
w2022-03-15 00:43:06 DEBUG MetadataSourceProcessor property message with lazy=false
w2022-03-15 00:43:06 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Comment:message]
w2022-03-15 00:43:06 DEBUG building SimpleValue for message
w2022-03-15 00:43:06 DEBUG Building property message
w2022-03-15 00:43:06 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 00:43:06 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=ticket, insertable=true, updatable=true, unique=false}
w2022-03-15 00:43:06 DEBUG Building property ticket
w2022-03-15 00:43:06 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 00:43:06 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=user, insertable=true, updatable=true, unique=false}
w2022-03-15 00:43:06 DEBUG Building property user
w2022-03-15 00:43:06 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 00:43:06 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 00:43:06 DEBUG Import with entity name Ticket
w2022-03-15 00:43:06 DEBUG Bind entity ru.edu.helpdesk.entity.Ticket on table ticket
w2022-03-15 00:43:06 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 00:43:06 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Ticket] is safe
w2022-03-15 00:43:06 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Ticket
w2022-03-15 00:43:06 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 00:43:06 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:id]
w2022-03-15 00:43:06 DEBUG building SimpleValue for id
w2022-03-15 00:43:06 DEBUG Building property id
w2022-03-15 00:43:06 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 00:43:06 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 00:43:06 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=client, insertable=true, updatable=true, unique=false}
w2022-03-15 00:43:06 DEBUG Building property client
w2022-03-15 00:43:06 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=status, insertable=true, updatable=true, unique=false}
w2022-03-15 00:43:06 DEBUG MetadataSourceProcessor property status with lazy=false
w2022-03-15 00:43:06 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:status]
w2022-03-15 00:43:06 DEBUG building SimpleValue for status
w2022-03-15 00:43:06 DEBUG Building property status
w2022-03-15 00:43:06 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 00:43:06 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=support, insertable=true, updatable=true, unique=false}
w2022-03-15 00:43:06 DEBUG Building property support
w2022-03-15 00:43:06 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=title, insertable=true, updatable=true, unique=false}
w2022-03-15 00:43:06 DEBUG MetadataSourceProcessor property title with lazy=false
w2022-03-15 00:43:06 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:title]
w2022-03-15 00:43:06 DEBUG building SimpleValue for title
w2022-03-15 00:43:06 DEBUG Building property title
w2022-03-15 00:43:06 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.User
w2022-03-15 00:43:06 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 00:43:06 DEBUG Import with entity name User
w2022-03-15 00:43:06 DEBUG Bind entity ru.edu.helpdesk.entity.User on table user
w2022-03-15 00:43:06 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 00:43:06 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.User] is safe
w2022-03-15 00:43:06 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.User
w2022-03-15 00:43:06 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 00:43:06 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:id]
w2022-03-15 00:43:06 DEBUG building SimpleValue for id
w2022-03-15 00:43:06 DEBUG Building property id
w2022-03-15 00:43:06 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 00:43:06 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
w2022-03-15 00:43:06 DEBUG MetadataSourceProcessor property firstName with lazy=false
w2022-03-15 00:43:06 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:firstName]
w2022-03-15 00:43:06 DEBUG building SimpleValue for firstName
w2022-03-15 00:43:06 DEBUG Building property firstName
w2022-03-15 00:43:06 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
w2022-03-15 00:43:06 DEBUG MetadataSourceProcessor property lastName with lazy=false
w2022-03-15 00:43:06 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:lastName]
w2022-03-15 00:43:06 DEBUG building SimpleValue for lastName
w2022-03-15 00:43:06 DEBUG Building property lastName
w2022-03-15 00:43:06 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=login, insertable=true, updatable=true, unique=false}
w2022-03-15 00:43:06 DEBUG MetadataSourceProcessor property login with lazy=false
w2022-03-15 00:43:06 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:login]
w2022-03-15 00:43:06 DEBUG building SimpleValue for login
w2022-03-15 00:43:06 DEBUG Building property login
w2022-03-15 00:43:06 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
w2022-03-15 00:43:06 DEBUG MetadataSourceProcessor property password with lazy=false
w2022-03-15 00:43:06 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:password]
w2022-03-15 00:43:06 DEBUG building SimpleValue for password
w2022-03-15 00:43:06 DEBUG Building property password
w2022-03-15 00:43:06 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=role, insertable=true, updatable=true, unique=false}
w2022-03-15 00:43:06 DEBUG MetadataSourceProcessor property role with lazy=false
w2022-03-15 00:43:06 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:role]
w2022-03-15 00:43:06 DEBUG building SimpleValue for role
w2022-03-15 00:43:06 DEBUG Building property role
w2022-03-15 00:43:06 DEBUG Starting fillSimpleValue for id
w2022-03-15 00:43:06 DEBUG Starting fillSimpleValue for message
w2022-03-15 00:43:06 DEBUG Starting fillSimpleValue for id
w2022-03-15 00:43:06 DEBUG Starting fillSimpleValue for status
w2022-03-15 00:43:06 DEBUG Starting fillSimpleValue for title
w2022-03-15 00:43:06 DEBUG Starting fillSimpleValue for id
w2022-03-15 00:43:06 DEBUG Starting fillSimpleValue for firstName
w2022-03-15 00:43:06 DEBUG Starting fillSimpleValue for lastName
w2022-03-15 00:43:06 DEBUG Starting fillSimpleValue for login
w2022-03-15 00:43:06 DEBUG Starting fillSimpleValue for password
w2022-03-15 00:43:06 DEBUG Starting fillSimpleValue for role
w2022-03-15 00:43:06 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [comment]
w2022-03-15 00:43:06 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [ticket]
w2022-03-15 00:43:06 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [user]
w2022-03-15 00:43:06 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 00:43:06 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 00:43:06 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 00:43:06 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 00:43:06 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 00:43:06 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 00:43:06 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 00:43:06 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 00:43:06 DEBUG Building session factory
w2022-03-15 00:43:06 DEBUG SessionFactory name : null
w2022-03-15 00:43:06 DEBUG Automatic flush during beforeCompletion(): enabled
w2022-03-15 00:43:06 DEBUG Automatic session close at end of transaction: disabled
w2022-03-15 00:43:06 DEBUG Statistics: disabled
w2022-03-15 00:43:06 DEBUG Deleted entity synthetic identifier rollback: disabled
w2022-03-15 00:43:06 DEBUG Default entity-mode: pojo
w2022-03-15 00:43:06 DEBUG Check Nullability in Core (should be disabled when Bean Validation is on): enabled
w2022-03-15 00:43:06 DEBUG Allow initialization of lazy state outside session : disabled
w2022-03-15 00:43:06 DEBUG Using BatchFetchStyle : LEGACY
w2022-03-15 00:43:06 DEBUG Default batch fetch size: -1
w2022-03-15 00:43:06 DEBUG Maximum outer join fetch depth: null
w2022-03-15 00:43:06 DEBUG Default null ordering: NONE
w2022-03-15 00:43:06 DEBUG Order SQL updates by primary key: disabled
w2022-03-15 00:43:06 DEBUG Order SQL inserts for batching: disabled
w2022-03-15 00:43:06 DEBUG multi-tenancy strategy : NONE
w2022-03-15 00:43:06 DEBUG JTA Track by Thread: enabled
w2022-03-15 00:43:06 DEBUG Query language substitutions: {}
w2022-03-15 00:43:06 DEBUG Named query checking : enabled
w2022-03-15 00:43:06 DEBUG Second-level cache: disabled
w2022-03-15 00:43:06 DEBUG Second-level query cache: disabled
w2022-03-15 00:43:06 DEBUG Second-level query cache factory: null
w2022-03-15 00:43:06 DEBUG Second-level cache region prefix: null
w2022-03-15 00:43:06 DEBUG Optimize second-level cache for minimal puts: disabled
w2022-03-15 00:43:06 DEBUG Structured second-level cache entries: disabled
w2022-03-15 00:43:06 DEBUG Second-level cache direct-reference entries: disabled
w2022-03-15 00:43:06 DEBUG Automatic eviction of collection cache: disabled
w2022-03-15 00:43:06 DEBUG JDBC batch size: 1
w2022-03-15 00:43:06 DEBUG JDBC batch updates for versioned data: enabled
w2022-03-15 00:43:06 DEBUG Scrollable result sets: disabled
w2022-03-15 00:43:06 DEBUG Wrap result sets: disabled
w2022-03-15 00:43:06 DEBUG JDBC3 getGeneratedKeys(): enabled
w2022-03-15 00:43:06 DEBUG JDBC result set fetch size: null
w2022-03-15 00:43:06 DEBUG Connection release mode: ON_CLOSE
w2022-03-15 00:43:06 DEBUG Generate SQL with comments: disabled
w2022-03-15 00:43:06 DEBUG JPA compliance - query : disabled
w2022-03-15 00:43:06 DEBUG JPA compliance - closed-handling : disabled
w2022-03-15 00:43:06 DEBUG JPA compliance - lists : disabled
w2022-03-15 00:43:06 DEBUG JPA compliance - transactions : disabled
w2022-03-15 00:43:06 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 00:43:06 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 00:43:06 DEBUG Session factory constructed with filter configurations : {}
w2022-03-15 00:43:06 DEBUG Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=true, java.specification.version=1.8, file.encoding.pkg=sun.io, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@4f889391, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.SQLiteDialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\charsets.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\cldrdata.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\dnsns.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\jaccess.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\localedata.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\nashorn.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunec.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunmscapi.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\zipfs.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jce.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jfr.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jsse.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\management-agent.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\resources.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\rt.jar;C:\Users\Ольга\Desktop\Java\Project\Project1\helpdeskproject\target\classes;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\2.6.4\spring-boot-starter-data-jpa-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\2.6.4\spring-boot-starter-jdbc-2.6.4.jar;C:\Users\Ольга\.m2\repository\com\zaxxer\HikariCP\4.0.3\HikariCP-4.0.3.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-jdbc\5.3.16\spring-jdbc-5.3.16.jar;C:\Users\Ольга\.m2\repository\jakarta\transaction\jakarta.transaction-api\1.3.3\jakarta.transaction-api-1.3.3.jar;C:\Users\Ольга\.m2\repository\jakarta\persistence\jakarta.persistence-api\2.2.3\jakarta.persistence-api-2.2.3.jar;C:\Users\Ольга\.m2\repository\org\hibernate\hibernate-core\5.6.5.Final\hibernate-core-5.6.5.Final.jar;C:\Users\Ольга\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy\1.11.22\byte-buddy-1.11.22.jar;C:\Users\Ольга\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ольга\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Ольга\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.6\jaxb-runtime-2.3.6.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\txw2\2.3.6\txw2-2.3.6.jar;C:\Users\Ольга\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.12\istack-commons-runtime-3.0.12.jar;C:\Users\Ольга\.m2\repository\com\sun\activation\jakarta.activation\1.2.2\jakarta.activation-1.2.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\data\spring-data-jpa\2.6.2\spring-data-jpa-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\data\spring-data-commons\2.6.2\spring-data-commons-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-orm\5.3.16\spring-orm-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-context\5.3.16\spring-context-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-tx\5.3.16\spring-tx-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-beans\5.3.16\spring-beans-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-aspects\5.3.16\spring-aspects-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-security\2.6.4\spring-boot-starter-security-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter\2.6.4\spring-boot-starter-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-logging\2.6.4\spring-boot-starter-logging-2.6.4.jar;C:\Users\Ольга\.m2\repository\ch\qos\logback\logback-classic\1.2.10\logback-classic-1.2.10.jar;C:\Users\Ольга\.m2\repository\ch\qos\logback\logback-core\1.2.10\logback-core-1.2.10.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.17.1\log4j-to-slf4j-2.17.1.jar;C:\Users\Ольга\.m2\repository\org\slf4j\jul-to-slf4j\1.7.36\jul-to-slf4j-1.7.36.jar;C:\Users\Ольга\.m2\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;C:\Users\Ольга\.m2\repository\org\yaml\snakeyaml\1.29\snakeyaml-1.29.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-aop\5.3.16\spring-aop-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-config\5.6.2\spring-security-config-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-web\5.6.2\spring-security-web-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-expression\5.3.16\spring-expression-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-web\2.6.4\spring-boot-starter-web-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-json\2.6.4\spring-boot-starter-json-2.6.4.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.13.1\jackson-datatype-jdk8-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.13.1\jackson-datatype-jsr310-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.13.1\jackson-module-parameter-names-2.13.1.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\2.6.4\spring-boot-starter-tomcat-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.58\tomcat-embed-core-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\9.0.58\tomcat-embed-el-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.58\tomcat-embed-websocket-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-web\5.3.16\spring-web-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-webmvc\5.3.16\spring-webmvc-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-devtools\2.6.4\spring-boot-devtools-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot\2.6.4\spring-boot-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\2.6.4\spring-boot-autoconfigure-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\xerial\sqlite-jdbc\3.36.0.3\sqlite-jdbc-3.36.0.3.jar;C:\Users\Ольга\.m2\repository\com\zsoltfabok\sqlite-dialect\1.0\sqlite-dialect-1.0.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-aop\2.6.2\spring-boot-starter-aop-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\aspectj\aspectjweaver\1.9.7\aspectjweaver-1.9.7.jar;C:\Users\Ольга\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.3\jakarta.xml.bind-api-2.3.3.jar;C:\Users\Ольга\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.2\jakarta.activation-api-1.2.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-core\5.3.16\spring-core-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-jcl\5.3.16\spring-jcl-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-core\5.6.2\spring-security-core-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-crypto\5.6.2\spring-security-crypto-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\projectlombok\lombok\1.18.22\lombok-1.18.22.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\2.6.4\spring-boot-starter-thymeleaf-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\thymeleaf-spring5\3.0.15.RELEASE\thymeleaf-spring5-3.0.15.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\thymeleaf\3.0.15.RELEASE\thymeleaf-3.0.15.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\attoparser\attoparser\2.0.5.RELEASE\attoparser-2.0.5.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-java8time\3.0.4.RELEASE\thymeleaf-extras-java8time-3.0.4.RELEASE.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.1\jackson-databind-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.1\jackson-annotations-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.1\jackson-core-2.13.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-api\2.4.1\log4j-api-2.4.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-core\2.4.1\log4j-core-2.4.1.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.2\lib\idea_rt.jar, java.vm.vendor=Temurin, sun.arch.data.model=64, user.variant=, java.vendor.url=https://adoptium.net/, catalina.useNaming=false, user.timezone=Europe/Moscow, jakarta.persistence.sharedCache.mode=UNSPECIFIED, os.name=Windows 10, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), user.country=RU, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\bin, sun.java.command=ru.edu.helpdesk.HelpdeskApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@5dc5fc0, com.sun.management.jmxremote=, javax.persistence.sharedCache.mode=UNSPECIFIED, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, user.home=C:\Users\Ольга, user.language=ru, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre, file.separator=\, spring.output.ansi.enabled=always, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, sun.boot.class.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\resources.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\rt.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\sunrsasign.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jsse.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jce.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\charsets.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jfr.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\classes, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_312-b07, user.name=Эльдорадо, spring.jmx.enabled=true, path.separator=;, os.version=10.0, java.endorsed.dirs=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\endorsed, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=default, spring.beaninfo.ignore=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=C:\Users\134E~1\AppData\Local\Temp\, catalina.home=C:\Users\Ольга\AppData\Local\Temp\tomcat.8080.529698332634700740, java.version=1.8.0_312, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\Ольга\Desktop\Java\Project\Project1\helpdeskproject, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=4532, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\Ольга\AppData\Local\Temp\tomcat.8080.529698332634700740, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@3071f5e9, java.library.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\windows\System32\OpenSSH\;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\Program Files\apache-maven-3.8.4\bin;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Ольга\AppData\Local\Microsoft\WindowsApps;C:\Users\Ольга\AppData\Local\Programs\Microsoft VS Code\bin;C:\SQLite;C:\Users\Ольга\AppData\Roaming\npm;C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.2\bin;;., java.vendor=Temurin, java.vm.info=mixed mode, java.vm.version=25.312-b07, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, java.ext.dirs=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext;C:\windows\Sun\Java\lib\ext, hibernate.connection.datasource=HikariDataSource (HikariPool-1), hibernate.hbm2ddl.import_files=data/import.sql, java.class.version=52.0}
w2022-03-15 00:43:06 DEBUG Skipping JACC integration as it was not enabled
w2022-03-15 00:43:06 DEBUG Using ORDINAL-based conversion for Enum ru.edu.helpdesk.entity.UserRole
w2022-03-15 00:43:06 DEBUG Using ORDINAL-based conversion for Enum ru.edu.helpdesk.entity.TicketStatus
w2022-03-15 00:43:06 DEBUG Instantiated session factory
w2022-03-15 00:43:06 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6a54d584] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3ad0eaa7]
w2022-03-15 00:43:06 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.User] is safe
w2022-03-15 00:43:06 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.User
w2022-03-15 00:43:06 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:43:06 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:43:06 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:43:06 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:43:06 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Ticket] is safe
w2022-03-15 00:43:06 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Ticket
w2022-03-15 00:43:06 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:43:06 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:43:06 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:43:06 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:43:06 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:43:06 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:43:06 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:43:06 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:43:06 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Comment] is safe
w2022-03-15 00:43:06 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Comment
w2022-03-15 00:43:06 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:43:06 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:43:06 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:43:06 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:43:06 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.User
w2022-03-15 00:43:06 DEBUG  Version select: select id from user where id =?
w2022-03-15 00:43:06 DEBUG  Snapshot select: select user_.id, user_.first_name as first_na2_2_, user_.last_name as last_nam3_2_, user_.login as login4_2_, user_.password as password5_2_, user_.role as role6_2_ from user user_ where user_.id=?
w2022-03-15 00:43:06 DEBUG  Insert 0: insert into user (first_name, last_name, login, password, role, id) values (?, ?, ?, ?, ?, ?)
w2022-03-15 00:43:06 DEBUG  Update 0: update user set first_name=?, last_name=?, login=?, password=?, role=? where id=?
w2022-03-15 00:43:06 DEBUG  Delete 0: delete from user where id=?
w2022-03-15 00:43:06 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6266715c]
w2022-03-15 00:43:06 DEBUG Visiting attribute path : firstName
w2022-03-15 00:43:06 DEBUG Visiting attribute path : lastName
w2022-03-15 00:43:06 DEBUG Visiting attribute path : login
w2022-03-15 00:43:06 DEBUG Visiting attribute path : password
w2022-03-15 00:43:06 DEBUG Visiting attribute path : role
w2022-03-15 00:43:06 DEBUG Building LoadPlan...
w2022-03-15 00:43:06 DEBUG processing queryspace <gen:0>
w2022-03-15 00:43:06 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.User)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

w2022-03-15 00:43:06 DEBUG Static select for entity ru.edu.helpdesk.entity.User [NONE]: select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 00:43:06 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.Ticket
w2022-03-15 00:43:06 DEBUG  Version select: select id from ticket where id =?
w2022-03-15 00:43:06 DEBUG  Snapshot select: select ticket_.id, ticket_.client_id as client_i4_1_, ticket_.status as status2_1_, ticket_.support_id as support_5_1_, ticket_.title as title3_1_ from ticket ticket_ where ticket_.id=?
w2022-03-15 00:43:06 DEBUG  Insert 0: insert into ticket (client_id, status, support_id, title, id) values (?, ?, ?, ?, ?)
w2022-03-15 00:43:06 DEBUG  Update 0: update ticket set client_id=?, status=?, support_id=?, title=? where id=?
w2022-03-15 00:43:06 DEBUG  Delete 0: delete from ticket where id=?
w2022-03-15 00:43:06 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62a49c41]
w2022-03-15 00:43:06 DEBUG Visiting attribute path : client
w2022-03-15 00:43:06 DEBUG Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38bbaece]
w2022-03-15 00:43:06 DEBUG Visiting attribute path : client.firstName
w2022-03-15 00:43:06 DEBUG Visiting attribute path : client.lastName
w2022-03-15 00:43:06 DEBUG Visiting attribute path : client.login
w2022-03-15 00:43:06 DEBUG Visiting attribute path : client.password
w2022-03-15 00:43:06 DEBUG Visiting attribute path : client.role
w2022-03-15 00:43:06 DEBUG Visiting attribute path : status
w2022-03-15 00:43:06 DEBUG Visiting attribute path : support
w2022-03-15 00:43:06 DEBUG Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76c9def]
w2022-03-15 00:43:06 DEBUG Visiting attribute path : support.firstName
w2022-03-15 00:43:06 DEBUG Visiting attribute path : support.lastName
w2022-03-15 00:43:06 DEBUG Visiting attribute path : support.login
w2022-03-15 00:43:06 DEBUG Visiting attribute path : support.password
w2022-03-15 00:43:06 DEBUG Visiting attribute path : support.role
w2022-03-15 00:43:06 DEBUG Visiting attribute path : title
w2022-03-15 00:43:06 DEBUG Building LoadPlan...
w2022-03-15 00:43:06 DEBUG processing queryspace <gen:0>
w2022-03-15 00:43:06 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.Ticket)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.Ticket, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.Ticket)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:1>, path=ru.edu.helpdesk.entity.Ticket.client)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:2>, path=ru.edu.helpdesk.entity.Ticket.support)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.Ticket)
          - SQL table alias mapping - ticket0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(client)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
          - JOIN (JoinDefinedByMetadata(support)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user2_
                - alias suffix - 2_
                - suffixed key columns - {id1_2_2_}

w2022-03-15 00:43:06 DEBUG Static select for entity ru.edu.helpdesk.entity.Ticket [NONE]: select ticket0_.id as id1_1_0_, ticket0_.client_id as client_i4_1_0_, ticket0_.status as status2_1_0_, ticket0_.support_id as support_5_1_0_, ticket0_.title as title3_1_0_, user1_.id as id1_2_1_, user1_.first_name as first_na2_2_1_, user1_.last_name as last_nam3_2_1_, user1_.login as login4_2_1_, user1_.password as password5_2_1_, user1_.role as role6_2_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id left outer join user user2_ on ticket0_.support_id=user2_.id where ticket0_.id=?
w2022-03-15 00:43:06 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.Comment
w2022-03-15 00:43:06 DEBUG  Version select: select id from comment where id =?
w2022-03-15 00:43:06 DEBUG  Snapshot select: select comment_.id, comment_.message as message2_0_, comment_.ticket_id as ticket_i3_0_, comment_.user_id as user_id4_0_ from comment comment_ where comment_.id=?
w2022-03-15 00:43:06 DEBUG  Insert 0: insert into comment (message, ticket_id, user_id, id) values (?, ?, ?, ?)
w2022-03-15 00:43:06 DEBUG  Update 0: update comment set message=?, ticket_id=?, user_id=? where id=?
w2022-03-15 00:43:06 DEBUG  Delete 0: delete from comment where id=?
w2022-03-15 00:43:06 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f1b6a79]
w2022-03-15 00:43:06 DEBUG Visiting attribute path : message
w2022-03-15 00:43:06 DEBUG Visiting attribute path : ticket
w2022-03-15 00:43:06 DEBUG Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50a0e37c]
w2022-03-15 00:43:06 DEBUG Visiting attribute path : ticket.client
w2022-03-15 00:43:06 DEBUG Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60dea862]
w2022-03-15 00:43:06 DEBUG Visiting attribute path : ticket.client.firstName
w2022-03-15 00:43:06 DEBUG Visiting attribute path : ticket.client.lastName
w2022-03-15 00:43:06 DEBUG Visiting attribute path : ticket.client.login
w2022-03-15 00:43:06 DEBUG Visiting attribute path : ticket.client.password
w2022-03-15 00:43:06 DEBUG Visiting attribute path : ticket.client.role
w2022-03-15 00:43:06 DEBUG Visiting attribute path : ticket.status
w2022-03-15 00:43:06 DEBUG Visiting attribute path : ticket.support
w2022-03-15 00:43:06 DEBUG Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25dcbda5]
w2022-03-15 00:43:06 DEBUG Visiting attribute path : ticket.support.firstName
w2022-03-15 00:43:06 DEBUG Visiting attribute path : ticket.support.lastName
w2022-03-15 00:43:06 DEBUG Visiting attribute path : ticket.support.login
w2022-03-15 00:43:06 DEBUG Visiting attribute path : ticket.support.password
w2022-03-15 00:43:06 DEBUG Visiting attribute path : ticket.support.role
w2022-03-15 00:43:06 DEBUG Visiting attribute path : ticket.title
w2022-03-15 00:43:06 DEBUG Visiting attribute path : user
w2022-03-15 00:43:06 DEBUG Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4641f390]
w2022-03-15 00:43:06 DEBUG Visiting attribute path : user.firstName
w2022-03-15 00:43:06 DEBUG Visiting attribute path : user.lastName
w2022-03-15 00:43:06 DEBUG Visiting attribute path : user.login
w2022-03-15 00:43:06 DEBUG Visiting attribute path : user.password
w2022-03-15 00:43:06 DEBUG Visiting attribute path : user.role
w2022-03-15 00:43:06 DEBUG Building LoadPlan...
w2022-03-15 00:43:06 DEBUG processing queryspace <gen:0>
w2022-03-15 00:43:06 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.Comment)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.Comment, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.Comment)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.Ticket, querySpaceUid=<gen:1>, path=ru.edu.helpdesk.entity.Comment.ticket)
             - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:2>, path=ru.edu.helpdesk.entity.Comment.ticket.client)
             - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:3>, path=ru.edu.helpdesk.entity.Comment.ticket.support)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:4>, path=ru.edu.helpdesk.entity.Comment.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(ticket)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ru.edu.helpdesk.entity.Ticket)
                - SQL table alias mapping - ticket1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(client)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=ru.edu.helpdesk.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}
                - JOIN (JoinDefinedByMetadata(support)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=ru.edu.helpdesk.entity.User)
                      - SQL table alias mapping - user3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_2_3_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user4_
                - alias suffix - 4_
                - suffixed key columns - {id1_2_4_}

w2022-03-15 00:43:06 DEBUG Static select for entity ru.edu.helpdesk.entity.Comment [NONE]: select comment0_.id as id1_0_0_, comment0_.message as message2_0_0_, comment0_.ticket_id as ticket_i3_0_0_, comment0_.user_id as user_id4_0_0_, ticket1_.id as id1_1_1_, ticket1_.client_id as client_i4_1_1_, ticket1_.status as status2_1_1_, ticket1_.support_id as support_5_1_1_, ticket1_.title as title3_1_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_, user3_.id as id1_2_3_, user3_.first_name as first_na2_2_3_, user3_.last_name as last_nam3_2_3_, user3_.login as login4_2_3_, user3_.password as password5_2_3_, user3_.role as role6_2_3_, user4_.id as id1_2_4_, user4_.first_name as first_na2_2_4_, user4_.last_name as last_nam3_2_4_, user4_.login as login4_2_4_, user4_.password as password5_2_4_, user4_.role as role6_2_4_ from comment comment0_ left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id left outer join user user2_ on ticket1_.client_id=user2_.id left outer join user user3_ on ticket1_.support_id=user3_.id left outer join user user4_ on comment0_.user_id=user4_.id where comment0_.id=?
w2022-03-15 00:43:07 DEBUG drop table if exists comment
w2022-03-15 00:43:07 DEBUG drop table if exists hibernate_sequence
w2022-03-15 00:43:07 DEBUG drop table if exists ticket
w2022-03-15 00:43:07 DEBUG drop table if exists user
w2022-03-15 00:43:07 DEBUG create table comment (id bigint not null, message varchar(255) not null, ticket_id bigint, user_id bigint, primary key (id))
w2022-03-15 00:43:07 DEBUG create table hibernate_sequence (next_val bigint)
w2022-03-15 00:43:07 DEBUG insert into hibernate_sequence values ( 1 )
w2022-03-15 00:43:07 DEBUG create table ticket (id bigint not null, status integer, title varchar(255) not null, client_id bigint, support_id bigint, primary key (id))
w2022-03-15 00:43:07 DEBUG create table user (id bigint not null, first_name varchar(255), last_name varchar(255), login varchar(255) not null, password varchar(255) not null, role integer, primary key (id))
w2022-03-15 00:43:07 INFO  HHH000476: Executing import script 'file:/C:/Users/%d0%9e%d0%bb%d1%8c%d0%b3%d0%b0/Desktop/Java/Project/Project1/helpdeskproject/target/classes/data/import.sql'
w2022-03-15 00:43:07 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (1, 'admin', 'admin', 'admin', 'admin', 0)
w2022-03-15 00:43:07 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (2, 'support', 'support', 'support', 'support', 1)
w2022-03-15 00:43:07 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (3, 'user1', 'user1', 'user1', 'user1', 2)
w2022-03-15 00:43:07 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (4, 'user2', 'user2', 'user2', 'user2', 2)
w2022-03-15 00:43:07 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (1, 1, 'Hello user1', 3, 2)
w2022-03-15 00:43:07 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (2, 0, 'Title2', 3, NULL)
w2022-03-15 00:43:07 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (3, 0, 'Message user2', 4, NULL)
w2022-03-15 00:43:07 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (1, "Hello ticket1", 1, 3)
w2022-03-15 00:43:07 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (2, "Hello ticket2", 2, 3)
w2022-03-15 00:43:07 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (3, "Hello ticket11", 1, 2)
w2022-03-15 00:43:07 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (4, "Hello ticket111", 1, 2)
w2022-03-15 00:43:07 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (5, "Hello ticket22", 2, 2)
w2022-03-15 00:43:07 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (6, "Hello ticket3", 3, 4)
w2022-03-15 00:43:07 DEBUG UPDATE hibernate_sequence SET next_val = 8 WHERE next_val = 1
w2022-03-15 00:43:07 INFO  HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
w2022-03-15 00:43:07 DEBUG Checking 0 named HQL queries
w2022-03-15 00:43:07 DEBUG Checking 0 named SQL queries
w2022-03-15 00:43:07 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 00:43:07 DEBUG Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@156846f
w2022-03-15 00:43:07 DEBUG Registering SessionFactory: f29999cf-2ac9-4bd4-926f-76630ddb3a26 (<unnamed>)
w2022-03-15 00:43:07 DEBUG Not binding SessionFactory to JNDI, no JNDI name configured
w2022-03-15 00:43:07 DEBUG Statistics initialized [enabled=false]
w2022-03-15 00:43:07 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 00:43:07 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 00:43:07 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 00:43:13 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 00:43:13 DEBUG begin
w2022-03-15 00:43:13 DEBUG committing
w2022-03-15 00:43:16 DEBUG Rendered criteria query -> select generatedAlias0 from Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 00:43:16 DEBUG QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@9babac5
w2022-03-15 00:43:16 DEBUG parse() - HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 00:43:16 DEBUG throwQueryException() : no errors
w2022-03-15 00:43:16 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[IDENT] Node: 'ru'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'edu'
    |  |  |  |  |  |  \-[IDENT] Node: 'helpdesk'
    |  |  |  |  |  \-[IDENT] Node: 'entity'
    |  |  |  |  \-[IDENT] Node: 'Ticket'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'client'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias1'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

w2022-03-15 00:43:16 DEBUG select << begin [level=1, statement=select]
w2022-03-15 00:43:16 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.Ticket (generatedAlias0) -> ticket0_
w2022-03-15 00:43:16 DEBUG Resolved : generatedAlias0 -> ticket0_.id
w2022-03-15 00:43:16 DEBUG getDataType() : client -> org.hibernate.type.ManyToOneType(ru.edu.helpdesk.entity.User)
w2022-03-15 00:43:16 DEBUG dereferenceEntityJoin() : generating join for client in ru.edu.helpdesk.entity.Ticket (generatedAlias1) parent = [ {null} ]
w2022-03-15 00:43:16 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.User (generatedAlias1) -> user1_
w2022-03-15 00:43:16 DEBUG addJoinByPathMap() : generatedAlias0.client -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}
w2022-03-15 00:43:16 DEBUG Resolved : generatedAlias0.client -> ticket0_.client_id
w2022-03-15 00:43:16 DEBUG createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'user user1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Ticket.client,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}

w2022-03-15 00:43:16 DEBUG Resolved : generatedAlias0 -> ticket0_.id
w2022-03-15 00:43:16 DEBUG Resolved : generatedAlias1 -> user1_.id
w2022-03-15 00:43:16 DEBUG getDataType() : id -> org.hibernate.type.LongType@1311758f
w2022-03-15 00:43:16 DEBUG Resolved : generatedAlias1.id -> user1_.id
w2022-03-15 00:43:16 DEBUG select : finishing up [level=1, statement=select]
w2022-03-15 00:43:16 DEBUG processQuery() :  ( SELECT ( {select clause} ticket0_.id ) ( FromClause{level=1} ( ticket ticket0_ user user1_ ) ) ( where ( = ( user1_.id user1_.id id ) ? ) ) )
w2022-03-15 00:43:16 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Ticket): [ticket]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.Ticket)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.User)
          | path: generatedAlias1.id
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.User)
          |  | originalText: generatedAlias1
          |  \-IdentNode
          |    persister: null
          |    originalText: id
          \-ParameterNode

w2022-03-15 00:43:16 DEBUG Using FROM fragment [ticket ticket0_]
w2022-03-15 00:43:16 DEBUG Using FROM fragment [left outer join user user1_ on ticket0_.client_id=user1_.id]
w2022-03-15 00:43:16 DEBUG select >> end [level=1, statement=select]
w2022-03-15 00:43:16 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (ticket,user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'ticket0_.id as id1_1_' {alias=generatedAlias0, className=ru.edu.helpdesk.entity.Ticket, tableAlias=ticket0_}
    |  \-[SQL_TOKEN] SqlFragment: 'ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[ticket0_, user1_], fromElementsByPath=[generatedAlias0.client], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'ticket ticket0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=ticket,tableAlias=ticket0_,origin=null,columns={,className=ru.edu.helpdesk.entity.Ticket}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join user user1_ on ticket0_.client_id=user1_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Ticket.client,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user1_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias1.id,tableAlias=user1_,className=ru.edu.helpdesk.entity.User,classAlias=generatedAlias1}
          |  +-[ALIAS_REF] IdentNode: 'user1_.id' {alias=generatedAlias1, className=ru.edu.helpdesk.entity.User, tableAlias=user1_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LongType@1311758f}

w2022-03-15 00:43:16 DEBUG throwQueryException() : no errors
w2022-03-15 00:43:16 DEBUG HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 00:43:16 DEBUG SQL: select ticket0_.id as id1_1_, ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id where user1_.id=?
w2022-03-15 00:43:16 DEBUG throwQueryException() : no errors
w2022-03-15 00:43:16 DEBUG select ticket0_.id as id1_1_, ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id where user1_.id=?
w2022-03-15 00:43:16 DEBUG Result set row: 0
w2022-03-15 00:43:16 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 00:43:16 DEBUG Result set row: 1
w2022-03-15 00:43:16 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 00:43:16 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 00:43:16 DEBUG Processing attribute `client` : value = 3
w2022-03-15 00:43:16 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 00:43:16 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 00:43:16 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 00:43:16 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#3]
w2022-03-15 00:43:16 DEBUG Processing attribute `firstName` : value = user1
w2022-03-15 00:43:16 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 00:43:16 DEBUG Processing attribute `lastName` : value = user1
w2022-03-15 00:43:16 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 00:43:16 DEBUG Processing attribute `login` : value = user1
w2022-03-15 00:43:16 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 00:43:16 DEBUG Processing attribute `password` : value = user1
w2022-03-15 00:43:16 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 00:43:16 DEBUG Processing attribute `role` : value = USER
w2022-03-15 00:43:16 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 00:43:16 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#3]
w2022-03-15 00:43:16 DEBUG Done entity load : ru.edu.helpdesk.entity.User#3
w2022-03-15 00:43:16 DEBUG Processing attribute `status` : value = WORKING
w2022-03-15 00:43:16 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 00:43:16 DEBUG Processing attribute `support` : value = 2
w2022-03-15 00:43:16 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 00:43:16 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 00:43:16 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 00:43:16 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#2]
w2022-03-15 00:43:16 DEBUG Processing attribute `firstName` : value = support
w2022-03-15 00:43:16 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 00:43:16 DEBUG Processing attribute `lastName` : value = support
w2022-03-15 00:43:16 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 00:43:16 DEBUG Processing attribute `login` : value = support
w2022-03-15 00:43:16 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 00:43:16 DEBUG Processing attribute `password` : value = support
w2022-03-15 00:43:16 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 00:43:16 DEBUG Processing attribute `role` : value = SUPPORT
w2022-03-15 00:43:16 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 00:43:16 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#2]
w2022-03-15 00:43:16 DEBUG Done entity load : ru.edu.helpdesk.entity.User#2
w2022-03-15 00:43:16 DEBUG Processing attribute `title` : value = Hello user1
w2022-03-15 00:43:16 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 00:43:16 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 00:43:16 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 00:43:16 DEBUG Processing attribute `client` : value = 3
w2022-03-15 00:43:16 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 00:43:16 DEBUG Processing attribute `status` : value = OPEN
w2022-03-15 00:43:16 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 00:43:16 DEBUG Processing attribute `support` : value = null
w2022-03-15 00:43:16 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 00:43:16 DEBUG Processing attribute `title` : value = Title2
w2022-03-15 00:43:16 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 00:43:16 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 00:43:21 DEBUG Rendered criteria query -> select generatedAlias0 from Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 00:43:21 DEBUG select ticket0_.id as id1_1_, ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id where user1_.id=?
w2022-03-15 00:43:21 DEBUG Result set row: 0
w2022-03-15 00:43:21 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 00:43:21 DEBUG Result set row: 1
w2022-03-15 00:43:21 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 00:43:21 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 00:43:21 DEBUG Processing attribute `client` : value = 3
w2022-03-15 00:43:21 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 00:43:21 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 00:43:21 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 00:43:21 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#3]
w2022-03-15 00:43:21 DEBUG Processing attribute `firstName` : value = user1
w2022-03-15 00:43:21 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 00:43:21 DEBUG Processing attribute `lastName` : value = user1
w2022-03-15 00:43:21 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 00:43:21 DEBUG Processing attribute `login` : value = user1
w2022-03-15 00:43:21 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 00:43:21 DEBUG Processing attribute `password` : value = user1
w2022-03-15 00:43:21 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 00:43:21 DEBUG Processing attribute `role` : value = USER
w2022-03-15 00:43:21 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 00:43:21 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#3]
w2022-03-15 00:43:21 DEBUG Done entity load : ru.edu.helpdesk.entity.User#3
w2022-03-15 00:43:21 DEBUG Processing attribute `status` : value = WORKING
w2022-03-15 00:43:21 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 00:43:21 DEBUG Processing attribute `support` : value = 2
w2022-03-15 00:43:21 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 00:43:21 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 00:43:21 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 00:43:21 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#2]
w2022-03-15 00:43:21 DEBUG Processing attribute `firstName` : value = support
w2022-03-15 00:43:21 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 00:43:21 DEBUG Processing attribute `lastName` : value = support
w2022-03-15 00:43:21 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 00:43:21 DEBUG Processing attribute `login` : value = support
w2022-03-15 00:43:21 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 00:43:21 DEBUG Processing attribute `password` : value = support
w2022-03-15 00:43:21 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 00:43:21 DEBUG Processing attribute `role` : value = SUPPORT
w2022-03-15 00:43:21 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 00:43:21 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#2]
w2022-03-15 00:43:21 DEBUG Done entity load : ru.edu.helpdesk.entity.User#2
w2022-03-15 00:43:21 DEBUG Processing attribute `title` : value = Hello user1
w2022-03-15 00:43:21 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 00:43:21 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 00:43:21 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 00:43:21 DEBUG Processing attribute `client` : value = 3
w2022-03-15 00:43:21 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 00:43:21 DEBUG Processing attribute `status` : value = OPEN
w2022-03-15 00:43:21 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 00:43:21 DEBUG Processing attribute `support` : value = null
w2022-03-15 00:43:21 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 00:43:21 DEBUG Processing attribute `title` : value = Title2
w2022-03-15 00:43:21 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 00:43:21 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 00:43:23 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 00:43:23 DEBUG begin
w2022-03-15 00:43:23 DEBUG committing
w2022-03-15 00:47:55 DEBUG Logging Provider: org.jboss.logging.Log4j2LoggerProvider
w2022-03-15 00:47:55 DEBUG PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@641916a2
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/%d0%9e%d0%bb%d1%8c%d0%b3%d0%b0/Desktop/Java/Project/Project1/helpdeskproject/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		ru.edu.helpdesk.entity.Comment
		ru.edu.helpdesk.entity.Ticket
		ru.edu.helpdesk.entity.User]
	Mapping files names []
	Properties []
w2022-03-15 00:47:55 DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
w2022-03-15 00:47:55 DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
w2022-03-15 00:47:55 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
w2022-03-15 00:47:55 INFO  HHH000412: Hibernate ORM core version 5.6.5.Final
w2022-03-15 00:47:55 DEBUG HHH000206: hibernate.properties not found
w2022-03-15 00:47:55 DEBUG Overriding existing service binding [org.hibernate.secure.spi.JaccService]
w2022-03-15 00:47:55 DEBUG Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
w2022-03-15 00:47:55 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
w2022-03-15 00:47:55 INFO  HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
w2022-03-15 00:47:55 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@62ece006
w2022-03-15 00:47:55 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@62ece006
w2022-03-15 00:47:55 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@62ece006
w2022-03-15 00:47:55 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@a7dccbc
w2022-03-15 00:47:55 DEBUG Adding type registration true_false -> org.hibernate.type.TrueFalseType@51b0ca7f
w2022-03-15 00:47:55 DEBUG Adding type registration yes_no -> org.hibernate.type.YesNoType@3fe40c83
w2022-03-15 00:47:55 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@27c49736
w2022-03-15 00:47:55 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@27c49736
w2022-03-15 00:47:55 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@27c49736
w2022-03-15 00:47:55 DEBUG Adding type registration character -> org.hibernate.type.CharacterType@43ec036c
w2022-03-15 00:47:55 DEBUG Adding type registration char -> org.hibernate.type.CharacterType@43ec036c
w2022-03-15 00:47:55 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@43ec036c
w2022-03-15 00:47:55 DEBUG Adding type registration short -> org.hibernate.type.ShortType@24183108
w2022-03-15 00:47:55 DEBUG Adding type registration short -> org.hibernate.type.ShortType@24183108
w2022-03-15 00:47:55 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.ShortType@24183108
w2022-03-15 00:47:55 DEBUG Adding type registration integer -> org.hibernate.type.IntegerType@202013ed
w2022-03-15 00:47:55 DEBUG Adding type registration int -> org.hibernate.type.IntegerType@202013ed
w2022-03-15 00:47:55 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@202013ed
w2022-03-15 00:47:55 DEBUG Adding type registration long -> org.hibernate.type.LongType@7b2bcd6c
w2022-03-15 00:47:55 DEBUG Adding type registration long -> org.hibernate.type.LongType@7b2bcd6c
w2022-03-15 00:47:55 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.LongType@7b2bcd6c
w2022-03-15 00:47:55 DEBUG Adding type registration float -> org.hibernate.type.FloatType@6b720aa7
w2022-03-15 00:47:55 DEBUG Adding type registration float -> org.hibernate.type.FloatType@6b720aa7
w2022-03-15 00:47:55 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6b720aa7
w2022-03-15 00:47:55 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@7d6779cd
w2022-03-15 00:47:55 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@7d6779cd
w2022-03-15 00:47:55 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7d6779cd
w2022-03-15 00:47:55 DEBUG Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@624382ad
w2022-03-15 00:47:55 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@624382ad
w2022-03-15 00:47:55 DEBUG Adding type registration big_integer -> org.hibernate.type.BigIntegerType@70e20efd
w2022-03-15 00:47:55 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@70e20efd
w2022-03-15 00:47:55 DEBUG Adding type registration string -> org.hibernate.type.StringType@dfbe1f3
w2022-03-15 00:47:55 DEBUG Adding type registration java.lang.String -> org.hibernate.type.StringType@dfbe1f3
w2022-03-15 00:47:55 DEBUG Adding type registration nstring -> org.hibernate.type.StringNVarcharType@f011381
w2022-03-15 00:47:55 DEBUG Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3f06bf90
w2022-03-15 00:47:55 DEBUG Adding type registration url -> org.hibernate.type.UrlType@2cdb1ec5
w2022-03-15 00:47:55 DEBUG Adding type registration java.net.URL -> org.hibernate.type.UrlType@2cdb1ec5
w2022-03-15 00:47:55 DEBUG Adding type registration Duration -> org.hibernate.type.DurationType@187b3b8a
w2022-03-15 00:47:55 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.DurationType@187b3b8a
w2022-03-15 00:47:55 DEBUG Adding type registration Instant -> org.hibernate.type.InstantType@5478d7ab
w2022-03-15 00:47:55 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5478d7ab
w2022-03-15 00:47:55 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@6f1c7d41
w2022-03-15 00:47:55 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@6f1c7d41
w2022-03-15 00:47:55 DEBUG Adding type registration LocalDate -> org.hibernate.type.LocalDateType@36283240
w2022-03-15 00:47:55 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@36283240
w2022-03-15 00:47:55 DEBUG Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@d3e2371
w2022-03-15 00:47:55 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@d3e2371
w2022-03-15 00:47:55 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3daeb624
w2022-03-15 00:47:55 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3daeb624
w2022-03-15 00:47:55 DEBUG Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3117ee7d
w2022-03-15 00:47:55 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3117ee7d
w2022-03-15 00:47:55 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6d90786f
w2022-03-15 00:47:55 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6d90786f
w2022-03-15 00:47:55 DEBUG Adding type registration date -> org.hibernate.type.DateType@30d84563
w2022-03-15 00:47:55 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.DateType@30d84563
w2022-03-15 00:47:55 DEBUG Adding type registration time -> org.hibernate.type.TimeType@a77871b
w2022-03-15 00:47:55 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.TimeType@a77871b
w2022-03-15 00:47:55 DEBUG Adding type registration timestamp -> org.hibernate.type.TimestampType@293d0613
w2022-03-15 00:47:55 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@293d0613
w2022-03-15 00:47:55 DEBUG Adding type registration java.util.Date -> org.hibernate.type.TimestampType@293d0613
w2022-03-15 00:47:55 DEBUG Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7fd439fb
w2022-03-15 00:47:55 DEBUG Adding type registration calendar -> org.hibernate.type.CalendarType@6ee640b8
w2022-03-15 00:47:55 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6ee640b8
w2022-03-15 00:47:55 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6ee640b8
w2022-03-15 00:47:55 DEBUG Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4b07fcc4
w2022-03-15 00:47:55 DEBUG Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@d140924
w2022-03-15 00:47:55 DEBUG Adding type registration locale -> org.hibernate.type.LocaleType@e6234f0
w2022-03-15 00:47:55 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@e6234f0
w2022-03-15 00:47:55 DEBUG Adding type registration currency -> org.hibernate.type.CurrencyType@5288cd01
w2022-03-15 00:47:55 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5288cd01
w2022-03-15 00:47:55 DEBUG Adding type registration timezone -> org.hibernate.type.TimeZoneType@4e2e5207
w2022-03-15 00:47:55 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4e2e5207
w2022-03-15 00:47:55 DEBUG Adding type registration class -> org.hibernate.type.ClassType@30827389
w2022-03-15 00:47:55 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.ClassType@30827389
w2022-03-15 00:47:55 DEBUG Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7451a809
w2022-03-15 00:47:55 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7451a809
w2022-03-15 00:47:55 DEBUG Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@71f4dad9
w2022-03-15 00:47:55 DEBUG Adding type registration binary -> org.hibernate.type.BinaryType@2ab47642
w2022-03-15 00:47:55 DEBUG Adding type registration byte[] -> org.hibernate.type.BinaryType@2ab47642
w2022-03-15 00:47:55 DEBUG Adding type registration [B -> org.hibernate.type.BinaryType@2ab47642
w2022-03-15 00:47:55 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2bc92453
w2022-03-15 00:47:55 DEBUG Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2bc92453
w2022-03-15 00:47:55 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2bc92453
w2022-03-15 00:47:55 DEBUG Adding type registration row_version -> org.hibernate.type.RowVersionType@13ac97cf
w2022-03-15 00:47:55 DEBUG Adding type registration image -> org.hibernate.type.ImageType@54c82d34
w2022-03-15 00:47:55 DEBUG Adding type registration characters -> org.hibernate.type.CharArrayType@750bad42
w2022-03-15 00:47:55 DEBUG Adding type registration char[] -> org.hibernate.type.CharArrayType@750bad42
w2022-03-15 00:47:55 DEBUG Adding type registration [C -> org.hibernate.type.CharArrayType@750bad42
w2022-03-15 00:47:55 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3c7f860e
w2022-03-15 00:47:55 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3c7f860e
w2022-03-15 00:47:55 DEBUG Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3c7f860e
w2022-03-15 00:47:55 DEBUG Adding type registration text -> org.hibernate.type.TextType@5f984edc
w2022-03-15 00:47:55 DEBUG Adding type registration ntext -> org.hibernate.type.NTextType@12e7ca89
w2022-03-15 00:47:55 DEBUG Adding type registration blob -> org.hibernate.type.BlobType@6e55f267
w2022-03-15 00:47:55 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6e55f267
w2022-03-15 00:47:55 DEBUG Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@10683d19
w2022-03-15 00:47:55 DEBUG Adding type registration clob -> org.hibernate.type.ClobType@750c7e0d
w2022-03-15 00:47:55 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@750c7e0d
w2022-03-15 00:47:55 DEBUG Adding type registration nclob -> org.hibernate.type.NClobType@5945daad
w2022-03-15 00:47:55 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5945daad
w2022-03-15 00:47:55 DEBUG Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@54ba8be6
w2022-03-15 00:47:55 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4500514
w2022-03-15 00:47:55 DEBUG Adding type registration serializable -> org.hibernate.type.SerializableType@582a3dbc
w2022-03-15 00:47:55 DEBUG Adding type registration object -> org.hibernate.type.ObjectType@7da2675b
w2022-03-15 00:47:55 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7da2675b
w2022-03-15 00:47:55 DEBUG Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4e1855a5
w2022-03-15 00:47:55 DEBUG Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@206e6b82
w2022-03-15 00:47:55 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2bb3d1f3
w2022-03-15 00:47:55 DEBUG Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3837142f
w2022-03-15 00:47:55 DEBUG Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@348ecbf1
w2022-03-15 00:47:55 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@67ef9499
w2022-03-15 00:47:55 DEBUG Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@52e6fdde
w2022-03-15 00:47:55 DEBUG Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@52701dc1
w2022-03-15 00:47:55 INFO  HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
w2022-03-15 00:47:55 DEBUG Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@45c33d6e] into BootstrapContext; was [null]
w2022-03-15 00:47:55 DEBUG ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@45c33d6e) [was null]
w2022-03-15 00:47:55 DEBUG Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@40aef2b8] into BootstrapContext; was [null]
w2022-03-15 00:47:55 DEBUG Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@49bb7c21] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@4a9ec3a6]
w2022-03-15 00:47:55 DEBUG Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@45c33d6e]
w2022-03-15 00:47:55 DEBUG ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@45c33d6e]
w2022-03-15 00:47:55 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
w2022-03-15 00:47:55 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
w2022-03-15 00:47:55 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
w2022-03-15 00:47:55 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
w2022-03-15 00:47:55 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
w2022-03-15 00:47:55 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
w2022-03-15 00:47:55 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
w2022-03-15 00:47:55 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
w2022-03-15 00:47:55 DEBUG Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
w2022-03-15 00:47:55 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
w2022-03-15 00:47:55 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
w2022-03-15 00:47:55 DEBUG Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
w2022-03-15 00:47:55 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
w2022-03-15 00:47:55 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
w2022-03-15 00:47:55 DEBUG Database ->
       name : SQLite
    version : 3.36.0
      major : 3
      minor : 36
w2022-03-15 00:47:55 DEBUG Driver ->
       name : SQLite JDBC
    version : 3.36.0.3
      major : 3
      minor : 36
w2022-03-15 00:47:55 DEBUG JDBC version : 2.1
w2022-03-15 00:47:55 INFO  HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
w2022-03-15 00:47:55 DEBUG JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
w2022-03-15 00:47:55 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
w2022-03-15 00:47:55 DEBUG HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [2] less than 4
w2022-03-15 00:47:55 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7c78fcc1] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2f7db632]
w2022-03-15 00:47:55 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
w2022-03-15 00:47:55 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.Comment
w2022-03-15 00:47:55 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 00:47:55 DEBUG Import with entity name Comment
w2022-03-15 00:47:55 DEBUG Bind entity ru.edu.helpdesk.entity.Comment on table comment
w2022-03-15 00:47:55 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 00:47:55 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Comment] is safe
w2022-03-15 00:47:55 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Comment
w2022-03-15 00:47:55 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 00:47:55 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Comment:id]
w2022-03-15 00:47:55 DEBUG building SimpleValue for id
w2022-03-15 00:47:55 DEBUG Building property id
w2022-03-15 00:47:55 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 00:47:55 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=message, insertable=true, updatable=true, unique=false}
w2022-03-15 00:47:55 DEBUG MetadataSourceProcessor property message with lazy=false
w2022-03-15 00:47:55 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Comment:message]
w2022-03-15 00:47:55 DEBUG building SimpleValue for message
w2022-03-15 00:47:55 DEBUG Building property message
w2022-03-15 00:47:55 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 00:47:55 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=ticket, insertable=true, updatable=true, unique=false}
w2022-03-15 00:47:55 DEBUG Building property ticket
w2022-03-15 00:47:55 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 00:47:55 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=user, insertable=true, updatable=true, unique=false}
w2022-03-15 00:47:55 DEBUG Building property user
w2022-03-15 00:47:55 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 00:47:55 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 00:47:55 DEBUG Import with entity name Ticket
w2022-03-15 00:47:55 DEBUG Bind entity ru.edu.helpdesk.entity.Ticket on table ticket
w2022-03-15 00:47:55 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 00:47:55 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Ticket] is safe
w2022-03-15 00:47:55 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Ticket
w2022-03-15 00:47:55 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 00:47:55 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:id]
w2022-03-15 00:47:55 DEBUG building SimpleValue for id
w2022-03-15 00:47:55 DEBUG Building property id
w2022-03-15 00:47:55 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 00:47:55 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 00:47:55 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=client, insertable=true, updatable=true, unique=false}
w2022-03-15 00:47:55 DEBUG Building property client
w2022-03-15 00:47:55 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=status, insertable=true, updatable=true, unique=false}
w2022-03-15 00:47:55 DEBUG MetadataSourceProcessor property status with lazy=false
w2022-03-15 00:47:55 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:status]
w2022-03-15 00:47:55 DEBUG building SimpleValue for status
w2022-03-15 00:47:55 DEBUG Building property status
w2022-03-15 00:47:55 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 00:47:55 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=support, insertable=true, updatable=true, unique=false}
w2022-03-15 00:47:55 DEBUG Building property support
w2022-03-15 00:47:55 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=title, insertable=true, updatable=true, unique=false}
w2022-03-15 00:47:55 DEBUG MetadataSourceProcessor property title with lazy=false
w2022-03-15 00:47:55 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:title]
w2022-03-15 00:47:55 DEBUG building SimpleValue for title
w2022-03-15 00:47:55 DEBUG Building property title
w2022-03-15 00:47:55 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.User
w2022-03-15 00:47:55 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 00:47:55 DEBUG Import with entity name User
w2022-03-15 00:47:55 DEBUG Bind entity ru.edu.helpdesk.entity.User on table user
w2022-03-15 00:47:55 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 00:47:55 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.User] is safe
w2022-03-15 00:47:55 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.User
w2022-03-15 00:47:55 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 00:47:55 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:id]
w2022-03-15 00:47:55 DEBUG building SimpleValue for id
w2022-03-15 00:47:55 DEBUG Building property id
w2022-03-15 00:47:55 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 00:47:55 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
w2022-03-15 00:47:55 DEBUG MetadataSourceProcessor property firstName with lazy=false
w2022-03-15 00:47:55 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:firstName]
w2022-03-15 00:47:55 DEBUG building SimpleValue for firstName
w2022-03-15 00:47:55 DEBUG Building property firstName
w2022-03-15 00:47:55 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
w2022-03-15 00:47:55 DEBUG MetadataSourceProcessor property lastName with lazy=false
w2022-03-15 00:47:55 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:lastName]
w2022-03-15 00:47:55 DEBUG building SimpleValue for lastName
w2022-03-15 00:47:55 DEBUG Building property lastName
w2022-03-15 00:47:55 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=login, insertable=true, updatable=true, unique=false}
w2022-03-15 00:47:55 DEBUG MetadataSourceProcessor property login with lazy=false
w2022-03-15 00:47:55 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:login]
w2022-03-15 00:47:55 DEBUG building SimpleValue for login
w2022-03-15 00:47:55 DEBUG Building property login
w2022-03-15 00:47:55 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
w2022-03-15 00:47:55 DEBUG MetadataSourceProcessor property password with lazy=false
w2022-03-15 00:47:55 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:password]
w2022-03-15 00:47:55 DEBUG building SimpleValue for password
w2022-03-15 00:47:55 DEBUG Building property password
w2022-03-15 00:47:55 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=role, insertable=true, updatable=true, unique=false}
w2022-03-15 00:47:55 DEBUG MetadataSourceProcessor property role with lazy=false
w2022-03-15 00:47:55 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:role]
w2022-03-15 00:47:55 DEBUG building SimpleValue for role
w2022-03-15 00:47:55 DEBUG Building property role
w2022-03-15 00:47:55 DEBUG Starting fillSimpleValue for id
w2022-03-15 00:47:55 DEBUG Starting fillSimpleValue for message
w2022-03-15 00:47:55 DEBUG Starting fillSimpleValue for id
w2022-03-15 00:47:55 DEBUG Starting fillSimpleValue for status
w2022-03-15 00:47:55 DEBUG Starting fillSimpleValue for title
w2022-03-15 00:47:55 DEBUG Starting fillSimpleValue for id
w2022-03-15 00:47:55 DEBUG Starting fillSimpleValue for firstName
w2022-03-15 00:47:55 DEBUG Starting fillSimpleValue for lastName
w2022-03-15 00:47:55 DEBUG Starting fillSimpleValue for login
w2022-03-15 00:47:55 DEBUG Starting fillSimpleValue for password
w2022-03-15 00:47:55 DEBUG Starting fillSimpleValue for role
w2022-03-15 00:47:55 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [comment]
w2022-03-15 00:47:55 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [ticket]
w2022-03-15 00:47:55 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [user]
w2022-03-15 00:47:55 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 00:47:55 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 00:47:55 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 00:47:55 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 00:47:55 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 00:47:55 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 00:47:55 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 00:47:55 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 00:47:55 DEBUG Building session factory
w2022-03-15 00:47:55 DEBUG SessionFactory name : null
w2022-03-15 00:47:55 DEBUG Automatic flush during beforeCompletion(): enabled
w2022-03-15 00:47:55 DEBUG Automatic session close at end of transaction: disabled
w2022-03-15 00:47:55 DEBUG Statistics: disabled
w2022-03-15 00:47:55 DEBUG Deleted entity synthetic identifier rollback: disabled
w2022-03-15 00:47:55 DEBUG Default entity-mode: pojo
w2022-03-15 00:47:55 DEBUG Check Nullability in Core (should be disabled when Bean Validation is on): enabled
w2022-03-15 00:47:55 DEBUG Allow initialization of lazy state outside session : disabled
w2022-03-15 00:47:55 DEBUG Using BatchFetchStyle : LEGACY
w2022-03-15 00:47:55 DEBUG Default batch fetch size: -1
w2022-03-15 00:47:55 DEBUG Maximum outer join fetch depth: null
w2022-03-15 00:47:55 DEBUG Default null ordering: NONE
w2022-03-15 00:47:55 DEBUG Order SQL updates by primary key: disabled
w2022-03-15 00:47:55 DEBUG Order SQL inserts for batching: disabled
w2022-03-15 00:47:55 DEBUG multi-tenancy strategy : NONE
w2022-03-15 00:47:55 DEBUG JTA Track by Thread: enabled
w2022-03-15 00:47:55 DEBUG Query language substitutions: {}
w2022-03-15 00:47:55 DEBUG Named query checking : enabled
w2022-03-15 00:47:55 DEBUG Second-level cache: disabled
w2022-03-15 00:47:55 DEBUG Second-level query cache: disabled
w2022-03-15 00:47:55 DEBUG Second-level query cache factory: null
w2022-03-15 00:47:55 DEBUG Second-level cache region prefix: null
w2022-03-15 00:47:55 DEBUG Optimize second-level cache for minimal puts: disabled
w2022-03-15 00:47:55 DEBUG Structured second-level cache entries: disabled
w2022-03-15 00:47:55 DEBUG Second-level cache direct-reference entries: disabled
w2022-03-15 00:47:55 DEBUG Automatic eviction of collection cache: disabled
w2022-03-15 00:47:55 DEBUG JDBC batch size: 1
w2022-03-15 00:47:55 DEBUG JDBC batch updates for versioned data: enabled
w2022-03-15 00:47:55 DEBUG Scrollable result sets: disabled
w2022-03-15 00:47:55 DEBUG Wrap result sets: disabled
w2022-03-15 00:47:55 DEBUG JDBC3 getGeneratedKeys(): enabled
w2022-03-15 00:47:55 DEBUG JDBC result set fetch size: null
w2022-03-15 00:47:55 DEBUG Connection release mode: ON_CLOSE
w2022-03-15 00:47:55 DEBUG Generate SQL with comments: disabled
w2022-03-15 00:47:55 DEBUG JPA compliance - query : disabled
w2022-03-15 00:47:55 DEBUG JPA compliance - closed-handling : disabled
w2022-03-15 00:47:55 DEBUG JPA compliance - lists : disabled
w2022-03-15 00:47:55 DEBUG JPA compliance - transactions : disabled
w2022-03-15 00:47:55 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 00:47:55 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 00:47:55 DEBUG Session factory constructed with filter configurations : {}
w2022-03-15 00:47:55 DEBUG Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=true, java.specification.version=1.8, file.encoding.pkg=sun.io, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@7d02dc95, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.SQLiteDialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\charsets.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\cldrdata.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\dnsns.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\jaccess.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\localedata.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\nashorn.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunec.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunmscapi.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\zipfs.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jce.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jfr.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jsse.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\management-agent.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\resources.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\rt.jar;C:\Users\Ольга\Desktop\Java\Project\Project1\helpdeskproject\target\classes;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\2.6.4\spring-boot-starter-data-jpa-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\2.6.4\spring-boot-starter-jdbc-2.6.4.jar;C:\Users\Ольга\.m2\repository\com\zaxxer\HikariCP\4.0.3\HikariCP-4.0.3.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-jdbc\5.3.16\spring-jdbc-5.3.16.jar;C:\Users\Ольга\.m2\repository\jakarta\transaction\jakarta.transaction-api\1.3.3\jakarta.transaction-api-1.3.3.jar;C:\Users\Ольга\.m2\repository\jakarta\persistence\jakarta.persistence-api\2.2.3\jakarta.persistence-api-2.2.3.jar;C:\Users\Ольга\.m2\repository\org\hibernate\hibernate-core\5.6.5.Final\hibernate-core-5.6.5.Final.jar;C:\Users\Ольга\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy\1.11.22\byte-buddy-1.11.22.jar;C:\Users\Ольга\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ольга\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Ольга\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.6\jaxb-runtime-2.3.6.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\txw2\2.3.6\txw2-2.3.6.jar;C:\Users\Ольга\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.12\istack-commons-runtime-3.0.12.jar;C:\Users\Ольга\.m2\repository\com\sun\activation\jakarta.activation\1.2.2\jakarta.activation-1.2.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\data\spring-data-jpa\2.6.2\spring-data-jpa-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\data\spring-data-commons\2.6.2\spring-data-commons-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-orm\5.3.16\spring-orm-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-context\5.3.16\spring-context-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-tx\5.3.16\spring-tx-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-beans\5.3.16\spring-beans-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-aspects\5.3.16\spring-aspects-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-security\2.6.4\spring-boot-starter-security-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter\2.6.4\spring-boot-starter-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-logging\2.6.4\spring-boot-starter-logging-2.6.4.jar;C:\Users\Ольга\.m2\repository\ch\qos\logback\logback-classic\1.2.10\logback-classic-1.2.10.jar;C:\Users\Ольга\.m2\repository\ch\qos\logback\logback-core\1.2.10\logback-core-1.2.10.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.17.1\log4j-to-slf4j-2.17.1.jar;C:\Users\Ольга\.m2\repository\org\slf4j\jul-to-slf4j\1.7.36\jul-to-slf4j-1.7.36.jar;C:\Users\Ольга\.m2\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;C:\Users\Ольга\.m2\repository\org\yaml\snakeyaml\1.29\snakeyaml-1.29.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-aop\5.3.16\spring-aop-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-config\5.6.2\spring-security-config-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-web\5.6.2\spring-security-web-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-expression\5.3.16\spring-expression-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-web\2.6.4\spring-boot-starter-web-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-json\2.6.4\spring-boot-starter-json-2.6.4.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.13.1\jackson-datatype-jdk8-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.13.1\jackson-datatype-jsr310-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.13.1\jackson-module-parameter-names-2.13.1.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\2.6.4\spring-boot-starter-tomcat-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.58\tomcat-embed-core-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\9.0.58\tomcat-embed-el-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.58\tomcat-embed-websocket-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-web\5.3.16\spring-web-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-webmvc\5.3.16\spring-webmvc-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-devtools\2.6.4\spring-boot-devtools-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot\2.6.4\spring-boot-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\2.6.4\spring-boot-autoconfigure-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\xerial\sqlite-jdbc\3.36.0.3\sqlite-jdbc-3.36.0.3.jar;C:\Users\Ольга\.m2\repository\com\zsoltfabok\sqlite-dialect\1.0\sqlite-dialect-1.0.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-aop\2.6.2\spring-boot-starter-aop-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\aspectj\aspectjweaver\1.9.7\aspectjweaver-1.9.7.jar;C:\Users\Ольга\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.3\jakarta.xml.bind-api-2.3.3.jar;C:\Users\Ольга\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.2\jakarta.activation-api-1.2.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-core\5.3.16\spring-core-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-jcl\5.3.16\spring-jcl-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-core\5.6.2\spring-security-core-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-crypto\5.6.2\spring-security-crypto-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\projectlombok\lombok\1.18.22\lombok-1.18.22.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\2.6.4\spring-boot-starter-thymeleaf-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\thymeleaf-spring5\3.0.15.RELEASE\thymeleaf-spring5-3.0.15.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\thymeleaf\3.0.15.RELEASE\thymeleaf-3.0.15.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\attoparser\attoparser\2.0.5.RELEASE\attoparser-2.0.5.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-java8time\3.0.4.RELEASE\thymeleaf-extras-java8time-3.0.4.RELEASE.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.1\jackson-databind-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.1\jackson-annotations-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.1\jackson-core-2.13.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-api\2.4.1\log4j-api-2.4.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-core\2.4.1\log4j-core-2.4.1.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.2\lib\idea_rt.jar, java.vm.vendor=Temurin, sun.arch.data.model=64, user.variant=, java.vendor.url=https://adoptium.net/, catalina.useNaming=false, user.timezone=Europe/Moscow, jakarta.persistence.sharedCache.mode=UNSPECIFIED, os.name=Windows 10, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), user.country=RU, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\bin, sun.java.command=ru.edu.helpdesk.HelpdeskApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@531d2c3, com.sun.management.jmxremote=, javax.persistence.sharedCache.mode=UNSPECIFIED, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, user.home=C:\Users\Ольга, user.language=ru, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre, file.separator=\, spring.output.ansi.enabled=always, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, sun.boot.class.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\resources.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\rt.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\sunrsasign.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jsse.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jce.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\charsets.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jfr.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\classes, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_312-b07, user.name=Эльдорадо, spring.jmx.enabled=true, path.separator=;, os.version=10.0, java.endorsed.dirs=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\endorsed, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=default, spring.beaninfo.ignore=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=C:\Users\134E~1\AppData\Local\Temp\, catalina.home=C:\Users\Ольга\AppData\Local\Temp\tomcat.8080.6589236451243416883, java.version=1.8.0_312, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\Ольга\Desktop\Java\Project\Project1\helpdeskproject, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=6616, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\Ольга\AppData\Local\Temp\tomcat.8080.6589236451243416883, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@73f165a4, java.library.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\windows\System32\OpenSSH\;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\Program Files\apache-maven-3.8.4\bin;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Ольга\AppData\Local\Microsoft\WindowsApps;C:\Users\Ольга\AppData\Local\Programs\Microsoft VS Code\bin;C:\SQLite;C:\Users\Ольга\AppData\Roaming\npm;C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.2\bin;;., java.vendor=Temurin, java.vm.info=mixed mode, java.vm.version=25.312-b07, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, java.ext.dirs=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext;C:\windows\Sun\Java\lib\ext, hibernate.connection.datasource=HikariDataSource (HikariPool-1), hibernate.hbm2ddl.import_files=data/import.sql, java.class.version=52.0}
w2022-03-15 00:47:55 DEBUG Skipping JACC integration as it was not enabled
w2022-03-15 00:47:55 DEBUG Using ORDINAL-based conversion for Enum ru.edu.helpdesk.entity.UserRole
w2022-03-15 00:47:55 DEBUG Using ORDINAL-based conversion for Enum ru.edu.helpdesk.entity.TicketStatus
w2022-03-15 00:47:55 DEBUG Instantiated session factory
w2022-03-15 00:47:55 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7c78fcc1] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@11cf4981]
w2022-03-15 00:47:55 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.User] is safe
w2022-03-15 00:47:55 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.User
w2022-03-15 00:47:55 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:47:55 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:47:55 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:47:55 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:47:55 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Ticket] is safe
w2022-03-15 00:47:55 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Ticket
w2022-03-15 00:47:55 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:47:55 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:47:55 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:47:55 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:47:55 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:47:55 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:47:55 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:47:55 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:47:55 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Comment] is safe
w2022-03-15 00:47:55 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Comment
w2022-03-15 00:47:55 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:47:55 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:47:55 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:47:55 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:47:55 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.User
w2022-03-15 00:47:55 DEBUG  Version select: select id from user where id =?
w2022-03-15 00:47:55 DEBUG  Snapshot select: select user_.id, user_.first_name as first_na2_2_, user_.last_name as last_nam3_2_, user_.login as login4_2_, user_.password as password5_2_, user_.role as role6_2_ from user user_ where user_.id=?
w2022-03-15 00:47:55 DEBUG  Insert 0: insert into user (first_name, last_name, login, password, role, id) values (?, ?, ?, ?, ?, ?)
w2022-03-15 00:47:55 DEBUG  Update 0: update user set first_name=?, last_name=?, login=?, password=?, role=? where id=?
w2022-03-15 00:47:55 DEBUG  Delete 0: delete from user where id=?
w2022-03-15 00:47:55 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4483e36c]
w2022-03-15 00:47:55 DEBUG Visiting attribute path : firstName
w2022-03-15 00:47:55 DEBUG Visiting attribute path : lastName
w2022-03-15 00:47:55 DEBUG Visiting attribute path : login
w2022-03-15 00:47:55 DEBUG Visiting attribute path : password
w2022-03-15 00:47:55 DEBUG Visiting attribute path : role
w2022-03-15 00:47:55 DEBUG Building LoadPlan...
w2022-03-15 00:47:55 DEBUG processing queryspace <gen:0>
w2022-03-15 00:47:55 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.User)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

w2022-03-15 00:47:55 DEBUG Static select for entity ru.edu.helpdesk.entity.User [NONE]: select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 00:47:55 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.Ticket
w2022-03-15 00:47:55 DEBUG  Version select: select id from ticket where id =?
w2022-03-15 00:47:55 DEBUG  Snapshot select: select ticket_.id, ticket_.client_id as client_i4_1_, ticket_.status as status2_1_, ticket_.support_id as support_5_1_, ticket_.title as title3_1_ from ticket ticket_ where ticket_.id=?
w2022-03-15 00:47:55 DEBUG  Insert 0: insert into ticket (client_id, status, support_id, title, id) values (?, ?, ?, ?, ?)
w2022-03-15 00:47:55 DEBUG  Update 0: update ticket set client_id=?, status=?, support_id=?, title=? where id=?
w2022-03-15 00:47:55 DEBUG  Delete 0: delete from ticket where id=?
w2022-03-15 00:47:55 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4bbe690d]
w2022-03-15 00:47:55 DEBUG Visiting attribute path : client
w2022-03-15 00:47:55 DEBUG Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ca40a35]
w2022-03-15 00:47:55 DEBUG Visiting attribute path : client.firstName
w2022-03-15 00:47:55 DEBUG Visiting attribute path : client.lastName
w2022-03-15 00:47:55 DEBUG Visiting attribute path : client.login
w2022-03-15 00:47:55 DEBUG Visiting attribute path : client.password
w2022-03-15 00:47:55 DEBUG Visiting attribute path : client.role
w2022-03-15 00:47:55 DEBUG Visiting attribute path : status
w2022-03-15 00:47:55 DEBUG Visiting attribute path : support
w2022-03-15 00:47:55 DEBUG Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65331ea6]
w2022-03-15 00:47:55 DEBUG Visiting attribute path : support.firstName
w2022-03-15 00:47:55 DEBUG Visiting attribute path : support.lastName
w2022-03-15 00:47:55 DEBUG Visiting attribute path : support.login
w2022-03-15 00:47:55 DEBUG Visiting attribute path : support.password
w2022-03-15 00:47:55 DEBUG Visiting attribute path : support.role
w2022-03-15 00:47:55 DEBUG Visiting attribute path : title
w2022-03-15 00:47:55 DEBUG Building LoadPlan...
w2022-03-15 00:47:55 DEBUG processing queryspace <gen:0>
w2022-03-15 00:47:55 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.Ticket)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.Ticket, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.Ticket)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:1>, path=ru.edu.helpdesk.entity.Ticket.client)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:2>, path=ru.edu.helpdesk.entity.Ticket.support)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.Ticket)
          - SQL table alias mapping - ticket0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(client)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
          - JOIN (JoinDefinedByMetadata(support)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user2_
                - alias suffix - 2_
                - suffixed key columns - {id1_2_2_}

w2022-03-15 00:47:55 DEBUG Static select for entity ru.edu.helpdesk.entity.Ticket [NONE]: select ticket0_.id as id1_1_0_, ticket0_.client_id as client_i4_1_0_, ticket0_.status as status2_1_0_, ticket0_.support_id as support_5_1_0_, ticket0_.title as title3_1_0_, user1_.id as id1_2_1_, user1_.first_name as first_na2_2_1_, user1_.last_name as last_nam3_2_1_, user1_.login as login4_2_1_, user1_.password as password5_2_1_, user1_.role as role6_2_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id left outer join user user2_ on ticket0_.support_id=user2_.id where ticket0_.id=?
w2022-03-15 00:47:55 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.Comment
w2022-03-15 00:47:55 DEBUG  Version select: select id from comment where id =?
w2022-03-15 00:47:55 DEBUG  Snapshot select: select comment_.id, comment_.message as message2_0_, comment_.ticket_id as ticket_i3_0_, comment_.user_id as user_id4_0_ from comment comment_ where comment_.id=?
w2022-03-15 00:47:55 DEBUG  Insert 0: insert into comment (message, ticket_id, user_id, id) values (?, ?, ?, ?)
w2022-03-15 00:47:55 DEBUG  Update 0: update comment set message=?, ticket_id=?, user_id=? where id=?
w2022-03-15 00:47:55 DEBUG  Delete 0: delete from comment where id=?
w2022-03-15 00:47:55 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43befc38]
w2022-03-15 00:47:55 DEBUG Visiting attribute path : message
w2022-03-15 00:47:55 DEBUG Visiting attribute path : ticket
w2022-03-15 00:47:55 DEBUG Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c5b53ec]
w2022-03-15 00:47:55 DEBUG Visiting attribute path : ticket.client
w2022-03-15 00:47:55 DEBUG Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e256a14]
w2022-03-15 00:47:55 DEBUG Visiting attribute path : ticket.client.firstName
w2022-03-15 00:47:55 DEBUG Visiting attribute path : ticket.client.lastName
w2022-03-15 00:47:55 DEBUG Visiting attribute path : ticket.client.login
w2022-03-15 00:47:55 DEBUG Visiting attribute path : ticket.client.password
w2022-03-15 00:47:55 DEBUG Visiting attribute path : ticket.client.role
w2022-03-15 00:47:55 DEBUG Visiting attribute path : ticket.status
w2022-03-15 00:47:55 DEBUG Visiting attribute path : ticket.support
w2022-03-15 00:47:55 DEBUG Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@463bb149]
w2022-03-15 00:47:55 DEBUG Visiting attribute path : ticket.support.firstName
w2022-03-15 00:47:55 DEBUG Visiting attribute path : ticket.support.lastName
w2022-03-15 00:47:55 DEBUG Visiting attribute path : ticket.support.login
w2022-03-15 00:47:55 DEBUG Visiting attribute path : ticket.support.password
w2022-03-15 00:47:55 DEBUG Visiting attribute path : ticket.support.role
w2022-03-15 00:47:55 DEBUG Visiting attribute path : ticket.title
w2022-03-15 00:47:55 DEBUG Visiting attribute path : user
w2022-03-15 00:47:55 DEBUG Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@292dcd40]
w2022-03-15 00:47:55 DEBUG Visiting attribute path : user.firstName
w2022-03-15 00:47:55 DEBUG Visiting attribute path : user.lastName
w2022-03-15 00:47:55 DEBUG Visiting attribute path : user.login
w2022-03-15 00:47:55 DEBUG Visiting attribute path : user.password
w2022-03-15 00:47:55 DEBUG Visiting attribute path : user.role
w2022-03-15 00:47:55 DEBUG Building LoadPlan...
w2022-03-15 00:47:55 DEBUG processing queryspace <gen:0>
w2022-03-15 00:47:55 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.Comment)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.Comment, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.Comment)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.Ticket, querySpaceUid=<gen:1>, path=ru.edu.helpdesk.entity.Comment.ticket)
             - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:2>, path=ru.edu.helpdesk.entity.Comment.ticket.client)
             - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:3>, path=ru.edu.helpdesk.entity.Comment.ticket.support)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:4>, path=ru.edu.helpdesk.entity.Comment.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(ticket)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ru.edu.helpdesk.entity.Ticket)
                - SQL table alias mapping - ticket1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(client)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=ru.edu.helpdesk.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}
                - JOIN (JoinDefinedByMetadata(support)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=ru.edu.helpdesk.entity.User)
                      - SQL table alias mapping - user3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_2_3_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user4_
                - alias suffix - 4_
                - suffixed key columns - {id1_2_4_}

w2022-03-15 00:47:55 DEBUG Static select for entity ru.edu.helpdesk.entity.Comment [NONE]: select comment0_.id as id1_0_0_, comment0_.message as message2_0_0_, comment0_.ticket_id as ticket_i3_0_0_, comment0_.user_id as user_id4_0_0_, ticket1_.id as id1_1_1_, ticket1_.client_id as client_i4_1_1_, ticket1_.status as status2_1_1_, ticket1_.support_id as support_5_1_1_, ticket1_.title as title3_1_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_, user3_.id as id1_2_3_, user3_.first_name as first_na2_2_3_, user3_.last_name as last_nam3_2_3_, user3_.login as login4_2_3_, user3_.password as password5_2_3_, user3_.role as role6_2_3_, user4_.id as id1_2_4_, user4_.first_name as first_na2_2_4_, user4_.last_name as last_nam3_2_4_, user4_.login as login4_2_4_, user4_.password as password5_2_4_, user4_.role as role6_2_4_ from comment comment0_ left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id left outer join user user2_ on ticket1_.client_id=user2_.id left outer join user user3_ on ticket1_.support_id=user3_.id left outer join user user4_ on comment0_.user_id=user4_.id where comment0_.id=?
w2022-03-15 00:47:55 DEBUG drop table if exists comment
w2022-03-15 00:47:55 DEBUG drop table if exists hibernate_sequence
w2022-03-15 00:47:55 DEBUG drop table if exists ticket
w2022-03-15 00:47:55 DEBUG drop table if exists user
w2022-03-15 00:47:55 DEBUG create table comment (id bigint not null, message varchar(255) not null, ticket_id bigint, user_id bigint, primary key (id))
w2022-03-15 00:47:55 DEBUG create table hibernate_sequence (next_val bigint)
w2022-03-15 00:47:55 DEBUG insert into hibernate_sequence values ( 1 )
w2022-03-15 00:47:55 DEBUG create table ticket (id bigint not null, status integer, title varchar(255) not null, client_id bigint, support_id bigint, primary key (id))
w2022-03-15 00:47:55 DEBUG create table user (id bigint not null, first_name varchar(255), last_name varchar(255), login varchar(255) not null, password varchar(255) not null, role integer, primary key (id))
w2022-03-15 00:47:55 INFO  HHH000476: Executing import script 'file:/C:/Users/%d0%9e%d0%bb%d1%8c%d0%b3%d0%b0/Desktop/Java/Project/Project1/helpdeskproject/target/classes/data/import.sql'
w2022-03-15 00:47:55 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (1, 'admin', 'admin', 'admin', 'admin', 0)
w2022-03-15 00:47:55 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (2, 'support', 'support', 'support', 'support', 1)
w2022-03-15 00:47:55 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (3, 'user1', 'user1', 'user1', 'user1', 2)
w2022-03-15 00:47:55 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (4, 'user2', 'user2', 'user2', 'user2', 2)
w2022-03-15 00:47:55 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (1, 1, 'Hello user1', 3, 2)
w2022-03-15 00:47:55 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (2, 0, 'Title2', 3, NULL)
w2022-03-15 00:47:55 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (3, 0, 'Message user2', 4, NULL)
w2022-03-15 00:47:55 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (1, "Hello ticket1", 1, 3)
w2022-03-15 00:47:55 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (2, "Hello ticket2", 2, 3)
w2022-03-15 00:47:55 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (3, "Hello ticket11", 1, 2)
w2022-03-15 00:47:55 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (4, "Hello ticket111", 1, 2)
w2022-03-15 00:47:55 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (5, "Hello ticket22", 2, 2)
w2022-03-15 00:47:56 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (6, "Hello ticket3", 3, 4)
w2022-03-15 00:47:56 DEBUG UPDATE hibernate_sequence SET next_val = 8 WHERE next_val = 1
w2022-03-15 00:47:56 INFO  HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
w2022-03-15 00:47:56 DEBUG Checking 0 named HQL queries
w2022-03-15 00:47:56 DEBUG Checking 0 named SQL queries
w2022-03-15 00:47:56 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 00:47:56 DEBUG Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@57fd5f94
w2022-03-15 00:47:56 DEBUG Registering SessionFactory: edfce5db-143d-4342-9e7c-493147ea1e14 (<unnamed>)
w2022-03-15 00:47:56 DEBUG Not binding SessionFactory to JNDI, no JNDI name configured
w2022-03-15 00:47:56 DEBUG Statistics initialized [enabled=false]
w2022-03-15 00:47:56 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 00:47:56 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 00:47:56 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 00:48:06 DEBUG Rendered criteria query -> select generatedAlias0 from Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 00:48:06 DEBUG QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@7e091001
w2022-03-15 00:48:06 DEBUG parse() - HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 00:48:06 DEBUG throwQueryException() : no errors
w2022-03-15 00:48:06 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[IDENT] Node: 'ru'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'edu'
    |  |  |  |  |  |  \-[IDENT] Node: 'helpdesk'
    |  |  |  |  |  \-[IDENT] Node: 'entity'
    |  |  |  |  \-[IDENT] Node: 'Ticket'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'client'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias1'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

w2022-03-15 00:48:06 DEBUG select << begin [level=1, statement=select]
w2022-03-15 00:48:06 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.Ticket (generatedAlias0) -> ticket0_
w2022-03-15 00:48:06 DEBUG Resolved : generatedAlias0 -> ticket0_.id
w2022-03-15 00:48:06 DEBUG getDataType() : client -> org.hibernate.type.ManyToOneType(ru.edu.helpdesk.entity.User)
w2022-03-15 00:48:06 DEBUG dereferenceEntityJoin() : generating join for client in ru.edu.helpdesk.entity.Ticket (generatedAlias1) parent = [ {null} ]
w2022-03-15 00:48:06 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.User (generatedAlias1) -> user1_
w2022-03-15 00:48:06 DEBUG addJoinByPathMap() : generatedAlias0.client -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}
w2022-03-15 00:48:06 DEBUG Resolved : generatedAlias0.client -> ticket0_.client_id
w2022-03-15 00:48:06 DEBUG createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'user user1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Ticket.client,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}

w2022-03-15 00:48:06 DEBUG Resolved : generatedAlias0 -> ticket0_.id
w2022-03-15 00:48:06 DEBUG Resolved : generatedAlias1 -> user1_.id
w2022-03-15 00:48:06 DEBUG getDataType() : id -> org.hibernate.type.LongType@7b2bcd6c
w2022-03-15 00:48:06 DEBUG Resolved : generatedAlias1.id -> user1_.id
w2022-03-15 00:48:06 DEBUG select : finishing up [level=1, statement=select]
w2022-03-15 00:48:06 DEBUG processQuery() :  ( SELECT ( {select clause} ticket0_.id ) ( FromClause{level=1} ( ticket ticket0_ user user1_ ) ) ( where ( = ( user1_.id user1_.id id ) ? ) ) )
w2022-03-15 00:48:06 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Ticket): [ticket]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.Ticket)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.User)
          | path: generatedAlias1.id
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.User)
          |  | originalText: generatedAlias1
          |  \-IdentNode
          |    persister: null
          |    originalText: id
          \-ParameterNode

w2022-03-15 00:48:06 DEBUG Using FROM fragment [ticket ticket0_]
w2022-03-15 00:48:06 DEBUG Using FROM fragment [left outer join user user1_ on ticket0_.client_id=user1_.id]
w2022-03-15 00:48:06 DEBUG select >> end [level=1, statement=select]
w2022-03-15 00:48:06 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (ticket,user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'ticket0_.id as id1_1_' {alias=generatedAlias0, className=ru.edu.helpdesk.entity.Ticket, tableAlias=ticket0_}
    |  \-[SQL_TOKEN] SqlFragment: 'ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[ticket0_, user1_], fromElementsByPath=[generatedAlias0.client], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'ticket ticket0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=ticket,tableAlias=ticket0_,origin=null,columns={,className=ru.edu.helpdesk.entity.Ticket}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join user user1_ on ticket0_.client_id=user1_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Ticket.client,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user1_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias1.id,tableAlias=user1_,className=ru.edu.helpdesk.entity.User,classAlias=generatedAlias1}
          |  +-[ALIAS_REF] IdentNode: 'user1_.id' {alias=generatedAlias1, className=ru.edu.helpdesk.entity.User, tableAlias=user1_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LongType@7b2bcd6c}

w2022-03-15 00:48:06 DEBUG throwQueryException() : no errors
w2022-03-15 00:48:06 DEBUG HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 00:48:06 DEBUG SQL: select ticket0_.id as id1_1_, ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id where user1_.id=?
w2022-03-15 00:48:06 DEBUG throwQueryException() : no errors
w2022-03-15 00:48:06 DEBUG select ticket0_.id as id1_1_, ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id where user1_.id=?
w2022-03-15 00:48:06 DEBUG Result set row: 0
w2022-03-15 00:48:06 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 00:48:06 DEBUG Result set row: 1
w2022-03-15 00:48:06 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 00:48:06 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 00:48:06 DEBUG Processing attribute `client` : value = 3
w2022-03-15 00:48:06 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 00:48:06 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 00:48:06 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 00:48:06 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#3]
w2022-03-15 00:48:06 DEBUG Processing attribute `firstName` : value = user1
w2022-03-15 00:48:06 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 00:48:06 DEBUG Processing attribute `lastName` : value = user1
w2022-03-15 00:48:06 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 00:48:06 DEBUG Processing attribute `login` : value = user1
w2022-03-15 00:48:06 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 00:48:06 DEBUG Processing attribute `password` : value = user1
w2022-03-15 00:48:06 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 00:48:06 DEBUG Processing attribute `role` : value = USER
w2022-03-15 00:48:06 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 00:48:06 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#3]
w2022-03-15 00:48:06 DEBUG Done entity load : ru.edu.helpdesk.entity.User#3
w2022-03-15 00:48:06 DEBUG Processing attribute `status` : value = WORKING
w2022-03-15 00:48:06 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 00:48:06 DEBUG Processing attribute `support` : value = 2
w2022-03-15 00:48:06 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 00:48:06 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 00:48:06 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 00:48:06 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#2]
w2022-03-15 00:48:06 DEBUG Processing attribute `firstName` : value = support
w2022-03-15 00:48:06 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 00:48:06 DEBUG Processing attribute `lastName` : value = support
w2022-03-15 00:48:06 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 00:48:06 DEBUG Processing attribute `login` : value = support
w2022-03-15 00:48:06 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 00:48:06 DEBUG Processing attribute `password` : value = support
w2022-03-15 00:48:06 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 00:48:06 DEBUG Processing attribute `role` : value = SUPPORT
w2022-03-15 00:48:06 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 00:48:06 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#2]
w2022-03-15 00:48:06 DEBUG Done entity load : ru.edu.helpdesk.entity.User#2
w2022-03-15 00:48:06 DEBUG Processing attribute `title` : value = Hello user1
w2022-03-15 00:48:06 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 00:48:06 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 00:48:06 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 00:48:06 DEBUG Processing attribute `client` : value = 3
w2022-03-15 00:48:06 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 00:48:06 DEBUG Processing attribute `status` : value = OPEN
w2022-03-15 00:48:06 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 00:48:06 DEBUG Processing attribute `support` : value = null
w2022-03-15 00:48:06 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 00:48:06 DEBUG Processing attribute `title` : value = Title2
w2022-03-15 00:48:06 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 00:48:06 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 00:48:09 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 00:48:09 DEBUG begin
w2022-03-15 00:48:09 DEBUG committing
w2022-03-15 00:48:19 DEBUG Rendered criteria query -> select generatedAlias0 from Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 00:48:19 DEBUG select ticket0_.id as id1_1_, ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id where user1_.id=?
w2022-03-15 00:48:19 DEBUG Result set row: 0
w2022-03-15 00:48:19 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 00:48:19 DEBUG Result set row: 1
w2022-03-15 00:48:19 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 00:48:19 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 00:48:19 DEBUG Processing attribute `client` : value = 3
w2022-03-15 00:48:19 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 00:48:19 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 00:48:19 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 00:48:19 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#3]
w2022-03-15 00:48:19 DEBUG Processing attribute `firstName` : value = user1
w2022-03-15 00:48:19 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 00:48:19 DEBUG Processing attribute `lastName` : value = user1
w2022-03-15 00:48:19 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 00:48:19 DEBUG Processing attribute `login` : value = user1
w2022-03-15 00:48:19 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 00:48:19 DEBUG Processing attribute `password` : value = user1
w2022-03-15 00:48:19 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 00:48:19 DEBUG Processing attribute `role` : value = USER
w2022-03-15 00:48:19 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 00:48:19 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#3]
w2022-03-15 00:48:19 DEBUG Done entity load : ru.edu.helpdesk.entity.User#3
w2022-03-15 00:48:19 DEBUG Processing attribute `status` : value = WORKING
w2022-03-15 00:48:19 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 00:48:19 DEBUG Processing attribute `support` : value = 2
w2022-03-15 00:48:19 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 00:48:19 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 00:48:19 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 00:48:19 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#2]
w2022-03-15 00:48:19 DEBUG Processing attribute `firstName` : value = support
w2022-03-15 00:48:19 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 00:48:19 DEBUG Processing attribute `lastName` : value = support
w2022-03-15 00:48:19 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 00:48:19 DEBUG Processing attribute `login` : value = support
w2022-03-15 00:48:19 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 00:48:19 DEBUG Processing attribute `password` : value = support
w2022-03-15 00:48:19 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 00:48:19 DEBUG Processing attribute `role` : value = SUPPORT
w2022-03-15 00:48:19 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 00:48:19 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#2]
w2022-03-15 00:48:19 DEBUG Done entity load : ru.edu.helpdesk.entity.User#2
w2022-03-15 00:48:19 DEBUG Processing attribute `title` : value = Hello user1
w2022-03-15 00:48:19 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 00:48:19 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 00:48:19 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 00:48:19 DEBUG Processing attribute `client` : value = 3
w2022-03-15 00:48:19 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 00:48:19 DEBUG Processing attribute `status` : value = OPEN
w2022-03-15 00:48:19 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 00:48:19 DEBUG Processing attribute `support` : value = null
w2022-03-15 00:48:19 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 00:48:19 DEBUG Processing attribute `title` : value = Title2
w2022-03-15 00:48:19 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 00:48:19 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 00:48:21 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 00:48:21 DEBUG begin
w2022-03-15 00:48:21 DEBUG committing
w2022-03-15 00:49:05 DEBUG Logging Provider: org.jboss.logging.Log4j2LoggerProvider
w2022-03-15 00:49:05 DEBUG PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@641916a2
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/%d0%9e%d0%bb%d1%8c%d0%b3%d0%b0/Desktop/Java/Project/Project1/helpdeskproject/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		ru.edu.helpdesk.entity.Comment
		ru.edu.helpdesk.entity.Ticket
		ru.edu.helpdesk.entity.User]
	Mapping files names []
	Properties []
w2022-03-15 00:49:05 DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
w2022-03-15 00:49:05 DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
w2022-03-15 00:49:05 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
w2022-03-15 00:49:05 INFO  HHH000412: Hibernate ORM core version 5.6.5.Final
w2022-03-15 00:49:05 DEBUG HHH000206: hibernate.properties not found
w2022-03-15 00:49:06 DEBUG Overriding existing service binding [org.hibernate.secure.spi.JaccService]
w2022-03-15 00:49:06 DEBUG Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
w2022-03-15 00:49:06 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
w2022-03-15 00:49:06 INFO  HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
w2022-03-15 00:49:06 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@506dab3e
w2022-03-15 00:49:06 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@506dab3e
w2022-03-15 00:49:06 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@506dab3e
w2022-03-15 00:49:06 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5f65948f
w2022-03-15 00:49:06 DEBUG Adding type registration true_false -> org.hibernate.type.TrueFalseType@794feef6
w2022-03-15 00:49:06 DEBUG Adding type registration yes_no -> org.hibernate.type.YesNoType@578eb626
w2022-03-15 00:49:06 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@6a758dca
w2022-03-15 00:49:06 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@6a758dca
w2022-03-15 00:49:06 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6a758dca
w2022-03-15 00:49:06 DEBUG Adding type registration character -> org.hibernate.type.CharacterType@2abd541
w2022-03-15 00:49:06 DEBUG Adding type registration char -> org.hibernate.type.CharacterType@2abd541
w2022-03-15 00:49:06 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2abd541
w2022-03-15 00:49:06 DEBUG Adding type registration short -> org.hibernate.type.ShortType@591ed415
w2022-03-15 00:49:06 DEBUG Adding type registration short -> org.hibernate.type.ShortType@591ed415
w2022-03-15 00:49:06 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.ShortType@591ed415
w2022-03-15 00:49:06 DEBUG Adding type registration integer -> org.hibernate.type.IntegerType@77985777
w2022-03-15 00:49:06 DEBUG Adding type registration int -> org.hibernate.type.IntegerType@77985777
w2022-03-15 00:49:06 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@77985777
w2022-03-15 00:49:06 DEBUG Adding type registration long -> org.hibernate.type.LongType@6282307d
w2022-03-15 00:49:06 DEBUG Adding type registration long -> org.hibernate.type.LongType@6282307d
w2022-03-15 00:49:06 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.LongType@6282307d
w2022-03-15 00:49:06 DEBUG Adding type registration float -> org.hibernate.type.FloatType@1ab21a14
w2022-03-15 00:49:06 DEBUG Adding type registration float -> org.hibernate.type.FloatType@1ab21a14
w2022-03-15 00:49:06 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1ab21a14
w2022-03-15 00:49:06 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@2d318bfa
w2022-03-15 00:49:06 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@2d318bfa
w2022-03-15 00:49:06 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2d318bfa
w2022-03-15 00:49:06 DEBUG Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2c17fe6b
w2022-03-15 00:49:06 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2c17fe6b
w2022-03-15 00:49:06 DEBUG Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5cc6b0cd
w2022-03-15 00:49:06 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5cc6b0cd
w2022-03-15 00:49:06 DEBUG Adding type registration string -> org.hibernate.type.StringType@50eac3d6
w2022-03-15 00:49:06 DEBUG Adding type registration java.lang.String -> org.hibernate.type.StringType@50eac3d6
w2022-03-15 00:49:06 DEBUG Adding type registration nstring -> org.hibernate.type.StringNVarcharType@b096737
w2022-03-15 00:49:06 DEBUG Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4f71e587
w2022-03-15 00:49:06 DEBUG Adding type registration url -> org.hibernate.type.UrlType@381c2eea
w2022-03-15 00:49:06 DEBUG Adding type registration java.net.URL -> org.hibernate.type.UrlType@381c2eea
w2022-03-15 00:49:06 DEBUG Adding type registration Duration -> org.hibernate.type.DurationType@58bc0685
w2022-03-15 00:49:06 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.DurationType@58bc0685
w2022-03-15 00:49:06 DEBUG Adding type registration Instant -> org.hibernate.type.InstantType@3c853ca6
w2022-03-15 00:49:06 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3c853ca6
w2022-03-15 00:49:06 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@5e15658
w2022-03-15 00:49:06 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@5e15658
w2022-03-15 00:49:06 DEBUG Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4f725a71
w2022-03-15 00:49:06 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4f725a71
w2022-03-15 00:49:06 DEBUG Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@4da44818
w2022-03-15 00:49:06 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@4da44818
w2022-03-15 00:49:06 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5adb4eff
w2022-03-15 00:49:06 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5adb4eff
w2022-03-15 00:49:06 DEBUG Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@6bb93791
w2022-03-15 00:49:06 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@6bb93791
w2022-03-15 00:49:06 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1753412d
w2022-03-15 00:49:06 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1753412d
w2022-03-15 00:49:06 DEBUG Adding type registration date -> org.hibernate.type.DateType@4aa31ff7
w2022-03-15 00:49:06 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.DateType@4aa31ff7
w2022-03-15 00:49:06 DEBUG Adding type registration time -> org.hibernate.type.TimeType@4faa101d
w2022-03-15 00:49:06 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4faa101d
w2022-03-15 00:49:06 DEBUG Adding type registration timestamp -> org.hibernate.type.TimestampType@1e7c8998
w2022-03-15 00:49:06 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1e7c8998
w2022-03-15 00:49:06 DEBUG Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1e7c8998
w2022-03-15 00:49:06 DEBUG Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@53f775bc
w2022-03-15 00:49:06 DEBUG Adding type registration calendar -> org.hibernate.type.CalendarType@55794e1f
w2022-03-15 00:49:06 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@55794e1f
w2022-03-15 00:49:06 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@55794e1f
w2022-03-15 00:49:06 DEBUG Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@c16a20
w2022-03-15 00:49:06 DEBUG Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@41bbc065
w2022-03-15 00:49:06 DEBUG Adding type registration locale -> org.hibernate.type.LocaleType@38afd257
w2022-03-15 00:49:06 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@38afd257
w2022-03-15 00:49:06 DEBUG Adding type registration currency -> org.hibernate.type.CurrencyType@9ec6477
w2022-03-15 00:49:06 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@9ec6477
w2022-03-15 00:49:06 DEBUG Adding type registration timezone -> org.hibernate.type.TimeZoneType@29a2cbdb
w2022-03-15 00:49:06 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@29a2cbdb
w2022-03-15 00:49:06 DEBUG Adding type registration class -> org.hibernate.type.ClassType@7a73691
w2022-03-15 00:49:06 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7a73691
w2022-03-15 00:49:06 DEBUG Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@43fb592
w2022-03-15 00:49:06 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@43fb592
w2022-03-15 00:49:06 DEBUG Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@d3b1f19
w2022-03-15 00:49:06 DEBUG Adding type registration binary -> org.hibernate.type.BinaryType@31e56af
w2022-03-15 00:49:06 DEBUG Adding type registration byte[] -> org.hibernate.type.BinaryType@31e56af
w2022-03-15 00:49:06 DEBUG Adding type registration [B -> org.hibernate.type.BinaryType@31e56af
w2022-03-15 00:49:06 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@25e0e64d
w2022-03-15 00:49:06 DEBUG Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@25e0e64d
w2022-03-15 00:49:06 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@25e0e64d
w2022-03-15 00:49:06 DEBUG Adding type registration row_version -> org.hibernate.type.RowVersionType@ea07a88
w2022-03-15 00:49:06 DEBUG Adding type registration image -> org.hibernate.type.ImageType@1e55dab7
w2022-03-15 00:49:06 DEBUG Adding type registration characters -> org.hibernate.type.CharArrayType@232dca8d
w2022-03-15 00:49:06 DEBUG Adding type registration char[] -> org.hibernate.type.CharArrayType@232dca8d
w2022-03-15 00:49:06 DEBUG Adding type registration [C -> org.hibernate.type.CharArrayType@232dca8d
w2022-03-15 00:49:06 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2ed40e1c
w2022-03-15 00:49:06 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2ed40e1c
w2022-03-15 00:49:06 DEBUG Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2ed40e1c
w2022-03-15 00:49:06 DEBUG Adding type registration text -> org.hibernate.type.TextType@3255cab6
w2022-03-15 00:49:06 DEBUG Adding type registration ntext -> org.hibernate.type.NTextType@43042c70
w2022-03-15 00:49:06 DEBUG Adding type registration blob -> org.hibernate.type.BlobType@4f3d66b0
w2022-03-15 00:49:06 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4f3d66b0
w2022-03-15 00:49:06 DEBUG Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4a79157e
w2022-03-15 00:49:06 DEBUG Adding type registration clob -> org.hibernate.type.ClobType@3c02ed02
w2022-03-15 00:49:06 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3c02ed02
w2022-03-15 00:49:06 DEBUG Adding type registration nclob -> org.hibernate.type.NClobType@38e03eba
w2022-03-15 00:49:06 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@38e03eba
w2022-03-15 00:49:06 DEBUG Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@60e93de4
w2022-03-15 00:49:06 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7d158fbd
w2022-03-15 00:49:06 DEBUG Adding type registration serializable -> org.hibernate.type.SerializableType@7d73c06a
w2022-03-15 00:49:06 DEBUG Adding type registration object -> org.hibernate.type.ObjectType@1be311ca
w2022-03-15 00:49:06 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1be311ca
w2022-03-15 00:49:06 DEBUG Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7ecc5409
w2022-03-15 00:49:06 DEBUG Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7da2675b
w2022-03-15 00:49:06 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@19124894
w2022-03-15 00:49:06 DEBUG Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@52e82fed
w2022-03-15 00:49:06 DEBUG Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4e1855a5
w2022-03-15 00:49:06 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@206e6b82
w2022-03-15 00:49:06 DEBUG Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2bb3d1f3
w2022-03-15 00:49:06 DEBUG Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3837142f
w2022-03-15 00:49:06 INFO  HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
w2022-03-15 00:49:06 DEBUG Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@7d19659f] into BootstrapContext; was [null]
w2022-03-15 00:49:06 DEBUG ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@7d19659f) [was null]
w2022-03-15 00:49:06 DEBUG Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@6c89eae7] into BootstrapContext; was [null]
w2022-03-15 00:49:06 DEBUG Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@48483a86] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@3fa79020]
w2022-03-15 00:49:06 DEBUG Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@7d19659f]
w2022-03-15 00:49:06 DEBUG ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@7d19659f]
w2022-03-15 00:49:06 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
w2022-03-15 00:49:06 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
w2022-03-15 00:49:06 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
w2022-03-15 00:49:06 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
w2022-03-15 00:49:06 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
w2022-03-15 00:49:06 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
w2022-03-15 00:49:06 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
w2022-03-15 00:49:06 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
w2022-03-15 00:49:06 DEBUG Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
w2022-03-15 00:49:06 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
w2022-03-15 00:49:06 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
w2022-03-15 00:49:06 DEBUG Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
w2022-03-15 00:49:06 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
w2022-03-15 00:49:06 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
w2022-03-15 00:49:06 DEBUG Database ->
       name : SQLite
    version : 3.36.0
      major : 3
      minor : 36
w2022-03-15 00:49:06 DEBUG Driver ->
       name : SQLite JDBC
    version : 3.36.0.3
      major : 3
      minor : 36
w2022-03-15 00:49:06 DEBUG JDBC version : 2.1
w2022-03-15 00:49:06 INFO  HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
w2022-03-15 00:49:06 DEBUG JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
w2022-03-15 00:49:06 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
w2022-03-15 00:49:06 DEBUG HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [2] less than 4
w2022-03-15 00:49:06 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6b983ed] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@18097bff]
w2022-03-15 00:49:06 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
w2022-03-15 00:49:06 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.Comment
w2022-03-15 00:49:06 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 00:49:06 DEBUG Import with entity name Comment
w2022-03-15 00:49:06 DEBUG Bind entity ru.edu.helpdesk.entity.Comment on table comment
w2022-03-15 00:49:06 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 00:49:06 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Comment] is safe
w2022-03-15 00:49:06 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Comment
w2022-03-15 00:49:06 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 00:49:06 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Comment:id]
w2022-03-15 00:49:06 DEBUG building SimpleValue for id
w2022-03-15 00:49:06 DEBUG Building property id
w2022-03-15 00:49:06 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 00:49:06 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=message, insertable=true, updatable=true, unique=false}
w2022-03-15 00:49:06 DEBUG MetadataSourceProcessor property message with lazy=false
w2022-03-15 00:49:06 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Comment:message]
w2022-03-15 00:49:06 DEBUG building SimpleValue for message
w2022-03-15 00:49:06 DEBUG Building property message
w2022-03-15 00:49:06 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 00:49:06 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=ticket, insertable=true, updatable=true, unique=false}
w2022-03-15 00:49:06 DEBUG Building property ticket
w2022-03-15 00:49:06 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 00:49:06 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=user, insertable=true, updatable=true, unique=false}
w2022-03-15 00:49:06 DEBUG Building property user
w2022-03-15 00:49:06 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 00:49:06 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 00:49:06 DEBUG Import with entity name Ticket
w2022-03-15 00:49:06 DEBUG Bind entity ru.edu.helpdesk.entity.Ticket on table ticket
w2022-03-15 00:49:06 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 00:49:06 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Ticket] is safe
w2022-03-15 00:49:06 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Ticket
w2022-03-15 00:49:06 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 00:49:06 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:id]
w2022-03-15 00:49:06 DEBUG building SimpleValue for id
w2022-03-15 00:49:06 DEBUG Building property id
w2022-03-15 00:49:06 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 00:49:06 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 00:49:06 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=client, insertable=true, updatable=true, unique=false}
w2022-03-15 00:49:06 DEBUG Building property client
w2022-03-15 00:49:06 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=status, insertable=true, updatable=true, unique=false}
w2022-03-15 00:49:06 DEBUG MetadataSourceProcessor property status with lazy=false
w2022-03-15 00:49:06 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:status]
w2022-03-15 00:49:06 DEBUG building SimpleValue for status
w2022-03-15 00:49:06 DEBUG Building property status
w2022-03-15 00:49:06 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 00:49:06 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=support, insertable=true, updatable=true, unique=false}
w2022-03-15 00:49:06 DEBUG Building property support
w2022-03-15 00:49:06 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=title, insertable=true, updatable=true, unique=false}
w2022-03-15 00:49:06 DEBUG MetadataSourceProcessor property title with lazy=false
w2022-03-15 00:49:06 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:title]
w2022-03-15 00:49:06 DEBUG building SimpleValue for title
w2022-03-15 00:49:06 DEBUG Building property title
w2022-03-15 00:49:06 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.User
w2022-03-15 00:49:06 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 00:49:06 DEBUG Import with entity name User
w2022-03-15 00:49:06 DEBUG Bind entity ru.edu.helpdesk.entity.User on table user
w2022-03-15 00:49:06 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 00:49:06 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.User] is safe
w2022-03-15 00:49:06 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.User
w2022-03-15 00:49:06 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 00:49:06 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:id]
w2022-03-15 00:49:06 DEBUG building SimpleValue for id
w2022-03-15 00:49:06 DEBUG Building property id
w2022-03-15 00:49:06 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 00:49:06 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
w2022-03-15 00:49:06 DEBUG MetadataSourceProcessor property firstName with lazy=false
w2022-03-15 00:49:06 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:firstName]
w2022-03-15 00:49:06 DEBUG building SimpleValue for firstName
w2022-03-15 00:49:06 DEBUG Building property firstName
w2022-03-15 00:49:06 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
w2022-03-15 00:49:06 DEBUG MetadataSourceProcessor property lastName with lazy=false
w2022-03-15 00:49:06 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:lastName]
w2022-03-15 00:49:06 DEBUG building SimpleValue for lastName
w2022-03-15 00:49:06 DEBUG Building property lastName
w2022-03-15 00:49:06 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=login, insertable=true, updatable=true, unique=false}
w2022-03-15 00:49:06 DEBUG MetadataSourceProcessor property login with lazy=false
w2022-03-15 00:49:06 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:login]
w2022-03-15 00:49:06 DEBUG building SimpleValue for login
w2022-03-15 00:49:06 DEBUG Building property login
w2022-03-15 00:49:06 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
w2022-03-15 00:49:06 DEBUG MetadataSourceProcessor property password with lazy=false
w2022-03-15 00:49:06 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:password]
w2022-03-15 00:49:06 DEBUG building SimpleValue for password
w2022-03-15 00:49:06 DEBUG Building property password
w2022-03-15 00:49:06 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=role, insertable=true, updatable=true, unique=false}
w2022-03-15 00:49:06 DEBUG MetadataSourceProcessor property role with lazy=false
w2022-03-15 00:49:06 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:role]
w2022-03-15 00:49:06 DEBUG building SimpleValue for role
w2022-03-15 00:49:06 DEBUG Building property role
w2022-03-15 00:49:06 DEBUG Starting fillSimpleValue for id
w2022-03-15 00:49:06 DEBUG Starting fillSimpleValue for message
w2022-03-15 00:49:06 DEBUG Starting fillSimpleValue for id
w2022-03-15 00:49:06 DEBUG Starting fillSimpleValue for status
w2022-03-15 00:49:06 DEBUG Starting fillSimpleValue for title
w2022-03-15 00:49:06 DEBUG Starting fillSimpleValue for id
w2022-03-15 00:49:06 DEBUG Starting fillSimpleValue for firstName
w2022-03-15 00:49:06 DEBUG Starting fillSimpleValue for lastName
w2022-03-15 00:49:06 DEBUG Starting fillSimpleValue for login
w2022-03-15 00:49:06 DEBUG Starting fillSimpleValue for password
w2022-03-15 00:49:06 DEBUG Starting fillSimpleValue for role
w2022-03-15 00:49:06 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [comment]
w2022-03-15 00:49:06 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [ticket]
w2022-03-15 00:49:06 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [user]
w2022-03-15 00:49:06 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 00:49:06 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 00:49:06 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 00:49:06 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 00:49:06 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 00:49:06 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 00:49:06 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 00:49:06 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 00:49:06 DEBUG Building session factory
w2022-03-15 00:49:06 DEBUG SessionFactory name : null
w2022-03-15 00:49:06 DEBUG Automatic flush during beforeCompletion(): enabled
w2022-03-15 00:49:06 DEBUG Automatic session close at end of transaction: disabled
w2022-03-15 00:49:06 DEBUG Statistics: disabled
w2022-03-15 00:49:06 DEBUG Deleted entity synthetic identifier rollback: disabled
w2022-03-15 00:49:06 DEBUG Default entity-mode: pojo
w2022-03-15 00:49:06 DEBUG Check Nullability in Core (should be disabled when Bean Validation is on): enabled
w2022-03-15 00:49:06 DEBUG Allow initialization of lazy state outside session : disabled
w2022-03-15 00:49:06 DEBUG Using BatchFetchStyle : LEGACY
w2022-03-15 00:49:06 DEBUG Default batch fetch size: -1
w2022-03-15 00:49:06 DEBUG Maximum outer join fetch depth: null
w2022-03-15 00:49:06 DEBUG Default null ordering: NONE
w2022-03-15 00:49:06 DEBUG Order SQL updates by primary key: disabled
w2022-03-15 00:49:06 DEBUG Order SQL inserts for batching: disabled
w2022-03-15 00:49:06 DEBUG multi-tenancy strategy : NONE
w2022-03-15 00:49:06 DEBUG JTA Track by Thread: enabled
w2022-03-15 00:49:06 DEBUG Query language substitutions: {}
w2022-03-15 00:49:06 DEBUG Named query checking : enabled
w2022-03-15 00:49:06 DEBUG Second-level cache: disabled
w2022-03-15 00:49:06 DEBUG Second-level query cache: disabled
w2022-03-15 00:49:06 DEBUG Second-level query cache factory: null
w2022-03-15 00:49:06 DEBUG Second-level cache region prefix: null
w2022-03-15 00:49:06 DEBUG Optimize second-level cache for minimal puts: disabled
w2022-03-15 00:49:06 DEBUG Structured second-level cache entries: disabled
w2022-03-15 00:49:06 DEBUG Second-level cache direct-reference entries: disabled
w2022-03-15 00:49:06 DEBUG Automatic eviction of collection cache: disabled
w2022-03-15 00:49:06 DEBUG JDBC batch size: 1
w2022-03-15 00:49:06 DEBUG JDBC batch updates for versioned data: enabled
w2022-03-15 00:49:06 DEBUG Scrollable result sets: disabled
w2022-03-15 00:49:06 DEBUG Wrap result sets: disabled
w2022-03-15 00:49:06 DEBUG JDBC3 getGeneratedKeys(): enabled
w2022-03-15 00:49:06 DEBUG JDBC result set fetch size: null
w2022-03-15 00:49:06 DEBUG Connection release mode: ON_CLOSE
w2022-03-15 00:49:06 DEBUG Generate SQL with comments: disabled
w2022-03-15 00:49:06 DEBUG JPA compliance - query : disabled
w2022-03-15 00:49:06 DEBUG JPA compliance - closed-handling : disabled
w2022-03-15 00:49:06 DEBUG JPA compliance - lists : disabled
w2022-03-15 00:49:06 DEBUG JPA compliance - transactions : disabled
w2022-03-15 00:49:06 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 00:49:06 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 00:49:06 DEBUG Session factory constructed with filter configurations : {}
w2022-03-15 00:49:06 DEBUG Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=true, java.specification.version=1.8, file.encoding.pkg=sun.io, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@2887a5d6, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.SQLiteDialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\charsets.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\cldrdata.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\dnsns.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\jaccess.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\localedata.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\nashorn.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunec.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunmscapi.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\zipfs.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jce.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jfr.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jsse.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\management-agent.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\resources.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\rt.jar;C:\Users\Ольга\Desktop\Java\Project\Project1\helpdeskproject\target\classes;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\2.6.4\spring-boot-starter-data-jpa-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\2.6.4\spring-boot-starter-jdbc-2.6.4.jar;C:\Users\Ольга\.m2\repository\com\zaxxer\HikariCP\4.0.3\HikariCP-4.0.3.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-jdbc\5.3.16\spring-jdbc-5.3.16.jar;C:\Users\Ольга\.m2\repository\jakarta\transaction\jakarta.transaction-api\1.3.3\jakarta.transaction-api-1.3.3.jar;C:\Users\Ольга\.m2\repository\jakarta\persistence\jakarta.persistence-api\2.2.3\jakarta.persistence-api-2.2.3.jar;C:\Users\Ольга\.m2\repository\org\hibernate\hibernate-core\5.6.5.Final\hibernate-core-5.6.5.Final.jar;C:\Users\Ольга\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy\1.11.22\byte-buddy-1.11.22.jar;C:\Users\Ольга\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ольга\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Ольга\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.6\jaxb-runtime-2.3.6.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\txw2\2.3.6\txw2-2.3.6.jar;C:\Users\Ольга\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.12\istack-commons-runtime-3.0.12.jar;C:\Users\Ольга\.m2\repository\com\sun\activation\jakarta.activation\1.2.2\jakarta.activation-1.2.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\data\spring-data-jpa\2.6.2\spring-data-jpa-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\data\spring-data-commons\2.6.2\spring-data-commons-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-orm\5.3.16\spring-orm-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-context\5.3.16\spring-context-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-tx\5.3.16\spring-tx-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-beans\5.3.16\spring-beans-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-aspects\5.3.16\spring-aspects-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-security\2.6.4\spring-boot-starter-security-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter\2.6.4\spring-boot-starter-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-logging\2.6.4\spring-boot-starter-logging-2.6.4.jar;C:\Users\Ольга\.m2\repository\ch\qos\logback\logback-classic\1.2.10\logback-classic-1.2.10.jar;C:\Users\Ольга\.m2\repository\ch\qos\logback\logback-core\1.2.10\logback-core-1.2.10.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.17.1\log4j-to-slf4j-2.17.1.jar;C:\Users\Ольга\.m2\repository\org\slf4j\jul-to-slf4j\1.7.36\jul-to-slf4j-1.7.36.jar;C:\Users\Ольга\.m2\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;C:\Users\Ольга\.m2\repository\org\yaml\snakeyaml\1.29\snakeyaml-1.29.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-aop\5.3.16\spring-aop-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-config\5.6.2\spring-security-config-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-web\5.6.2\spring-security-web-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-expression\5.3.16\spring-expression-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-web\2.6.4\spring-boot-starter-web-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-json\2.6.4\spring-boot-starter-json-2.6.4.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.13.1\jackson-datatype-jdk8-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.13.1\jackson-datatype-jsr310-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.13.1\jackson-module-parameter-names-2.13.1.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\2.6.4\spring-boot-starter-tomcat-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.58\tomcat-embed-core-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\9.0.58\tomcat-embed-el-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.58\tomcat-embed-websocket-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-web\5.3.16\spring-web-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-webmvc\5.3.16\spring-webmvc-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-devtools\2.6.4\spring-boot-devtools-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot\2.6.4\spring-boot-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\2.6.4\spring-boot-autoconfigure-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\xerial\sqlite-jdbc\3.36.0.3\sqlite-jdbc-3.36.0.3.jar;C:\Users\Ольга\.m2\repository\com\zsoltfabok\sqlite-dialect\1.0\sqlite-dialect-1.0.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-aop\2.6.2\spring-boot-starter-aop-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\aspectj\aspectjweaver\1.9.7\aspectjweaver-1.9.7.jar;C:\Users\Ольга\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.3\jakarta.xml.bind-api-2.3.3.jar;C:\Users\Ольга\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.2\jakarta.activation-api-1.2.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-core\5.3.16\spring-core-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-jcl\5.3.16\spring-jcl-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-core\5.6.2\spring-security-core-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-crypto\5.6.2\spring-security-crypto-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\projectlombok\lombok\1.18.22\lombok-1.18.22.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\2.6.4\spring-boot-starter-thymeleaf-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\thymeleaf-spring5\3.0.15.RELEASE\thymeleaf-spring5-3.0.15.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\thymeleaf\3.0.15.RELEASE\thymeleaf-3.0.15.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\attoparser\attoparser\2.0.5.RELEASE\attoparser-2.0.5.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-java8time\3.0.4.RELEASE\thymeleaf-extras-java8time-3.0.4.RELEASE.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.1\jackson-databind-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.1\jackson-annotations-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.1\jackson-core-2.13.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-api\2.4.1\log4j-api-2.4.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-core\2.4.1\log4j-core-2.4.1.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.2\lib\idea_rt.jar, java.vm.vendor=Temurin, sun.arch.data.model=64, user.variant=, java.vendor.url=https://adoptium.net/, catalina.useNaming=false, user.timezone=Europe/Moscow, jakarta.persistence.sharedCache.mode=UNSPECIFIED, os.name=Windows 10, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), user.country=RU, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\bin, sun.java.command=ru.edu.helpdesk.HelpdeskApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@d1eaabc, com.sun.management.jmxremote=, javax.persistence.sharedCache.mode=UNSPECIFIED, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, user.home=C:\Users\Ольга, user.language=ru, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre, file.separator=\, spring.output.ansi.enabled=always, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, sun.boot.class.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\resources.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\rt.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\sunrsasign.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jsse.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jce.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\charsets.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jfr.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\classes, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_312-b07, user.name=Эльдорадо, spring.jmx.enabled=true, path.separator=;, os.version=10.0, java.endorsed.dirs=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\endorsed, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=default, spring.beaninfo.ignore=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=C:\Users\134E~1\AppData\Local\Temp\, catalina.home=C:\Users\Ольга\AppData\Local\Temp\tomcat.8080.3437614624812663430, java.version=1.8.0_312, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\Ольга\Desktop\Java\Project\Project1\helpdeskproject, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=11088, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\Ольга\AppData\Local\Temp\tomcat.8080.3437614624812663430, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@123c8140, java.library.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\windows\System32\OpenSSH\;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\Program Files\apache-maven-3.8.4\bin;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Ольга\AppData\Local\Microsoft\WindowsApps;C:\Users\Ольга\AppData\Local\Programs\Microsoft VS Code\bin;C:\SQLite;C:\Users\Ольга\AppData\Roaming\npm;C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.2\bin;;., java.vendor=Temurin, java.vm.info=mixed mode, java.vm.version=25.312-b07, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, java.ext.dirs=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext;C:\windows\Sun\Java\lib\ext, hibernate.connection.datasource=HikariDataSource (HikariPool-1), hibernate.hbm2ddl.import_files=data/import.sql, java.class.version=52.0}
w2022-03-15 00:49:06 DEBUG Skipping JACC integration as it was not enabled
w2022-03-15 00:49:06 DEBUG Using ORDINAL-based conversion for Enum ru.edu.helpdesk.entity.UserRole
w2022-03-15 00:49:06 DEBUG Using ORDINAL-based conversion for Enum ru.edu.helpdesk.entity.TicketStatus
w2022-03-15 00:49:06 DEBUG Instantiated session factory
w2022-03-15 00:49:06 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6b983ed] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@598318b3]
w2022-03-15 00:49:06 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.User] is safe
w2022-03-15 00:49:06 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.User
w2022-03-15 00:49:06 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:49:06 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:49:06 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:49:06 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:49:06 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Ticket] is safe
w2022-03-15 00:49:06 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Ticket
w2022-03-15 00:49:06 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:49:06 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:49:06 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:49:06 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:49:06 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:49:06 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:49:06 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:49:06 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:49:06 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Comment] is safe
w2022-03-15 00:49:06 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Comment
w2022-03-15 00:49:06 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:49:06 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:49:06 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:49:06 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:49:06 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.User
w2022-03-15 00:49:06 DEBUG  Version select: select id from user where id =?
w2022-03-15 00:49:06 DEBUG  Snapshot select: select user_.id, user_.first_name as first_na2_2_, user_.last_name as last_nam3_2_, user_.login as login4_2_, user_.password as password5_2_, user_.role as role6_2_ from user user_ where user_.id=?
w2022-03-15 00:49:06 DEBUG  Insert 0: insert into user (first_name, last_name, login, password, role, id) values (?, ?, ?, ?, ?, ?)
w2022-03-15 00:49:06 DEBUG  Update 0: update user set first_name=?, last_name=?, login=?, password=?, role=? where id=?
w2022-03-15 00:49:06 DEBUG  Delete 0: delete from user where id=?
w2022-03-15 00:49:06 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67a59e60]
w2022-03-15 00:49:06 DEBUG Visiting attribute path : firstName
w2022-03-15 00:49:06 DEBUG Visiting attribute path : lastName
w2022-03-15 00:49:06 DEBUG Visiting attribute path : login
w2022-03-15 00:49:06 DEBUG Visiting attribute path : password
w2022-03-15 00:49:06 DEBUG Visiting attribute path : role
w2022-03-15 00:49:06 DEBUG Building LoadPlan...
w2022-03-15 00:49:06 DEBUG processing queryspace <gen:0>
w2022-03-15 00:49:06 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.User)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

w2022-03-15 00:49:06 DEBUG Static select for entity ru.edu.helpdesk.entity.User [NONE]: select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 00:49:06 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.Ticket
w2022-03-15 00:49:06 DEBUG  Version select: select id from ticket where id =?
w2022-03-15 00:49:06 DEBUG  Snapshot select: select ticket_.id, ticket_.client_id as client_i4_1_, ticket_.status as status2_1_, ticket_.support_id as support_5_1_, ticket_.title as title3_1_ from ticket ticket_ where ticket_.id=?
w2022-03-15 00:49:06 DEBUG  Insert 0: insert into ticket (client_id, status, support_id, title, id) values (?, ?, ?, ?, ?)
w2022-03-15 00:49:06 DEBUG  Update 0: update ticket set client_id=?, status=?, support_id=?, title=? where id=?
w2022-03-15 00:49:06 DEBUG  Delete 0: delete from ticket where id=?
w2022-03-15 00:49:06 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16565f51]
w2022-03-15 00:49:06 DEBUG Visiting attribute path : client
w2022-03-15 00:49:06 DEBUG Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b4f3a14]
w2022-03-15 00:49:06 DEBUG Visiting attribute path : client.firstName
w2022-03-15 00:49:06 DEBUG Visiting attribute path : client.lastName
w2022-03-15 00:49:06 DEBUG Visiting attribute path : client.login
w2022-03-15 00:49:06 DEBUG Visiting attribute path : client.password
w2022-03-15 00:49:06 DEBUG Visiting attribute path : client.role
w2022-03-15 00:49:06 DEBUG Visiting attribute path : status
w2022-03-15 00:49:06 DEBUG Visiting attribute path : support
w2022-03-15 00:49:06 DEBUG Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@596bf0d4]
w2022-03-15 00:49:06 DEBUG Visiting attribute path : support.firstName
w2022-03-15 00:49:06 DEBUG Visiting attribute path : support.lastName
w2022-03-15 00:49:06 DEBUG Visiting attribute path : support.login
w2022-03-15 00:49:06 DEBUG Visiting attribute path : support.password
w2022-03-15 00:49:06 DEBUG Visiting attribute path : support.role
w2022-03-15 00:49:06 DEBUG Visiting attribute path : title
w2022-03-15 00:49:06 DEBUG Building LoadPlan...
w2022-03-15 00:49:06 DEBUG processing queryspace <gen:0>
w2022-03-15 00:49:06 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.Ticket)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.Ticket, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.Ticket)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:1>, path=ru.edu.helpdesk.entity.Ticket.client)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:2>, path=ru.edu.helpdesk.entity.Ticket.support)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.Ticket)
          - SQL table alias mapping - ticket0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(client)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
          - JOIN (JoinDefinedByMetadata(support)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user2_
                - alias suffix - 2_
                - suffixed key columns - {id1_2_2_}

w2022-03-15 00:49:06 DEBUG Static select for entity ru.edu.helpdesk.entity.Ticket [NONE]: select ticket0_.id as id1_1_0_, ticket0_.client_id as client_i4_1_0_, ticket0_.status as status2_1_0_, ticket0_.support_id as support_5_1_0_, ticket0_.title as title3_1_0_, user1_.id as id1_2_1_, user1_.first_name as first_na2_2_1_, user1_.last_name as last_nam3_2_1_, user1_.login as login4_2_1_, user1_.password as password5_2_1_, user1_.role as role6_2_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id left outer join user user2_ on ticket0_.support_id=user2_.id where ticket0_.id=?
w2022-03-15 00:49:06 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.Comment
w2022-03-15 00:49:06 DEBUG  Version select: select id from comment where id =?
w2022-03-15 00:49:06 DEBUG  Snapshot select: select comment_.id, comment_.message as message2_0_, comment_.ticket_id as ticket_i3_0_, comment_.user_id as user_id4_0_ from comment comment_ where comment_.id=?
w2022-03-15 00:49:06 DEBUG  Insert 0: insert into comment (message, ticket_id, user_id, id) values (?, ?, ?, ?)
w2022-03-15 00:49:06 DEBUG  Update 0: update comment set message=?, ticket_id=?, user_id=? where id=?
w2022-03-15 00:49:06 DEBUG  Delete 0: delete from comment where id=?
w2022-03-15 00:49:06 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ff0a169]
w2022-03-15 00:49:06 DEBUG Visiting attribute path : message
w2022-03-15 00:49:06 DEBUG Visiting attribute path : ticket
w2022-03-15 00:49:06 DEBUG Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d53ae11]
w2022-03-15 00:49:06 DEBUG Visiting attribute path : ticket.client
w2022-03-15 00:49:06 DEBUG Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43befc38]
w2022-03-15 00:49:06 DEBUG Visiting attribute path : ticket.client.firstName
w2022-03-15 00:49:06 DEBUG Visiting attribute path : ticket.client.lastName
w2022-03-15 00:49:06 DEBUG Visiting attribute path : ticket.client.login
w2022-03-15 00:49:06 DEBUG Visiting attribute path : ticket.client.password
w2022-03-15 00:49:06 DEBUG Visiting attribute path : ticket.client.role
w2022-03-15 00:49:06 DEBUG Visiting attribute path : ticket.status
w2022-03-15 00:49:06 DEBUG Visiting attribute path : ticket.support
w2022-03-15 00:49:06 DEBUG Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c5b53ec]
w2022-03-15 00:49:06 DEBUG Visiting attribute path : ticket.support.firstName
w2022-03-15 00:49:06 DEBUG Visiting attribute path : ticket.support.lastName
w2022-03-15 00:49:06 DEBUG Visiting attribute path : ticket.support.login
w2022-03-15 00:49:06 DEBUG Visiting attribute path : ticket.support.password
w2022-03-15 00:49:06 DEBUG Visiting attribute path : ticket.support.role
w2022-03-15 00:49:06 DEBUG Visiting attribute path : ticket.title
w2022-03-15 00:49:06 DEBUG Visiting attribute path : user
w2022-03-15 00:49:06 DEBUG Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e256a14]
w2022-03-15 00:49:06 DEBUG Visiting attribute path : user.firstName
w2022-03-15 00:49:06 DEBUG Visiting attribute path : user.lastName
w2022-03-15 00:49:06 DEBUG Visiting attribute path : user.login
w2022-03-15 00:49:06 DEBUG Visiting attribute path : user.password
w2022-03-15 00:49:06 DEBUG Visiting attribute path : user.role
w2022-03-15 00:49:06 DEBUG Building LoadPlan...
w2022-03-15 00:49:06 DEBUG processing queryspace <gen:0>
w2022-03-15 00:49:06 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.Comment)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.Comment, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.Comment)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.Ticket, querySpaceUid=<gen:1>, path=ru.edu.helpdesk.entity.Comment.ticket)
             - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:2>, path=ru.edu.helpdesk.entity.Comment.ticket.client)
             - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:3>, path=ru.edu.helpdesk.entity.Comment.ticket.support)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:4>, path=ru.edu.helpdesk.entity.Comment.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(ticket)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ru.edu.helpdesk.entity.Ticket)
                - SQL table alias mapping - ticket1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(client)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=ru.edu.helpdesk.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}
                - JOIN (JoinDefinedByMetadata(support)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=ru.edu.helpdesk.entity.User)
                      - SQL table alias mapping - user3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_2_3_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user4_
                - alias suffix - 4_
                - suffixed key columns - {id1_2_4_}

w2022-03-15 00:49:06 DEBUG Static select for entity ru.edu.helpdesk.entity.Comment [NONE]: select comment0_.id as id1_0_0_, comment0_.message as message2_0_0_, comment0_.ticket_id as ticket_i3_0_0_, comment0_.user_id as user_id4_0_0_, ticket1_.id as id1_1_1_, ticket1_.client_id as client_i4_1_1_, ticket1_.status as status2_1_1_, ticket1_.support_id as support_5_1_1_, ticket1_.title as title3_1_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_, user3_.id as id1_2_3_, user3_.first_name as first_na2_2_3_, user3_.last_name as last_nam3_2_3_, user3_.login as login4_2_3_, user3_.password as password5_2_3_, user3_.role as role6_2_3_, user4_.id as id1_2_4_, user4_.first_name as first_na2_2_4_, user4_.last_name as last_nam3_2_4_, user4_.login as login4_2_4_, user4_.password as password5_2_4_, user4_.role as role6_2_4_ from comment comment0_ left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id left outer join user user2_ on ticket1_.client_id=user2_.id left outer join user user3_ on ticket1_.support_id=user3_.id left outer join user user4_ on comment0_.user_id=user4_.id where comment0_.id=?
w2022-03-15 00:49:06 DEBUG drop table if exists comment
w2022-03-15 00:49:06 DEBUG drop table if exists hibernate_sequence
w2022-03-15 00:49:06 DEBUG drop table if exists ticket
w2022-03-15 00:49:06 DEBUG drop table if exists user
w2022-03-15 00:49:06 DEBUG create table comment (id bigint not null, message varchar(255) not null, ticket_id bigint, user_id bigint, primary key (id))
w2022-03-15 00:49:06 DEBUG create table hibernate_sequence (next_val bigint)
w2022-03-15 00:49:06 DEBUG insert into hibernate_sequence values ( 1 )
w2022-03-15 00:49:06 DEBUG create table ticket (id bigint not null, status integer, title varchar(255) not null, client_id bigint, support_id bigint, primary key (id))
w2022-03-15 00:49:06 DEBUG create table user (id bigint not null, first_name varchar(255), last_name varchar(255), login varchar(255) not null, password varchar(255) not null, role integer, primary key (id))
w2022-03-15 00:49:06 INFO  HHH000476: Executing import script 'file:/C:/Users/%d0%9e%d0%bb%d1%8c%d0%b3%d0%b0/Desktop/Java/Project/Project1/helpdeskproject/target/classes/data/import.sql'
w2022-03-15 00:49:06 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (1, 'admin', 'admin', 'admin', 'admin', 0)
w2022-03-15 00:49:06 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (2, 'support', 'support', 'support', 'support', 1)
w2022-03-15 00:49:06 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (3, 'user1', 'user1', 'user1', 'user1', 2)
w2022-03-15 00:49:06 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (4, 'user2', 'user2', 'user2', 'user2', 2)
w2022-03-15 00:49:06 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (1, 1, 'Hello user1', 3, 2)
w2022-03-15 00:49:06 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (2, 0, 'Title2', 3, NULL)
w2022-03-15 00:49:06 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (3, 0, 'Message user2', 4, NULL)
w2022-03-15 00:49:06 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (1, "Hello ticket1", 1, 3)
w2022-03-15 00:49:06 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (2, "Hello ticket2", 2, 3)
w2022-03-15 00:49:06 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (3, "Hello ticket11", 1, 2)
w2022-03-15 00:49:06 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (4, "Hello ticket111", 1, 2)
w2022-03-15 00:49:06 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (5, "Hello ticket22", 2, 2)
w2022-03-15 00:49:06 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (6, "Hello ticket3", 3, 4)
w2022-03-15 00:49:06 DEBUG UPDATE hibernate_sequence SET next_val = 8 WHERE next_val = 1
w2022-03-15 00:49:06 INFO  HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
w2022-03-15 00:49:06 DEBUG Checking 0 named HQL queries
w2022-03-15 00:49:06 DEBUG Checking 0 named SQL queries
w2022-03-15 00:49:06 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 00:49:06 DEBUG Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@13ef2ceb
w2022-03-15 00:49:06 DEBUG Registering SessionFactory: 1906883c-545a-4f7d-8cdb-bb710560423c (<unnamed>)
w2022-03-15 00:49:06 DEBUG Not binding SessionFactory to JNDI, no JNDI name configured
w2022-03-15 00:49:06 DEBUG Statistics initialized [enabled=false]
w2022-03-15 00:49:06 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 00:49:07 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 00:49:07 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 00:49:15 DEBUG Rendered criteria query -> select generatedAlias0 from Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 00:49:15 DEBUG QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@441d3497
w2022-03-15 00:49:15 DEBUG parse() - HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 00:49:15 DEBUG throwQueryException() : no errors
w2022-03-15 00:49:15 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[IDENT] Node: 'ru'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'edu'
    |  |  |  |  |  |  \-[IDENT] Node: 'helpdesk'
    |  |  |  |  |  \-[IDENT] Node: 'entity'
    |  |  |  |  \-[IDENT] Node: 'Ticket'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'client'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias1'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

w2022-03-15 00:49:15 DEBUG select << begin [level=1, statement=select]
w2022-03-15 00:49:15 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.Ticket (generatedAlias0) -> ticket0_
w2022-03-15 00:49:15 DEBUG Resolved : generatedAlias0 -> ticket0_.id
w2022-03-15 00:49:15 DEBUG getDataType() : client -> org.hibernate.type.ManyToOneType(ru.edu.helpdesk.entity.User)
w2022-03-15 00:49:15 DEBUG dereferenceEntityJoin() : generating join for client in ru.edu.helpdesk.entity.Ticket (generatedAlias1) parent = [ {null} ]
w2022-03-15 00:49:15 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.User (generatedAlias1) -> user1_
w2022-03-15 00:49:15 DEBUG addJoinByPathMap() : generatedAlias0.client -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}
w2022-03-15 00:49:15 DEBUG Resolved : generatedAlias0.client -> ticket0_.client_id
w2022-03-15 00:49:15 DEBUG createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'user user1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Ticket.client,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}

w2022-03-15 00:49:15 DEBUG Resolved : generatedAlias0 -> ticket0_.id
w2022-03-15 00:49:15 DEBUG Resolved : generatedAlias1 -> user1_.id
w2022-03-15 00:49:15 DEBUG getDataType() : id -> org.hibernate.type.LongType@6282307d
w2022-03-15 00:49:15 DEBUG Resolved : generatedAlias1.id -> user1_.id
w2022-03-15 00:49:15 DEBUG select : finishing up [level=1, statement=select]
w2022-03-15 00:49:15 DEBUG processQuery() :  ( SELECT ( {select clause} ticket0_.id ) ( FromClause{level=1} ( ticket ticket0_ user user1_ ) ) ( where ( = ( user1_.id user1_.id id ) ? ) ) )
w2022-03-15 00:49:15 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Ticket): [ticket]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.Ticket)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.User)
          | path: generatedAlias1.id
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.User)
          |  | originalText: generatedAlias1
          |  \-IdentNode
          |    persister: null
          |    originalText: id
          \-ParameterNode

w2022-03-15 00:49:15 DEBUG Using FROM fragment [ticket ticket0_]
w2022-03-15 00:49:15 DEBUG Using FROM fragment [left outer join user user1_ on ticket0_.client_id=user1_.id]
w2022-03-15 00:49:15 DEBUG select >> end [level=1, statement=select]
w2022-03-15 00:49:15 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (ticket,user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'ticket0_.id as id1_1_' {alias=generatedAlias0, className=ru.edu.helpdesk.entity.Ticket, tableAlias=ticket0_}
    |  \-[SQL_TOKEN] SqlFragment: 'ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[ticket0_, user1_], fromElementsByPath=[generatedAlias0.client], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'ticket ticket0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=ticket,tableAlias=ticket0_,origin=null,columns={,className=ru.edu.helpdesk.entity.Ticket}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join user user1_ on ticket0_.client_id=user1_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Ticket.client,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user1_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias1.id,tableAlias=user1_,className=ru.edu.helpdesk.entity.User,classAlias=generatedAlias1}
          |  +-[ALIAS_REF] IdentNode: 'user1_.id' {alias=generatedAlias1, className=ru.edu.helpdesk.entity.User, tableAlias=user1_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LongType@6282307d}

w2022-03-15 00:49:15 DEBUG throwQueryException() : no errors
w2022-03-15 00:49:15 DEBUG HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 00:49:15 DEBUG SQL: select ticket0_.id as id1_1_, ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id where user1_.id=?
w2022-03-15 00:49:15 DEBUG throwQueryException() : no errors
w2022-03-15 00:49:16 DEBUG select ticket0_.id as id1_1_, ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id where user1_.id=?
w2022-03-15 00:49:16 DEBUG Result set row: 0
w2022-03-15 00:49:16 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 00:49:16 DEBUG Result set row: 1
w2022-03-15 00:49:16 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 00:49:16 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 00:49:16 DEBUG Processing attribute `client` : value = 3
w2022-03-15 00:49:16 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 00:49:16 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 00:49:16 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 00:49:16 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#3]
w2022-03-15 00:49:16 DEBUG Processing attribute `firstName` : value = user1
w2022-03-15 00:49:16 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 00:49:16 DEBUG Processing attribute `lastName` : value = user1
w2022-03-15 00:49:16 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 00:49:16 DEBUG Processing attribute `login` : value = user1
w2022-03-15 00:49:16 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 00:49:16 DEBUG Processing attribute `password` : value = user1
w2022-03-15 00:49:16 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 00:49:16 DEBUG Processing attribute `role` : value = USER
w2022-03-15 00:49:16 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 00:49:16 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#3]
w2022-03-15 00:49:16 DEBUG Done entity load : ru.edu.helpdesk.entity.User#3
w2022-03-15 00:49:16 DEBUG Processing attribute `status` : value = WORKING
w2022-03-15 00:49:16 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 00:49:16 DEBUG Processing attribute `support` : value = 2
w2022-03-15 00:49:16 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 00:49:16 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 00:49:16 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 00:49:16 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#2]
w2022-03-15 00:49:16 DEBUG Processing attribute `firstName` : value = support
w2022-03-15 00:49:16 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 00:49:16 DEBUG Processing attribute `lastName` : value = support
w2022-03-15 00:49:16 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 00:49:16 DEBUG Processing attribute `login` : value = support
w2022-03-15 00:49:16 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 00:49:16 DEBUG Processing attribute `password` : value = support
w2022-03-15 00:49:16 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 00:49:16 DEBUG Processing attribute `role` : value = SUPPORT
w2022-03-15 00:49:16 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 00:49:16 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#2]
w2022-03-15 00:49:16 DEBUG Done entity load : ru.edu.helpdesk.entity.User#2
w2022-03-15 00:49:16 DEBUG Processing attribute `title` : value = Hello user1
w2022-03-15 00:49:16 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 00:49:16 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 00:49:16 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 00:49:16 DEBUG Processing attribute `client` : value = 3
w2022-03-15 00:49:16 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 00:49:16 DEBUG Processing attribute `status` : value = OPEN
w2022-03-15 00:49:16 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 00:49:16 DEBUG Processing attribute `support` : value = null
w2022-03-15 00:49:16 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 00:49:16 DEBUG Processing attribute `title` : value = Title2
w2022-03-15 00:49:16 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 00:49:16 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 00:49:18 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 00:49:18 DEBUG begin
w2022-03-15 00:49:18 DEBUG committing
w2022-03-15 00:49:25 DEBUG Rendered criteria query -> select generatedAlias0 from Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 00:49:25 DEBUG select ticket0_.id as id1_1_, ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id where user1_.id=?
w2022-03-15 00:49:25 DEBUG Result set row: 0
w2022-03-15 00:49:25 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 00:49:25 DEBUG Result set row: 1
w2022-03-15 00:49:25 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 00:49:25 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 00:49:25 DEBUG Processing attribute `client` : value = 3
w2022-03-15 00:49:25 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 00:49:25 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 00:49:25 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 00:49:25 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#3]
w2022-03-15 00:49:25 DEBUG Processing attribute `firstName` : value = user1
w2022-03-15 00:49:25 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 00:49:25 DEBUG Processing attribute `lastName` : value = user1
w2022-03-15 00:49:25 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 00:49:25 DEBUG Processing attribute `login` : value = user1
w2022-03-15 00:49:25 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 00:49:25 DEBUG Processing attribute `password` : value = user1
w2022-03-15 00:49:25 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 00:49:25 DEBUG Processing attribute `role` : value = USER
w2022-03-15 00:49:25 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 00:49:25 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#3]
w2022-03-15 00:49:25 DEBUG Done entity load : ru.edu.helpdesk.entity.User#3
w2022-03-15 00:49:25 DEBUG Processing attribute `status` : value = WORKING
w2022-03-15 00:49:25 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 00:49:25 DEBUG Processing attribute `support` : value = 2
w2022-03-15 00:49:25 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 00:49:25 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 00:49:25 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 00:49:25 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#2]
w2022-03-15 00:49:25 DEBUG Processing attribute `firstName` : value = support
w2022-03-15 00:49:25 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 00:49:25 DEBUG Processing attribute `lastName` : value = support
w2022-03-15 00:49:25 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 00:49:25 DEBUG Processing attribute `login` : value = support
w2022-03-15 00:49:25 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 00:49:25 DEBUG Processing attribute `password` : value = support
w2022-03-15 00:49:25 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 00:49:25 DEBUG Processing attribute `role` : value = SUPPORT
w2022-03-15 00:49:25 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 00:49:25 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#2]
w2022-03-15 00:49:25 DEBUG Done entity load : ru.edu.helpdesk.entity.User#2
w2022-03-15 00:49:25 DEBUG Processing attribute `title` : value = Hello user1
w2022-03-15 00:49:25 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 00:49:25 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 00:49:25 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 00:49:25 DEBUG Processing attribute `client` : value = 3
w2022-03-15 00:49:25 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 00:49:25 DEBUG Processing attribute `status` : value = OPEN
w2022-03-15 00:49:25 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 00:49:25 DEBUG Processing attribute `support` : value = null
w2022-03-15 00:49:25 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 00:49:25 DEBUG Processing attribute `title` : value = Title2
w2022-03-15 00:49:25 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 00:49:25 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 00:49:27 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 00:49:27 DEBUG begin
w2022-03-15 00:49:27 DEBUG committing
w2022-03-15 00:51:01 DEBUG Logging Provider: org.jboss.logging.Log4j2LoggerProvider
w2022-03-15 00:51:01 DEBUG PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@5fab7e2c
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/%d0%9e%d0%bb%d1%8c%d0%b3%d0%b0/Desktop/Java/Project/Project1/helpdeskproject/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		ru.edu.helpdesk.entity.Comment
		ru.edu.helpdesk.entity.Ticket
		ru.edu.helpdesk.entity.User]
	Mapping files names []
	Properties []
w2022-03-15 00:51:01 DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
w2022-03-15 00:51:01 DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
w2022-03-15 00:51:01 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
w2022-03-15 00:51:01 INFO  HHH000412: Hibernate ORM core version 5.6.5.Final
w2022-03-15 00:51:01 DEBUG HHH000206: hibernate.properties not found
w2022-03-15 00:51:01 DEBUG Overriding existing service binding [org.hibernate.secure.spi.JaccService]
w2022-03-15 00:51:01 DEBUG Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
w2022-03-15 00:51:01 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
w2022-03-15 00:51:01 INFO  HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
w2022-03-15 00:51:01 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@4446b77
w2022-03-15 00:51:01 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@4446b77
w2022-03-15 00:51:01 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4446b77
w2022-03-15 00:51:01 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5c51a138
w2022-03-15 00:51:01 DEBUG Adding type registration true_false -> org.hibernate.type.TrueFalseType@3b618455
w2022-03-15 00:51:01 DEBUG Adding type registration yes_no -> org.hibernate.type.YesNoType@49675bd7
w2022-03-15 00:51:01 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@496a3512
w2022-03-15 00:51:01 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@496a3512
w2022-03-15 00:51:01 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@496a3512
w2022-03-15 00:51:01 DEBUG Adding type registration character -> org.hibernate.type.CharacterType@3218a0b2
w2022-03-15 00:51:01 DEBUG Adding type registration char -> org.hibernate.type.CharacterType@3218a0b2
w2022-03-15 00:51:01 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3218a0b2
w2022-03-15 00:51:01 DEBUG Adding type registration short -> org.hibernate.type.ShortType@46b48aa
w2022-03-15 00:51:01 DEBUG Adding type registration short -> org.hibernate.type.ShortType@46b48aa
w2022-03-15 00:51:01 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.ShortType@46b48aa
w2022-03-15 00:51:01 DEBUG Adding type registration integer -> org.hibernate.type.IntegerType@966481d
w2022-03-15 00:51:01 DEBUG Adding type registration int -> org.hibernate.type.IntegerType@966481d
w2022-03-15 00:51:01 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@966481d
w2022-03-15 00:51:01 DEBUG Adding type registration long -> org.hibernate.type.LongType@26115bbb
w2022-03-15 00:51:01 DEBUG Adding type registration long -> org.hibernate.type.LongType@26115bbb
w2022-03-15 00:51:01 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.LongType@26115bbb
w2022-03-15 00:51:01 DEBUG Adding type registration float -> org.hibernate.type.FloatType@808eac7
w2022-03-15 00:51:01 DEBUG Adding type registration float -> org.hibernate.type.FloatType@808eac7
w2022-03-15 00:51:01 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.FloatType@808eac7
w2022-03-15 00:51:01 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@c6d72c6
w2022-03-15 00:51:01 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@c6d72c6
w2022-03-15 00:51:01 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@c6d72c6
w2022-03-15 00:51:01 DEBUG Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@153873c0
w2022-03-15 00:51:01 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@153873c0
w2022-03-15 00:51:01 DEBUG Adding type registration big_integer -> org.hibernate.type.BigIntegerType@543c2f1b
w2022-03-15 00:51:01 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@543c2f1b
w2022-03-15 00:51:01 DEBUG Adding type registration string -> org.hibernate.type.StringType@30757249
w2022-03-15 00:51:01 DEBUG Adding type registration java.lang.String -> org.hibernate.type.StringType@30757249
w2022-03-15 00:51:01 DEBUG Adding type registration nstring -> org.hibernate.type.StringNVarcharType@61437ae6
w2022-03-15 00:51:01 DEBUG Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3bd96170
w2022-03-15 00:51:01 DEBUG Adding type registration url -> org.hibernate.type.UrlType@379bfc92
w2022-03-15 00:51:01 DEBUG Adding type registration java.net.URL -> org.hibernate.type.UrlType@379bfc92
w2022-03-15 00:51:01 DEBUG Adding type registration Duration -> org.hibernate.type.DurationType@b476c30
w2022-03-15 00:51:01 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.DurationType@b476c30
w2022-03-15 00:51:01 DEBUG Adding type registration Instant -> org.hibernate.type.InstantType@63e4eca8
w2022-03-15 00:51:01 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.InstantType@63e4eca8
w2022-03-15 00:51:01 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7e57d79a
w2022-03-15 00:51:01 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7e57d79a
w2022-03-15 00:51:01 DEBUG Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7d976f2
w2022-03-15 00:51:01 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7d976f2
w2022-03-15 00:51:01 DEBUG Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2361f5c8
w2022-03-15 00:51:01 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2361f5c8
w2022-03-15 00:51:01 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1ccf5d92
w2022-03-15 00:51:01 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1ccf5d92
w2022-03-15 00:51:01 DEBUG Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@15f2bfa0
w2022-03-15 00:51:01 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@15f2bfa0
w2022-03-15 00:51:01 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@56b4fce7
w2022-03-15 00:51:01 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@56b4fce7
w2022-03-15 00:51:01 DEBUG Adding type registration date -> org.hibernate.type.DateType@6c6a9f5
w2022-03-15 00:51:01 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.DateType@6c6a9f5
w2022-03-15 00:51:01 DEBUG Adding type registration time -> org.hibernate.type.TimeType@44199c97
w2022-03-15 00:51:01 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.TimeType@44199c97
w2022-03-15 00:51:01 DEBUG Adding type registration timestamp -> org.hibernate.type.TimestampType@6b73c36d
w2022-03-15 00:51:01 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6b73c36d
w2022-03-15 00:51:01 DEBUG Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6b73c36d
w2022-03-15 00:51:01 DEBUG Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1a892315
w2022-03-15 00:51:01 DEBUG Adding type registration calendar -> org.hibernate.type.CalendarType@4853544e
w2022-03-15 00:51:01 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4853544e
w2022-03-15 00:51:01 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4853544e
w2022-03-15 00:51:01 DEBUG Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@12928112
w2022-03-15 00:51:01 DEBUG Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@78229205
w2022-03-15 00:51:01 DEBUG Adding type registration locale -> org.hibernate.type.LocaleType@4399e428
w2022-03-15 00:51:01 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4399e428
w2022-03-15 00:51:01 DEBUG Adding type registration currency -> org.hibernate.type.CurrencyType@178c1798
w2022-03-15 00:51:01 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@178c1798
w2022-03-15 00:51:01 DEBUG Adding type registration timezone -> org.hibernate.type.TimeZoneType@6692b446
w2022-03-15 00:51:01 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6692b446
w2022-03-15 00:51:01 DEBUG Adding type registration class -> org.hibernate.type.ClassType@3186bdef
w2022-03-15 00:51:01 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3186bdef
w2022-03-15 00:51:01 DEBUG Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@168f5919
w2022-03-15 00:51:01 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@168f5919
w2022-03-15 00:51:01 DEBUG Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@414ec085
w2022-03-15 00:51:01 DEBUG Adding type registration binary -> org.hibernate.type.BinaryType@75475b74
w2022-03-15 00:51:01 DEBUG Adding type registration byte[] -> org.hibernate.type.BinaryType@75475b74
w2022-03-15 00:51:01 DEBUG Adding type registration [B -> org.hibernate.type.BinaryType@75475b74
w2022-03-15 00:51:01 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3e327d2a
w2022-03-15 00:51:01 DEBUG Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3e327d2a
w2022-03-15 00:51:01 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3e327d2a
w2022-03-15 00:51:01 DEBUG Adding type registration row_version -> org.hibernate.type.RowVersionType@74ed78a5
w2022-03-15 00:51:01 DEBUG Adding type registration image -> org.hibernate.type.ImageType@3e4d45a8
w2022-03-15 00:51:01 DEBUG Adding type registration characters -> org.hibernate.type.CharArrayType@51f0e5e8
w2022-03-15 00:51:01 DEBUG Adding type registration char[] -> org.hibernate.type.CharArrayType@51f0e5e8
w2022-03-15 00:51:01 DEBUG Adding type registration [C -> org.hibernate.type.CharArrayType@51f0e5e8
w2022-03-15 00:51:01 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7c682022
w2022-03-15 00:51:01 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7c682022
w2022-03-15 00:51:01 DEBUG Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7c682022
w2022-03-15 00:51:01 DEBUG Adding type registration text -> org.hibernate.type.TextType@e91609a
w2022-03-15 00:51:01 DEBUG Adding type registration ntext -> org.hibernate.type.NTextType@65d35217
w2022-03-15 00:51:01 DEBUG Adding type registration blob -> org.hibernate.type.BlobType@730d36da
w2022-03-15 00:51:01 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@730d36da
w2022-03-15 00:51:01 DEBUG Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@55a12c6b
w2022-03-15 00:51:01 DEBUG Adding type registration clob -> org.hibernate.type.ClobType@76a2fd5
w2022-03-15 00:51:01 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@76a2fd5
w2022-03-15 00:51:01 DEBUG Adding type registration nclob -> org.hibernate.type.NClobType@42a70f80
w2022-03-15 00:51:01 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@42a70f80
w2022-03-15 00:51:01 DEBUG Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@d50a4eb
w2022-03-15 00:51:01 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@242d6f02
w2022-03-15 00:51:01 DEBUG Adding type registration serializable -> org.hibernate.type.SerializableType@1436c51b
w2022-03-15 00:51:01 DEBUG Adding type registration object -> org.hibernate.type.ObjectType@2f1bc889
w2022-03-15 00:51:01 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2f1bc889
w2022-03-15 00:51:01 DEBUG Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4f1e0d33
w2022-03-15 00:51:01 DEBUG Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3e30dbd9
w2022-03-15 00:51:01 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@58f33ea1
w2022-03-15 00:51:01 DEBUG Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@40ebcc1d
w2022-03-15 00:51:01 DEBUG Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7f2336a6
w2022-03-15 00:51:01 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4775c488
w2022-03-15 00:51:01 DEBUG Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6b2ecf1
w2022-03-15 00:51:01 DEBUG Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@18a7431e
w2022-03-15 00:51:01 INFO  HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
w2022-03-15 00:51:01 DEBUG Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@142dc8a] into BootstrapContext; was [null]
w2022-03-15 00:51:01 DEBUG ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@142dc8a) [was null]
w2022-03-15 00:51:01 DEBUG Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@260fc97b] into BootstrapContext; was [null]
w2022-03-15 00:51:01 DEBUG Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@bc6734] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@2c780815]
w2022-03-15 00:51:01 DEBUG Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@142dc8a]
w2022-03-15 00:51:01 DEBUG ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@142dc8a]
w2022-03-15 00:51:01 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
w2022-03-15 00:51:01 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
w2022-03-15 00:51:01 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
w2022-03-15 00:51:01 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
w2022-03-15 00:51:01 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
w2022-03-15 00:51:01 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
w2022-03-15 00:51:01 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
w2022-03-15 00:51:01 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
w2022-03-15 00:51:01 DEBUG Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
w2022-03-15 00:51:01 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
w2022-03-15 00:51:01 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
w2022-03-15 00:51:01 DEBUG Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
w2022-03-15 00:51:01 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
w2022-03-15 00:51:01 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
w2022-03-15 00:51:02 DEBUG Database ->
       name : SQLite
    version : 3.36.0
      major : 3
      minor : 36
w2022-03-15 00:51:02 DEBUG Driver ->
       name : SQLite JDBC
    version : 3.36.0.3
      major : 3
      minor : 36
w2022-03-15 00:51:02 DEBUG JDBC version : 2.1
w2022-03-15 00:51:02 INFO  HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
w2022-03-15 00:51:02 DEBUG JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
w2022-03-15 00:51:02 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
w2022-03-15 00:51:02 DEBUG HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [2] less than 4
w2022-03-15 00:51:02 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@19e0da57] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@54cafdaa]
w2022-03-15 00:51:02 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
w2022-03-15 00:51:02 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.Comment
w2022-03-15 00:51:02 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 00:51:02 DEBUG Import with entity name Comment
w2022-03-15 00:51:02 DEBUG Bind entity ru.edu.helpdesk.entity.Comment on table comment
w2022-03-15 00:51:02 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 00:51:02 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Comment] is safe
w2022-03-15 00:51:02 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Comment
w2022-03-15 00:51:02 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 00:51:02 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Comment:id]
w2022-03-15 00:51:02 DEBUG building SimpleValue for id
w2022-03-15 00:51:02 DEBUG Building property id
w2022-03-15 00:51:02 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 00:51:02 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=message, insertable=true, updatable=true, unique=false}
w2022-03-15 00:51:02 DEBUG MetadataSourceProcessor property message with lazy=false
w2022-03-15 00:51:02 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Comment:message]
w2022-03-15 00:51:02 DEBUG building SimpleValue for message
w2022-03-15 00:51:02 DEBUG Building property message
w2022-03-15 00:51:02 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 00:51:02 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=ticket, insertable=true, updatable=true, unique=false}
w2022-03-15 00:51:02 DEBUG Building property ticket
w2022-03-15 00:51:02 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 00:51:02 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=user, insertable=true, updatable=true, unique=false}
w2022-03-15 00:51:02 DEBUG Building property user
w2022-03-15 00:51:02 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 00:51:02 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 00:51:02 DEBUG Import with entity name Ticket
w2022-03-15 00:51:02 DEBUG Bind entity ru.edu.helpdesk.entity.Ticket on table ticket
w2022-03-15 00:51:02 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 00:51:02 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Ticket] is safe
w2022-03-15 00:51:02 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Ticket
w2022-03-15 00:51:02 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 00:51:02 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:id]
w2022-03-15 00:51:02 DEBUG building SimpleValue for id
w2022-03-15 00:51:02 DEBUG Building property id
w2022-03-15 00:51:02 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 00:51:02 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 00:51:02 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=client, insertable=true, updatable=true, unique=false}
w2022-03-15 00:51:02 DEBUG Building property client
w2022-03-15 00:51:02 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=status, insertable=true, updatable=true, unique=false}
w2022-03-15 00:51:02 DEBUG MetadataSourceProcessor property status with lazy=false
w2022-03-15 00:51:02 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:status]
w2022-03-15 00:51:02 DEBUG building SimpleValue for status
w2022-03-15 00:51:02 DEBUG Building property status
w2022-03-15 00:51:02 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 00:51:02 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=support, insertable=true, updatable=true, unique=false}
w2022-03-15 00:51:02 DEBUG Building property support
w2022-03-15 00:51:02 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=title, insertable=true, updatable=true, unique=false}
w2022-03-15 00:51:02 DEBUG MetadataSourceProcessor property title with lazy=false
w2022-03-15 00:51:02 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:title]
w2022-03-15 00:51:02 DEBUG building SimpleValue for title
w2022-03-15 00:51:02 DEBUG Building property title
w2022-03-15 00:51:02 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.User
w2022-03-15 00:51:02 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 00:51:02 DEBUG Import with entity name User
w2022-03-15 00:51:02 DEBUG Bind entity ru.edu.helpdesk.entity.User on table user
w2022-03-15 00:51:02 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 00:51:02 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.User] is safe
w2022-03-15 00:51:02 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.User
w2022-03-15 00:51:02 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 00:51:02 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:id]
w2022-03-15 00:51:02 DEBUG building SimpleValue for id
w2022-03-15 00:51:02 DEBUG Building property id
w2022-03-15 00:51:02 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 00:51:02 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
w2022-03-15 00:51:02 DEBUG MetadataSourceProcessor property firstName with lazy=false
w2022-03-15 00:51:02 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:firstName]
w2022-03-15 00:51:02 DEBUG building SimpleValue for firstName
w2022-03-15 00:51:02 DEBUG Building property firstName
w2022-03-15 00:51:02 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
w2022-03-15 00:51:02 DEBUG MetadataSourceProcessor property lastName with lazy=false
w2022-03-15 00:51:02 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:lastName]
w2022-03-15 00:51:02 DEBUG building SimpleValue for lastName
w2022-03-15 00:51:02 DEBUG Building property lastName
w2022-03-15 00:51:02 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=login, insertable=true, updatable=true, unique=false}
w2022-03-15 00:51:02 DEBUG MetadataSourceProcessor property login with lazy=false
w2022-03-15 00:51:02 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:login]
w2022-03-15 00:51:02 DEBUG building SimpleValue for login
w2022-03-15 00:51:02 DEBUG Building property login
w2022-03-15 00:51:02 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
w2022-03-15 00:51:02 DEBUG MetadataSourceProcessor property password with lazy=false
w2022-03-15 00:51:02 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:password]
w2022-03-15 00:51:02 DEBUG building SimpleValue for password
w2022-03-15 00:51:02 DEBUG Building property password
w2022-03-15 00:51:02 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=role, insertable=true, updatable=true, unique=false}
w2022-03-15 00:51:02 DEBUG MetadataSourceProcessor property role with lazy=false
w2022-03-15 00:51:02 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:role]
w2022-03-15 00:51:02 DEBUG building SimpleValue for role
w2022-03-15 00:51:02 DEBUG Building property role
w2022-03-15 00:51:02 DEBUG Starting fillSimpleValue for id
w2022-03-15 00:51:02 DEBUG Starting fillSimpleValue for message
w2022-03-15 00:51:02 DEBUG Starting fillSimpleValue for id
w2022-03-15 00:51:02 DEBUG Starting fillSimpleValue for status
w2022-03-15 00:51:02 DEBUG Starting fillSimpleValue for title
w2022-03-15 00:51:02 DEBUG Starting fillSimpleValue for id
w2022-03-15 00:51:02 DEBUG Starting fillSimpleValue for firstName
w2022-03-15 00:51:02 DEBUG Starting fillSimpleValue for lastName
w2022-03-15 00:51:02 DEBUG Starting fillSimpleValue for login
w2022-03-15 00:51:02 DEBUG Starting fillSimpleValue for password
w2022-03-15 00:51:02 DEBUG Starting fillSimpleValue for role
w2022-03-15 00:51:02 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [comment]
w2022-03-15 00:51:02 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [ticket]
w2022-03-15 00:51:02 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [user]
w2022-03-15 00:51:02 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 00:51:02 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 00:51:02 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 00:51:02 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 00:51:02 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 00:51:02 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 00:51:02 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 00:51:02 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 00:51:02 DEBUG Building session factory
w2022-03-15 00:51:02 DEBUG SessionFactory name : null
w2022-03-15 00:51:02 DEBUG Automatic flush during beforeCompletion(): enabled
w2022-03-15 00:51:02 DEBUG Automatic session close at end of transaction: disabled
w2022-03-15 00:51:02 DEBUG Statistics: disabled
w2022-03-15 00:51:02 DEBUG Deleted entity synthetic identifier rollback: disabled
w2022-03-15 00:51:02 DEBUG Default entity-mode: pojo
w2022-03-15 00:51:02 DEBUG Check Nullability in Core (should be disabled when Bean Validation is on): enabled
w2022-03-15 00:51:02 DEBUG Allow initialization of lazy state outside session : disabled
w2022-03-15 00:51:02 DEBUG Using BatchFetchStyle : LEGACY
w2022-03-15 00:51:02 DEBUG Default batch fetch size: -1
w2022-03-15 00:51:02 DEBUG Maximum outer join fetch depth: null
w2022-03-15 00:51:02 DEBUG Default null ordering: NONE
w2022-03-15 00:51:02 DEBUG Order SQL updates by primary key: disabled
w2022-03-15 00:51:02 DEBUG Order SQL inserts for batching: disabled
w2022-03-15 00:51:02 DEBUG multi-tenancy strategy : NONE
w2022-03-15 00:51:02 DEBUG JTA Track by Thread: enabled
w2022-03-15 00:51:02 DEBUG Query language substitutions: {}
w2022-03-15 00:51:02 DEBUG Named query checking : enabled
w2022-03-15 00:51:02 DEBUG Second-level cache: disabled
w2022-03-15 00:51:02 DEBUG Second-level query cache: disabled
w2022-03-15 00:51:02 DEBUG Second-level query cache factory: null
w2022-03-15 00:51:02 DEBUG Second-level cache region prefix: null
w2022-03-15 00:51:02 DEBUG Optimize second-level cache for minimal puts: disabled
w2022-03-15 00:51:02 DEBUG Structured second-level cache entries: disabled
w2022-03-15 00:51:02 DEBUG Second-level cache direct-reference entries: disabled
w2022-03-15 00:51:02 DEBUG Automatic eviction of collection cache: disabled
w2022-03-15 00:51:02 DEBUG JDBC batch size: 1
w2022-03-15 00:51:02 DEBUG JDBC batch updates for versioned data: enabled
w2022-03-15 00:51:02 DEBUG Scrollable result sets: disabled
w2022-03-15 00:51:02 DEBUG Wrap result sets: disabled
w2022-03-15 00:51:02 DEBUG JDBC3 getGeneratedKeys(): enabled
w2022-03-15 00:51:02 DEBUG JDBC result set fetch size: null
w2022-03-15 00:51:02 DEBUG Connection release mode: ON_CLOSE
w2022-03-15 00:51:02 DEBUG Generate SQL with comments: disabled
w2022-03-15 00:51:02 DEBUG JPA compliance - query : disabled
w2022-03-15 00:51:02 DEBUG JPA compliance - closed-handling : disabled
w2022-03-15 00:51:02 DEBUG JPA compliance - lists : disabled
w2022-03-15 00:51:02 DEBUG JPA compliance - transactions : disabled
w2022-03-15 00:51:02 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 00:51:02 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 00:51:02 DEBUG Session factory constructed with filter configurations : {}
w2022-03-15 00:51:02 DEBUG Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=true, java.specification.version=1.8, file.encoding.pkg=sun.io, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@191b828f, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.SQLiteDialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\charsets.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\cldrdata.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\dnsns.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\jaccess.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\localedata.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\nashorn.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunec.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunmscapi.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\zipfs.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jce.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jfr.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jsse.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\management-agent.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\resources.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\rt.jar;C:\Users\Ольга\Desktop\Java\Project\Project1\helpdeskproject\target\classes;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\2.6.4\spring-boot-starter-data-jpa-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\2.6.4\spring-boot-starter-jdbc-2.6.4.jar;C:\Users\Ольга\.m2\repository\com\zaxxer\HikariCP\4.0.3\HikariCP-4.0.3.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-jdbc\5.3.16\spring-jdbc-5.3.16.jar;C:\Users\Ольга\.m2\repository\jakarta\transaction\jakarta.transaction-api\1.3.3\jakarta.transaction-api-1.3.3.jar;C:\Users\Ольга\.m2\repository\jakarta\persistence\jakarta.persistence-api\2.2.3\jakarta.persistence-api-2.2.3.jar;C:\Users\Ольга\.m2\repository\org\hibernate\hibernate-core\5.6.5.Final\hibernate-core-5.6.5.Final.jar;C:\Users\Ольга\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy\1.11.22\byte-buddy-1.11.22.jar;C:\Users\Ольга\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ольга\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Ольга\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.6\jaxb-runtime-2.3.6.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\txw2\2.3.6\txw2-2.3.6.jar;C:\Users\Ольга\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.12\istack-commons-runtime-3.0.12.jar;C:\Users\Ольга\.m2\repository\com\sun\activation\jakarta.activation\1.2.2\jakarta.activation-1.2.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\data\spring-data-jpa\2.6.2\spring-data-jpa-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\data\spring-data-commons\2.6.2\spring-data-commons-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-orm\5.3.16\spring-orm-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-context\5.3.16\spring-context-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-tx\5.3.16\spring-tx-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-beans\5.3.16\spring-beans-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-aspects\5.3.16\spring-aspects-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-security\2.6.4\spring-boot-starter-security-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter\2.6.4\spring-boot-starter-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-logging\2.6.4\spring-boot-starter-logging-2.6.4.jar;C:\Users\Ольга\.m2\repository\ch\qos\logback\logback-classic\1.2.10\logback-classic-1.2.10.jar;C:\Users\Ольга\.m2\repository\ch\qos\logback\logback-core\1.2.10\logback-core-1.2.10.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.17.1\log4j-to-slf4j-2.17.1.jar;C:\Users\Ольга\.m2\repository\org\slf4j\jul-to-slf4j\1.7.36\jul-to-slf4j-1.7.36.jar;C:\Users\Ольга\.m2\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;C:\Users\Ольга\.m2\repository\org\yaml\snakeyaml\1.29\snakeyaml-1.29.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-aop\5.3.16\spring-aop-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-config\5.6.2\spring-security-config-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-web\5.6.2\spring-security-web-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-expression\5.3.16\spring-expression-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-web\2.6.4\spring-boot-starter-web-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-json\2.6.4\spring-boot-starter-json-2.6.4.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.13.1\jackson-datatype-jdk8-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.13.1\jackson-datatype-jsr310-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.13.1\jackson-module-parameter-names-2.13.1.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\2.6.4\spring-boot-starter-tomcat-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.58\tomcat-embed-core-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\9.0.58\tomcat-embed-el-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.58\tomcat-embed-websocket-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-web\5.3.16\spring-web-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-webmvc\5.3.16\spring-webmvc-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-devtools\2.6.4\spring-boot-devtools-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot\2.6.4\spring-boot-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\2.6.4\spring-boot-autoconfigure-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\xerial\sqlite-jdbc\3.36.0.3\sqlite-jdbc-3.36.0.3.jar;C:\Users\Ольга\.m2\repository\com\zsoltfabok\sqlite-dialect\1.0\sqlite-dialect-1.0.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-aop\2.6.2\spring-boot-starter-aop-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\aspectj\aspectjweaver\1.9.7\aspectjweaver-1.9.7.jar;C:\Users\Ольга\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.3\jakarta.xml.bind-api-2.3.3.jar;C:\Users\Ольга\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.2\jakarta.activation-api-1.2.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-core\5.3.16\spring-core-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-jcl\5.3.16\spring-jcl-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-core\5.6.2\spring-security-core-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-crypto\5.6.2\spring-security-crypto-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\projectlombok\lombok\1.18.22\lombok-1.18.22.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\2.6.4\spring-boot-starter-thymeleaf-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\thymeleaf-spring5\3.0.15.RELEASE\thymeleaf-spring5-3.0.15.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\thymeleaf\3.0.15.RELEASE\thymeleaf-3.0.15.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\attoparser\attoparser\2.0.5.RELEASE\attoparser-2.0.5.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-java8time\3.0.4.RELEASE\thymeleaf-extras-java8time-3.0.4.RELEASE.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.1\jackson-databind-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.1\jackson-annotations-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.1\jackson-core-2.13.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-api\2.4.1\log4j-api-2.4.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-core\2.4.1\log4j-core-2.4.1.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.2\lib\idea_rt.jar, java.vm.vendor=Temurin, sun.arch.data.model=64, user.variant=, java.vendor.url=https://adoptium.net/, catalina.useNaming=false, user.timezone=Europe/Moscow, jakarta.persistence.sharedCache.mode=UNSPECIFIED, os.name=Windows 10, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), user.country=RU, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\bin, sun.java.command=ru.edu.helpdesk.HelpdeskApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@43fc5cdf, com.sun.management.jmxremote=, javax.persistence.sharedCache.mode=UNSPECIFIED, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, user.home=C:\Users\Ольга, user.language=ru, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre, file.separator=\, spring.output.ansi.enabled=always, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, sun.boot.class.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\resources.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\rt.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\sunrsasign.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jsse.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jce.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\charsets.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jfr.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\classes, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_312-b07, user.name=Эльдорадо, spring.jmx.enabled=true, path.separator=;, os.version=10.0, java.endorsed.dirs=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\endorsed, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=default, spring.beaninfo.ignore=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=C:\Users\134E~1\AppData\Local\Temp\, catalina.home=C:\Users\Ольга\AppData\Local\Temp\tomcat.8080.1858439131759679261, java.version=1.8.0_312, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\Ольга\Desktop\Java\Project\Project1\helpdeskproject, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=14756, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\Ольга\AppData\Local\Temp\tomcat.8080.1858439131759679261, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@7545518b, java.library.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\windows\System32\OpenSSH\;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\Program Files\apache-maven-3.8.4\bin;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Ольга\AppData\Local\Microsoft\WindowsApps;C:\Users\Ольга\AppData\Local\Programs\Microsoft VS Code\bin;C:\SQLite;C:\Users\Ольга\AppData\Roaming\npm;C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.2\bin;;., java.vendor=Temurin, java.vm.info=mixed mode, java.vm.version=25.312-b07, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, java.ext.dirs=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext;C:\windows\Sun\Java\lib\ext, hibernate.connection.datasource=HikariDataSource (HikariPool-1), hibernate.hbm2ddl.import_files=data/import.sql, java.class.version=52.0}
w2022-03-15 00:51:02 DEBUG Skipping JACC integration as it was not enabled
w2022-03-15 00:51:02 DEBUG Using ORDINAL-based conversion for Enum ru.edu.helpdesk.entity.UserRole
w2022-03-15 00:51:02 DEBUG Using ORDINAL-based conversion for Enum ru.edu.helpdesk.entity.TicketStatus
w2022-03-15 00:51:02 DEBUG Instantiated session factory
w2022-03-15 00:51:02 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@19e0da57] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@180805db]
w2022-03-15 00:51:02 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.User] is safe
w2022-03-15 00:51:02 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.User
w2022-03-15 00:51:02 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:51:02 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:51:02 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:51:02 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:51:02 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Ticket] is safe
w2022-03-15 00:51:02 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Ticket
w2022-03-15 00:51:02 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:51:02 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:51:02 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:51:02 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:51:02 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:51:02 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:51:02 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:51:02 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:51:02 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Comment] is safe
w2022-03-15 00:51:02 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Comment
w2022-03-15 00:51:02 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:51:02 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:51:02 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:51:02 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:51:02 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.User
w2022-03-15 00:51:02 DEBUG  Version select: select id from user where id =?
w2022-03-15 00:51:02 DEBUG  Snapshot select: select user_.id, user_.first_name as first_na2_2_, user_.last_name as last_nam3_2_, user_.login as login4_2_, user_.password as password5_2_, user_.role as role6_2_ from user user_ where user_.id=?
w2022-03-15 00:51:02 DEBUG  Insert 0: insert into user (first_name, last_name, login, password, role, id) values (?, ?, ?, ?, ?, ?)
w2022-03-15 00:51:02 DEBUG  Update 0: update user set first_name=?, last_name=?, login=?, password=?, role=? where id=?
w2022-03-15 00:51:02 DEBUG  Delete 0: delete from user where id=?
w2022-03-15 00:51:02 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b614b57]
w2022-03-15 00:51:02 DEBUG Visiting attribute path : firstName
w2022-03-15 00:51:02 DEBUG Visiting attribute path : lastName
w2022-03-15 00:51:02 DEBUG Visiting attribute path : login
w2022-03-15 00:51:02 DEBUG Visiting attribute path : password
w2022-03-15 00:51:02 DEBUG Visiting attribute path : role
w2022-03-15 00:51:02 DEBUG Building LoadPlan...
w2022-03-15 00:51:02 DEBUG processing queryspace <gen:0>
w2022-03-15 00:51:02 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.User)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

w2022-03-15 00:51:02 DEBUG Static select for entity ru.edu.helpdesk.entity.User [NONE]: select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 00:51:02 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.Ticket
w2022-03-15 00:51:02 DEBUG  Version select: select id from ticket where id =?
w2022-03-15 00:51:02 DEBUG  Snapshot select: select ticket_.id, ticket_.client_id as client_i4_1_, ticket_.status as status2_1_, ticket_.support_id as support_5_1_, ticket_.title as title3_1_ from ticket ticket_ where ticket_.id=?
w2022-03-15 00:51:02 DEBUG  Insert 0: insert into ticket (client_id, status, support_id, title, id) values (?, ?, ?, ?, ?)
w2022-03-15 00:51:02 DEBUG  Update 0: update ticket set client_id=?, status=?, support_id=?, title=? where id=?
w2022-03-15 00:51:02 DEBUG  Delete 0: delete from ticket where id=?
w2022-03-15 00:51:02 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f3f9dd2]
w2022-03-15 00:51:02 DEBUG Visiting attribute path : client
w2022-03-15 00:51:02 DEBUG Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44e45624]
w2022-03-15 00:51:02 DEBUG Visiting attribute path : client.firstName
w2022-03-15 00:51:02 DEBUG Visiting attribute path : client.lastName
w2022-03-15 00:51:02 DEBUG Visiting attribute path : client.login
w2022-03-15 00:51:02 DEBUG Visiting attribute path : client.password
w2022-03-15 00:51:02 DEBUG Visiting attribute path : client.role
w2022-03-15 00:51:02 DEBUG Visiting attribute path : status
w2022-03-15 00:51:02 DEBUG Visiting attribute path : support
w2022-03-15 00:51:02 DEBUG Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e9790f]
w2022-03-15 00:51:02 DEBUG Visiting attribute path : support.firstName
w2022-03-15 00:51:02 DEBUG Visiting attribute path : support.lastName
w2022-03-15 00:51:02 DEBUG Visiting attribute path : support.login
w2022-03-15 00:51:02 DEBUG Visiting attribute path : support.password
w2022-03-15 00:51:02 DEBUG Visiting attribute path : support.role
w2022-03-15 00:51:02 DEBUG Visiting attribute path : title
w2022-03-15 00:51:02 DEBUG Building LoadPlan...
w2022-03-15 00:51:02 DEBUG processing queryspace <gen:0>
w2022-03-15 00:51:02 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.Ticket)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.Ticket, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.Ticket)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:1>, path=ru.edu.helpdesk.entity.Ticket.client)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:2>, path=ru.edu.helpdesk.entity.Ticket.support)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.Ticket)
          - SQL table alias mapping - ticket0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(client)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
          - JOIN (JoinDefinedByMetadata(support)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user2_
                - alias suffix - 2_
                - suffixed key columns - {id1_2_2_}

w2022-03-15 00:51:02 DEBUG Static select for entity ru.edu.helpdesk.entity.Ticket [NONE]: select ticket0_.id as id1_1_0_, ticket0_.client_id as client_i4_1_0_, ticket0_.status as status2_1_0_, ticket0_.support_id as support_5_1_0_, ticket0_.title as title3_1_0_, user1_.id as id1_2_1_, user1_.first_name as first_na2_2_1_, user1_.last_name as last_nam3_2_1_, user1_.login as login4_2_1_, user1_.password as password5_2_1_, user1_.role as role6_2_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id left outer join user user2_ on ticket0_.support_id=user2_.id where ticket0_.id=?
w2022-03-15 00:51:02 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.Comment
w2022-03-15 00:51:02 DEBUG  Version select: select id from comment where id =?
w2022-03-15 00:51:02 DEBUG  Snapshot select: select comment_.id, comment_.message as message2_0_, comment_.ticket_id as ticket_i3_0_, comment_.user_id as user_id4_0_ from comment comment_ where comment_.id=?
w2022-03-15 00:51:02 DEBUG  Insert 0: insert into comment (message, ticket_id, user_id, id) values (?, ?, ?, ?)
w2022-03-15 00:51:02 DEBUG  Update 0: update comment set message=?, ticket_id=?, user_id=? where id=?
w2022-03-15 00:51:02 DEBUG  Delete 0: delete from comment where id=?
w2022-03-15 00:51:02 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@498de909]
w2022-03-15 00:51:02 DEBUG Visiting attribute path : message
w2022-03-15 00:51:02 DEBUG Visiting attribute path : ticket
w2022-03-15 00:51:02 DEBUG Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bec9aaa]
w2022-03-15 00:51:02 DEBUG Visiting attribute path : ticket.client
w2022-03-15 00:51:02 DEBUG Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21a85e4f]
w2022-03-15 00:51:02 DEBUG Visiting attribute path : ticket.client.firstName
w2022-03-15 00:51:02 DEBUG Visiting attribute path : ticket.client.lastName
w2022-03-15 00:51:02 DEBUG Visiting attribute path : ticket.client.login
w2022-03-15 00:51:02 DEBUG Visiting attribute path : ticket.client.password
w2022-03-15 00:51:02 DEBUG Visiting attribute path : ticket.client.role
w2022-03-15 00:51:02 DEBUG Visiting attribute path : ticket.status
w2022-03-15 00:51:02 DEBUG Visiting attribute path : ticket.support
w2022-03-15 00:51:02 DEBUG Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f618a24]
w2022-03-15 00:51:02 DEBUG Visiting attribute path : ticket.support.firstName
w2022-03-15 00:51:02 DEBUG Visiting attribute path : ticket.support.lastName
w2022-03-15 00:51:02 DEBUG Visiting attribute path : ticket.support.login
w2022-03-15 00:51:02 DEBUG Visiting attribute path : ticket.support.password
w2022-03-15 00:51:02 DEBUG Visiting attribute path : ticket.support.role
w2022-03-15 00:51:02 DEBUG Visiting attribute path : ticket.title
w2022-03-15 00:51:02 DEBUG Visiting attribute path : user
w2022-03-15 00:51:02 DEBUG Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@429d2c51]
w2022-03-15 00:51:02 DEBUG Visiting attribute path : user.firstName
w2022-03-15 00:51:02 DEBUG Visiting attribute path : user.lastName
w2022-03-15 00:51:02 DEBUG Visiting attribute path : user.login
w2022-03-15 00:51:02 DEBUG Visiting attribute path : user.password
w2022-03-15 00:51:02 DEBUG Visiting attribute path : user.role
w2022-03-15 00:51:02 DEBUG Building LoadPlan...
w2022-03-15 00:51:02 DEBUG processing queryspace <gen:0>
w2022-03-15 00:51:02 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.Comment)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.Comment, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.Comment)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.Ticket, querySpaceUid=<gen:1>, path=ru.edu.helpdesk.entity.Comment.ticket)
             - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:2>, path=ru.edu.helpdesk.entity.Comment.ticket.client)
             - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:3>, path=ru.edu.helpdesk.entity.Comment.ticket.support)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:4>, path=ru.edu.helpdesk.entity.Comment.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(ticket)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ru.edu.helpdesk.entity.Ticket)
                - SQL table alias mapping - ticket1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(client)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=ru.edu.helpdesk.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}
                - JOIN (JoinDefinedByMetadata(support)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=ru.edu.helpdesk.entity.User)
                      - SQL table alias mapping - user3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_2_3_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user4_
                - alias suffix - 4_
                - suffixed key columns - {id1_2_4_}

w2022-03-15 00:51:02 DEBUG Static select for entity ru.edu.helpdesk.entity.Comment [NONE]: select comment0_.id as id1_0_0_, comment0_.message as message2_0_0_, comment0_.ticket_id as ticket_i3_0_0_, comment0_.user_id as user_id4_0_0_, ticket1_.id as id1_1_1_, ticket1_.client_id as client_i4_1_1_, ticket1_.status as status2_1_1_, ticket1_.support_id as support_5_1_1_, ticket1_.title as title3_1_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_, user3_.id as id1_2_3_, user3_.first_name as first_na2_2_3_, user3_.last_name as last_nam3_2_3_, user3_.login as login4_2_3_, user3_.password as password5_2_3_, user3_.role as role6_2_3_, user4_.id as id1_2_4_, user4_.first_name as first_na2_2_4_, user4_.last_name as last_nam3_2_4_, user4_.login as login4_2_4_, user4_.password as password5_2_4_, user4_.role as role6_2_4_ from comment comment0_ left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id left outer join user user2_ on ticket1_.client_id=user2_.id left outer join user user3_ on ticket1_.support_id=user3_.id left outer join user user4_ on comment0_.user_id=user4_.id where comment0_.id=?
w2022-03-15 00:51:02 DEBUG drop table if exists comment
w2022-03-15 00:51:02 DEBUG drop table if exists hibernate_sequence
w2022-03-15 00:51:02 DEBUG drop table if exists ticket
w2022-03-15 00:51:02 DEBUG drop table if exists user
w2022-03-15 00:51:02 DEBUG create table comment (id bigint not null, message varchar(255) not null, ticket_id bigint, user_id bigint, primary key (id))
w2022-03-15 00:51:02 DEBUG create table hibernate_sequence (next_val bigint)
w2022-03-15 00:51:02 DEBUG insert into hibernate_sequence values ( 1 )
w2022-03-15 00:51:02 DEBUG create table ticket (id bigint not null, status integer, title varchar(255) not null, client_id bigint, support_id bigint, primary key (id))
w2022-03-15 00:51:02 DEBUG create table user (id bigint not null, first_name varchar(255), last_name varchar(255), login varchar(255) not null, password varchar(255) not null, role integer, primary key (id))
w2022-03-15 00:51:02 INFO  HHH000476: Executing import script 'file:/C:/Users/%d0%9e%d0%bb%d1%8c%d0%b3%d0%b0/Desktop/Java/Project/Project1/helpdeskproject/target/classes/data/import.sql'
w2022-03-15 00:51:02 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (1, 'admin', 'admin', 'admin', 'admin', 0)
w2022-03-15 00:51:02 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (2, 'support', 'support', 'support', 'support', 1)
w2022-03-15 00:51:02 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (3, 'user1', 'user1', 'user1', 'user1', 2)
w2022-03-15 00:51:02 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (4, 'user2', 'user2', 'user2', 'user2', 2)
w2022-03-15 00:51:02 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (1, 1, 'Hello user1', 3, 2)
w2022-03-15 00:51:02 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (2, 0, 'Title2', 3, NULL)
w2022-03-15 00:51:02 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (3, 0, 'Message user2', 4, NULL)
w2022-03-15 00:51:02 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (1, "Hello ticket1", 1, 3)
w2022-03-15 00:51:02 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (2, "Hello ticket2", 2, 3)
w2022-03-15 00:51:02 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (3, "Hello ticket11", 1, 2)
w2022-03-15 00:51:02 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (4, "Hello ticket111", 1, 2)
w2022-03-15 00:51:02 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (5, "Hello ticket22", 2, 2)
w2022-03-15 00:51:02 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (6, "Hello ticket3", 3, 4)
w2022-03-15 00:51:02 DEBUG UPDATE hibernate_sequence SET next_val = 8 WHERE next_val = 1
w2022-03-15 00:51:02 INFO  HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
w2022-03-15 00:51:02 DEBUG Checking 0 named HQL queries
w2022-03-15 00:51:02 DEBUG Checking 0 named SQL queries
w2022-03-15 00:51:02 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 00:51:02 DEBUG Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@54339d8c
w2022-03-15 00:51:02 DEBUG Registering SessionFactory: 639884bd-385d-4541-815e-79641d6460c0 (<unnamed>)
w2022-03-15 00:51:02 DEBUG Not binding SessionFactory to JNDI, no JNDI name configured
w2022-03-15 00:51:02 DEBUG Statistics initialized [enabled=false]
w2022-03-15 00:51:02 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 00:51:02 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 00:51:02 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 00:51:14 DEBUG Rendered criteria query -> select generatedAlias0 from Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 00:51:14 DEBUG QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@9b1cb21
w2022-03-15 00:51:14 DEBUG parse() - HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 00:51:14 DEBUG throwQueryException() : no errors
w2022-03-15 00:51:14 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[IDENT] Node: 'ru'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'edu'
    |  |  |  |  |  |  \-[IDENT] Node: 'helpdesk'
    |  |  |  |  |  \-[IDENT] Node: 'entity'
    |  |  |  |  \-[IDENT] Node: 'Ticket'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'client'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias1'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

w2022-03-15 00:51:14 DEBUG select << begin [level=1, statement=select]
w2022-03-15 00:51:14 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.Ticket (generatedAlias0) -> ticket0_
w2022-03-15 00:51:14 DEBUG Resolved : generatedAlias0 -> ticket0_.id
w2022-03-15 00:51:14 DEBUG getDataType() : client -> org.hibernate.type.ManyToOneType(ru.edu.helpdesk.entity.User)
w2022-03-15 00:51:14 DEBUG dereferenceEntityJoin() : generating join for client in ru.edu.helpdesk.entity.Ticket (generatedAlias1) parent = [ {null} ]
w2022-03-15 00:51:14 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.User (generatedAlias1) -> user1_
w2022-03-15 00:51:14 DEBUG addJoinByPathMap() : generatedAlias0.client -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}
w2022-03-15 00:51:14 DEBUG Resolved : generatedAlias0.client -> ticket0_.client_id
w2022-03-15 00:51:14 DEBUG createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'user user1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Ticket.client,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}

w2022-03-15 00:51:14 DEBUG Resolved : generatedAlias0 -> ticket0_.id
w2022-03-15 00:51:14 DEBUG Resolved : generatedAlias1 -> user1_.id
w2022-03-15 00:51:14 DEBUG getDataType() : id -> org.hibernate.type.LongType@26115bbb
w2022-03-15 00:51:14 DEBUG Resolved : generatedAlias1.id -> user1_.id
w2022-03-15 00:51:14 DEBUG select : finishing up [level=1, statement=select]
w2022-03-15 00:51:14 DEBUG processQuery() :  ( SELECT ( {select clause} ticket0_.id ) ( FromClause{level=1} ( ticket ticket0_ user user1_ ) ) ( where ( = ( user1_.id user1_.id id ) ? ) ) )
w2022-03-15 00:51:14 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Ticket): [ticket]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.Ticket)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.User)
          | path: generatedAlias1.id
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.User)
          |  | originalText: generatedAlias1
          |  \-IdentNode
          |    persister: null
          |    originalText: id
          \-ParameterNode

w2022-03-15 00:51:14 DEBUG Using FROM fragment [ticket ticket0_]
w2022-03-15 00:51:14 DEBUG Using FROM fragment [left outer join user user1_ on ticket0_.client_id=user1_.id]
w2022-03-15 00:51:14 DEBUG select >> end [level=1, statement=select]
w2022-03-15 00:51:14 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (ticket,user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'ticket0_.id as id1_1_' {alias=generatedAlias0, className=ru.edu.helpdesk.entity.Ticket, tableAlias=ticket0_}
    |  \-[SQL_TOKEN] SqlFragment: 'ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[ticket0_, user1_], fromElementsByPath=[generatedAlias0.client], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'ticket ticket0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=ticket,tableAlias=ticket0_,origin=null,columns={,className=ru.edu.helpdesk.entity.Ticket}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join user user1_ on ticket0_.client_id=user1_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Ticket.client,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user1_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias1.id,tableAlias=user1_,className=ru.edu.helpdesk.entity.User,classAlias=generatedAlias1}
          |  +-[ALIAS_REF] IdentNode: 'user1_.id' {alias=generatedAlias1, className=ru.edu.helpdesk.entity.User, tableAlias=user1_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LongType@26115bbb}

w2022-03-15 00:51:14 DEBUG throwQueryException() : no errors
w2022-03-15 00:51:14 DEBUG HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 00:51:14 DEBUG SQL: select ticket0_.id as id1_1_, ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id where user1_.id=?
w2022-03-15 00:51:14 DEBUG throwQueryException() : no errors
w2022-03-15 00:51:14 DEBUG select ticket0_.id as id1_1_, ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id where user1_.id=?
w2022-03-15 00:51:14 DEBUG Result set row: 0
w2022-03-15 00:51:14 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 00:51:14 DEBUG Result set row: 1
w2022-03-15 00:51:14 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 00:51:14 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 00:51:14 DEBUG Processing attribute `client` : value = 3
w2022-03-15 00:51:14 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 00:51:14 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 00:51:14 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 00:51:14 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#3]
w2022-03-15 00:51:14 DEBUG Processing attribute `firstName` : value = user1
w2022-03-15 00:51:14 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 00:51:14 DEBUG Processing attribute `lastName` : value = user1
w2022-03-15 00:51:14 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 00:51:14 DEBUG Processing attribute `login` : value = user1
w2022-03-15 00:51:14 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 00:51:14 DEBUG Processing attribute `password` : value = user1
w2022-03-15 00:51:14 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 00:51:14 DEBUG Processing attribute `role` : value = USER
w2022-03-15 00:51:14 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 00:51:14 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#3]
w2022-03-15 00:51:14 DEBUG Done entity load : ru.edu.helpdesk.entity.User#3
w2022-03-15 00:51:14 DEBUG Processing attribute `status` : value = WORKING
w2022-03-15 00:51:14 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 00:51:14 DEBUG Processing attribute `support` : value = 2
w2022-03-15 00:51:14 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 00:51:14 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 00:51:14 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 00:51:14 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#2]
w2022-03-15 00:51:14 DEBUG Processing attribute `firstName` : value = support
w2022-03-15 00:51:14 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 00:51:14 DEBUG Processing attribute `lastName` : value = support
w2022-03-15 00:51:14 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 00:51:14 DEBUG Processing attribute `login` : value = support
w2022-03-15 00:51:14 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 00:51:14 DEBUG Processing attribute `password` : value = support
w2022-03-15 00:51:14 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 00:51:14 DEBUG Processing attribute `role` : value = SUPPORT
w2022-03-15 00:51:14 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 00:51:14 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#2]
w2022-03-15 00:51:14 DEBUG Done entity load : ru.edu.helpdesk.entity.User#2
w2022-03-15 00:51:14 DEBUG Processing attribute `title` : value = Hello user1
w2022-03-15 00:51:14 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 00:51:14 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 00:51:14 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 00:51:14 DEBUG Processing attribute `client` : value = 3
w2022-03-15 00:51:14 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 00:51:14 DEBUG Processing attribute `status` : value = OPEN
w2022-03-15 00:51:14 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 00:51:14 DEBUG Processing attribute `support` : value = null
w2022-03-15 00:51:14 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 00:51:14 DEBUG Processing attribute `title` : value = Title2
w2022-03-15 00:51:14 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 00:51:14 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 00:51:27 DEBUG Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.login=:param0
w2022-03-15 00:51:27 DEBUG parse() - HQL: select generatedAlias0 from ru.edu.helpdesk.entity.User as generatedAlias0 where generatedAlias0.login=:param0
w2022-03-15 00:51:27 DEBUG throwQueryException() : no errors
w2022-03-15 00:51:27 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'ru'
    |  |     |  |  |  |  \-[IDENT] Node: 'edu'
    |  |     |  |  |  \-[IDENT] Node: 'helpdesk'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'login'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

w2022-03-15 00:51:27 DEBUG select << begin [level=1, statement=select]
w2022-03-15 00:51:27 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.User (generatedAlias0) -> user0_
w2022-03-15 00:51:27 DEBUG Resolved : generatedAlias0 -> user0_.id
w2022-03-15 00:51:27 DEBUG Resolved : generatedAlias0 -> user0_.id
w2022-03-15 00:51:27 DEBUG getDataType() : login -> org.hibernate.type.StringType@30757249
w2022-03-15 00:51:27 DEBUG Resolved : generatedAlias0.login -> user0_.login
w2022-03-15 00:51:27 DEBUG select : finishing up [level=1, statement=select]
w2022-03-15 00:51:27 DEBUG processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) ( where ( = ( user0_.login user0_.id login ) ? ) ) )
w2022-03-15 00:51:27 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity User): [user]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.User)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.User)
          | path: generatedAlias0.login
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.User)
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    originalText: login
          \-ParameterNode

w2022-03-15 00:51:27 DEBUG Using FROM fragment [user user0_]
w2022-03-15 00:51:27 DEBUG select >> end [level=1, statement=select]
w2022-03-15 00:51:27 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_2_' {alias=generatedAlias0, className=ru.edu.helpdesk.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.first_name as first_na2_2_, user0_.last_name as last_nam3_2_, user0_.login as login4_2_, user0_.password as password5_2_, user0_.role as role6_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=ru.edu.helpdesk.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.login' {propertyName=login,dereferenceType=PRIMITIVE,getPropertyPath=login,path=generatedAlias0.login,tableAlias=user0_,className=ru.edu.helpdesk.entity.User,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=generatedAlias0, className=ru.edu.helpdesk.entity.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'login' {originalText=login}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@30757249}

w2022-03-15 00:51:27 DEBUG throwQueryException() : no errors
w2022-03-15 00:51:27 DEBUG HQL: select generatedAlias0 from ru.edu.helpdesk.entity.User as generatedAlias0 where generatedAlias0.login=:param0
w2022-03-15 00:51:27 DEBUG SQL: select user0_.id as id1_2_, user0_.first_name as first_na2_2_, user0_.last_name as last_nam3_2_, user0_.login as login4_2_, user0_.password as password5_2_, user0_.role as role6_2_ from user user0_ where user0_.login=?
w2022-03-15 00:51:27 DEBUG throwQueryException() : no errors
w2022-03-15 00:51:27 DEBUG select user0_.id as id1_2_, user0_.first_name as first_na2_2_, user0_.last_name as last_nam3_2_, user0_.login as login4_2_, user0_.password as password5_2_, user0_.role as role6_2_ from user user0_ where user0_.login=?
w2022-03-15 00:51:27 DEBUG Result set row: 0
w2022-03-15 00:51:27 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.User#1]
w2022-03-15 00:51:27 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#1]
w2022-03-15 00:51:27 DEBUG Processing attribute `firstName` : value = admin
w2022-03-15 00:51:27 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 00:51:27 DEBUG Processing attribute `lastName` : value = admin
w2022-03-15 00:51:27 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 00:51:27 DEBUG Processing attribute `login` : value = admin
w2022-03-15 00:51:27 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 00:51:27 DEBUG Processing attribute `password` : value = admin
w2022-03-15 00:51:27 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 00:51:27 DEBUG Processing attribute `role` : value = ADMIN
w2022-03-15 00:51:27 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 00:51:27 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#1]
w2022-03-15 00:51:27 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 00:51:27 DEBUG begin
w2022-03-15 00:51:27 DEBUG committing
w2022-03-15 00:54:43 DEBUG Logging Provider: org.jboss.logging.Log4j2LoggerProvider
w2022-03-15 00:54:43 DEBUG PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@2bae3f60
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/%d0%9e%d0%bb%d1%8c%d0%b3%d0%b0/Desktop/Java/Project/Project1/helpdeskproject/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		ru.edu.helpdesk.entity.Comment
		ru.edu.helpdesk.entity.Ticket
		ru.edu.helpdesk.entity.User]
	Mapping files names []
	Properties []
w2022-03-15 00:54:43 DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
w2022-03-15 00:54:43 DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
w2022-03-15 00:54:43 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
w2022-03-15 00:54:43 INFO  HHH000412: Hibernate ORM core version 5.6.5.Final
w2022-03-15 00:54:43 DEBUG HHH000206: hibernate.properties not found
w2022-03-15 00:54:43 DEBUG Overriding existing service binding [org.hibernate.secure.spi.JaccService]
w2022-03-15 00:54:43 DEBUG Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
w2022-03-15 00:54:43 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
w2022-03-15 00:54:43 INFO  HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
w2022-03-15 00:54:43 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@555175b0
w2022-03-15 00:54:43 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@555175b0
w2022-03-15 00:54:43 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@555175b0
w2022-03-15 00:54:43 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@57e2b5bb
w2022-03-15 00:54:43 DEBUG Adding type registration true_false -> org.hibernate.type.TrueFalseType@4b2c7322
w2022-03-15 00:54:43 DEBUG Adding type registration yes_no -> org.hibernate.type.YesNoType@767ee139
w2022-03-15 00:54:43 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@5e7b4902
w2022-03-15 00:54:43 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@5e7b4902
w2022-03-15 00:54:43 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5e7b4902
w2022-03-15 00:54:43 DEBUG Adding type registration character -> org.hibernate.type.CharacterType@4a15c989
w2022-03-15 00:54:43 DEBUG Adding type registration char -> org.hibernate.type.CharacterType@4a15c989
w2022-03-15 00:54:43 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4a15c989
w2022-03-15 00:54:43 DEBUG Adding type registration short -> org.hibernate.type.ShortType@5b4de93f
w2022-03-15 00:54:43 DEBUG Adding type registration short -> org.hibernate.type.ShortType@5b4de93f
w2022-03-15 00:54:43 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5b4de93f
w2022-03-15 00:54:43 DEBUG Adding type registration integer -> org.hibernate.type.IntegerType@495c43b2
w2022-03-15 00:54:43 DEBUG Adding type registration int -> org.hibernate.type.IntegerType@495c43b2
w2022-03-15 00:54:43 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@495c43b2
w2022-03-15 00:54:43 DEBUG Adding type registration long -> org.hibernate.type.LongType@58a058f3
w2022-03-15 00:54:43 DEBUG Adding type registration long -> org.hibernate.type.LongType@58a058f3
w2022-03-15 00:54:43 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.LongType@58a058f3
w2022-03-15 00:54:43 DEBUG Adding type registration float -> org.hibernate.type.FloatType@198a4d1
w2022-03-15 00:54:43 DEBUG Adding type registration float -> org.hibernate.type.FloatType@198a4d1
w2022-03-15 00:54:43 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.FloatType@198a4d1
w2022-03-15 00:54:43 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@565dee70
w2022-03-15 00:54:43 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@565dee70
w2022-03-15 00:54:43 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@565dee70
w2022-03-15 00:54:43 DEBUG Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7f11ad6d
w2022-03-15 00:54:43 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7f11ad6d
w2022-03-15 00:54:43 DEBUG Adding type registration big_integer -> org.hibernate.type.BigIntegerType@439355b
w2022-03-15 00:54:43 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@439355b
w2022-03-15 00:54:43 DEBUG Adding type registration string -> org.hibernate.type.StringType@7c9c978b
w2022-03-15 00:54:43 DEBUG Adding type registration java.lang.String -> org.hibernate.type.StringType@7c9c978b
w2022-03-15 00:54:43 DEBUG Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5113cfd
w2022-03-15 00:54:43 DEBUG Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7725f349
w2022-03-15 00:54:43 DEBUG Adding type registration url -> org.hibernate.type.UrlType@6ef4a01c
w2022-03-15 00:54:43 DEBUG Adding type registration java.net.URL -> org.hibernate.type.UrlType@6ef4a01c
w2022-03-15 00:54:43 DEBUG Adding type registration Duration -> org.hibernate.type.DurationType@45c277b6
w2022-03-15 00:54:43 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.DurationType@45c277b6
w2022-03-15 00:54:43 DEBUG Adding type registration Instant -> org.hibernate.type.InstantType@3b84a59
w2022-03-15 00:54:43 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3b84a59
w2022-03-15 00:54:43 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7dc3b53a
w2022-03-15 00:54:43 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7dc3b53a
w2022-03-15 00:54:43 DEBUG Adding type registration LocalDate -> org.hibernate.type.LocalDateType@23c637ac
w2022-03-15 00:54:43 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@23c637ac
w2022-03-15 00:54:43 DEBUG Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@46047fa8
w2022-03-15 00:54:43 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@46047fa8
w2022-03-15 00:54:43 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3dc37066
w2022-03-15 00:54:43 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3dc37066
w2022-03-15 00:54:43 DEBUG Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@773705d3
w2022-03-15 00:54:43 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@773705d3
w2022-03-15 00:54:43 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@14c34d71
w2022-03-15 00:54:43 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@14c34d71
w2022-03-15 00:54:43 DEBUG Adding type registration date -> org.hibernate.type.DateType@5b69ea66
w2022-03-15 00:54:43 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.DateType@5b69ea66
w2022-03-15 00:54:43 DEBUG Adding type registration time -> org.hibernate.type.TimeType@6e77cea2
w2022-03-15 00:54:43 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6e77cea2
w2022-03-15 00:54:43 DEBUG Adding type registration timestamp -> org.hibernate.type.TimestampType@6ed838af
w2022-03-15 00:54:43 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6ed838af
w2022-03-15 00:54:43 DEBUG Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6ed838af
w2022-03-15 00:54:43 DEBUG Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@14670863
w2022-03-15 00:54:43 DEBUG Adding type registration calendar -> org.hibernate.type.CalendarType@4d1f16d0
w2022-03-15 00:54:43 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4d1f16d0
w2022-03-15 00:54:43 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4d1f16d0
w2022-03-15 00:54:43 DEBUG Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6eca45f5
w2022-03-15 00:54:43 DEBUG Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@38fc4f34
w2022-03-15 00:54:43 DEBUG Adding type registration locale -> org.hibernate.type.LocaleType@61397f69
w2022-03-15 00:54:43 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@61397f69
w2022-03-15 00:54:43 DEBUG Adding type registration currency -> org.hibernate.type.CurrencyType@13cb2ffb
w2022-03-15 00:54:43 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@13cb2ffb
w2022-03-15 00:54:43 DEBUG Adding type registration timezone -> org.hibernate.type.TimeZoneType@64c316d1
w2022-03-15 00:54:43 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@64c316d1
w2022-03-15 00:54:43 DEBUG Adding type registration class -> org.hibernate.type.ClassType@600645c6
w2022-03-15 00:54:43 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.ClassType@600645c6
w2022-03-15 00:54:43 DEBUG Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@9df7552
w2022-03-15 00:54:43 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@9df7552
w2022-03-15 00:54:43 DEBUG Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@e3c024d
w2022-03-15 00:54:43 DEBUG Adding type registration binary -> org.hibernate.type.BinaryType@61d369f1
w2022-03-15 00:54:43 DEBUG Adding type registration byte[] -> org.hibernate.type.BinaryType@61d369f1
w2022-03-15 00:54:43 DEBUG Adding type registration [B -> org.hibernate.type.BinaryType@61d369f1
w2022-03-15 00:54:43 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@12748a99
w2022-03-15 00:54:43 DEBUG Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@12748a99
w2022-03-15 00:54:43 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@12748a99
w2022-03-15 00:54:43 DEBUG Adding type registration row_version -> org.hibernate.type.RowVersionType@1e42d2fe
w2022-03-15 00:54:43 DEBUG Adding type registration image -> org.hibernate.type.ImageType@71c04939
w2022-03-15 00:54:43 DEBUG Adding type registration characters -> org.hibernate.type.CharArrayType@76ab58aa
w2022-03-15 00:54:43 DEBUG Adding type registration char[] -> org.hibernate.type.CharArrayType@76ab58aa
w2022-03-15 00:54:43 DEBUG Adding type registration [C -> org.hibernate.type.CharArrayType@76ab58aa
w2022-03-15 00:54:43 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@25ee33fe
w2022-03-15 00:54:43 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@25ee33fe
w2022-03-15 00:54:43 DEBUG Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@25ee33fe
w2022-03-15 00:54:43 DEBUG Adding type registration text -> org.hibernate.type.TextType@6406c583
w2022-03-15 00:54:43 DEBUG Adding type registration ntext -> org.hibernate.type.NTextType@5432c2ca
w2022-03-15 00:54:43 DEBUG Adding type registration blob -> org.hibernate.type.BlobType@7e397292
w2022-03-15 00:54:43 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7e397292
w2022-03-15 00:54:43 DEBUG Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7bdaf70
w2022-03-15 00:54:43 DEBUG Adding type registration clob -> org.hibernate.type.ClobType@622d90fb
w2022-03-15 00:54:43 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@622d90fb
w2022-03-15 00:54:43 DEBUG Adding type registration nclob -> org.hibernate.type.NClobType@149d64c8
w2022-03-15 00:54:43 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@149d64c8
w2022-03-15 00:54:43 DEBUG Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@922a974
w2022-03-15 00:54:43 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7e4c77f
w2022-03-15 00:54:43 DEBUG Adding type registration serializable -> org.hibernate.type.SerializableType@7139056d
w2022-03-15 00:54:43 DEBUG Adding type registration object -> org.hibernate.type.ObjectType@46123358
w2022-03-15 00:54:43 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@46123358
w2022-03-15 00:54:43 DEBUG Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@673479ee
w2022-03-15 00:54:43 DEBUG Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@30eb1ea3
w2022-03-15 00:54:43 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4cadc826
w2022-03-15 00:54:43 DEBUG Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@24ab4a2c
w2022-03-15 00:54:43 DEBUG Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6014ac5e
w2022-03-15 00:54:43 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@8e2a8f9
w2022-03-15 00:54:43 DEBUG Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2a2cbd3b
w2022-03-15 00:54:43 DEBUG Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@54286878
w2022-03-15 00:54:43 INFO  HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
w2022-03-15 00:54:43 DEBUG Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@6731519b] into BootstrapContext; was [null]
w2022-03-15 00:54:43 DEBUG ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@6731519b) [was null]
w2022-03-15 00:54:43 DEBUG Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@4cc03f4c] into BootstrapContext; was [null]
w2022-03-15 00:54:43 DEBUG Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@419310e1] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@31cc4494]
w2022-03-15 00:54:43 DEBUG Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@6731519b]
w2022-03-15 00:54:43 DEBUG ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@6731519b]
w2022-03-15 00:54:43 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
w2022-03-15 00:54:43 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
w2022-03-15 00:54:43 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
w2022-03-15 00:54:43 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
w2022-03-15 00:54:43 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
w2022-03-15 00:54:43 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
w2022-03-15 00:54:43 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
w2022-03-15 00:54:43 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
w2022-03-15 00:54:43 DEBUG Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
w2022-03-15 00:54:43 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
w2022-03-15 00:54:43 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
w2022-03-15 00:54:43 DEBUG Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
w2022-03-15 00:54:43 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
w2022-03-15 00:54:43 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
w2022-03-15 00:54:43 DEBUG Database ->
       name : SQLite
    version : 3.36.0
      major : 3
      minor : 36
w2022-03-15 00:54:43 DEBUG Driver ->
       name : SQLite JDBC
    version : 3.36.0.3
      major : 3
      minor : 36
w2022-03-15 00:54:43 DEBUG JDBC version : 2.1
w2022-03-15 00:54:43 INFO  HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
w2022-03-15 00:54:43 DEBUG JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
w2022-03-15 00:54:43 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
w2022-03-15 00:54:43 DEBUG HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [2] less than 4
w2022-03-15 00:54:43 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1c06b59e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@21beaae3]
w2022-03-15 00:54:43 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
w2022-03-15 00:54:43 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.Comment
w2022-03-15 00:54:43 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 00:54:43 DEBUG Import with entity name Comment
w2022-03-15 00:54:43 DEBUG Bind entity ru.edu.helpdesk.entity.Comment on table comment
w2022-03-15 00:54:43 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 00:54:43 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Comment] is safe
w2022-03-15 00:54:43 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Comment
w2022-03-15 00:54:43 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 00:54:43 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Comment:id]
w2022-03-15 00:54:43 DEBUG building SimpleValue for id
w2022-03-15 00:54:43 DEBUG Building property id
w2022-03-15 00:54:43 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 00:54:43 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=message, insertable=true, updatable=true, unique=false}
w2022-03-15 00:54:43 DEBUG MetadataSourceProcessor property message with lazy=false
w2022-03-15 00:54:43 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Comment:message]
w2022-03-15 00:54:43 DEBUG building SimpleValue for message
w2022-03-15 00:54:43 DEBUG Building property message
w2022-03-15 00:54:43 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 00:54:43 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=ticket, insertable=true, updatable=true, unique=false}
w2022-03-15 00:54:43 DEBUG Building property ticket
w2022-03-15 00:54:43 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 00:54:43 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=user, insertable=true, updatable=true, unique=false}
w2022-03-15 00:54:43 DEBUG Building property user
w2022-03-15 00:54:43 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 00:54:43 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 00:54:43 DEBUG Import with entity name Ticket
w2022-03-15 00:54:43 DEBUG Bind entity ru.edu.helpdesk.entity.Ticket on table ticket
w2022-03-15 00:54:43 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 00:54:43 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Ticket] is safe
w2022-03-15 00:54:43 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Ticket
w2022-03-15 00:54:43 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 00:54:43 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:id]
w2022-03-15 00:54:43 DEBUG building SimpleValue for id
w2022-03-15 00:54:43 DEBUG Building property id
w2022-03-15 00:54:43 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 00:54:43 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 00:54:43 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=client, insertable=true, updatable=true, unique=false}
w2022-03-15 00:54:43 DEBUG Building property client
w2022-03-15 00:54:43 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=status, insertable=true, updatable=true, unique=false}
w2022-03-15 00:54:43 DEBUG MetadataSourceProcessor property status with lazy=false
w2022-03-15 00:54:43 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:status]
w2022-03-15 00:54:43 DEBUG building SimpleValue for status
w2022-03-15 00:54:43 DEBUG Building property status
w2022-03-15 00:54:43 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 00:54:43 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=support, insertable=true, updatable=true, unique=false}
w2022-03-15 00:54:43 DEBUG Building property support
w2022-03-15 00:54:43 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=title, insertable=true, updatable=true, unique=false}
w2022-03-15 00:54:43 DEBUG MetadataSourceProcessor property title with lazy=false
w2022-03-15 00:54:43 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:title]
w2022-03-15 00:54:43 DEBUG building SimpleValue for title
w2022-03-15 00:54:43 DEBUG Building property title
w2022-03-15 00:54:43 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.User
w2022-03-15 00:54:43 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 00:54:43 DEBUG Import with entity name User
w2022-03-15 00:54:43 DEBUG Bind entity ru.edu.helpdesk.entity.User on table user
w2022-03-15 00:54:43 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 00:54:43 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.User] is safe
w2022-03-15 00:54:43 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.User
w2022-03-15 00:54:43 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 00:54:43 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:id]
w2022-03-15 00:54:43 DEBUG building SimpleValue for id
w2022-03-15 00:54:43 DEBUG Building property id
w2022-03-15 00:54:43 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 00:54:43 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
w2022-03-15 00:54:43 DEBUG MetadataSourceProcessor property firstName with lazy=false
w2022-03-15 00:54:43 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:firstName]
w2022-03-15 00:54:43 DEBUG building SimpleValue for firstName
w2022-03-15 00:54:43 DEBUG Building property firstName
w2022-03-15 00:54:43 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
w2022-03-15 00:54:43 DEBUG MetadataSourceProcessor property lastName with lazy=false
w2022-03-15 00:54:43 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:lastName]
w2022-03-15 00:54:43 DEBUG building SimpleValue for lastName
w2022-03-15 00:54:43 DEBUG Building property lastName
w2022-03-15 00:54:43 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=login, insertable=true, updatable=true, unique=false}
w2022-03-15 00:54:43 DEBUG MetadataSourceProcessor property login with lazy=false
w2022-03-15 00:54:43 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:login]
w2022-03-15 00:54:43 DEBUG building SimpleValue for login
w2022-03-15 00:54:43 DEBUG Building property login
w2022-03-15 00:54:43 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
w2022-03-15 00:54:43 DEBUG MetadataSourceProcessor property password with lazy=false
w2022-03-15 00:54:43 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:password]
w2022-03-15 00:54:43 DEBUG building SimpleValue for password
w2022-03-15 00:54:43 DEBUG Building property password
w2022-03-15 00:54:43 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=role, insertable=true, updatable=true, unique=false}
w2022-03-15 00:54:43 DEBUG MetadataSourceProcessor property role with lazy=false
w2022-03-15 00:54:43 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:role]
w2022-03-15 00:54:43 DEBUG building SimpleValue for role
w2022-03-15 00:54:43 DEBUG Building property role
w2022-03-15 00:54:43 DEBUG Starting fillSimpleValue for id
w2022-03-15 00:54:43 DEBUG Starting fillSimpleValue for message
w2022-03-15 00:54:43 DEBUG Starting fillSimpleValue for id
w2022-03-15 00:54:43 DEBUG Starting fillSimpleValue for status
w2022-03-15 00:54:43 DEBUG Starting fillSimpleValue for title
w2022-03-15 00:54:43 DEBUG Starting fillSimpleValue for id
w2022-03-15 00:54:43 DEBUG Starting fillSimpleValue for firstName
w2022-03-15 00:54:43 DEBUG Starting fillSimpleValue for lastName
w2022-03-15 00:54:43 DEBUG Starting fillSimpleValue for login
w2022-03-15 00:54:43 DEBUG Starting fillSimpleValue for password
w2022-03-15 00:54:43 DEBUG Starting fillSimpleValue for role
w2022-03-15 00:54:43 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [comment]
w2022-03-15 00:54:43 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [ticket]
w2022-03-15 00:54:43 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [user]
w2022-03-15 00:54:43 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 00:54:43 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 00:54:43 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 00:54:43 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 00:54:43 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 00:54:43 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 00:54:43 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 00:54:43 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 00:54:43 DEBUG Building session factory
w2022-03-15 00:54:43 DEBUG SessionFactory name : null
w2022-03-15 00:54:43 DEBUG Automatic flush during beforeCompletion(): enabled
w2022-03-15 00:54:43 DEBUG Automatic session close at end of transaction: disabled
w2022-03-15 00:54:43 DEBUG Statistics: disabled
w2022-03-15 00:54:43 DEBUG Deleted entity synthetic identifier rollback: disabled
w2022-03-15 00:54:43 DEBUG Default entity-mode: pojo
w2022-03-15 00:54:43 DEBUG Check Nullability in Core (should be disabled when Bean Validation is on): enabled
w2022-03-15 00:54:43 DEBUG Allow initialization of lazy state outside session : disabled
w2022-03-15 00:54:43 DEBUG Using BatchFetchStyle : LEGACY
w2022-03-15 00:54:43 DEBUG Default batch fetch size: -1
w2022-03-15 00:54:43 DEBUG Maximum outer join fetch depth: null
w2022-03-15 00:54:43 DEBUG Default null ordering: NONE
w2022-03-15 00:54:43 DEBUG Order SQL updates by primary key: disabled
w2022-03-15 00:54:43 DEBUG Order SQL inserts for batching: disabled
w2022-03-15 00:54:43 DEBUG multi-tenancy strategy : NONE
w2022-03-15 00:54:43 DEBUG JTA Track by Thread: enabled
w2022-03-15 00:54:43 DEBUG Query language substitutions: {}
w2022-03-15 00:54:43 DEBUG Named query checking : enabled
w2022-03-15 00:54:43 DEBUG Second-level cache: disabled
w2022-03-15 00:54:43 DEBUG Second-level query cache: disabled
w2022-03-15 00:54:43 DEBUG Second-level query cache factory: null
w2022-03-15 00:54:43 DEBUG Second-level cache region prefix: null
w2022-03-15 00:54:43 DEBUG Optimize second-level cache for minimal puts: disabled
w2022-03-15 00:54:43 DEBUG Structured second-level cache entries: disabled
w2022-03-15 00:54:43 DEBUG Second-level cache direct-reference entries: disabled
w2022-03-15 00:54:43 DEBUG Automatic eviction of collection cache: disabled
w2022-03-15 00:54:43 DEBUG JDBC batch size: 1
w2022-03-15 00:54:43 DEBUG JDBC batch updates for versioned data: enabled
w2022-03-15 00:54:43 DEBUG Scrollable result sets: disabled
w2022-03-15 00:54:43 DEBUG Wrap result sets: disabled
w2022-03-15 00:54:43 DEBUG JDBC3 getGeneratedKeys(): enabled
w2022-03-15 00:54:43 DEBUG JDBC result set fetch size: null
w2022-03-15 00:54:43 DEBUG Connection release mode: ON_CLOSE
w2022-03-15 00:54:43 DEBUG Generate SQL with comments: disabled
w2022-03-15 00:54:43 DEBUG JPA compliance - query : disabled
w2022-03-15 00:54:43 DEBUG JPA compliance - closed-handling : disabled
w2022-03-15 00:54:43 DEBUG JPA compliance - lists : disabled
w2022-03-15 00:54:43 DEBUG JPA compliance - transactions : disabled
w2022-03-15 00:54:43 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 00:54:43 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 00:54:43 DEBUG Session factory constructed with filter configurations : {}
w2022-03-15 00:54:43 DEBUG Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=true, java.specification.version=1.8, file.encoding.pkg=sun.io, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@6ddaffe3, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.SQLiteDialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\charsets.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\cldrdata.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\dnsns.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\jaccess.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\localedata.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\nashorn.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunec.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunmscapi.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\zipfs.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jce.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jfr.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jsse.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\management-agent.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\resources.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\rt.jar;C:\Users\Ольга\Desktop\Java\Project\Project1\helpdeskproject\target\classes;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\2.6.4\spring-boot-starter-data-jpa-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\2.6.4\spring-boot-starter-jdbc-2.6.4.jar;C:\Users\Ольга\.m2\repository\com\zaxxer\HikariCP\4.0.3\HikariCP-4.0.3.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-jdbc\5.3.16\spring-jdbc-5.3.16.jar;C:\Users\Ольга\.m2\repository\jakarta\transaction\jakarta.transaction-api\1.3.3\jakarta.transaction-api-1.3.3.jar;C:\Users\Ольга\.m2\repository\jakarta\persistence\jakarta.persistence-api\2.2.3\jakarta.persistence-api-2.2.3.jar;C:\Users\Ольга\.m2\repository\org\hibernate\hibernate-core\5.6.5.Final\hibernate-core-5.6.5.Final.jar;C:\Users\Ольга\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy\1.11.22\byte-buddy-1.11.22.jar;C:\Users\Ольга\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ольга\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Ольга\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.6\jaxb-runtime-2.3.6.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\txw2\2.3.6\txw2-2.3.6.jar;C:\Users\Ольга\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.12\istack-commons-runtime-3.0.12.jar;C:\Users\Ольга\.m2\repository\com\sun\activation\jakarta.activation\1.2.2\jakarta.activation-1.2.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\data\spring-data-jpa\2.6.2\spring-data-jpa-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\data\spring-data-commons\2.6.2\spring-data-commons-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-orm\5.3.16\spring-orm-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-context\5.3.16\spring-context-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-tx\5.3.16\spring-tx-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-beans\5.3.16\spring-beans-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-aspects\5.3.16\spring-aspects-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-security\2.6.4\spring-boot-starter-security-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter\2.6.4\spring-boot-starter-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-logging\2.6.4\spring-boot-starter-logging-2.6.4.jar;C:\Users\Ольга\.m2\repository\ch\qos\logback\logback-classic\1.2.10\logback-classic-1.2.10.jar;C:\Users\Ольга\.m2\repository\ch\qos\logback\logback-core\1.2.10\logback-core-1.2.10.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.17.1\log4j-to-slf4j-2.17.1.jar;C:\Users\Ольга\.m2\repository\org\slf4j\jul-to-slf4j\1.7.36\jul-to-slf4j-1.7.36.jar;C:\Users\Ольга\.m2\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;C:\Users\Ольга\.m2\repository\org\yaml\snakeyaml\1.29\snakeyaml-1.29.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-aop\5.3.16\spring-aop-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-config\5.6.2\spring-security-config-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-web\5.6.2\spring-security-web-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-expression\5.3.16\spring-expression-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-web\2.6.4\spring-boot-starter-web-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-json\2.6.4\spring-boot-starter-json-2.6.4.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.13.1\jackson-datatype-jdk8-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.13.1\jackson-datatype-jsr310-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.13.1\jackson-module-parameter-names-2.13.1.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\2.6.4\spring-boot-starter-tomcat-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.58\tomcat-embed-core-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\9.0.58\tomcat-embed-el-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.58\tomcat-embed-websocket-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-web\5.3.16\spring-web-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-webmvc\5.3.16\spring-webmvc-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-devtools\2.6.4\spring-boot-devtools-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot\2.6.4\spring-boot-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\2.6.4\spring-boot-autoconfigure-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\xerial\sqlite-jdbc\3.36.0.3\sqlite-jdbc-3.36.0.3.jar;C:\Users\Ольга\.m2\repository\com\zsoltfabok\sqlite-dialect\1.0\sqlite-dialect-1.0.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-aop\2.6.2\spring-boot-starter-aop-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\aspectj\aspectjweaver\1.9.7\aspectjweaver-1.9.7.jar;C:\Users\Ольга\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.3\jakarta.xml.bind-api-2.3.3.jar;C:\Users\Ольга\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.2\jakarta.activation-api-1.2.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-core\5.3.16\spring-core-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-jcl\5.3.16\spring-jcl-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-core\5.6.2\spring-security-core-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-crypto\5.6.2\spring-security-crypto-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\projectlombok\lombok\1.18.22\lombok-1.18.22.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\2.6.4\spring-boot-starter-thymeleaf-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\thymeleaf-spring5\3.0.15.RELEASE\thymeleaf-spring5-3.0.15.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\thymeleaf\3.0.15.RELEASE\thymeleaf-3.0.15.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\attoparser\attoparser\2.0.5.RELEASE\attoparser-2.0.5.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-java8time\3.0.4.RELEASE\thymeleaf-extras-java8time-3.0.4.RELEASE.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.1\jackson-databind-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.1\jackson-annotations-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.1\jackson-core-2.13.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-api\2.4.1\log4j-api-2.4.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-core\2.4.1\log4j-core-2.4.1.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.2\lib\idea_rt.jar, java.vm.vendor=Temurin, sun.arch.data.model=64, user.variant=, java.vendor.url=https://adoptium.net/, catalina.useNaming=false, user.timezone=Europe/Moscow, jakarta.persistence.sharedCache.mode=UNSPECIFIED, os.name=Windows 10, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), user.country=RU, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\bin, sun.java.command=ru.edu.helpdesk.HelpdeskApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@66b0818d, com.sun.management.jmxremote=, javax.persistence.sharedCache.mode=UNSPECIFIED, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, user.home=C:\Users\Ольга, user.language=ru, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre, file.separator=\, spring.output.ansi.enabled=always, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, sun.boot.class.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\resources.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\rt.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\sunrsasign.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jsse.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jce.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\charsets.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jfr.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\classes, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_312-b07, user.name=Эльдорадо, spring.jmx.enabled=true, path.separator=;, os.version=10.0, java.endorsed.dirs=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\endorsed, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=default, spring.beaninfo.ignore=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=C:\Users\134E~1\AppData\Local\Temp\, catalina.home=C:\Users\Ольга\AppData\Local\Temp\tomcat.8080.7475332794283683903, java.version=1.8.0_312, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\Ольга\Desktop\Java\Project\Project1\helpdeskproject, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=2304, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\Ольга\AppData\Local\Temp\tomcat.8080.7475332794283683903, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@1801cd03, java.library.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\windows\System32\OpenSSH\;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\Program Files\apache-maven-3.8.4\bin;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Ольга\AppData\Local\Microsoft\WindowsApps;C:\Users\Ольга\AppData\Local\Programs\Microsoft VS Code\bin;C:\SQLite;C:\Users\Ольга\AppData\Roaming\npm;C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.2\bin;;., java.vendor=Temurin, java.vm.info=mixed mode, java.vm.version=25.312-b07, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, java.ext.dirs=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext;C:\windows\Sun\Java\lib\ext, hibernate.connection.datasource=HikariDataSource (HikariPool-1), hibernate.hbm2ddl.import_files=data/import.sql, java.class.version=52.0}
w2022-03-15 00:54:43 DEBUG Skipping JACC integration as it was not enabled
w2022-03-15 00:54:43 DEBUG Using ORDINAL-based conversion for Enum ru.edu.helpdesk.entity.UserRole
w2022-03-15 00:54:43 DEBUG Using ORDINAL-based conversion for Enum ru.edu.helpdesk.entity.TicketStatus
w2022-03-15 00:54:43 DEBUG Instantiated session factory
w2022-03-15 00:54:43 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1c06b59e] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@76bcc1d9]
w2022-03-15 00:54:43 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.User] is safe
w2022-03-15 00:54:43 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.User
w2022-03-15 00:54:43 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:54:43 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:54:43 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:54:43 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:54:43 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Ticket] is safe
w2022-03-15 00:54:43 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Ticket
w2022-03-15 00:54:43 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:54:43 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:54:43 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:54:43 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:54:43 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:54:43 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:54:43 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:54:43 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:54:43 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Comment] is safe
w2022-03-15 00:54:43 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Comment
w2022-03-15 00:54:43 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:54:43 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:54:43 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:54:43 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:54:43 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.User
w2022-03-15 00:54:43 DEBUG  Version select: select id from user where id =?
w2022-03-15 00:54:43 DEBUG  Snapshot select: select user_.id, user_.first_name as first_na2_2_, user_.last_name as last_nam3_2_, user_.login as login4_2_, user_.password as password5_2_, user_.role as role6_2_ from user user_ where user_.id=?
w2022-03-15 00:54:43 DEBUG  Insert 0: insert into user (first_name, last_name, login, password, role, id) values (?, ?, ?, ?, ?, ?)
w2022-03-15 00:54:43 DEBUG  Update 0: update user set first_name=?, last_name=?, login=?, password=?, role=? where id=?
w2022-03-15 00:54:43 DEBUG  Delete 0: delete from user where id=?
w2022-03-15 00:54:43 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b3cba1a]
w2022-03-15 00:54:43 DEBUG Visiting attribute path : firstName
w2022-03-15 00:54:43 DEBUG Visiting attribute path : lastName
w2022-03-15 00:54:43 DEBUG Visiting attribute path : login
w2022-03-15 00:54:43 DEBUG Visiting attribute path : password
w2022-03-15 00:54:43 DEBUG Visiting attribute path : role
w2022-03-15 00:54:43 DEBUG Building LoadPlan...
w2022-03-15 00:54:43 DEBUG processing queryspace <gen:0>
w2022-03-15 00:54:43 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.User)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

w2022-03-15 00:54:43 DEBUG Static select for entity ru.edu.helpdesk.entity.User [NONE]: select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 00:54:43 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.Ticket
w2022-03-15 00:54:43 DEBUG  Version select: select id from ticket where id =?
w2022-03-15 00:54:43 DEBUG  Snapshot select: select ticket_.id, ticket_.client_id as client_i4_1_, ticket_.status as status2_1_, ticket_.support_id as support_5_1_, ticket_.title as title3_1_ from ticket ticket_ where ticket_.id=?
w2022-03-15 00:54:43 DEBUG  Insert 0: insert into ticket (client_id, status, support_id, title, id) values (?, ?, ?, ?, ?)
w2022-03-15 00:54:43 DEBUG  Update 0: update ticket set client_id=?, status=?, support_id=?, title=? where id=?
w2022-03-15 00:54:43 DEBUG  Delete 0: delete from ticket where id=?
w2022-03-15 00:54:43 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67a6ba5b]
w2022-03-15 00:54:43 DEBUG Visiting attribute path : client
w2022-03-15 00:54:43 DEBUG Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b2cb322]
w2022-03-15 00:54:43 DEBUG Visiting attribute path : client.firstName
w2022-03-15 00:54:43 DEBUG Visiting attribute path : client.lastName
w2022-03-15 00:54:43 DEBUG Visiting attribute path : client.login
w2022-03-15 00:54:43 DEBUG Visiting attribute path : client.password
w2022-03-15 00:54:43 DEBUG Visiting attribute path : client.role
w2022-03-15 00:54:43 DEBUG Visiting attribute path : status
w2022-03-15 00:54:43 DEBUG Visiting attribute path : support
w2022-03-15 00:54:43 DEBUG Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@363c9964]
w2022-03-15 00:54:43 DEBUG Visiting attribute path : support.firstName
w2022-03-15 00:54:43 DEBUG Visiting attribute path : support.lastName
w2022-03-15 00:54:43 DEBUG Visiting attribute path : support.login
w2022-03-15 00:54:43 DEBUG Visiting attribute path : support.password
w2022-03-15 00:54:43 DEBUG Visiting attribute path : support.role
w2022-03-15 00:54:43 DEBUG Visiting attribute path : title
w2022-03-15 00:54:43 DEBUG Building LoadPlan...
w2022-03-15 00:54:43 DEBUG processing queryspace <gen:0>
w2022-03-15 00:54:43 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.Ticket)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.Ticket, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.Ticket)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:1>, path=ru.edu.helpdesk.entity.Ticket.client)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:2>, path=ru.edu.helpdesk.entity.Ticket.support)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.Ticket)
          - SQL table alias mapping - ticket0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(client)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
          - JOIN (JoinDefinedByMetadata(support)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user2_
                - alias suffix - 2_
                - suffixed key columns - {id1_2_2_}

w2022-03-15 00:54:43 DEBUG Static select for entity ru.edu.helpdesk.entity.Ticket [NONE]: select ticket0_.id as id1_1_0_, ticket0_.client_id as client_i4_1_0_, ticket0_.status as status2_1_0_, ticket0_.support_id as support_5_1_0_, ticket0_.title as title3_1_0_, user1_.id as id1_2_1_, user1_.first_name as first_na2_2_1_, user1_.last_name as last_nam3_2_1_, user1_.login as login4_2_1_, user1_.password as password5_2_1_, user1_.role as role6_2_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id left outer join user user2_ on ticket0_.support_id=user2_.id where ticket0_.id=?
w2022-03-15 00:54:43 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.Comment
w2022-03-15 00:54:43 DEBUG  Version select: select id from comment where id =?
w2022-03-15 00:54:43 DEBUG  Snapshot select: select comment_.id, comment_.message as message2_0_, comment_.ticket_id as ticket_i3_0_, comment_.user_id as user_id4_0_ from comment comment_ where comment_.id=?
w2022-03-15 00:54:43 DEBUG  Insert 0: insert into comment (message, ticket_id, user_id, id) values (?, ?, ?, ?)
w2022-03-15 00:54:43 DEBUG  Update 0: update comment set message=?, ticket_id=?, user_id=? where id=?
w2022-03-15 00:54:43 DEBUG  Delete 0: delete from comment where id=?
w2022-03-15 00:54:43 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f202eb9]
w2022-03-15 00:54:43 DEBUG Visiting attribute path : message
w2022-03-15 00:54:43 DEBUG Visiting attribute path : ticket
w2022-03-15 00:54:43 DEBUG Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e9994db]
w2022-03-15 00:54:43 DEBUG Visiting attribute path : ticket.client
w2022-03-15 00:54:43 DEBUG Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ba6fbb5]
w2022-03-15 00:54:43 DEBUG Visiting attribute path : ticket.client.firstName
w2022-03-15 00:54:43 DEBUG Visiting attribute path : ticket.client.lastName
w2022-03-15 00:54:43 DEBUG Visiting attribute path : ticket.client.login
w2022-03-15 00:54:43 DEBUG Visiting attribute path : ticket.client.password
w2022-03-15 00:54:43 DEBUG Visiting attribute path : ticket.client.role
w2022-03-15 00:54:43 DEBUG Visiting attribute path : ticket.status
w2022-03-15 00:54:43 DEBUG Visiting attribute path : ticket.support
w2022-03-15 00:54:43 DEBUG Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7de8788f]
w2022-03-15 00:54:43 DEBUG Visiting attribute path : ticket.support.firstName
w2022-03-15 00:54:43 DEBUG Visiting attribute path : ticket.support.lastName
w2022-03-15 00:54:43 DEBUG Visiting attribute path : ticket.support.login
w2022-03-15 00:54:43 DEBUG Visiting attribute path : ticket.support.password
w2022-03-15 00:54:43 DEBUG Visiting attribute path : ticket.support.role
w2022-03-15 00:54:43 DEBUG Visiting attribute path : ticket.title
w2022-03-15 00:54:43 DEBUG Visiting attribute path : user
w2022-03-15 00:54:43 DEBUG Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4eff1256]
w2022-03-15 00:54:43 DEBUG Visiting attribute path : user.firstName
w2022-03-15 00:54:43 DEBUG Visiting attribute path : user.lastName
w2022-03-15 00:54:43 DEBUG Visiting attribute path : user.login
w2022-03-15 00:54:43 DEBUG Visiting attribute path : user.password
w2022-03-15 00:54:43 DEBUG Visiting attribute path : user.role
w2022-03-15 00:54:43 DEBUG Building LoadPlan...
w2022-03-15 00:54:43 DEBUG processing queryspace <gen:0>
w2022-03-15 00:54:43 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.Comment)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.Comment, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.Comment)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.Ticket, querySpaceUid=<gen:1>, path=ru.edu.helpdesk.entity.Comment.ticket)
             - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:2>, path=ru.edu.helpdesk.entity.Comment.ticket.client)
             - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:3>, path=ru.edu.helpdesk.entity.Comment.ticket.support)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:4>, path=ru.edu.helpdesk.entity.Comment.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(ticket)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ru.edu.helpdesk.entity.Ticket)
                - SQL table alias mapping - ticket1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(client)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=ru.edu.helpdesk.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}
                - JOIN (JoinDefinedByMetadata(support)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=ru.edu.helpdesk.entity.User)
                      - SQL table alias mapping - user3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_2_3_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user4_
                - alias suffix - 4_
                - suffixed key columns - {id1_2_4_}

w2022-03-15 00:54:43 DEBUG Static select for entity ru.edu.helpdesk.entity.Comment [NONE]: select comment0_.id as id1_0_0_, comment0_.message as message2_0_0_, comment0_.ticket_id as ticket_i3_0_0_, comment0_.user_id as user_id4_0_0_, ticket1_.id as id1_1_1_, ticket1_.client_id as client_i4_1_1_, ticket1_.status as status2_1_1_, ticket1_.support_id as support_5_1_1_, ticket1_.title as title3_1_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_, user3_.id as id1_2_3_, user3_.first_name as first_na2_2_3_, user3_.last_name as last_nam3_2_3_, user3_.login as login4_2_3_, user3_.password as password5_2_3_, user3_.role as role6_2_3_, user4_.id as id1_2_4_, user4_.first_name as first_na2_2_4_, user4_.last_name as last_nam3_2_4_, user4_.login as login4_2_4_, user4_.password as password5_2_4_, user4_.role as role6_2_4_ from comment comment0_ left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id left outer join user user2_ on ticket1_.client_id=user2_.id left outer join user user3_ on ticket1_.support_id=user3_.id left outer join user user4_ on comment0_.user_id=user4_.id where comment0_.id=?
w2022-03-15 00:54:43 DEBUG drop table if exists comment
w2022-03-15 00:54:43 DEBUG drop table if exists hibernate_sequence
w2022-03-15 00:54:43 DEBUG drop table if exists ticket
w2022-03-15 00:54:43 DEBUG drop table if exists user
w2022-03-15 00:54:43 DEBUG create table comment (id bigint not null, message varchar(255) not null, ticket_id bigint, user_id bigint, primary key (id))
w2022-03-15 00:54:43 DEBUG create table hibernate_sequence (next_val bigint)
w2022-03-15 00:54:43 DEBUG insert into hibernate_sequence values ( 1 )
w2022-03-15 00:54:43 DEBUG create table ticket (id bigint not null, status integer, title varchar(255) not null, client_id bigint, support_id bigint, primary key (id))
w2022-03-15 00:54:43 DEBUG create table user (id bigint not null, first_name varchar(255), last_name varchar(255), login varchar(255) not null, password varchar(255) not null, role integer, primary key (id))
w2022-03-15 00:54:43 INFO  HHH000476: Executing import script 'file:/C:/Users/%d0%9e%d0%bb%d1%8c%d0%b3%d0%b0/Desktop/Java/Project/Project1/helpdeskproject/target/classes/data/import.sql'
w2022-03-15 00:54:43 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (1, 'admin', 'admin', 'admin', 'admin', 0)
w2022-03-15 00:54:43 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (2, 'support', 'support', 'support', 'support', 1)
w2022-03-15 00:54:43 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (3, 'user1', 'user1', 'user1', 'user1', 2)
w2022-03-15 00:54:43 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (4, 'user2', 'user2', 'user2', 'user2', 2)
w2022-03-15 00:54:43 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (1, 1, 'Hello user1', 3, 2)
w2022-03-15 00:54:43 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (2, 0, 'Title2', 3, NULL)
w2022-03-15 00:54:43 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (3, 0, 'Message user2', 4, NULL)
w2022-03-15 00:54:43 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (1, "Hello ticket1", 1, 3)
w2022-03-15 00:54:43 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (2, "Hello ticket2", 2, 3)
w2022-03-15 00:54:43 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (3, "Hello ticket11", 1, 2)
w2022-03-15 00:54:43 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (4, "Hello ticket111", 1, 2)
w2022-03-15 00:54:43 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (5, "Hello ticket22", 2, 2)
w2022-03-15 00:54:43 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (6, "Hello ticket3", 3, 4)
w2022-03-15 00:54:43 DEBUG UPDATE hibernate_sequence SET next_val = 8 WHERE next_val = 1
w2022-03-15 00:54:43 INFO  HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
w2022-03-15 00:54:43 DEBUG Checking 0 named HQL queries
w2022-03-15 00:54:43 DEBUG Checking 0 named SQL queries
w2022-03-15 00:54:43 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 00:54:43 DEBUG Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7e20ee3a
w2022-03-15 00:54:43 DEBUG Registering SessionFactory: 0acc53a7-c12c-4629-8f60-1f94f6d4ae0f (<unnamed>)
w2022-03-15 00:54:43 DEBUG Not binding SessionFactory to JNDI, no JNDI name configured
w2022-03-15 00:54:44 DEBUG Statistics initialized [enabled=false]
w2022-03-15 00:54:44 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 00:54:44 DEBUG HHH000031: Closing
w2022-03-15 00:54:44 DEBUG Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@772efe2f] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@76bcc1d9]
w2022-03-15 00:54:44 DEBUG Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
w2022-03-15 00:54:44 DEBUG Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
w2022-03-15 00:55:07 DEBUG Logging Provider: org.jboss.logging.Log4j2LoggerProvider
w2022-03-15 00:55:07 DEBUG PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@1034a93f
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/%d0%9e%d0%bb%d1%8c%d0%b3%d0%b0/Desktop/Java/Project/Project1/helpdeskproject/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		ru.edu.helpdesk.entity.Comment
		ru.edu.helpdesk.entity.Ticket
		ru.edu.helpdesk.entity.User]
	Mapping files names []
	Properties []
w2022-03-15 00:55:07 DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
w2022-03-15 00:55:07 DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
w2022-03-15 00:55:07 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
w2022-03-15 00:55:08 INFO  HHH000412: Hibernate ORM core version 5.6.5.Final
w2022-03-15 00:55:08 DEBUG HHH000206: hibernate.properties not found
w2022-03-15 00:55:08 DEBUG Overriding existing service binding [org.hibernate.secure.spi.JaccService]
w2022-03-15 00:55:08 DEBUG Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
w2022-03-15 00:55:08 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
w2022-03-15 00:55:08 INFO  HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
w2022-03-15 00:55:08 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@7791e4c1
w2022-03-15 00:55:08 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@7791e4c1
w2022-03-15 00:55:08 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7791e4c1
w2022-03-15 00:55:08 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@38ee5ac2
w2022-03-15 00:55:08 DEBUG Adding type registration true_false -> org.hibernate.type.TrueFalseType@3d3c0e64
w2022-03-15 00:55:08 DEBUG Adding type registration yes_no -> org.hibernate.type.YesNoType@2d14f695
w2022-03-15 00:55:08 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@d4e8140
w2022-03-15 00:55:08 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@d4e8140
w2022-03-15 00:55:08 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@d4e8140
w2022-03-15 00:55:08 DEBUG Adding type registration character -> org.hibernate.type.CharacterType@f1f9fad
w2022-03-15 00:55:08 DEBUG Adding type registration char -> org.hibernate.type.CharacterType@f1f9fad
w2022-03-15 00:55:08 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@f1f9fad
w2022-03-15 00:55:08 DEBUG Adding type registration short -> org.hibernate.type.ShortType@3f8ac4e6
w2022-03-15 00:55:08 DEBUG Adding type registration short -> org.hibernate.type.ShortType@3f8ac4e6
w2022-03-15 00:55:08 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3f8ac4e6
w2022-03-15 00:55:08 DEBUG Adding type registration integer -> org.hibernate.type.IntegerType@7a155803
w2022-03-15 00:55:08 DEBUG Adding type registration int -> org.hibernate.type.IntegerType@7a155803
w2022-03-15 00:55:08 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7a155803
w2022-03-15 00:55:08 DEBUG Adding type registration long -> org.hibernate.type.LongType@79bd6578
w2022-03-15 00:55:08 DEBUG Adding type registration long -> org.hibernate.type.LongType@79bd6578
w2022-03-15 00:55:08 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.LongType@79bd6578
w2022-03-15 00:55:08 DEBUG Adding type registration float -> org.hibernate.type.FloatType@cc8c96
w2022-03-15 00:55:08 DEBUG Adding type registration float -> org.hibernate.type.FloatType@cc8c96
w2022-03-15 00:55:08 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.FloatType@cc8c96
w2022-03-15 00:55:08 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@3f44e91
w2022-03-15 00:55:08 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@3f44e91
w2022-03-15 00:55:08 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3f44e91
w2022-03-15 00:55:08 DEBUG Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@627e7a05
w2022-03-15 00:55:08 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@627e7a05
w2022-03-15 00:55:08 DEBUG Adding type registration big_integer -> org.hibernate.type.BigIntegerType@639e7be9
w2022-03-15 00:55:08 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@639e7be9
w2022-03-15 00:55:08 DEBUG Adding type registration string -> org.hibernate.type.StringType@5c211e3
w2022-03-15 00:55:08 DEBUG Adding type registration java.lang.String -> org.hibernate.type.StringType@5c211e3
w2022-03-15 00:55:08 DEBUG Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2c160dcc
w2022-03-15 00:55:08 DEBUG Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@691db940
w2022-03-15 00:55:08 DEBUG Adding type registration url -> org.hibernate.type.UrlType@4b890038
w2022-03-15 00:55:08 DEBUG Adding type registration java.net.URL -> org.hibernate.type.UrlType@4b890038
w2022-03-15 00:55:08 DEBUG Adding type registration Duration -> org.hibernate.type.DurationType@38f4c18e
w2022-03-15 00:55:08 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.DurationType@38f4c18e
w2022-03-15 00:55:08 DEBUG Adding type registration Instant -> org.hibernate.type.InstantType@30326bc1
w2022-03-15 00:55:08 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.InstantType@30326bc1
w2022-03-15 00:55:08 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@52b340de
w2022-03-15 00:55:08 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@52b340de
w2022-03-15 00:55:08 DEBUG Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6153763d
w2022-03-15 00:55:08 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6153763d
w2022-03-15 00:55:08 DEBUG Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@63317f45
w2022-03-15 00:55:08 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@63317f45
w2022-03-15 00:55:08 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7f83003c
w2022-03-15 00:55:08 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7f83003c
w2022-03-15 00:55:08 DEBUG Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@6139f832
w2022-03-15 00:55:08 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@6139f832
w2022-03-15 00:55:08 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@24be2c64
w2022-03-15 00:55:08 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@24be2c64
w2022-03-15 00:55:08 DEBUG Adding type registration date -> org.hibernate.type.DateType@2b99cf63
w2022-03-15 00:55:08 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.DateType@2b99cf63
w2022-03-15 00:55:08 DEBUG Adding type registration time -> org.hibernate.type.TimeType@2a798bfa
w2022-03-15 00:55:08 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2a798bfa
w2022-03-15 00:55:08 DEBUG Adding type registration timestamp -> org.hibernate.type.TimestampType@6a23ed80
w2022-03-15 00:55:08 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6a23ed80
w2022-03-15 00:55:08 DEBUG Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6a23ed80
w2022-03-15 00:55:08 DEBUG Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5211b948
w2022-03-15 00:55:08 DEBUG Adding type registration calendar -> org.hibernate.type.CalendarType@716ac074
w2022-03-15 00:55:08 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@716ac074
w2022-03-15 00:55:08 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@716ac074
w2022-03-15 00:55:08 DEBUG Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@66cff020
w2022-03-15 00:55:08 DEBUG Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@3a80cdc5
w2022-03-15 00:55:08 DEBUG Adding type registration locale -> org.hibernate.type.LocaleType@324cadd6
w2022-03-15 00:55:08 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@324cadd6
w2022-03-15 00:55:08 DEBUG Adding type registration currency -> org.hibernate.type.CurrencyType@121b8f52
w2022-03-15 00:55:08 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@121b8f52
w2022-03-15 00:55:08 DEBUG Adding type registration timezone -> org.hibernate.type.TimeZoneType@55e534ac
w2022-03-15 00:55:08 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@55e534ac
w2022-03-15 00:55:08 DEBUG Adding type registration class -> org.hibernate.type.ClassType@72924ebc
w2022-03-15 00:55:08 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.ClassType@72924ebc
w2022-03-15 00:55:08 DEBUG Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7b5aefda
w2022-03-15 00:55:08 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7b5aefda
w2022-03-15 00:55:08 DEBUG Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4d82a571
w2022-03-15 00:55:08 DEBUG Adding type registration binary -> org.hibernate.type.BinaryType@769a3018
w2022-03-15 00:55:08 DEBUG Adding type registration byte[] -> org.hibernate.type.BinaryType@769a3018
w2022-03-15 00:55:08 DEBUG Adding type registration [B -> org.hibernate.type.BinaryType@769a3018
w2022-03-15 00:55:08 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7a1bd545
w2022-03-15 00:55:08 DEBUG Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7a1bd545
w2022-03-15 00:55:08 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7a1bd545
w2022-03-15 00:55:08 DEBUG Adding type registration row_version -> org.hibernate.type.RowVersionType@1699c044
w2022-03-15 00:55:08 DEBUG Adding type registration image -> org.hibernate.type.ImageType@36606770
w2022-03-15 00:55:08 DEBUG Adding type registration characters -> org.hibernate.type.CharArrayType@7c4cc536
w2022-03-15 00:55:08 DEBUG Adding type registration char[] -> org.hibernate.type.CharArrayType@7c4cc536
w2022-03-15 00:55:08 DEBUG Adding type registration [C -> org.hibernate.type.CharArrayType@7c4cc536
w2022-03-15 00:55:08 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1aa5c5df
w2022-03-15 00:55:08 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1aa5c5df
w2022-03-15 00:55:08 DEBUG Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1aa5c5df
w2022-03-15 00:55:08 DEBUG Adding type registration text -> org.hibernate.type.TextType@7b228f73
w2022-03-15 00:55:08 DEBUG Adding type registration ntext -> org.hibernate.type.NTextType@48745367
w2022-03-15 00:55:08 DEBUG Adding type registration blob -> org.hibernate.type.BlobType@616a9088
w2022-03-15 00:55:08 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@616a9088
w2022-03-15 00:55:08 DEBUG Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2474f1d4
w2022-03-15 00:55:08 DEBUG Adding type registration clob -> org.hibernate.type.ClobType@3b309c37
w2022-03-15 00:55:08 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3b309c37
w2022-03-15 00:55:08 DEBUG Adding type registration nclob -> org.hibernate.type.NClobType@7d92ce82
w2022-03-15 00:55:08 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7d92ce82
w2022-03-15 00:55:08 DEBUG Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@29f797d0
w2022-03-15 00:55:08 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3ff07151
w2022-03-15 00:55:08 DEBUG Adding type registration serializable -> org.hibernate.type.SerializableType@3a9a4ea3
w2022-03-15 00:55:08 DEBUG Adding type registration object -> org.hibernate.type.ObjectType@2c606e61
w2022-03-15 00:55:08 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2c606e61
w2022-03-15 00:55:08 DEBUG Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@190feec3
w2022-03-15 00:55:08 DEBUG Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@363388e5
w2022-03-15 00:55:08 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3fdf98af
w2022-03-15 00:55:08 DEBUG Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@867fb33
w2022-03-15 00:55:08 DEBUG Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6ef8750a
w2022-03-15 00:55:08 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@44a6bc90
w2022-03-15 00:55:08 DEBUG Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7ff5e4b
w2022-03-15 00:55:08 DEBUG Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@307693e4
w2022-03-15 00:55:08 INFO  HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
w2022-03-15 00:55:08 DEBUG Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@1aa44c55] into BootstrapContext; was [null]
w2022-03-15 00:55:08 DEBUG ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@1aa44c55) [was null]
w2022-03-15 00:55:08 DEBUG Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@4f5b260b] into BootstrapContext; was [null]
w2022-03-15 00:55:08 DEBUG Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@3255fa8f] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@733aeed5]
w2022-03-15 00:55:08 DEBUG Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@1aa44c55]
w2022-03-15 00:55:08 DEBUG ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@1aa44c55]
w2022-03-15 00:55:08 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
w2022-03-15 00:55:08 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
w2022-03-15 00:55:08 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
w2022-03-15 00:55:08 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
w2022-03-15 00:55:08 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
w2022-03-15 00:55:08 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
w2022-03-15 00:55:08 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
w2022-03-15 00:55:08 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
w2022-03-15 00:55:08 DEBUG Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
w2022-03-15 00:55:08 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
w2022-03-15 00:55:08 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
w2022-03-15 00:55:08 DEBUG Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
w2022-03-15 00:55:08 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
w2022-03-15 00:55:08 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
w2022-03-15 00:55:08 DEBUG Database ->
       name : SQLite
    version : 3.36.0
      major : 3
      minor : 36
w2022-03-15 00:55:08 DEBUG Driver ->
       name : SQLite JDBC
    version : 3.36.0.3
      major : 3
      minor : 36
w2022-03-15 00:55:08 DEBUG JDBC version : 2.1
w2022-03-15 00:55:08 INFO  HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
w2022-03-15 00:55:08 DEBUG JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
w2022-03-15 00:55:08 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
w2022-03-15 00:55:08 DEBUG HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [2] less than 4
w2022-03-15 00:55:08 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@46b5870d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@22f3a626]
w2022-03-15 00:55:08 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
w2022-03-15 00:55:08 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.Comment
w2022-03-15 00:55:08 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 00:55:08 DEBUG Import with entity name Comment
w2022-03-15 00:55:08 DEBUG Bind entity ru.edu.helpdesk.entity.Comment on table comment
w2022-03-15 00:55:08 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 00:55:08 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Comment] is safe
w2022-03-15 00:55:08 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Comment
w2022-03-15 00:55:08 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 00:55:08 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Comment:id]
w2022-03-15 00:55:08 DEBUG building SimpleValue for id
w2022-03-15 00:55:08 DEBUG Building property id
w2022-03-15 00:55:08 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 00:55:08 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=message, insertable=true, updatable=true, unique=false}
w2022-03-15 00:55:08 DEBUG MetadataSourceProcessor property message with lazy=false
w2022-03-15 00:55:08 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Comment:message]
w2022-03-15 00:55:08 DEBUG building SimpleValue for message
w2022-03-15 00:55:08 DEBUG Building property message
w2022-03-15 00:55:08 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 00:55:08 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=ticket, insertable=true, updatable=true, unique=false}
w2022-03-15 00:55:08 DEBUG Building property ticket
w2022-03-15 00:55:08 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 00:55:08 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=user, insertable=true, updatable=true, unique=false}
w2022-03-15 00:55:08 DEBUG Building property user
w2022-03-15 00:55:08 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 00:55:08 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 00:55:08 DEBUG Import with entity name Ticket
w2022-03-15 00:55:08 DEBUG Bind entity ru.edu.helpdesk.entity.Ticket on table ticket
w2022-03-15 00:55:08 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 00:55:08 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Ticket] is safe
w2022-03-15 00:55:08 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Ticket
w2022-03-15 00:55:08 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 00:55:08 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:id]
w2022-03-15 00:55:08 DEBUG building SimpleValue for id
w2022-03-15 00:55:08 DEBUG Building property id
w2022-03-15 00:55:08 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 00:55:08 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 00:55:08 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=client, insertable=true, updatable=true, unique=false}
w2022-03-15 00:55:08 DEBUG Building property client
w2022-03-15 00:55:08 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=status, insertable=true, updatable=true, unique=false}
w2022-03-15 00:55:08 DEBUG MetadataSourceProcessor property status with lazy=false
w2022-03-15 00:55:08 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:status]
w2022-03-15 00:55:08 DEBUG building SimpleValue for status
w2022-03-15 00:55:08 DEBUG Building property status
w2022-03-15 00:55:08 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 00:55:08 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=support, insertable=true, updatable=true, unique=false}
w2022-03-15 00:55:08 DEBUG Building property support
w2022-03-15 00:55:08 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=title, insertable=true, updatable=true, unique=false}
w2022-03-15 00:55:08 DEBUG MetadataSourceProcessor property title with lazy=false
w2022-03-15 00:55:08 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:title]
w2022-03-15 00:55:08 DEBUG building SimpleValue for title
w2022-03-15 00:55:08 DEBUG Building property title
w2022-03-15 00:55:08 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.User
w2022-03-15 00:55:08 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 00:55:08 DEBUG Import with entity name User
w2022-03-15 00:55:08 DEBUG Bind entity ru.edu.helpdesk.entity.User on table user
w2022-03-15 00:55:08 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 00:55:08 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.User] is safe
w2022-03-15 00:55:08 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.User
w2022-03-15 00:55:08 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 00:55:08 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:id]
w2022-03-15 00:55:08 DEBUG building SimpleValue for id
w2022-03-15 00:55:08 DEBUG Building property id
w2022-03-15 00:55:08 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 00:55:08 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
w2022-03-15 00:55:08 DEBUG MetadataSourceProcessor property firstName with lazy=false
w2022-03-15 00:55:08 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:firstName]
w2022-03-15 00:55:08 DEBUG building SimpleValue for firstName
w2022-03-15 00:55:08 DEBUG Building property firstName
w2022-03-15 00:55:08 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
w2022-03-15 00:55:08 DEBUG MetadataSourceProcessor property lastName with lazy=false
w2022-03-15 00:55:08 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:lastName]
w2022-03-15 00:55:08 DEBUG building SimpleValue for lastName
w2022-03-15 00:55:08 DEBUG Building property lastName
w2022-03-15 00:55:08 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=login, insertable=true, updatable=true, unique=false}
w2022-03-15 00:55:08 DEBUG MetadataSourceProcessor property login with lazy=false
w2022-03-15 00:55:08 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:login]
w2022-03-15 00:55:08 DEBUG building SimpleValue for login
w2022-03-15 00:55:08 DEBUG Building property login
w2022-03-15 00:55:08 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
w2022-03-15 00:55:08 DEBUG MetadataSourceProcessor property password with lazy=false
w2022-03-15 00:55:08 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:password]
w2022-03-15 00:55:08 DEBUG building SimpleValue for password
w2022-03-15 00:55:08 DEBUG Building property password
w2022-03-15 00:55:08 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=role, insertable=true, updatable=true, unique=false}
w2022-03-15 00:55:08 DEBUG MetadataSourceProcessor property role with lazy=false
w2022-03-15 00:55:08 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:role]
w2022-03-15 00:55:08 DEBUG building SimpleValue for role
w2022-03-15 00:55:08 DEBUG Building property role
w2022-03-15 00:55:08 DEBUG Starting fillSimpleValue for id
w2022-03-15 00:55:08 DEBUG Starting fillSimpleValue for message
w2022-03-15 00:55:08 DEBUG Starting fillSimpleValue for id
w2022-03-15 00:55:08 DEBUG Starting fillSimpleValue for status
w2022-03-15 00:55:08 DEBUG Starting fillSimpleValue for title
w2022-03-15 00:55:08 DEBUG Starting fillSimpleValue for id
w2022-03-15 00:55:08 DEBUG Starting fillSimpleValue for firstName
w2022-03-15 00:55:08 DEBUG Starting fillSimpleValue for lastName
w2022-03-15 00:55:08 DEBUG Starting fillSimpleValue for login
w2022-03-15 00:55:08 DEBUG Starting fillSimpleValue for password
w2022-03-15 00:55:08 DEBUG Starting fillSimpleValue for role
w2022-03-15 00:55:08 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [comment]
w2022-03-15 00:55:08 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [ticket]
w2022-03-15 00:55:08 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [user]
w2022-03-15 00:55:08 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 00:55:08 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 00:55:08 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 00:55:08 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 00:55:08 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 00:55:08 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 00:55:08 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 00:55:08 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 00:55:08 DEBUG Building session factory
w2022-03-15 00:55:08 DEBUG SessionFactory name : null
w2022-03-15 00:55:08 DEBUG Automatic flush during beforeCompletion(): enabled
w2022-03-15 00:55:08 DEBUG Automatic session close at end of transaction: disabled
w2022-03-15 00:55:08 DEBUG Statistics: disabled
w2022-03-15 00:55:08 DEBUG Deleted entity synthetic identifier rollback: disabled
w2022-03-15 00:55:08 DEBUG Default entity-mode: pojo
w2022-03-15 00:55:08 DEBUG Check Nullability in Core (should be disabled when Bean Validation is on): enabled
w2022-03-15 00:55:08 DEBUG Allow initialization of lazy state outside session : disabled
w2022-03-15 00:55:08 DEBUG Using BatchFetchStyle : LEGACY
w2022-03-15 00:55:08 DEBUG Default batch fetch size: -1
w2022-03-15 00:55:08 DEBUG Maximum outer join fetch depth: null
w2022-03-15 00:55:08 DEBUG Default null ordering: NONE
w2022-03-15 00:55:08 DEBUG Order SQL updates by primary key: disabled
w2022-03-15 00:55:08 DEBUG Order SQL inserts for batching: disabled
w2022-03-15 00:55:08 DEBUG multi-tenancy strategy : NONE
w2022-03-15 00:55:08 DEBUG JTA Track by Thread: enabled
w2022-03-15 00:55:08 DEBUG Query language substitutions: {}
w2022-03-15 00:55:08 DEBUG Named query checking : enabled
w2022-03-15 00:55:08 DEBUG Second-level cache: disabled
w2022-03-15 00:55:08 DEBUG Second-level query cache: disabled
w2022-03-15 00:55:08 DEBUG Second-level query cache factory: null
w2022-03-15 00:55:08 DEBUG Second-level cache region prefix: null
w2022-03-15 00:55:08 DEBUG Optimize second-level cache for minimal puts: disabled
w2022-03-15 00:55:08 DEBUG Structured second-level cache entries: disabled
w2022-03-15 00:55:08 DEBUG Second-level cache direct-reference entries: disabled
w2022-03-15 00:55:08 DEBUG Automatic eviction of collection cache: disabled
w2022-03-15 00:55:08 DEBUG JDBC batch size: 1
w2022-03-15 00:55:08 DEBUG JDBC batch updates for versioned data: enabled
w2022-03-15 00:55:08 DEBUG Scrollable result sets: disabled
w2022-03-15 00:55:08 DEBUG Wrap result sets: disabled
w2022-03-15 00:55:08 DEBUG JDBC3 getGeneratedKeys(): enabled
w2022-03-15 00:55:08 DEBUG JDBC result set fetch size: null
w2022-03-15 00:55:08 DEBUG Connection release mode: ON_CLOSE
w2022-03-15 00:55:08 DEBUG Generate SQL with comments: disabled
w2022-03-15 00:55:08 DEBUG JPA compliance - query : disabled
w2022-03-15 00:55:08 DEBUG JPA compliance - closed-handling : disabled
w2022-03-15 00:55:08 DEBUG JPA compliance - lists : disabled
w2022-03-15 00:55:08 DEBUG JPA compliance - transactions : disabled
w2022-03-15 00:55:08 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 00:55:08 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 00:55:08 DEBUG Session factory constructed with filter configurations : {}
w2022-03-15 00:55:08 DEBUG Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=true, java.specification.version=1.8, file.encoding.pkg=sun.io, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@3e1c565c, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.SQLiteDialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\charsets.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\cldrdata.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\dnsns.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\jaccess.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\localedata.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\nashorn.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunec.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunmscapi.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\zipfs.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jce.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jfr.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jsse.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\management-agent.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\resources.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\rt.jar;C:\Users\Ольга\Desktop\Java\Project\Project1\helpdeskproject\target\classes;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\2.6.4\spring-boot-starter-data-jpa-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\2.6.4\spring-boot-starter-jdbc-2.6.4.jar;C:\Users\Ольга\.m2\repository\com\zaxxer\HikariCP\4.0.3\HikariCP-4.0.3.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-jdbc\5.3.16\spring-jdbc-5.3.16.jar;C:\Users\Ольга\.m2\repository\jakarta\transaction\jakarta.transaction-api\1.3.3\jakarta.transaction-api-1.3.3.jar;C:\Users\Ольга\.m2\repository\jakarta\persistence\jakarta.persistence-api\2.2.3\jakarta.persistence-api-2.2.3.jar;C:\Users\Ольга\.m2\repository\org\hibernate\hibernate-core\5.6.5.Final\hibernate-core-5.6.5.Final.jar;C:\Users\Ольга\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy\1.11.22\byte-buddy-1.11.22.jar;C:\Users\Ольга\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ольга\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Ольга\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.6\jaxb-runtime-2.3.6.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\txw2\2.3.6\txw2-2.3.6.jar;C:\Users\Ольга\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.12\istack-commons-runtime-3.0.12.jar;C:\Users\Ольга\.m2\repository\com\sun\activation\jakarta.activation\1.2.2\jakarta.activation-1.2.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\data\spring-data-jpa\2.6.2\spring-data-jpa-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\data\spring-data-commons\2.6.2\spring-data-commons-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-orm\5.3.16\spring-orm-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-context\5.3.16\spring-context-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-tx\5.3.16\spring-tx-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-beans\5.3.16\spring-beans-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-aspects\5.3.16\spring-aspects-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-security\2.6.4\spring-boot-starter-security-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter\2.6.4\spring-boot-starter-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-logging\2.6.4\spring-boot-starter-logging-2.6.4.jar;C:\Users\Ольга\.m2\repository\ch\qos\logback\logback-classic\1.2.10\logback-classic-1.2.10.jar;C:\Users\Ольга\.m2\repository\ch\qos\logback\logback-core\1.2.10\logback-core-1.2.10.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.17.1\log4j-to-slf4j-2.17.1.jar;C:\Users\Ольга\.m2\repository\org\slf4j\jul-to-slf4j\1.7.36\jul-to-slf4j-1.7.36.jar;C:\Users\Ольга\.m2\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;C:\Users\Ольга\.m2\repository\org\yaml\snakeyaml\1.29\snakeyaml-1.29.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-aop\5.3.16\spring-aop-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-config\5.6.2\spring-security-config-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-web\5.6.2\spring-security-web-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-expression\5.3.16\spring-expression-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-web\2.6.4\spring-boot-starter-web-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-json\2.6.4\spring-boot-starter-json-2.6.4.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.13.1\jackson-datatype-jdk8-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.13.1\jackson-datatype-jsr310-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.13.1\jackson-module-parameter-names-2.13.1.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\2.6.4\spring-boot-starter-tomcat-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.58\tomcat-embed-core-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\9.0.58\tomcat-embed-el-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.58\tomcat-embed-websocket-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-web\5.3.16\spring-web-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-webmvc\5.3.16\spring-webmvc-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-devtools\2.6.4\spring-boot-devtools-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot\2.6.4\spring-boot-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\2.6.4\spring-boot-autoconfigure-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\xerial\sqlite-jdbc\3.36.0.3\sqlite-jdbc-3.36.0.3.jar;C:\Users\Ольга\.m2\repository\com\zsoltfabok\sqlite-dialect\1.0\sqlite-dialect-1.0.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-aop\2.6.2\spring-boot-starter-aop-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\aspectj\aspectjweaver\1.9.7\aspectjweaver-1.9.7.jar;C:\Users\Ольга\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.3\jakarta.xml.bind-api-2.3.3.jar;C:\Users\Ольга\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.2\jakarta.activation-api-1.2.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-core\5.3.16\spring-core-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-jcl\5.3.16\spring-jcl-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-core\5.6.2\spring-security-core-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-crypto\5.6.2\spring-security-crypto-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\projectlombok\lombok\1.18.22\lombok-1.18.22.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\2.6.4\spring-boot-starter-thymeleaf-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\thymeleaf-spring5\3.0.15.RELEASE\thymeleaf-spring5-3.0.15.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\thymeleaf\3.0.15.RELEASE\thymeleaf-3.0.15.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\attoparser\attoparser\2.0.5.RELEASE\attoparser-2.0.5.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-java8time\3.0.4.RELEASE\thymeleaf-extras-java8time-3.0.4.RELEASE.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.1\jackson-databind-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.1\jackson-annotations-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.1\jackson-core-2.13.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-api\2.4.1\log4j-api-2.4.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-core\2.4.1\log4j-core-2.4.1.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.2\lib\idea_rt.jar, java.vm.vendor=Temurin, sun.arch.data.model=64, user.variant=, java.vendor.url=https://adoptium.net/, catalina.useNaming=false, user.timezone=Europe/Moscow, jakarta.persistence.sharedCache.mode=UNSPECIFIED, os.name=Windows 10, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), user.country=RU, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\bin, sun.java.command=ru.edu.helpdesk.HelpdeskApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@599e0359, com.sun.management.jmxremote=, javax.persistence.sharedCache.mode=UNSPECIFIED, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, user.home=C:\Users\Ольга, user.language=ru, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre, file.separator=\, spring.output.ansi.enabled=always, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, sun.boot.class.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\resources.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\rt.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\sunrsasign.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jsse.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jce.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\charsets.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jfr.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\classes, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_312-b07, user.name=Эльдорадо, spring.jmx.enabled=true, path.separator=;, os.version=10.0, java.endorsed.dirs=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\endorsed, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=default, spring.beaninfo.ignore=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=C:\Users\134E~1\AppData\Local\Temp\, catalina.home=C:\Users\Ольга\AppData\Local\Temp\tomcat.8080.8935304406856642501, java.version=1.8.0_312, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\Ольга\Desktop\Java\Project\Project1\helpdeskproject, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=12744, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\Ольга\AppData\Local\Temp\tomcat.8080.8935304406856642501, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@554a012f, java.library.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\windows\System32\OpenSSH\;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\Program Files\apache-maven-3.8.4\bin;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Ольга\AppData\Local\Microsoft\WindowsApps;C:\Users\Ольга\AppData\Local\Programs\Microsoft VS Code\bin;C:\SQLite;C:\Users\Ольга\AppData\Roaming\npm;C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.2\bin;;., java.vendor=Temurin, java.vm.info=mixed mode, java.vm.version=25.312-b07, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, java.ext.dirs=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext;C:\windows\Sun\Java\lib\ext, hibernate.connection.datasource=HikariDataSource (HikariPool-1), hibernate.hbm2ddl.import_files=data/import.sql, java.class.version=52.0}
w2022-03-15 00:55:08 DEBUG Skipping JACC integration as it was not enabled
w2022-03-15 00:55:08 DEBUG Using ORDINAL-based conversion for Enum ru.edu.helpdesk.entity.UserRole
w2022-03-15 00:55:08 DEBUG Using ORDINAL-based conversion for Enum ru.edu.helpdesk.entity.TicketStatus
w2022-03-15 00:55:08 DEBUG Instantiated session factory
w2022-03-15 00:55:08 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@46b5870d] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6ce0425c]
w2022-03-15 00:55:08 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.User] is safe
w2022-03-15 00:55:08 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.User
w2022-03-15 00:55:08 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:55:08 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:55:08 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:55:08 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:55:08 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Ticket] is safe
w2022-03-15 00:55:08 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Ticket
w2022-03-15 00:55:08 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:55:08 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:55:08 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:55:08 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:55:08 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:55:08 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:55:08 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:55:08 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:55:08 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Comment] is safe
w2022-03-15 00:55:08 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Comment
w2022-03-15 00:55:08 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:55:08 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:55:08 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:55:08 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:55:08 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.User
w2022-03-15 00:55:08 DEBUG  Version select: select id from user where id =?
w2022-03-15 00:55:08 DEBUG  Snapshot select: select user_.id, user_.first_name as first_na2_2_, user_.last_name as last_nam3_2_, user_.login as login4_2_, user_.password as password5_2_, user_.role as role6_2_ from user user_ where user_.id=?
w2022-03-15 00:55:08 DEBUG  Insert 0: insert into user (first_name, last_name, login, password, role, id) values (?, ?, ?, ?, ?, ?)
w2022-03-15 00:55:08 DEBUG  Update 0: update user set first_name=?, last_name=?, login=?, password=?, role=? where id=?
w2022-03-15 00:55:08 DEBUG  Delete 0: delete from user where id=?
w2022-03-15 00:55:08 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34f84ae5]
w2022-03-15 00:55:08 DEBUG Visiting attribute path : firstName
w2022-03-15 00:55:08 DEBUG Visiting attribute path : lastName
w2022-03-15 00:55:08 DEBUG Visiting attribute path : login
w2022-03-15 00:55:08 DEBUG Visiting attribute path : password
w2022-03-15 00:55:08 DEBUG Visiting attribute path : role
w2022-03-15 00:55:08 DEBUG Building LoadPlan...
w2022-03-15 00:55:08 DEBUG processing queryspace <gen:0>
w2022-03-15 00:55:08 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.User)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

w2022-03-15 00:55:08 DEBUG Static select for entity ru.edu.helpdesk.entity.User [NONE]: select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 00:55:08 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.Ticket
w2022-03-15 00:55:08 DEBUG  Version select: select id from ticket where id =?
w2022-03-15 00:55:08 DEBUG  Snapshot select: select ticket_.id, ticket_.client_id as client_i4_1_, ticket_.status as status2_1_, ticket_.support_id as support_5_1_, ticket_.title as title3_1_ from ticket ticket_ where ticket_.id=?
w2022-03-15 00:55:08 DEBUG  Insert 0: insert into ticket (client_id, status, support_id, title, id) values (?, ?, ?, ?, ?)
w2022-03-15 00:55:08 DEBUG  Update 0: update ticket set client_id=?, status=?, support_id=?, title=? where id=?
w2022-03-15 00:55:08 DEBUG  Delete 0: delete from ticket where id=?
w2022-03-15 00:55:08 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ca8b28d]
w2022-03-15 00:55:08 DEBUG Visiting attribute path : client
w2022-03-15 00:55:08 DEBUG Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@753a0dbb]
w2022-03-15 00:55:08 DEBUG Visiting attribute path : client.firstName
w2022-03-15 00:55:08 DEBUG Visiting attribute path : client.lastName
w2022-03-15 00:55:08 DEBUG Visiting attribute path : client.login
w2022-03-15 00:55:08 DEBUG Visiting attribute path : client.password
w2022-03-15 00:55:08 DEBUG Visiting attribute path : client.role
w2022-03-15 00:55:08 DEBUG Visiting attribute path : status
w2022-03-15 00:55:08 DEBUG Visiting attribute path : support
w2022-03-15 00:55:08 DEBUG Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59b1e08c]
w2022-03-15 00:55:08 DEBUG Visiting attribute path : support.firstName
w2022-03-15 00:55:08 DEBUG Visiting attribute path : support.lastName
w2022-03-15 00:55:08 DEBUG Visiting attribute path : support.login
w2022-03-15 00:55:08 DEBUG Visiting attribute path : support.password
w2022-03-15 00:55:08 DEBUG Visiting attribute path : support.role
w2022-03-15 00:55:08 DEBUG Visiting attribute path : title
w2022-03-15 00:55:08 DEBUG Building LoadPlan...
w2022-03-15 00:55:08 DEBUG processing queryspace <gen:0>
w2022-03-15 00:55:08 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.Ticket)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.Ticket, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.Ticket)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:1>, path=ru.edu.helpdesk.entity.Ticket.client)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:2>, path=ru.edu.helpdesk.entity.Ticket.support)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.Ticket)
          - SQL table alias mapping - ticket0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(client)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
          - JOIN (JoinDefinedByMetadata(support)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user2_
                - alias suffix - 2_
                - suffixed key columns - {id1_2_2_}

w2022-03-15 00:55:08 DEBUG Static select for entity ru.edu.helpdesk.entity.Ticket [NONE]: select ticket0_.id as id1_1_0_, ticket0_.client_id as client_i4_1_0_, ticket0_.status as status2_1_0_, ticket0_.support_id as support_5_1_0_, ticket0_.title as title3_1_0_, user1_.id as id1_2_1_, user1_.first_name as first_na2_2_1_, user1_.last_name as last_nam3_2_1_, user1_.login as login4_2_1_, user1_.password as password5_2_1_, user1_.role as role6_2_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id left outer join user user2_ on ticket0_.support_id=user2_.id where ticket0_.id=?
w2022-03-15 00:55:08 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.Comment
w2022-03-15 00:55:08 DEBUG  Version select: select id from comment where id =?
w2022-03-15 00:55:08 DEBUG  Snapshot select: select comment_.id, comment_.message as message2_0_, comment_.ticket_id as ticket_i3_0_, comment_.user_id as user_id4_0_ from comment comment_ where comment_.id=?
w2022-03-15 00:55:08 DEBUG  Insert 0: insert into comment (message, ticket_id, user_id, id) values (?, ?, ?, ?)
w2022-03-15 00:55:08 DEBUG  Update 0: update comment set message=?, ticket_id=?, user_id=? where id=?
w2022-03-15 00:55:08 DEBUG  Delete 0: delete from comment where id=?
w2022-03-15 00:55:08 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f5523c5]
w2022-03-15 00:55:08 DEBUG Visiting attribute path : message
w2022-03-15 00:55:08 DEBUG Visiting attribute path : ticket
w2022-03-15 00:55:08 DEBUG Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42615c8c]
w2022-03-15 00:55:08 DEBUG Visiting attribute path : ticket.client
w2022-03-15 00:55:08 DEBUG Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9a2851c]
w2022-03-15 00:55:08 DEBUG Visiting attribute path : ticket.client.firstName
w2022-03-15 00:55:08 DEBUG Visiting attribute path : ticket.client.lastName
w2022-03-15 00:55:08 DEBUG Visiting attribute path : ticket.client.login
w2022-03-15 00:55:08 DEBUG Visiting attribute path : ticket.client.password
w2022-03-15 00:55:08 DEBUG Visiting attribute path : ticket.client.role
w2022-03-15 00:55:08 DEBUG Visiting attribute path : ticket.status
w2022-03-15 00:55:08 DEBUG Visiting attribute path : ticket.support
w2022-03-15 00:55:08 DEBUG Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4978343a]
w2022-03-15 00:55:08 DEBUG Visiting attribute path : ticket.support.firstName
w2022-03-15 00:55:08 DEBUG Visiting attribute path : ticket.support.lastName
w2022-03-15 00:55:08 DEBUG Visiting attribute path : ticket.support.login
w2022-03-15 00:55:08 DEBUG Visiting attribute path : ticket.support.password
w2022-03-15 00:55:08 DEBUG Visiting attribute path : ticket.support.role
w2022-03-15 00:55:08 DEBUG Visiting attribute path : ticket.title
w2022-03-15 00:55:08 DEBUG Visiting attribute path : user
w2022-03-15 00:55:08 DEBUG Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@750067bd]
w2022-03-15 00:55:08 DEBUG Visiting attribute path : user.firstName
w2022-03-15 00:55:08 DEBUG Visiting attribute path : user.lastName
w2022-03-15 00:55:08 DEBUG Visiting attribute path : user.login
w2022-03-15 00:55:08 DEBUG Visiting attribute path : user.password
w2022-03-15 00:55:08 DEBUG Visiting attribute path : user.role
w2022-03-15 00:55:08 DEBUG Building LoadPlan...
w2022-03-15 00:55:08 DEBUG processing queryspace <gen:0>
w2022-03-15 00:55:08 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.Comment)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.Comment, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.Comment)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.Ticket, querySpaceUid=<gen:1>, path=ru.edu.helpdesk.entity.Comment.ticket)
             - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:2>, path=ru.edu.helpdesk.entity.Comment.ticket.client)
             - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:3>, path=ru.edu.helpdesk.entity.Comment.ticket.support)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:4>, path=ru.edu.helpdesk.entity.Comment.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(ticket)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ru.edu.helpdesk.entity.Ticket)
                - SQL table alias mapping - ticket1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(client)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=ru.edu.helpdesk.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}
                - JOIN (JoinDefinedByMetadata(support)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=ru.edu.helpdesk.entity.User)
                      - SQL table alias mapping - user3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_2_3_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user4_
                - alias suffix - 4_
                - suffixed key columns - {id1_2_4_}

w2022-03-15 00:55:08 DEBUG Static select for entity ru.edu.helpdesk.entity.Comment [NONE]: select comment0_.id as id1_0_0_, comment0_.message as message2_0_0_, comment0_.ticket_id as ticket_i3_0_0_, comment0_.user_id as user_id4_0_0_, ticket1_.id as id1_1_1_, ticket1_.client_id as client_i4_1_1_, ticket1_.status as status2_1_1_, ticket1_.support_id as support_5_1_1_, ticket1_.title as title3_1_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_, user3_.id as id1_2_3_, user3_.first_name as first_na2_2_3_, user3_.last_name as last_nam3_2_3_, user3_.login as login4_2_3_, user3_.password as password5_2_3_, user3_.role as role6_2_3_, user4_.id as id1_2_4_, user4_.first_name as first_na2_2_4_, user4_.last_name as last_nam3_2_4_, user4_.login as login4_2_4_, user4_.password as password5_2_4_, user4_.role as role6_2_4_ from comment comment0_ left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id left outer join user user2_ on ticket1_.client_id=user2_.id left outer join user user3_ on ticket1_.support_id=user3_.id left outer join user user4_ on comment0_.user_id=user4_.id where comment0_.id=?
w2022-03-15 00:55:08 DEBUG drop table if exists comment
w2022-03-15 00:55:08 DEBUG drop table if exists hibernate_sequence
w2022-03-15 00:55:08 DEBUG drop table if exists ticket
w2022-03-15 00:55:08 DEBUG drop table if exists user
w2022-03-15 00:55:08 DEBUG create table comment (id bigint not null, message varchar(255) not null, ticket_id bigint, user_id bigint, primary key (id))
w2022-03-15 00:55:08 DEBUG create table hibernate_sequence (next_val bigint)
w2022-03-15 00:55:08 DEBUG insert into hibernate_sequence values ( 1 )
w2022-03-15 00:55:08 DEBUG create table ticket (id bigint not null, status integer, title varchar(255) not null, client_id bigint, support_id bigint, primary key (id))
w2022-03-15 00:55:08 DEBUG create table user (id bigint not null, first_name varchar(255), last_name varchar(255), login varchar(255) not null, password varchar(255) not null, role integer, primary key (id))
w2022-03-15 00:55:08 INFO  HHH000476: Executing import script 'file:/C:/Users/%d0%9e%d0%bb%d1%8c%d0%b3%d0%b0/Desktop/Java/Project/Project1/helpdeskproject/target/classes/data/import.sql'
w2022-03-15 00:55:08 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (1, 'admin', 'admin', 'admin', 'admin', 0)
w2022-03-15 00:55:08 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (2, 'support', 'support', 'support', 'support', 1)
w2022-03-15 00:55:08 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (3, 'user1', 'user1', 'user1', 'user1', 2)
w2022-03-15 00:55:08 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (4, 'user2', 'user2', 'user2', 'user2', 2)
w2022-03-15 00:55:08 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (1, 1, 'Hello user1', 3, 2)
w2022-03-15 00:55:08 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (2, 0, 'Title2', 3, NULL)
w2022-03-15 00:55:08 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (3, 0, 'Message user2', 4, NULL)
w2022-03-15 00:55:08 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (1, "Hello ticket1", 1, 3)
w2022-03-15 00:55:08 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (2, "Hello ticket2", 2, 3)
w2022-03-15 00:55:08 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (3, "Hello ticket11", 1, 2)
w2022-03-15 00:55:08 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (4, "Hello ticket111", 1, 2)
w2022-03-15 00:55:08 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (5, "Hello ticket22", 2, 2)
w2022-03-15 00:55:08 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (6, "Hello ticket3", 3, 4)
w2022-03-15 00:55:08 DEBUG UPDATE hibernate_sequence SET next_val = 8 WHERE next_val = 1
w2022-03-15 00:55:08 INFO  HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
w2022-03-15 00:55:08 DEBUG Checking 0 named HQL queries
w2022-03-15 00:55:08 DEBUG Checking 0 named SQL queries
w2022-03-15 00:55:08 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 00:55:08 DEBUG Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2f3317ea
w2022-03-15 00:55:08 DEBUG Registering SessionFactory: 6fe4bb3b-ba43-4adb-9970-4904e1473062 (<unnamed>)
w2022-03-15 00:55:08 DEBUG Not binding SessionFactory to JNDI, no JNDI name configured
w2022-03-15 00:55:08 DEBUG Statistics initialized [enabled=false]
w2022-03-15 00:55:09 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 00:55:09 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 00:55:09 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 00:55:19 DEBUG Rendered criteria query -> select generatedAlias0 from Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 00:55:19 DEBUG QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@7b22d392
w2022-03-15 00:55:19 DEBUG parse() - HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 00:55:19 DEBUG throwQueryException() : no errors
w2022-03-15 00:55:19 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[IDENT] Node: 'ru'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'edu'
    |  |  |  |  |  |  \-[IDENT] Node: 'helpdesk'
    |  |  |  |  |  \-[IDENT] Node: 'entity'
    |  |  |  |  \-[IDENT] Node: 'Ticket'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'client'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias1'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

w2022-03-15 00:55:19 DEBUG select << begin [level=1, statement=select]
w2022-03-15 00:55:19 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.Ticket (generatedAlias0) -> ticket0_
w2022-03-15 00:55:19 DEBUG Resolved : generatedAlias0 -> ticket0_.id
w2022-03-15 00:55:19 DEBUG getDataType() : client -> org.hibernate.type.ManyToOneType(ru.edu.helpdesk.entity.User)
w2022-03-15 00:55:19 DEBUG dereferenceEntityJoin() : generating join for client in ru.edu.helpdesk.entity.Ticket (generatedAlias1) parent = [ {null} ]
w2022-03-15 00:55:19 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.User (generatedAlias1) -> user1_
w2022-03-15 00:55:19 DEBUG addJoinByPathMap() : generatedAlias0.client -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}
w2022-03-15 00:55:19 DEBUG Resolved : generatedAlias0.client -> ticket0_.client_id
w2022-03-15 00:55:19 DEBUG createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'user user1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Ticket.client,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}

w2022-03-15 00:55:19 DEBUG Resolved : generatedAlias0 -> ticket0_.id
w2022-03-15 00:55:19 DEBUG Resolved : generatedAlias1 -> user1_.id
w2022-03-15 00:55:19 DEBUG getDataType() : id -> org.hibernate.type.LongType@79bd6578
w2022-03-15 00:55:19 DEBUG Resolved : generatedAlias1.id -> user1_.id
w2022-03-15 00:55:19 DEBUG select : finishing up [level=1, statement=select]
w2022-03-15 00:55:19 DEBUG processQuery() :  ( SELECT ( {select clause} ticket0_.id ) ( FromClause{level=1} ( ticket ticket0_ user user1_ ) ) ( where ( = ( user1_.id user1_.id id ) ? ) ) )
w2022-03-15 00:55:19 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Ticket): [ticket]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.Ticket)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.User)
          | path: generatedAlias1.id
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.User)
          |  | originalText: generatedAlias1
          |  \-IdentNode
          |    persister: null
          |    originalText: id
          \-ParameterNode

w2022-03-15 00:55:19 DEBUG Using FROM fragment [ticket ticket0_]
w2022-03-15 00:55:19 DEBUG Using FROM fragment [left outer join user user1_ on ticket0_.client_id=user1_.id]
w2022-03-15 00:55:19 DEBUG select >> end [level=1, statement=select]
w2022-03-15 00:55:19 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (ticket,user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'ticket0_.id as id1_1_' {alias=generatedAlias0, className=ru.edu.helpdesk.entity.Ticket, tableAlias=ticket0_}
    |  \-[SQL_TOKEN] SqlFragment: 'ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[ticket0_, user1_], fromElementsByPath=[generatedAlias0.client], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'ticket ticket0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=ticket,tableAlias=ticket0_,origin=null,columns={,className=ru.edu.helpdesk.entity.Ticket}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join user user1_ on ticket0_.client_id=user1_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Ticket.client,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user1_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias1.id,tableAlias=user1_,className=ru.edu.helpdesk.entity.User,classAlias=generatedAlias1}
          |  +-[ALIAS_REF] IdentNode: 'user1_.id' {alias=generatedAlias1, className=ru.edu.helpdesk.entity.User, tableAlias=user1_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LongType@79bd6578}

w2022-03-15 00:55:19 DEBUG throwQueryException() : no errors
w2022-03-15 00:55:19 DEBUG HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 00:55:19 DEBUG SQL: select ticket0_.id as id1_1_, ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id where user1_.id=?
w2022-03-15 00:55:19 DEBUG throwQueryException() : no errors
w2022-03-15 00:55:19 DEBUG select ticket0_.id as id1_1_, ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id where user1_.id=?
w2022-03-15 00:55:19 DEBUG Result set row: 0
w2022-03-15 00:55:19 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 00:55:19 DEBUG Result set row: 1
w2022-03-15 00:55:19 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 00:55:19 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 00:55:19 DEBUG Processing attribute `client` : value = 3
w2022-03-15 00:55:19 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 00:55:19 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 00:55:19 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 00:55:19 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#3]
w2022-03-15 00:55:19 DEBUG Processing attribute `firstName` : value = user1
w2022-03-15 00:55:19 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 00:55:19 DEBUG Processing attribute `lastName` : value = user1
w2022-03-15 00:55:19 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 00:55:19 DEBUG Processing attribute `login` : value = user1
w2022-03-15 00:55:19 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 00:55:19 DEBUG Processing attribute `password` : value = user1
w2022-03-15 00:55:19 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 00:55:19 DEBUG Processing attribute `role` : value = USER
w2022-03-15 00:55:19 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 00:55:19 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#3]
w2022-03-15 00:55:19 DEBUG Done entity load : ru.edu.helpdesk.entity.User#3
w2022-03-15 00:55:19 DEBUG Processing attribute `status` : value = WORKING
w2022-03-15 00:55:19 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 00:55:19 DEBUG Processing attribute `support` : value = 2
w2022-03-15 00:55:19 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 00:55:19 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 00:55:19 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 00:55:19 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#2]
w2022-03-15 00:55:19 DEBUG Processing attribute `firstName` : value = support
w2022-03-15 00:55:19 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 00:55:19 DEBUG Processing attribute `lastName` : value = support
w2022-03-15 00:55:19 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 00:55:19 DEBUG Processing attribute `login` : value = support
w2022-03-15 00:55:19 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 00:55:19 DEBUG Processing attribute `password` : value = support
w2022-03-15 00:55:19 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 00:55:19 DEBUG Processing attribute `role` : value = SUPPORT
w2022-03-15 00:55:19 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 00:55:19 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#2]
w2022-03-15 00:55:19 DEBUG Done entity load : ru.edu.helpdesk.entity.User#2
w2022-03-15 00:55:19 DEBUG Processing attribute `title` : value = Hello user1
w2022-03-15 00:55:19 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 00:55:19 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 00:55:19 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 00:55:19 DEBUG Processing attribute `client` : value = 3
w2022-03-15 00:55:19 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 00:55:19 DEBUG Processing attribute `status` : value = OPEN
w2022-03-15 00:55:19 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 00:55:19 DEBUG Processing attribute `support` : value = null
w2022-03-15 00:55:19 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 00:55:19 DEBUG Processing attribute `title` : value = Title2
w2022-03-15 00:55:19 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 00:55:19 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 00:55:21 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 00:55:21 DEBUG begin
w2022-03-15 00:55:21 DEBUG committing
w2022-03-15 00:56:29 DEBUG Logging Provider: org.jboss.logging.Log4j2LoggerProvider
w2022-03-15 00:56:29 DEBUG PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@6c202846
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/%d0%9e%d0%bb%d1%8c%d0%b3%d0%b0/Desktop/Java/Project/Project1/helpdeskproject/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		ru.edu.helpdesk.entity.Comment
		ru.edu.helpdesk.entity.Ticket
		ru.edu.helpdesk.entity.User]
	Mapping files names []
	Properties []
w2022-03-15 00:56:29 DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
w2022-03-15 00:56:29 DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
w2022-03-15 00:56:29 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
w2022-03-15 00:56:29 INFO  HHH000412: Hibernate ORM core version 5.6.5.Final
w2022-03-15 00:56:29 DEBUG HHH000206: hibernate.properties not found
w2022-03-15 00:56:29 DEBUG Overriding existing service binding [org.hibernate.secure.spi.JaccService]
w2022-03-15 00:56:29 DEBUG Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
w2022-03-15 00:56:29 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
w2022-03-15 00:56:29 INFO  HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
w2022-03-15 00:56:30 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@3cb67654
w2022-03-15 00:56:30 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@3cb67654
w2022-03-15 00:56:30 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3cb67654
w2022-03-15 00:56:30 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4667e062
w2022-03-15 00:56:30 DEBUG Adding type registration true_false -> org.hibernate.type.TrueFalseType@47d315f6
w2022-03-15 00:56:30 DEBUG Adding type registration yes_no -> org.hibernate.type.YesNoType@73798cd4
w2022-03-15 00:56:30 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@782326fd
w2022-03-15 00:56:30 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@782326fd
w2022-03-15 00:56:30 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@782326fd
w2022-03-15 00:56:30 DEBUG Adding type registration character -> org.hibernate.type.CharacterType@709d1c79
w2022-03-15 00:56:30 DEBUG Adding type registration char -> org.hibernate.type.CharacterType@709d1c79
w2022-03-15 00:56:30 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@709d1c79
w2022-03-15 00:56:30 DEBUG Adding type registration short -> org.hibernate.type.ShortType@1380cea8
w2022-03-15 00:56:30 DEBUG Adding type registration short -> org.hibernate.type.ShortType@1380cea8
w2022-03-15 00:56:30 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1380cea8
w2022-03-15 00:56:30 DEBUG Adding type registration integer -> org.hibernate.type.IntegerType@6f173842
w2022-03-15 00:56:30 DEBUG Adding type registration int -> org.hibernate.type.IntegerType@6f173842
w2022-03-15 00:56:30 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6f173842
w2022-03-15 00:56:30 DEBUG Adding type registration long -> org.hibernate.type.LongType@7e2e875
w2022-03-15 00:56:30 DEBUG Adding type registration long -> org.hibernate.type.LongType@7e2e875
w2022-03-15 00:56:30 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.LongType@7e2e875
w2022-03-15 00:56:30 DEBUG Adding type registration float -> org.hibernate.type.FloatType@78dcf88e
w2022-03-15 00:56:30 DEBUG Adding type registration float -> org.hibernate.type.FloatType@78dcf88e
w2022-03-15 00:56:30 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.FloatType@78dcf88e
w2022-03-15 00:56:30 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@4ca058d0
w2022-03-15 00:56:30 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@4ca058d0
w2022-03-15 00:56:30 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4ca058d0
w2022-03-15 00:56:30 DEBUG Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@13b33076
w2022-03-15 00:56:30 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@13b33076
w2022-03-15 00:56:30 DEBUG Adding type registration big_integer -> org.hibernate.type.BigIntegerType@51a5d1cc
w2022-03-15 00:56:30 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@51a5d1cc
w2022-03-15 00:56:30 DEBUG Adding type registration string -> org.hibernate.type.StringType@5c343b43
w2022-03-15 00:56:30 DEBUG Adding type registration java.lang.String -> org.hibernate.type.StringType@5c343b43
w2022-03-15 00:56:30 DEBUG Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1cf447de
w2022-03-15 00:56:30 DEBUG Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1f164377
w2022-03-15 00:56:30 DEBUG Adding type registration url -> org.hibernate.type.UrlType@3fdcb3f6
w2022-03-15 00:56:30 DEBUG Adding type registration java.net.URL -> org.hibernate.type.UrlType@3fdcb3f6
w2022-03-15 00:56:30 DEBUG Adding type registration Duration -> org.hibernate.type.DurationType@241f757d
w2022-03-15 00:56:30 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.DurationType@241f757d
w2022-03-15 00:56:30 DEBUG Adding type registration Instant -> org.hibernate.type.InstantType@763eff35
w2022-03-15 00:56:30 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.InstantType@763eff35
w2022-03-15 00:56:30 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1aa9e474
w2022-03-15 00:56:30 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1aa9e474
w2022-03-15 00:56:30 DEBUG Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5d3908f9
w2022-03-15 00:56:30 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5d3908f9
w2022-03-15 00:56:30 DEBUG Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@72ffeac2
w2022-03-15 00:56:30 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@72ffeac2
w2022-03-15 00:56:30 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@d0839ba
w2022-03-15 00:56:30 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@d0839ba
w2022-03-15 00:56:30 DEBUG Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3b9ae356
w2022-03-15 00:56:30 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3b9ae356
w2022-03-15 00:56:30 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1c25ea1b
w2022-03-15 00:56:30 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1c25ea1b
w2022-03-15 00:56:30 DEBUG Adding type registration date -> org.hibernate.type.DateType@6eb9a92b
w2022-03-15 00:56:30 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.DateType@6eb9a92b
w2022-03-15 00:56:30 DEBUG Adding type registration time -> org.hibernate.type.TimeType@2e5bb862
w2022-03-15 00:56:30 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2e5bb862
w2022-03-15 00:56:30 DEBUG Adding type registration timestamp -> org.hibernate.type.TimestampType@66b1984c
w2022-03-15 00:56:30 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@66b1984c
w2022-03-15 00:56:30 DEBUG Adding type registration java.util.Date -> org.hibernate.type.TimestampType@66b1984c
w2022-03-15 00:56:30 DEBUG Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@761969cb
w2022-03-15 00:56:30 DEBUG Adding type registration calendar -> org.hibernate.type.CalendarType@d3bf671
w2022-03-15 00:56:30 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@d3bf671
w2022-03-15 00:56:30 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@d3bf671
w2022-03-15 00:56:30 DEBUG Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@21132e01
w2022-03-15 00:56:30 DEBUG Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@55d94d91
w2022-03-15 00:56:30 DEBUG Adding type registration locale -> org.hibernate.type.LocaleType@7dadc5f
w2022-03-15 00:56:30 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7dadc5f
w2022-03-15 00:56:30 DEBUG Adding type registration currency -> org.hibernate.type.CurrencyType@56689c7c
w2022-03-15 00:56:30 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@56689c7c
w2022-03-15 00:56:30 DEBUG Adding type registration timezone -> org.hibernate.type.TimeZoneType@75b7d705
w2022-03-15 00:56:30 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@75b7d705
w2022-03-15 00:56:30 DEBUG Adding type registration class -> org.hibernate.type.ClassType@24bcb1a2
w2022-03-15 00:56:30 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.ClassType@24bcb1a2
w2022-03-15 00:56:30 DEBUG Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@587213bb
w2022-03-15 00:56:30 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@587213bb
w2022-03-15 00:56:30 DEBUG Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@b9b3392
w2022-03-15 00:56:30 DEBUG Adding type registration binary -> org.hibernate.type.BinaryType@6f317db3
w2022-03-15 00:56:30 DEBUG Adding type registration byte[] -> org.hibernate.type.BinaryType@6f317db3
w2022-03-15 00:56:30 DEBUG Adding type registration [B -> org.hibernate.type.BinaryType@6f317db3
w2022-03-15 00:56:30 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@18f72d9a
w2022-03-15 00:56:30 DEBUG Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@18f72d9a
w2022-03-15 00:56:30 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@18f72d9a
w2022-03-15 00:56:30 DEBUG Adding type registration row_version -> org.hibernate.type.RowVersionType@730c95b3
w2022-03-15 00:56:30 DEBUG Adding type registration image -> org.hibernate.type.ImageType@4b109c13
w2022-03-15 00:56:30 DEBUG Adding type registration characters -> org.hibernate.type.CharArrayType@3b3b67dd
w2022-03-15 00:56:30 DEBUG Adding type registration char[] -> org.hibernate.type.CharArrayType@3b3b67dd
w2022-03-15 00:56:30 DEBUG Adding type registration [C -> org.hibernate.type.CharArrayType@3b3b67dd
w2022-03-15 00:56:30 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@59dd1c39
w2022-03-15 00:56:30 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@59dd1c39
w2022-03-15 00:56:30 DEBUG Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@59dd1c39
w2022-03-15 00:56:30 DEBUG Adding type registration text -> org.hibernate.type.TextType@1ac88b83
w2022-03-15 00:56:30 DEBUG Adding type registration ntext -> org.hibernate.type.NTextType@57903c76
w2022-03-15 00:56:30 DEBUG Adding type registration blob -> org.hibernate.type.BlobType@6824c02a
w2022-03-15 00:56:30 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6824c02a
w2022-03-15 00:56:30 DEBUG Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@e98caa2
w2022-03-15 00:56:30 DEBUG Adding type registration clob -> org.hibernate.type.ClobType@6c6e8b0e
w2022-03-15 00:56:30 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6c6e8b0e
w2022-03-15 00:56:30 DEBUG Adding type registration nclob -> org.hibernate.type.NClobType@13be02d
w2022-03-15 00:56:30 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@13be02d
w2022-03-15 00:56:30 DEBUG Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@622f474
w2022-03-15 00:56:30 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@427aa83f
w2022-03-15 00:56:30 DEBUG Adding type registration serializable -> org.hibernate.type.SerializableType@7137e931
w2022-03-15 00:56:30 DEBUG Adding type registration object -> org.hibernate.type.ObjectType@415e2c16
w2022-03-15 00:56:30 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@415e2c16
w2022-03-15 00:56:30 DEBUG Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@77de5208
w2022-03-15 00:56:30 DEBUG Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4750ee79
w2022-03-15 00:56:30 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@248bc008
w2022-03-15 00:56:30 DEBUG Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1c3b1ada
w2022-03-15 00:56:30 DEBUG Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@19705547
w2022-03-15 00:56:30 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@59934336
w2022-03-15 00:56:30 DEBUG Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@23e2438c
w2022-03-15 00:56:30 DEBUG Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@674b70e0
w2022-03-15 00:56:30 INFO  HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
w2022-03-15 00:56:30 DEBUG Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@48f11c74] into BootstrapContext; was [null]
w2022-03-15 00:56:30 DEBUG ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@48f11c74) [was null]
w2022-03-15 00:56:30 DEBUG Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@404ffdf7] into BootstrapContext; was [null]
w2022-03-15 00:56:30 DEBUG Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@f03e39e] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@35cb1bf4]
w2022-03-15 00:56:30 DEBUG Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@48f11c74]
w2022-03-15 00:56:30 DEBUG ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@48f11c74]
w2022-03-15 00:56:30 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
w2022-03-15 00:56:30 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
w2022-03-15 00:56:30 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
w2022-03-15 00:56:30 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
w2022-03-15 00:56:30 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
w2022-03-15 00:56:30 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
w2022-03-15 00:56:30 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
w2022-03-15 00:56:30 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
w2022-03-15 00:56:30 DEBUG Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
w2022-03-15 00:56:30 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
w2022-03-15 00:56:30 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
w2022-03-15 00:56:30 DEBUG Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
w2022-03-15 00:56:30 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
w2022-03-15 00:56:30 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
w2022-03-15 00:56:30 DEBUG Database ->
       name : SQLite
    version : 3.36.0
      major : 3
      minor : 36
w2022-03-15 00:56:30 DEBUG Driver ->
       name : SQLite JDBC
    version : 3.36.0.3
      major : 3
      minor : 36
w2022-03-15 00:56:30 DEBUG JDBC version : 2.1
w2022-03-15 00:56:30 INFO  HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
w2022-03-15 00:56:30 DEBUG JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
w2022-03-15 00:56:30 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
w2022-03-15 00:56:30 DEBUG HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [2] less than 4
w2022-03-15 00:56:30 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6d592798] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2dd1ce3e]
w2022-03-15 00:56:30 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
w2022-03-15 00:56:30 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.Comment
w2022-03-15 00:56:30 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 00:56:30 DEBUG Import with entity name Comment
w2022-03-15 00:56:30 DEBUG Bind entity ru.edu.helpdesk.entity.Comment on table comment
w2022-03-15 00:56:30 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 00:56:30 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Comment] is safe
w2022-03-15 00:56:30 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Comment
w2022-03-15 00:56:30 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 00:56:30 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Comment:id]
w2022-03-15 00:56:30 DEBUG building SimpleValue for id
w2022-03-15 00:56:30 DEBUG Building property id
w2022-03-15 00:56:30 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 00:56:30 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=message, insertable=true, updatable=true, unique=false}
w2022-03-15 00:56:30 DEBUG MetadataSourceProcessor property message with lazy=false
w2022-03-15 00:56:30 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Comment:message]
w2022-03-15 00:56:30 DEBUG building SimpleValue for message
w2022-03-15 00:56:30 DEBUG Building property message
w2022-03-15 00:56:30 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 00:56:30 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=ticket, insertable=true, updatable=true, unique=false}
w2022-03-15 00:56:30 DEBUG Building property ticket
w2022-03-15 00:56:30 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 00:56:30 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=user, insertable=true, updatable=true, unique=false}
w2022-03-15 00:56:30 DEBUG Building property user
w2022-03-15 00:56:30 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 00:56:30 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 00:56:30 DEBUG Import with entity name Ticket
w2022-03-15 00:56:30 DEBUG Bind entity ru.edu.helpdesk.entity.Ticket on table ticket
w2022-03-15 00:56:30 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 00:56:30 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Ticket] is safe
w2022-03-15 00:56:30 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Ticket
w2022-03-15 00:56:30 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 00:56:30 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:id]
w2022-03-15 00:56:30 DEBUG building SimpleValue for id
w2022-03-15 00:56:30 DEBUG Building property id
w2022-03-15 00:56:30 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 00:56:30 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 00:56:30 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=client, insertable=true, updatable=true, unique=false}
w2022-03-15 00:56:30 DEBUG Building property client
w2022-03-15 00:56:30 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=status, insertable=true, updatable=true, unique=false}
w2022-03-15 00:56:30 DEBUG MetadataSourceProcessor property status with lazy=false
w2022-03-15 00:56:30 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:status]
w2022-03-15 00:56:30 DEBUG building SimpleValue for status
w2022-03-15 00:56:30 DEBUG Building property status
w2022-03-15 00:56:30 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 00:56:30 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=support, insertable=true, updatable=true, unique=false}
w2022-03-15 00:56:30 DEBUG Building property support
w2022-03-15 00:56:30 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=title, insertable=true, updatable=true, unique=false}
w2022-03-15 00:56:30 DEBUG MetadataSourceProcessor property title with lazy=false
w2022-03-15 00:56:30 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:title]
w2022-03-15 00:56:30 DEBUG building SimpleValue for title
w2022-03-15 00:56:30 DEBUG Building property title
w2022-03-15 00:56:30 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.User
w2022-03-15 00:56:30 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 00:56:30 DEBUG Import with entity name User
w2022-03-15 00:56:30 DEBUG Bind entity ru.edu.helpdesk.entity.User on table user
w2022-03-15 00:56:30 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 00:56:30 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.User] is safe
w2022-03-15 00:56:30 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.User
w2022-03-15 00:56:30 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 00:56:30 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:id]
w2022-03-15 00:56:30 DEBUG building SimpleValue for id
w2022-03-15 00:56:30 DEBUG Building property id
w2022-03-15 00:56:30 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 00:56:30 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
w2022-03-15 00:56:30 DEBUG MetadataSourceProcessor property firstName with lazy=false
w2022-03-15 00:56:30 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:firstName]
w2022-03-15 00:56:30 DEBUG building SimpleValue for firstName
w2022-03-15 00:56:30 DEBUG Building property firstName
w2022-03-15 00:56:30 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
w2022-03-15 00:56:30 DEBUG MetadataSourceProcessor property lastName with lazy=false
w2022-03-15 00:56:30 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:lastName]
w2022-03-15 00:56:30 DEBUG building SimpleValue for lastName
w2022-03-15 00:56:30 DEBUG Building property lastName
w2022-03-15 00:56:30 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=login, insertable=true, updatable=true, unique=false}
w2022-03-15 00:56:30 DEBUG MetadataSourceProcessor property login with lazy=false
w2022-03-15 00:56:30 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:login]
w2022-03-15 00:56:30 DEBUG building SimpleValue for login
w2022-03-15 00:56:30 DEBUG Building property login
w2022-03-15 00:56:30 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
w2022-03-15 00:56:30 DEBUG MetadataSourceProcessor property password with lazy=false
w2022-03-15 00:56:30 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:password]
w2022-03-15 00:56:30 DEBUG building SimpleValue for password
w2022-03-15 00:56:30 DEBUG Building property password
w2022-03-15 00:56:30 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=role, insertable=true, updatable=true, unique=false}
w2022-03-15 00:56:30 DEBUG MetadataSourceProcessor property role with lazy=false
w2022-03-15 00:56:30 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:role]
w2022-03-15 00:56:30 DEBUG building SimpleValue for role
w2022-03-15 00:56:30 DEBUG Building property role
w2022-03-15 00:56:30 DEBUG Starting fillSimpleValue for id
w2022-03-15 00:56:30 DEBUG Starting fillSimpleValue for message
w2022-03-15 00:56:30 DEBUG Starting fillSimpleValue for id
w2022-03-15 00:56:30 DEBUG Starting fillSimpleValue for status
w2022-03-15 00:56:30 DEBUG Starting fillSimpleValue for title
w2022-03-15 00:56:30 DEBUG Starting fillSimpleValue for id
w2022-03-15 00:56:30 DEBUG Starting fillSimpleValue for firstName
w2022-03-15 00:56:30 DEBUG Starting fillSimpleValue for lastName
w2022-03-15 00:56:30 DEBUG Starting fillSimpleValue for login
w2022-03-15 00:56:30 DEBUG Starting fillSimpleValue for password
w2022-03-15 00:56:30 DEBUG Starting fillSimpleValue for role
w2022-03-15 00:56:30 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [comment]
w2022-03-15 00:56:30 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [ticket]
w2022-03-15 00:56:30 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [user]
w2022-03-15 00:56:30 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 00:56:30 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 00:56:30 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 00:56:30 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 00:56:30 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 00:56:30 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 00:56:30 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 00:56:30 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 00:56:30 DEBUG Building session factory
w2022-03-15 00:56:30 DEBUG SessionFactory name : null
w2022-03-15 00:56:30 DEBUG Automatic flush during beforeCompletion(): enabled
w2022-03-15 00:56:30 DEBUG Automatic session close at end of transaction: disabled
w2022-03-15 00:56:30 DEBUG Statistics: disabled
w2022-03-15 00:56:30 DEBUG Deleted entity synthetic identifier rollback: disabled
w2022-03-15 00:56:30 DEBUG Default entity-mode: pojo
w2022-03-15 00:56:30 DEBUG Check Nullability in Core (should be disabled when Bean Validation is on): enabled
w2022-03-15 00:56:30 DEBUG Allow initialization of lazy state outside session : disabled
w2022-03-15 00:56:30 DEBUG Using BatchFetchStyle : LEGACY
w2022-03-15 00:56:30 DEBUG Default batch fetch size: -1
w2022-03-15 00:56:30 DEBUG Maximum outer join fetch depth: null
w2022-03-15 00:56:30 DEBUG Default null ordering: NONE
w2022-03-15 00:56:30 DEBUG Order SQL updates by primary key: disabled
w2022-03-15 00:56:30 DEBUG Order SQL inserts for batching: disabled
w2022-03-15 00:56:30 DEBUG multi-tenancy strategy : NONE
w2022-03-15 00:56:30 DEBUG JTA Track by Thread: enabled
w2022-03-15 00:56:30 DEBUG Query language substitutions: {}
w2022-03-15 00:56:30 DEBUG Named query checking : enabled
w2022-03-15 00:56:30 DEBUG Second-level cache: disabled
w2022-03-15 00:56:30 DEBUG Second-level query cache: disabled
w2022-03-15 00:56:30 DEBUG Second-level query cache factory: null
w2022-03-15 00:56:30 DEBUG Second-level cache region prefix: null
w2022-03-15 00:56:30 DEBUG Optimize second-level cache for minimal puts: disabled
w2022-03-15 00:56:30 DEBUG Structured second-level cache entries: disabled
w2022-03-15 00:56:30 DEBUG Second-level cache direct-reference entries: disabled
w2022-03-15 00:56:30 DEBUG Automatic eviction of collection cache: disabled
w2022-03-15 00:56:30 DEBUG JDBC batch size: 1
w2022-03-15 00:56:30 DEBUG JDBC batch updates for versioned data: enabled
w2022-03-15 00:56:30 DEBUG Scrollable result sets: disabled
w2022-03-15 00:56:30 DEBUG Wrap result sets: disabled
w2022-03-15 00:56:30 DEBUG JDBC3 getGeneratedKeys(): enabled
w2022-03-15 00:56:30 DEBUG JDBC result set fetch size: null
w2022-03-15 00:56:30 DEBUG Connection release mode: ON_CLOSE
w2022-03-15 00:56:30 DEBUG Generate SQL with comments: disabled
w2022-03-15 00:56:30 DEBUG JPA compliance - query : disabled
w2022-03-15 00:56:30 DEBUG JPA compliance - closed-handling : disabled
w2022-03-15 00:56:30 DEBUG JPA compliance - lists : disabled
w2022-03-15 00:56:30 DEBUG JPA compliance - transactions : disabled
w2022-03-15 00:56:30 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 00:56:30 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 00:56:30 DEBUG Session factory constructed with filter configurations : {}
w2022-03-15 00:56:30 DEBUG Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=true, java.specification.version=1.8, file.encoding.pkg=sun.io, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@175052bd, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.SQLiteDialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\charsets.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\cldrdata.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\dnsns.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\jaccess.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\localedata.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\nashorn.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunec.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunmscapi.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\zipfs.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jce.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jfr.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jsse.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\management-agent.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\resources.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\rt.jar;C:\Users\Ольга\Desktop\Java\Project\Project1\helpdeskproject\target\classes;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\2.6.4\spring-boot-starter-data-jpa-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\2.6.4\spring-boot-starter-jdbc-2.6.4.jar;C:\Users\Ольга\.m2\repository\com\zaxxer\HikariCP\4.0.3\HikariCP-4.0.3.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-jdbc\5.3.16\spring-jdbc-5.3.16.jar;C:\Users\Ольга\.m2\repository\jakarta\transaction\jakarta.transaction-api\1.3.3\jakarta.transaction-api-1.3.3.jar;C:\Users\Ольга\.m2\repository\jakarta\persistence\jakarta.persistence-api\2.2.3\jakarta.persistence-api-2.2.3.jar;C:\Users\Ольга\.m2\repository\org\hibernate\hibernate-core\5.6.5.Final\hibernate-core-5.6.5.Final.jar;C:\Users\Ольга\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy\1.11.22\byte-buddy-1.11.22.jar;C:\Users\Ольга\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ольга\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Ольга\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.6\jaxb-runtime-2.3.6.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\txw2\2.3.6\txw2-2.3.6.jar;C:\Users\Ольга\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.12\istack-commons-runtime-3.0.12.jar;C:\Users\Ольга\.m2\repository\com\sun\activation\jakarta.activation\1.2.2\jakarta.activation-1.2.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\data\spring-data-jpa\2.6.2\spring-data-jpa-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\data\spring-data-commons\2.6.2\spring-data-commons-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-orm\5.3.16\spring-orm-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-context\5.3.16\spring-context-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-tx\5.3.16\spring-tx-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-beans\5.3.16\spring-beans-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-aspects\5.3.16\spring-aspects-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-security\2.6.4\spring-boot-starter-security-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter\2.6.4\spring-boot-starter-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-logging\2.6.4\spring-boot-starter-logging-2.6.4.jar;C:\Users\Ольга\.m2\repository\ch\qos\logback\logback-classic\1.2.10\logback-classic-1.2.10.jar;C:\Users\Ольга\.m2\repository\ch\qos\logback\logback-core\1.2.10\logback-core-1.2.10.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.17.1\log4j-to-slf4j-2.17.1.jar;C:\Users\Ольга\.m2\repository\org\slf4j\jul-to-slf4j\1.7.36\jul-to-slf4j-1.7.36.jar;C:\Users\Ольга\.m2\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;C:\Users\Ольга\.m2\repository\org\yaml\snakeyaml\1.29\snakeyaml-1.29.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-aop\5.3.16\spring-aop-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-config\5.6.2\spring-security-config-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-web\5.6.2\spring-security-web-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-expression\5.3.16\spring-expression-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-web\2.6.4\spring-boot-starter-web-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-json\2.6.4\spring-boot-starter-json-2.6.4.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.13.1\jackson-datatype-jdk8-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.13.1\jackson-datatype-jsr310-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.13.1\jackson-module-parameter-names-2.13.1.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\2.6.4\spring-boot-starter-tomcat-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.58\tomcat-embed-core-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\9.0.58\tomcat-embed-el-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.58\tomcat-embed-websocket-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-web\5.3.16\spring-web-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-webmvc\5.3.16\spring-webmvc-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-devtools\2.6.4\spring-boot-devtools-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot\2.6.4\spring-boot-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\2.6.4\spring-boot-autoconfigure-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\xerial\sqlite-jdbc\3.36.0.3\sqlite-jdbc-3.36.0.3.jar;C:\Users\Ольга\.m2\repository\com\zsoltfabok\sqlite-dialect\1.0\sqlite-dialect-1.0.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-aop\2.6.2\spring-boot-starter-aop-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\aspectj\aspectjweaver\1.9.7\aspectjweaver-1.9.7.jar;C:\Users\Ольга\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.3\jakarta.xml.bind-api-2.3.3.jar;C:\Users\Ольга\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.2\jakarta.activation-api-1.2.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-core\5.3.16\spring-core-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-jcl\5.3.16\spring-jcl-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-core\5.6.2\spring-security-core-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-crypto\5.6.2\spring-security-crypto-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\projectlombok\lombok\1.18.22\lombok-1.18.22.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\2.6.4\spring-boot-starter-thymeleaf-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\thymeleaf-spring5\3.0.15.RELEASE\thymeleaf-spring5-3.0.15.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\thymeleaf\3.0.15.RELEASE\thymeleaf-3.0.15.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\attoparser\attoparser\2.0.5.RELEASE\attoparser-2.0.5.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-java8time\3.0.4.RELEASE\thymeleaf-extras-java8time-3.0.4.RELEASE.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.1\jackson-databind-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.1\jackson-annotations-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.1\jackson-core-2.13.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-api\2.4.1\log4j-api-2.4.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-core\2.4.1\log4j-core-2.4.1.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.2\lib\idea_rt.jar, java.vm.vendor=Temurin, sun.arch.data.model=64, user.variant=, java.vendor.url=https://adoptium.net/, catalina.useNaming=false, user.timezone=Europe/Moscow, jakarta.persistence.sharedCache.mode=UNSPECIFIED, os.name=Windows 10, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), user.country=RU, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\bin, sun.java.command=ru.edu.helpdesk.HelpdeskApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@6c194776, com.sun.management.jmxremote=, javax.persistence.sharedCache.mode=UNSPECIFIED, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, user.home=C:\Users\Ольга, user.language=ru, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre, file.separator=\, spring.output.ansi.enabled=always, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, sun.boot.class.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\resources.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\rt.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\sunrsasign.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jsse.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jce.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\charsets.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jfr.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\classes, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_312-b07, user.name=Эльдорадо, spring.jmx.enabled=true, path.separator=;, os.version=10.0, java.endorsed.dirs=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\endorsed, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=default, spring.beaninfo.ignore=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=C:\Users\134E~1\AppData\Local\Temp\, catalina.home=C:\Users\Ольга\AppData\Local\Temp\tomcat.8080.5320915255420525301, java.version=1.8.0_312, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\Ольга\Desktop\Java\Project\Project1\helpdeskproject, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=9256, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\Ольга\AppData\Local\Temp\tomcat.8080.5320915255420525301, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@26993666, java.library.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\windows\System32\OpenSSH\;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\Program Files\apache-maven-3.8.4\bin;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Ольга\AppData\Local\Microsoft\WindowsApps;C:\Users\Ольга\AppData\Local\Programs\Microsoft VS Code\bin;C:\SQLite;C:\Users\Ольга\AppData\Roaming\npm;C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.2\bin;;., java.vendor=Temurin, java.vm.info=mixed mode, java.vm.version=25.312-b07, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, java.ext.dirs=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext;C:\windows\Sun\Java\lib\ext, hibernate.connection.datasource=HikariDataSource (HikariPool-1), hibernate.hbm2ddl.import_files=data/import.sql, java.class.version=52.0}
w2022-03-15 00:56:30 DEBUG Skipping JACC integration as it was not enabled
w2022-03-15 00:56:30 DEBUG Using ORDINAL-based conversion for Enum ru.edu.helpdesk.entity.UserRole
w2022-03-15 00:56:30 DEBUG Using ORDINAL-based conversion for Enum ru.edu.helpdesk.entity.TicketStatus
w2022-03-15 00:56:30 DEBUG Instantiated session factory
w2022-03-15 00:56:30 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6d592798] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@634287d8]
w2022-03-15 00:56:30 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.User] is safe
w2022-03-15 00:56:30 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.User
w2022-03-15 00:56:30 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:56:30 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:56:30 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:56:30 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:56:30 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Ticket] is safe
w2022-03-15 00:56:30 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Ticket
w2022-03-15 00:56:30 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:56:30 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:56:30 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:56:30 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:56:30 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:56:30 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:56:30 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:56:30 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:56:30 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Comment] is safe
w2022-03-15 00:56:30 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Comment
w2022-03-15 00:56:30 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:56:30 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:56:30 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:56:30 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 00:56:30 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.User
w2022-03-15 00:56:30 DEBUG  Version select: select id from user where id =?
w2022-03-15 00:56:30 DEBUG  Snapshot select: select user_.id, user_.first_name as first_na2_2_, user_.last_name as last_nam3_2_, user_.login as login4_2_, user_.password as password5_2_, user_.role as role6_2_ from user user_ where user_.id=?
w2022-03-15 00:56:30 DEBUG  Insert 0: insert into user (first_name, last_name, login, password, role, id) values (?, ?, ?, ?, ?, ?)
w2022-03-15 00:56:30 DEBUG  Update 0: update user set first_name=?, last_name=?, login=?, password=?, role=? where id=?
w2022-03-15 00:56:30 DEBUG  Delete 0: delete from user where id=?
w2022-03-15 00:56:30 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25e69e91]
w2022-03-15 00:56:30 DEBUG Visiting attribute path : firstName
w2022-03-15 00:56:30 DEBUG Visiting attribute path : lastName
w2022-03-15 00:56:30 DEBUG Visiting attribute path : login
w2022-03-15 00:56:30 DEBUG Visiting attribute path : password
w2022-03-15 00:56:30 DEBUG Visiting attribute path : role
w2022-03-15 00:56:30 DEBUG Building LoadPlan...
w2022-03-15 00:56:30 DEBUG processing queryspace <gen:0>
w2022-03-15 00:56:30 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.User)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

w2022-03-15 00:56:30 DEBUG Static select for entity ru.edu.helpdesk.entity.User [NONE]: select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 00:56:30 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.Ticket
w2022-03-15 00:56:30 DEBUG  Version select: select id from ticket where id =?
w2022-03-15 00:56:30 DEBUG  Snapshot select: select ticket_.id, ticket_.client_id as client_i4_1_, ticket_.status as status2_1_, ticket_.support_id as support_5_1_, ticket_.title as title3_1_ from ticket ticket_ where ticket_.id=?
w2022-03-15 00:56:30 DEBUG  Insert 0: insert into ticket (client_id, status, support_id, title, id) values (?, ?, ?, ?, ?)
w2022-03-15 00:56:30 DEBUG  Update 0: update ticket set client_id=?, status=?, support_id=?, title=? where id=?
w2022-03-15 00:56:30 DEBUG  Delete 0: delete from ticket where id=?
w2022-03-15 00:56:30 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28b6205f]
w2022-03-15 00:56:30 DEBUG Visiting attribute path : client
w2022-03-15 00:56:30 DEBUG Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fa32ee5]
w2022-03-15 00:56:30 DEBUG Visiting attribute path : client.firstName
w2022-03-15 00:56:30 DEBUG Visiting attribute path : client.lastName
w2022-03-15 00:56:30 DEBUG Visiting attribute path : client.login
w2022-03-15 00:56:30 DEBUG Visiting attribute path : client.password
w2022-03-15 00:56:30 DEBUG Visiting attribute path : client.role
w2022-03-15 00:56:30 DEBUG Visiting attribute path : status
w2022-03-15 00:56:30 DEBUG Visiting attribute path : support
w2022-03-15 00:56:30 DEBUG Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@721fbd73]
w2022-03-15 00:56:30 DEBUG Visiting attribute path : support.firstName
w2022-03-15 00:56:30 DEBUG Visiting attribute path : support.lastName
w2022-03-15 00:56:30 DEBUG Visiting attribute path : support.login
w2022-03-15 00:56:30 DEBUG Visiting attribute path : support.password
w2022-03-15 00:56:30 DEBUG Visiting attribute path : support.role
w2022-03-15 00:56:30 DEBUG Visiting attribute path : title
w2022-03-15 00:56:30 DEBUG Building LoadPlan...
w2022-03-15 00:56:30 DEBUG processing queryspace <gen:0>
w2022-03-15 00:56:30 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.Ticket)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.Ticket, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.Ticket)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:1>, path=ru.edu.helpdesk.entity.Ticket.client)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:2>, path=ru.edu.helpdesk.entity.Ticket.support)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.Ticket)
          - SQL table alias mapping - ticket0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(client)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
          - JOIN (JoinDefinedByMetadata(support)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user2_
                - alias suffix - 2_
                - suffixed key columns - {id1_2_2_}

w2022-03-15 00:56:30 DEBUG Static select for entity ru.edu.helpdesk.entity.Ticket [NONE]: select ticket0_.id as id1_1_0_, ticket0_.client_id as client_i4_1_0_, ticket0_.status as status2_1_0_, ticket0_.support_id as support_5_1_0_, ticket0_.title as title3_1_0_, user1_.id as id1_2_1_, user1_.first_name as first_na2_2_1_, user1_.last_name as last_nam3_2_1_, user1_.login as login4_2_1_, user1_.password as password5_2_1_, user1_.role as role6_2_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id left outer join user user2_ on ticket0_.support_id=user2_.id where ticket0_.id=?
w2022-03-15 00:56:30 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.Comment
w2022-03-15 00:56:30 DEBUG  Version select: select id from comment where id =?
w2022-03-15 00:56:30 DEBUG  Snapshot select: select comment_.id, comment_.message as message2_0_, comment_.ticket_id as ticket_i3_0_, comment_.user_id as user_id4_0_ from comment comment_ where comment_.id=?
w2022-03-15 00:56:30 DEBUG  Insert 0: insert into comment (message, ticket_id, user_id, id) values (?, ?, ?, ?)
w2022-03-15 00:56:30 DEBUG  Update 0: update comment set message=?, ticket_id=?, user_id=? where id=?
w2022-03-15 00:56:30 DEBUG  Delete 0: delete from comment where id=?
w2022-03-15 00:56:30 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42d4e82c]
w2022-03-15 00:56:30 DEBUG Visiting attribute path : message
w2022-03-15 00:56:30 DEBUG Visiting attribute path : ticket
w2022-03-15 00:56:30 DEBUG Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a3c64a6]
w2022-03-15 00:56:30 DEBUG Visiting attribute path : ticket.client
w2022-03-15 00:56:30 DEBUG Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@649a5e85]
w2022-03-15 00:56:30 DEBUG Visiting attribute path : ticket.client.firstName
w2022-03-15 00:56:30 DEBUG Visiting attribute path : ticket.client.lastName
w2022-03-15 00:56:30 DEBUG Visiting attribute path : ticket.client.login
w2022-03-15 00:56:30 DEBUG Visiting attribute path : ticket.client.password
w2022-03-15 00:56:30 DEBUG Visiting attribute path : ticket.client.role
w2022-03-15 00:56:30 DEBUG Visiting attribute path : ticket.status
w2022-03-15 00:56:30 DEBUG Visiting attribute path : ticket.support
w2022-03-15 00:56:30 DEBUG Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d1fe6cd]
w2022-03-15 00:56:30 DEBUG Visiting attribute path : ticket.support.firstName
w2022-03-15 00:56:30 DEBUG Visiting attribute path : ticket.support.lastName
w2022-03-15 00:56:30 DEBUG Visiting attribute path : ticket.support.login
w2022-03-15 00:56:30 DEBUG Visiting attribute path : ticket.support.password
w2022-03-15 00:56:30 DEBUG Visiting attribute path : ticket.support.role
w2022-03-15 00:56:30 DEBUG Visiting attribute path : ticket.title
w2022-03-15 00:56:30 DEBUG Visiting attribute path : user
w2022-03-15 00:56:30 DEBUG Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78662565]
w2022-03-15 00:56:30 DEBUG Visiting attribute path : user.firstName
w2022-03-15 00:56:30 DEBUG Visiting attribute path : user.lastName
w2022-03-15 00:56:30 DEBUG Visiting attribute path : user.login
w2022-03-15 00:56:30 DEBUG Visiting attribute path : user.password
w2022-03-15 00:56:30 DEBUG Visiting attribute path : user.role
w2022-03-15 00:56:30 DEBUG Building LoadPlan...
w2022-03-15 00:56:30 DEBUG processing queryspace <gen:0>
w2022-03-15 00:56:30 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.Comment)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.Comment, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.Comment)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.Ticket, querySpaceUid=<gen:1>, path=ru.edu.helpdesk.entity.Comment.ticket)
             - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:2>, path=ru.edu.helpdesk.entity.Comment.ticket.client)
             - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:3>, path=ru.edu.helpdesk.entity.Comment.ticket.support)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:4>, path=ru.edu.helpdesk.entity.Comment.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(ticket)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ru.edu.helpdesk.entity.Ticket)
                - SQL table alias mapping - ticket1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(client)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=ru.edu.helpdesk.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}
                - JOIN (JoinDefinedByMetadata(support)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=ru.edu.helpdesk.entity.User)
                      - SQL table alias mapping - user3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_2_3_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user4_
                - alias suffix - 4_
                - suffixed key columns - {id1_2_4_}

w2022-03-15 00:56:30 DEBUG Static select for entity ru.edu.helpdesk.entity.Comment [NONE]: select comment0_.id as id1_0_0_, comment0_.message as message2_0_0_, comment0_.ticket_id as ticket_i3_0_0_, comment0_.user_id as user_id4_0_0_, ticket1_.id as id1_1_1_, ticket1_.client_id as client_i4_1_1_, ticket1_.status as status2_1_1_, ticket1_.support_id as support_5_1_1_, ticket1_.title as title3_1_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_, user3_.id as id1_2_3_, user3_.first_name as first_na2_2_3_, user3_.last_name as last_nam3_2_3_, user3_.login as login4_2_3_, user3_.password as password5_2_3_, user3_.role as role6_2_3_, user4_.id as id1_2_4_, user4_.first_name as first_na2_2_4_, user4_.last_name as last_nam3_2_4_, user4_.login as login4_2_4_, user4_.password as password5_2_4_, user4_.role as role6_2_4_ from comment comment0_ left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id left outer join user user2_ on ticket1_.client_id=user2_.id left outer join user user3_ on ticket1_.support_id=user3_.id left outer join user user4_ on comment0_.user_id=user4_.id where comment0_.id=?
w2022-03-15 00:56:30 DEBUG drop table if exists comment
w2022-03-15 00:56:30 DEBUG drop table if exists hibernate_sequence
w2022-03-15 00:56:30 DEBUG drop table if exists ticket
w2022-03-15 00:56:30 DEBUG drop table if exists user
w2022-03-15 00:56:30 DEBUG create table comment (id bigint not null, message varchar(255) not null, ticket_id bigint, user_id bigint, primary key (id))
w2022-03-15 00:56:30 DEBUG create table hibernate_sequence (next_val bigint)
w2022-03-15 00:56:30 DEBUG insert into hibernate_sequence values ( 1 )
w2022-03-15 00:56:30 DEBUG create table ticket (id bigint not null, status integer, title varchar(255) not null, client_id bigint, support_id bigint, primary key (id))
w2022-03-15 00:56:30 DEBUG create table user (id bigint not null, first_name varchar(255), last_name varchar(255), login varchar(255) not null, password varchar(255) not null, role integer, primary key (id))
w2022-03-15 00:56:30 INFO  HHH000476: Executing import script 'file:/C:/Users/%d0%9e%d0%bb%d1%8c%d0%b3%d0%b0/Desktop/Java/Project/Project1/helpdeskproject/target/classes/data/import.sql'
w2022-03-15 00:56:30 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (1, 'admin', 'admin', 'admin', 'admin', 0)
w2022-03-15 00:56:30 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (2, 'support', 'support', 'support', 'support', 1)
w2022-03-15 00:56:30 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (3, 'user1', 'user1', 'user1', 'user1', 2)
w2022-03-15 00:56:30 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (4, 'user2', 'user2', 'user2', 'user2', 2)
w2022-03-15 00:56:30 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (1, 1, 'Hello user1', 3, 2)
w2022-03-15 00:56:30 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (2, 0, 'Title2', 3, NULL)
w2022-03-15 00:56:30 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (3, 0, 'Message user2', 4, NULL)
w2022-03-15 00:56:30 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (1, "Hello ticket1", 1, 3)
w2022-03-15 00:56:30 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (2, "Hello ticket2", 2, 3)
w2022-03-15 00:56:30 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (3, "Hello ticket11", 1, 2)
w2022-03-15 00:56:30 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (4, "Hello ticket111", 1, 2)
w2022-03-15 00:56:30 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (5, "Hello ticket22", 2, 2)
w2022-03-15 00:56:30 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (6, "Hello ticket3", 3, 4)
w2022-03-15 00:56:30 DEBUG UPDATE hibernate_sequence SET next_val = 8 WHERE next_val = 1
w2022-03-15 00:56:30 INFO  HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
w2022-03-15 00:56:30 DEBUG Checking 0 named HQL queries
w2022-03-15 00:56:30 DEBUG Checking 0 named SQL queries
w2022-03-15 00:56:30 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 00:56:30 DEBUG Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@25f57fea
w2022-03-15 00:56:30 DEBUG Registering SessionFactory: 87cf3d48-0cba-46b9-be1d-b8f15aad6815 (<unnamed>)
w2022-03-15 00:56:30 DEBUG Not binding SessionFactory to JNDI, no JNDI name configured
w2022-03-15 00:56:30 DEBUG Statistics initialized [enabled=false]
w2022-03-15 00:56:30 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 00:56:31 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 00:56:31 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 00:56:37 DEBUG Rendered criteria query -> select generatedAlias0 from Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 00:56:37 DEBUG QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@e320d3a
w2022-03-15 00:56:37 DEBUG parse() - HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 00:56:37 DEBUG throwQueryException() : no errors
w2022-03-15 00:56:37 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[IDENT] Node: 'ru'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'edu'
    |  |  |  |  |  |  \-[IDENT] Node: 'helpdesk'
    |  |  |  |  |  \-[IDENT] Node: 'entity'
    |  |  |  |  \-[IDENT] Node: 'Ticket'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'client'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias1'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

w2022-03-15 00:56:37 DEBUG select << begin [level=1, statement=select]
w2022-03-15 00:56:37 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.Ticket (generatedAlias0) -> ticket0_
w2022-03-15 00:56:37 DEBUG Resolved : generatedAlias0 -> ticket0_.id
w2022-03-15 00:56:37 DEBUG getDataType() : client -> org.hibernate.type.ManyToOneType(ru.edu.helpdesk.entity.User)
w2022-03-15 00:56:37 DEBUG dereferenceEntityJoin() : generating join for client in ru.edu.helpdesk.entity.Ticket (generatedAlias1) parent = [ {null} ]
w2022-03-15 00:56:37 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.User (generatedAlias1) -> user1_
w2022-03-15 00:56:37 DEBUG addJoinByPathMap() : generatedAlias0.client -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}
w2022-03-15 00:56:37 DEBUG Resolved : generatedAlias0.client -> ticket0_.client_id
w2022-03-15 00:56:37 DEBUG createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'user user1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Ticket.client,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}

w2022-03-15 00:56:37 DEBUG Resolved : generatedAlias0 -> ticket0_.id
w2022-03-15 00:56:37 DEBUG Resolved : generatedAlias1 -> user1_.id
w2022-03-15 00:56:37 DEBUG getDataType() : id -> org.hibernate.type.LongType@7e2e875
w2022-03-15 00:56:37 DEBUG Resolved : generatedAlias1.id -> user1_.id
w2022-03-15 00:56:37 DEBUG select : finishing up [level=1, statement=select]
w2022-03-15 00:56:37 DEBUG processQuery() :  ( SELECT ( {select clause} ticket0_.id ) ( FromClause{level=1} ( ticket ticket0_ user user1_ ) ) ( where ( = ( user1_.id user1_.id id ) ? ) ) )
w2022-03-15 00:56:37 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Ticket): [ticket]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.Ticket)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.User)
          | path: generatedAlias1.id
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.User)
          |  | originalText: generatedAlias1
          |  \-IdentNode
          |    persister: null
          |    originalText: id
          \-ParameterNode

w2022-03-15 00:56:37 DEBUG Using FROM fragment [ticket ticket0_]
w2022-03-15 00:56:37 DEBUG Using FROM fragment [left outer join user user1_ on ticket0_.client_id=user1_.id]
w2022-03-15 00:56:37 DEBUG select >> end [level=1, statement=select]
w2022-03-15 00:56:37 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (ticket,user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'ticket0_.id as id1_1_' {alias=generatedAlias0, className=ru.edu.helpdesk.entity.Ticket, tableAlias=ticket0_}
    |  \-[SQL_TOKEN] SqlFragment: 'ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[ticket0_, user1_], fromElementsByPath=[generatedAlias0.client], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'ticket ticket0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=ticket,tableAlias=ticket0_,origin=null,columns={,className=ru.edu.helpdesk.entity.Ticket}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join user user1_ on ticket0_.client_id=user1_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Ticket.client,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user1_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias1.id,tableAlias=user1_,className=ru.edu.helpdesk.entity.User,classAlias=generatedAlias1}
          |  +-[ALIAS_REF] IdentNode: 'user1_.id' {alias=generatedAlias1, className=ru.edu.helpdesk.entity.User, tableAlias=user1_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LongType@7e2e875}

w2022-03-15 00:56:37 DEBUG throwQueryException() : no errors
w2022-03-15 00:56:37 DEBUG HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 00:56:37 DEBUG SQL: select ticket0_.id as id1_1_, ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id where user1_.id=?
w2022-03-15 00:56:37 DEBUG throwQueryException() : no errors
w2022-03-15 00:56:37 DEBUG select ticket0_.id as id1_1_, ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id where user1_.id=?
w2022-03-15 00:57:07 DEBUG Rendered criteria query -> select generatedAlias0 from Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 00:57:07 DEBUG select ticket0_.id as id1_1_, ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id where user1_.id=?
w2022-03-15 00:57:07 DEBUG Result set row: 0
w2022-03-15 00:57:07 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 00:57:07 DEBUG Result set row: 1
w2022-03-15 00:57:07 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 00:57:07 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 00:57:07 DEBUG Processing attribute `client` : value = 1
w2022-03-15 00:57:07 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 00:57:07 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 00:57:07 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 00:57:07 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#1]
w2022-03-15 00:57:07 DEBUG Processing attribute `firstName` : value = admin
w2022-03-15 00:57:07 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 00:57:07 DEBUG Processing attribute `lastName` : value = admin
w2022-03-15 00:57:07 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 00:57:07 DEBUG Processing attribute `login` : value = admin
w2022-03-15 00:57:07 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 00:57:07 DEBUG Processing attribute `password` : value = admin
w2022-03-15 00:57:07 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 00:57:07 DEBUG Processing attribute `role` : value = ADMIN
w2022-03-15 00:57:07 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 00:57:07 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#1]
w2022-03-15 00:57:07 DEBUG Done entity load : ru.edu.helpdesk.entity.User#1
w2022-03-15 00:57:07 DEBUG Processing attribute `status` : value = WORKING
w2022-03-15 00:57:07 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 00:57:07 DEBUG Processing attribute `support` : value = 2
w2022-03-15 00:57:07 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 00:57:07 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 00:57:07 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 00:57:07 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#2]
w2022-03-15 00:57:07 DEBUG Processing attribute `firstName` : value = support
w2022-03-15 00:57:07 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 00:57:07 DEBUG Processing attribute `lastName` : value = support
w2022-03-15 00:57:07 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 00:57:07 DEBUG Processing attribute `login` : value = support
w2022-03-15 00:57:07 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 00:57:07 DEBUG Processing attribute `password` : value = support
w2022-03-15 00:57:07 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 00:57:07 DEBUG Processing attribute `role` : value = SUPPORT
w2022-03-15 00:57:07 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 00:57:07 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#2]
w2022-03-15 00:57:07 DEBUG Done entity load : ru.edu.helpdesk.entity.User#2
w2022-03-15 00:57:07 DEBUG Processing attribute `title` : value = Hello user1
w2022-03-15 00:57:07 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 00:57:07 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 00:57:07 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 00:57:07 DEBUG Processing attribute `client` : value = 1
w2022-03-15 00:57:07 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 00:57:07 DEBUG Processing attribute `status` : value = OPEN
w2022-03-15 00:57:07 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 00:57:07 DEBUG Processing attribute `support` : value = null
w2022-03-15 00:57:07 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 00:57:07 DEBUG Processing attribute `title` : value = Title2
w2022-03-15 00:57:07 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 00:57:07 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 00:57:09 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 00:57:09 DEBUG begin
w2022-03-15 00:57:09 DEBUG committing
w2022-03-15 00:58:22 DEBUG Rendered criteria query -> select generatedAlias0 from Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 00:58:22 DEBUG select ticket0_.id as id1_1_, ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id where user1_.id=?
w2022-03-15 00:58:22 DEBUG Result set row: 0
w2022-03-15 00:58:22 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 00:58:22 DEBUG Result set row: 1
w2022-03-15 00:58:22 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 00:58:22 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 00:58:22 DEBUG Processing attribute `client` : value = 1
w2022-03-15 00:58:22 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 00:58:22 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 00:58:22 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 00:58:22 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#1]
w2022-03-15 00:58:22 DEBUG Processing attribute `firstName` : value = admin
w2022-03-15 00:58:22 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 00:58:22 DEBUG Processing attribute `lastName` : value = admin
w2022-03-15 00:58:22 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 00:58:22 DEBUG Processing attribute `login` : value = admin
w2022-03-15 00:58:22 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 00:58:22 DEBUG Processing attribute `password` : value = admin
w2022-03-15 00:58:22 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 00:58:22 DEBUG Processing attribute `role` : value = ADMIN
w2022-03-15 00:58:22 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 00:58:22 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#1]
w2022-03-15 00:58:22 DEBUG Done entity load : ru.edu.helpdesk.entity.User#1
w2022-03-15 00:58:22 DEBUG Processing attribute `status` : value = WORKING
w2022-03-15 00:58:22 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 00:58:22 DEBUG Processing attribute `support` : value = 2
w2022-03-15 00:58:22 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 00:58:22 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 00:58:22 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 00:58:22 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#2]
w2022-03-15 00:58:22 DEBUG Processing attribute `firstName` : value = support
w2022-03-15 00:58:22 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 00:58:22 DEBUG Processing attribute `lastName` : value = support
w2022-03-15 00:58:22 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 00:58:22 DEBUG Processing attribute `login` : value = support
w2022-03-15 00:58:22 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 00:58:22 DEBUG Processing attribute `password` : value = support
w2022-03-15 00:58:22 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 00:58:22 DEBUG Processing attribute `role` : value = SUPPORT
w2022-03-15 00:58:22 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 00:58:22 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#2]
w2022-03-15 00:58:22 DEBUG Done entity load : ru.edu.helpdesk.entity.User#2
w2022-03-15 00:58:22 DEBUG Processing attribute `title` : value = Hello user1
w2022-03-15 00:58:22 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 00:58:22 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 00:58:22 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 00:58:22 DEBUG Processing attribute `client` : value = 1
w2022-03-15 00:58:22 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 00:58:22 DEBUG Processing attribute `status` : value = OPEN
w2022-03-15 00:58:22 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 00:58:22 DEBUG Processing attribute `support` : value = null
w2022-03-15 00:58:22 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 00:58:22 DEBUG Processing attribute `title` : value = Title2
w2022-03-15 00:58:22 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 00:58:22 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 00:58:35 DEBUG Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.login=:param0
w2022-03-15 00:58:35 DEBUG parse() - HQL: select generatedAlias0 from ru.edu.helpdesk.entity.User as generatedAlias0 where generatedAlias0.login=:param0
w2022-03-15 00:58:35 DEBUG throwQueryException() : no errors
w2022-03-15 00:58:35 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'ru'
    |  |     |  |  |  |  \-[IDENT] Node: 'edu'
    |  |     |  |  |  \-[IDENT] Node: 'helpdesk'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'login'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

w2022-03-15 00:58:35 DEBUG select << begin [level=1, statement=select]
w2022-03-15 00:58:35 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.User (generatedAlias0) -> user0_
w2022-03-15 00:58:35 DEBUG Resolved : generatedAlias0 -> user0_.id
w2022-03-15 00:58:35 DEBUG Resolved : generatedAlias0 -> user0_.id
w2022-03-15 00:58:35 DEBUG getDataType() : login -> org.hibernate.type.StringType@5c343b43
w2022-03-15 00:58:35 DEBUG Resolved : generatedAlias0.login -> user0_.login
w2022-03-15 00:58:35 DEBUG select : finishing up [level=1, statement=select]
w2022-03-15 00:58:35 DEBUG processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) ( where ( = ( user0_.login user0_.id login ) ? ) ) )
w2022-03-15 00:58:35 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity User): [user]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.User)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.User)
          | path: generatedAlias0.login
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.User)
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    originalText: login
          \-ParameterNode

w2022-03-15 00:58:35 DEBUG Using FROM fragment [user user0_]
w2022-03-15 00:58:35 DEBUG select >> end [level=1, statement=select]
w2022-03-15 00:58:35 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_2_' {alias=generatedAlias0, className=ru.edu.helpdesk.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.first_name as first_na2_2_, user0_.last_name as last_nam3_2_, user0_.login as login4_2_, user0_.password as password5_2_, user0_.role as role6_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=ru.edu.helpdesk.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.login' {propertyName=login,dereferenceType=PRIMITIVE,getPropertyPath=login,path=generatedAlias0.login,tableAlias=user0_,className=ru.edu.helpdesk.entity.User,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=generatedAlias0, className=ru.edu.helpdesk.entity.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'login' {originalText=login}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@5c343b43}

w2022-03-15 00:58:35 DEBUG throwQueryException() : no errors
w2022-03-15 00:58:35 DEBUG HQL: select generatedAlias0 from ru.edu.helpdesk.entity.User as generatedAlias0 where generatedAlias0.login=:param0
w2022-03-15 00:58:35 DEBUG SQL: select user0_.id as id1_2_, user0_.first_name as first_na2_2_, user0_.last_name as last_nam3_2_, user0_.login as login4_2_, user0_.password as password5_2_, user0_.role as role6_2_ from user user0_ where user0_.login=?
w2022-03-15 00:58:35 DEBUG throwQueryException() : no errors
w2022-03-15 00:58:35 DEBUG select user0_.id as id1_2_, user0_.first_name as first_na2_2_, user0_.last_name as last_nam3_2_, user0_.login as login4_2_, user0_.password as password5_2_, user0_.role as role6_2_ from user user0_ where user0_.login=?
w2022-03-15 00:58:35 DEBUG Result set row: 0
w2022-03-15 00:58:35 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.User#1]
w2022-03-15 00:58:35 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#1]
w2022-03-15 00:58:35 DEBUG Processing attribute `firstName` : value = admin
w2022-03-15 00:58:35 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 00:58:35 DEBUG Processing attribute `lastName` : value = admin
w2022-03-15 00:58:35 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 00:58:35 DEBUG Processing attribute `login` : value = admin
w2022-03-15 00:58:35 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 00:58:35 DEBUG Processing attribute `password` : value = admin
w2022-03-15 00:58:35 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 00:58:35 DEBUG Processing attribute `role` : value = ADMIN
w2022-03-15 00:58:35 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 00:58:35 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#1]
w2022-03-15 00:58:35 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 00:58:35 DEBUG begin
w2022-03-15 00:58:35 DEBUG committing
w2022-03-15 01:02:37 DEBUG Logging Provider: org.jboss.logging.Log4j2LoggerProvider
w2022-03-15 01:02:37 DEBUG PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@65a2ae2e
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/%d0%9e%d0%bb%d1%8c%d0%b3%d0%b0/Desktop/Java/Project/Project1/helpdeskproject/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		ru.edu.helpdesk.entity.Comment
		ru.edu.helpdesk.entity.Ticket
		ru.edu.helpdesk.entity.User]
	Mapping files names []
	Properties []
w2022-03-15 01:02:37 DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
w2022-03-15 01:02:37 DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
w2022-03-15 01:02:37 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
w2022-03-15 01:02:37 INFO  HHH000412: Hibernate ORM core version 5.6.5.Final
w2022-03-15 01:02:37 DEBUG HHH000206: hibernate.properties not found
w2022-03-15 01:02:37 DEBUG Overriding existing service binding [org.hibernate.secure.spi.JaccService]
w2022-03-15 01:02:37 DEBUG Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
w2022-03-15 01:02:37 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
w2022-03-15 01:02:37 INFO  HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
w2022-03-15 01:02:37 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@6afd049c
w2022-03-15 01:02:37 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@6afd049c
w2022-03-15 01:02:37 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6afd049c
w2022-03-15 01:02:37 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1dde13dd
w2022-03-15 01:02:37 DEBUG Adding type registration true_false -> org.hibernate.type.TrueFalseType@532a82d9
w2022-03-15 01:02:37 DEBUG Adding type registration yes_no -> org.hibernate.type.YesNoType@612e3f97
w2022-03-15 01:02:37 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@3c15e563
w2022-03-15 01:02:37 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@3c15e563
w2022-03-15 01:02:37 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3c15e563
w2022-03-15 01:02:37 DEBUG Adding type registration character -> org.hibernate.type.CharacterType@6b419a0e
w2022-03-15 01:02:37 DEBUG Adding type registration char -> org.hibernate.type.CharacterType@6b419a0e
w2022-03-15 01:02:37 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6b419a0e
w2022-03-15 01:02:37 DEBUG Adding type registration short -> org.hibernate.type.ShortType@384fe32c
w2022-03-15 01:02:37 DEBUG Adding type registration short -> org.hibernate.type.ShortType@384fe32c
w2022-03-15 01:02:37 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.ShortType@384fe32c
w2022-03-15 01:02:37 DEBUG Adding type registration integer -> org.hibernate.type.IntegerType@5578d2bb
w2022-03-15 01:02:37 DEBUG Adding type registration int -> org.hibernate.type.IntegerType@5578d2bb
w2022-03-15 01:02:37 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5578d2bb
w2022-03-15 01:02:37 DEBUG Adding type registration long -> org.hibernate.type.LongType@2304c5b6
w2022-03-15 01:02:37 DEBUG Adding type registration long -> org.hibernate.type.LongType@2304c5b6
w2022-03-15 01:02:37 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.LongType@2304c5b6
w2022-03-15 01:02:37 DEBUG Adding type registration float -> org.hibernate.type.FloatType@58fdbf27
w2022-03-15 01:02:37 DEBUG Adding type registration float -> org.hibernate.type.FloatType@58fdbf27
w2022-03-15 01:02:37 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.FloatType@58fdbf27
w2022-03-15 01:02:37 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@1c69bdd4
w2022-03-15 01:02:37 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@1c69bdd4
w2022-03-15 01:02:37 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1c69bdd4
w2022-03-15 01:02:37 DEBUG Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@530d3e76
w2022-03-15 01:02:37 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@530d3e76
w2022-03-15 01:02:37 DEBUG Adding type registration big_integer -> org.hibernate.type.BigIntegerType@12196914
w2022-03-15 01:02:37 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@12196914
w2022-03-15 01:02:37 DEBUG Adding type registration string -> org.hibernate.type.StringType@37052a48
w2022-03-15 01:02:37 DEBUG Adding type registration java.lang.String -> org.hibernate.type.StringType@37052a48
w2022-03-15 01:02:37 DEBUG Adding type registration nstring -> org.hibernate.type.StringNVarcharType@d20fca7
w2022-03-15 01:02:37 DEBUG Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@269e5234
w2022-03-15 01:02:37 DEBUG Adding type registration url -> org.hibernate.type.UrlType@5a0d14f3
w2022-03-15 01:02:37 DEBUG Adding type registration java.net.URL -> org.hibernate.type.UrlType@5a0d14f3
w2022-03-15 01:02:37 DEBUG Adding type registration Duration -> org.hibernate.type.DurationType@78f70115
w2022-03-15 01:02:37 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.DurationType@78f70115
w2022-03-15 01:02:37 DEBUG Adding type registration Instant -> org.hibernate.type.InstantType@7897eb42
w2022-03-15 01:02:37 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7897eb42
w2022-03-15 01:02:37 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@6e8c9462
w2022-03-15 01:02:37 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@6e8c9462
w2022-03-15 01:02:37 DEBUG Adding type registration LocalDate -> org.hibernate.type.LocalDateType@373bd730
w2022-03-15 01:02:37 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@373bd730
w2022-03-15 01:02:37 DEBUG Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@9b74d8e
w2022-03-15 01:02:37 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@9b74d8e
w2022-03-15 01:02:37 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@49a738dc
w2022-03-15 01:02:37 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@49a738dc
w2022-03-15 01:02:37 DEBUG Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@90d9fd6
w2022-03-15 01:02:37 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@90d9fd6
w2022-03-15 01:02:37 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6f524de6
w2022-03-15 01:02:37 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6f524de6
w2022-03-15 01:02:37 DEBUG Adding type registration date -> org.hibernate.type.DateType@4c0ef48
w2022-03-15 01:02:37 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.DateType@4c0ef48
w2022-03-15 01:02:37 DEBUG Adding type registration time -> org.hibernate.type.TimeType@2aaa3d2f
w2022-03-15 01:02:37 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2aaa3d2f
w2022-03-15 01:02:37 DEBUG Adding type registration timestamp -> org.hibernate.type.TimestampType@31e58373
w2022-03-15 01:02:37 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@31e58373
w2022-03-15 01:02:37 DEBUG Adding type registration java.util.Date -> org.hibernate.type.TimestampType@31e58373
w2022-03-15 01:02:37 DEBUG Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4ef7caa2
w2022-03-15 01:02:37 DEBUG Adding type registration calendar -> org.hibernate.type.CalendarType@6ddc26a
w2022-03-15 01:02:37 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6ddc26a
w2022-03-15 01:02:37 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6ddc26a
w2022-03-15 01:02:37 DEBUG Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4f59eb49
w2022-03-15 01:02:37 DEBUG Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@1832f509
w2022-03-15 01:02:37 DEBUG Adding type registration locale -> org.hibernate.type.LocaleType@421519fd
w2022-03-15 01:02:37 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@421519fd
w2022-03-15 01:02:37 DEBUG Adding type registration currency -> org.hibernate.type.CurrencyType@4f319cb9
w2022-03-15 01:02:37 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4f319cb9
w2022-03-15 01:02:37 DEBUG Adding type registration timezone -> org.hibernate.type.TimeZoneType@42e1e35e
w2022-03-15 01:02:37 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@42e1e35e
w2022-03-15 01:02:37 DEBUG Adding type registration class -> org.hibernate.type.ClassType@4888c6b6
w2022-03-15 01:02:37 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4888c6b6
w2022-03-15 01:02:37 DEBUG Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6d06894b
w2022-03-15 01:02:37 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6d06894b
w2022-03-15 01:02:37 DEBUG Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1b02c937
w2022-03-15 01:02:37 DEBUG Adding type registration binary -> org.hibernate.type.BinaryType@ac92039
w2022-03-15 01:02:37 DEBUG Adding type registration byte[] -> org.hibernate.type.BinaryType@ac92039
w2022-03-15 01:02:37 DEBUG Adding type registration [B -> org.hibernate.type.BinaryType@ac92039
w2022-03-15 01:02:37 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@24c47e42
w2022-03-15 01:02:37 DEBUG Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@24c47e42
w2022-03-15 01:02:37 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@24c47e42
w2022-03-15 01:02:37 DEBUG Adding type registration row_version -> org.hibernate.type.RowVersionType@2dc24798
w2022-03-15 01:02:37 DEBUG Adding type registration image -> org.hibernate.type.ImageType@5a39f778
w2022-03-15 01:02:37 DEBUG Adding type registration characters -> org.hibernate.type.CharArrayType@5c11d406
w2022-03-15 01:02:37 DEBUG Adding type registration char[] -> org.hibernate.type.CharArrayType@5c11d406
w2022-03-15 01:02:37 DEBUG Adding type registration [C -> org.hibernate.type.CharArrayType@5c11d406
w2022-03-15 01:02:37 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@35682c20
w2022-03-15 01:02:37 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@35682c20
w2022-03-15 01:02:37 DEBUG Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@35682c20
w2022-03-15 01:02:37 DEBUG Adding type registration text -> org.hibernate.type.TextType@529313ee
w2022-03-15 01:02:37 DEBUG Adding type registration ntext -> org.hibernate.type.NTextType@3f945c5
w2022-03-15 01:02:37 DEBUG Adding type registration blob -> org.hibernate.type.BlobType@4d16f475
w2022-03-15 01:02:37 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4d16f475
w2022-03-15 01:02:37 DEBUG Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@330c2686
w2022-03-15 01:02:37 DEBUG Adding type registration clob -> org.hibernate.type.ClobType@485c84b5
w2022-03-15 01:02:37 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@485c84b5
w2022-03-15 01:02:37 DEBUG Adding type registration nclob -> org.hibernate.type.NClobType@494e72ea
w2022-03-15 01:02:37 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@494e72ea
w2022-03-15 01:02:37 DEBUG Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@34000068
w2022-03-15 01:02:37 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6d2bca8f
w2022-03-15 01:02:37 DEBUG Adding type registration serializable -> org.hibernate.type.SerializableType@7f6c8059
w2022-03-15 01:02:37 DEBUG Adding type registration object -> org.hibernate.type.ObjectType@38730221
w2022-03-15 01:02:37 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@38730221
w2022-03-15 01:02:37 DEBUG Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@11e0b77e
w2022-03-15 01:02:37 DEBUG Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@31a2cd69
w2022-03-15 01:02:37 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2ee16933
w2022-03-15 01:02:37 DEBUG Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@a34f78b
w2022-03-15 01:02:37 DEBUG Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1efbfaf4
w2022-03-15 01:02:37 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3995b5c7
w2022-03-15 01:02:37 DEBUG Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1c98fb37
w2022-03-15 01:02:37 DEBUG Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@313ddf80
w2022-03-15 01:02:37 INFO  HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
w2022-03-15 01:02:37 DEBUG Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@54dff149] into BootstrapContext; was [null]
w2022-03-15 01:02:37 DEBUG ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@54dff149) [was null]
w2022-03-15 01:02:37 DEBUG Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@6d5047d5] into BootstrapContext; was [null]
w2022-03-15 01:02:37 DEBUG Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@488a0ed1] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@25f7f979]
w2022-03-15 01:02:37 DEBUG Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@54dff149]
w2022-03-15 01:02:37 DEBUG ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@54dff149]
w2022-03-15 01:02:37 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
w2022-03-15 01:02:37 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
w2022-03-15 01:02:37 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
w2022-03-15 01:02:37 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
w2022-03-15 01:02:37 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
w2022-03-15 01:02:37 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
w2022-03-15 01:02:37 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
w2022-03-15 01:02:37 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
w2022-03-15 01:02:37 DEBUG Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
w2022-03-15 01:02:37 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
w2022-03-15 01:02:37 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
w2022-03-15 01:02:37 DEBUG Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
w2022-03-15 01:02:37 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
w2022-03-15 01:02:37 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
w2022-03-15 01:02:37 DEBUG Database ->
       name : SQLite
    version : 3.36.0
      major : 3
      minor : 36
w2022-03-15 01:02:37 DEBUG Driver ->
       name : SQLite JDBC
    version : 3.36.0.3
      major : 3
      minor : 36
w2022-03-15 01:02:37 DEBUG JDBC version : 2.1
w2022-03-15 01:02:37 INFO  HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
w2022-03-15 01:02:37 DEBUG JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
w2022-03-15 01:02:37 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
w2022-03-15 01:02:37 DEBUG HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [2] less than 4
w2022-03-15 01:02:37 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2907e8ea] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@47ddad31]
w2022-03-15 01:02:37 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
w2022-03-15 01:02:37 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.Comment
w2022-03-15 01:02:37 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 01:02:37 DEBUG Import with entity name Comment
w2022-03-15 01:02:37 DEBUG Bind entity ru.edu.helpdesk.entity.Comment on table comment
w2022-03-15 01:02:37 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 01:02:37 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Comment] is safe
w2022-03-15 01:02:37 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Comment
w2022-03-15 01:02:37 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 01:02:37 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Comment:id]
w2022-03-15 01:02:37 DEBUG building SimpleValue for id
w2022-03-15 01:02:37 DEBUG Building property id
w2022-03-15 01:02:37 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 01:02:37 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=message, insertable=true, updatable=true, unique=false}
w2022-03-15 01:02:37 DEBUG MetadataSourceProcessor property message with lazy=false
w2022-03-15 01:02:37 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Comment:message]
w2022-03-15 01:02:37 DEBUG building SimpleValue for message
w2022-03-15 01:02:37 DEBUG Building property message
w2022-03-15 01:02:37 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 01:02:37 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=ticket, insertable=true, updatable=true, unique=false}
w2022-03-15 01:02:37 DEBUG Building property ticket
w2022-03-15 01:02:37 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 01:02:37 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=user, insertable=true, updatable=true, unique=false}
w2022-03-15 01:02:37 DEBUG Building property user
w2022-03-15 01:02:37 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 01:02:37 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 01:02:37 DEBUG Import with entity name Ticket
w2022-03-15 01:02:37 DEBUG Bind entity ru.edu.helpdesk.entity.Ticket on table ticket
w2022-03-15 01:02:37 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 01:02:37 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Ticket] is safe
w2022-03-15 01:02:37 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Ticket
w2022-03-15 01:02:37 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 01:02:37 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:id]
w2022-03-15 01:02:37 DEBUG building SimpleValue for id
w2022-03-15 01:02:37 DEBUG Building property id
w2022-03-15 01:02:37 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 01:02:37 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 01:02:37 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=client, insertable=true, updatable=true, unique=false}
w2022-03-15 01:02:37 DEBUG Building property client
w2022-03-15 01:02:37 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=status, insertable=true, updatable=true, unique=false}
w2022-03-15 01:02:37 DEBUG MetadataSourceProcessor property status with lazy=false
w2022-03-15 01:02:37 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:status]
w2022-03-15 01:02:37 DEBUG building SimpleValue for status
w2022-03-15 01:02:37 DEBUG Building property status
w2022-03-15 01:02:37 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 01:02:37 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=support, insertable=true, updatable=true, unique=false}
w2022-03-15 01:02:37 DEBUG Building property support
w2022-03-15 01:02:37 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=title, insertable=true, updatable=true, unique=false}
w2022-03-15 01:02:37 DEBUG MetadataSourceProcessor property title with lazy=false
w2022-03-15 01:02:37 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:title]
w2022-03-15 01:02:37 DEBUG building SimpleValue for title
w2022-03-15 01:02:37 DEBUG Building property title
w2022-03-15 01:02:37 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.User
w2022-03-15 01:02:37 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 01:02:37 DEBUG Import with entity name User
w2022-03-15 01:02:37 DEBUG Bind entity ru.edu.helpdesk.entity.User on table user
w2022-03-15 01:02:37 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 01:02:37 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.User] is safe
w2022-03-15 01:02:37 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.User
w2022-03-15 01:02:37 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 01:02:37 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:id]
w2022-03-15 01:02:37 DEBUG building SimpleValue for id
w2022-03-15 01:02:37 DEBUG Building property id
w2022-03-15 01:02:37 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 01:02:37 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
w2022-03-15 01:02:37 DEBUG MetadataSourceProcessor property firstName with lazy=false
w2022-03-15 01:02:37 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:firstName]
w2022-03-15 01:02:37 DEBUG building SimpleValue for firstName
w2022-03-15 01:02:37 DEBUG Building property firstName
w2022-03-15 01:02:37 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
w2022-03-15 01:02:37 DEBUG MetadataSourceProcessor property lastName with lazy=false
w2022-03-15 01:02:37 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:lastName]
w2022-03-15 01:02:37 DEBUG building SimpleValue for lastName
w2022-03-15 01:02:37 DEBUG Building property lastName
w2022-03-15 01:02:37 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=login, insertable=true, updatable=true, unique=false}
w2022-03-15 01:02:37 DEBUG MetadataSourceProcessor property login with lazy=false
w2022-03-15 01:02:37 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:login]
w2022-03-15 01:02:37 DEBUG building SimpleValue for login
w2022-03-15 01:02:37 DEBUG Building property login
w2022-03-15 01:02:37 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
w2022-03-15 01:02:37 DEBUG MetadataSourceProcessor property password with lazy=false
w2022-03-15 01:02:37 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:password]
w2022-03-15 01:02:37 DEBUG building SimpleValue for password
w2022-03-15 01:02:37 DEBUG Building property password
w2022-03-15 01:02:37 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=role, insertable=true, updatable=true, unique=false}
w2022-03-15 01:02:37 DEBUG MetadataSourceProcessor property role with lazy=false
w2022-03-15 01:02:37 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:role]
w2022-03-15 01:02:37 DEBUG building SimpleValue for role
w2022-03-15 01:02:37 DEBUG Building property role
w2022-03-15 01:02:37 DEBUG Starting fillSimpleValue for id
w2022-03-15 01:02:37 DEBUG Starting fillSimpleValue for message
w2022-03-15 01:02:37 DEBUG Starting fillSimpleValue for id
w2022-03-15 01:02:37 DEBUG Starting fillSimpleValue for status
w2022-03-15 01:02:37 DEBUG Starting fillSimpleValue for title
w2022-03-15 01:02:37 DEBUG Starting fillSimpleValue for id
w2022-03-15 01:02:37 DEBUG Starting fillSimpleValue for firstName
w2022-03-15 01:02:37 DEBUG Starting fillSimpleValue for lastName
w2022-03-15 01:02:37 DEBUG Starting fillSimpleValue for login
w2022-03-15 01:02:37 DEBUG Starting fillSimpleValue for password
w2022-03-15 01:02:37 DEBUG Starting fillSimpleValue for role
w2022-03-15 01:02:37 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [comment]
w2022-03-15 01:02:37 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [ticket]
w2022-03-15 01:02:37 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [user]
w2022-03-15 01:02:37 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 01:02:37 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 01:02:37 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 01:02:37 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 01:02:37 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 01:02:37 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 01:02:37 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 01:02:37 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 01:02:37 DEBUG Building session factory
w2022-03-15 01:02:37 DEBUG SessionFactory name : null
w2022-03-15 01:02:37 DEBUG Automatic flush during beforeCompletion(): enabled
w2022-03-15 01:02:37 DEBUG Automatic session close at end of transaction: disabled
w2022-03-15 01:02:37 DEBUG Statistics: disabled
w2022-03-15 01:02:37 DEBUG Deleted entity synthetic identifier rollback: disabled
w2022-03-15 01:02:37 DEBUG Default entity-mode: pojo
w2022-03-15 01:02:37 DEBUG Check Nullability in Core (should be disabled when Bean Validation is on): enabled
w2022-03-15 01:02:37 DEBUG Allow initialization of lazy state outside session : disabled
w2022-03-15 01:02:37 DEBUG Using BatchFetchStyle : LEGACY
w2022-03-15 01:02:37 DEBUG Default batch fetch size: -1
w2022-03-15 01:02:37 DEBUG Maximum outer join fetch depth: null
w2022-03-15 01:02:37 DEBUG Default null ordering: NONE
w2022-03-15 01:02:37 DEBUG Order SQL updates by primary key: disabled
w2022-03-15 01:02:37 DEBUG Order SQL inserts for batching: disabled
w2022-03-15 01:02:37 DEBUG multi-tenancy strategy : NONE
w2022-03-15 01:02:37 DEBUG JTA Track by Thread: enabled
w2022-03-15 01:02:37 DEBUG Query language substitutions: {}
w2022-03-15 01:02:37 DEBUG Named query checking : enabled
w2022-03-15 01:02:37 DEBUG Second-level cache: disabled
w2022-03-15 01:02:37 DEBUG Second-level query cache: disabled
w2022-03-15 01:02:37 DEBUG Second-level query cache factory: null
w2022-03-15 01:02:37 DEBUG Second-level cache region prefix: null
w2022-03-15 01:02:37 DEBUG Optimize second-level cache for minimal puts: disabled
w2022-03-15 01:02:37 DEBUG Structured second-level cache entries: disabled
w2022-03-15 01:02:37 DEBUG Second-level cache direct-reference entries: disabled
w2022-03-15 01:02:37 DEBUG Automatic eviction of collection cache: disabled
w2022-03-15 01:02:37 DEBUG JDBC batch size: 1
w2022-03-15 01:02:37 DEBUG JDBC batch updates for versioned data: enabled
w2022-03-15 01:02:37 DEBUG Scrollable result sets: disabled
w2022-03-15 01:02:37 DEBUG Wrap result sets: disabled
w2022-03-15 01:02:37 DEBUG JDBC3 getGeneratedKeys(): enabled
w2022-03-15 01:02:37 DEBUG JDBC result set fetch size: null
w2022-03-15 01:02:37 DEBUG Connection release mode: ON_CLOSE
w2022-03-15 01:02:37 DEBUG Generate SQL with comments: disabled
w2022-03-15 01:02:37 DEBUG JPA compliance - query : disabled
w2022-03-15 01:02:37 DEBUG JPA compliance - closed-handling : disabled
w2022-03-15 01:02:37 DEBUG JPA compliance - lists : disabled
w2022-03-15 01:02:37 DEBUG JPA compliance - transactions : disabled
w2022-03-15 01:02:37 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 01:02:37 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 01:02:37 DEBUG Session factory constructed with filter configurations : {}
w2022-03-15 01:02:37 DEBUG Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=true, java.specification.version=1.8, file.encoding.pkg=sun.io, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@620bdf9f, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.SQLiteDialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\charsets.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\cldrdata.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\dnsns.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\jaccess.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\localedata.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\nashorn.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunec.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunmscapi.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\zipfs.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jce.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jfr.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jsse.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\management-agent.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\resources.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\rt.jar;C:\Users\Ольга\Desktop\Java\Project\Project1\helpdeskproject\target\classes;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\2.6.4\spring-boot-starter-data-jpa-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\2.6.4\spring-boot-starter-jdbc-2.6.4.jar;C:\Users\Ольга\.m2\repository\com\zaxxer\HikariCP\4.0.3\HikariCP-4.0.3.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-jdbc\5.3.16\spring-jdbc-5.3.16.jar;C:\Users\Ольга\.m2\repository\jakarta\transaction\jakarta.transaction-api\1.3.3\jakarta.transaction-api-1.3.3.jar;C:\Users\Ольга\.m2\repository\jakarta\persistence\jakarta.persistence-api\2.2.3\jakarta.persistence-api-2.2.3.jar;C:\Users\Ольга\.m2\repository\org\hibernate\hibernate-core\5.6.5.Final\hibernate-core-5.6.5.Final.jar;C:\Users\Ольга\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy\1.11.22\byte-buddy-1.11.22.jar;C:\Users\Ольга\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ольга\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Ольга\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.6\jaxb-runtime-2.3.6.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\txw2\2.3.6\txw2-2.3.6.jar;C:\Users\Ольга\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.12\istack-commons-runtime-3.0.12.jar;C:\Users\Ольга\.m2\repository\com\sun\activation\jakarta.activation\1.2.2\jakarta.activation-1.2.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\data\spring-data-jpa\2.6.2\spring-data-jpa-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\data\spring-data-commons\2.6.2\spring-data-commons-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-orm\5.3.16\spring-orm-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-context\5.3.16\spring-context-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-tx\5.3.16\spring-tx-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-beans\5.3.16\spring-beans-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-aspects\5.3.16\spring-aspects-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-security\2.6.4\spring-boot-starter-security-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter\2.6.4\spring-boot-starter-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-logging\2.6.4\spring-boot-starter-logging-2.6.4.jar;C:\Users\Ольга\.m2\repository\ch\qos\logback\logback-classic\1.2.10\logback-classic-1.2.10.jar;C:\Users\Ольга\.m2\repository\ch\qos\logback\logback-core\1.2.10\logback-core-1.2.10.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.17.1\log4j-to-slf4j-2.17.1.jar;C:\Users\Ольга\.m2\repository\org\slf4j\jul-to-slf4j\1.7.36\jul-to-slf4j-1.7.36.jar;C:\Users\Ольга\.m2\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;C:\Users\Ольга\.m2\repository\org\yaml\snakeyaml\1.29\snakeyaml-1.29.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-aop\5.3.16\spring-aop-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-config\5.6.2\spring-security-config-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-web\5.6.2\spring-security-web-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-expression\5.3.16\spring-expression-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-web\2.6.4\spring-boot-starter-web-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-json\2.6.4\spring-boot-starter-json-2.6.4.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.13.1\jackson-datatype-jdk8-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.13.1\jackson-datatype-jsr310-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.13.1\jackson-module-parameter-names-2.13.1.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\2.6.4\spring-boot-starter-tomcat-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.58\tomcat-embed-core-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\9.0.58\tomcat-embed-el-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.58\tomcat-embed-websocket-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-web\5.3.16\spring-web-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-webmvc\5.3.16\spring-webmvc-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-devtools\2.6.4\spring-boot-devtools-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot\2.6.4\spring-boot-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\2.6.4\spring-boot-autoconfigure-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\xerial\sqlite-jdbc\3.36.0.3\sqlite-jdbc-3.36.0.3.jar;C:\Users\Ольга\.m2\repository\com\zsoltfabok\sqlite-dialect\1.0\sqlite-dialect-1.0.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-aop\2.6.2\spring-boot-starter-aop-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\aspectj\aspectjweaver\1.9.7\aspectjweaver-1.9.7.jar;C:\Users\Ольга\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.3\jakarta.xml.bind-api-2.3.3.jar;C:\Users\Ольга\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.2\jakarta.activation-api-1.2.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-core\5.3.16\spring-core-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-jcl\5.3.16\spring-jcl-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-core\5.6.2\spring-security-core-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-crypto\5.6.2\spring-security-crypto-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\projectlombok\lombok\1.18.22\lombok-1.18.22.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\2.6.4\spring-boot-starter-thymeleaf-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\thymeleaf-spring5\3.0.15.RELEASE\thymeleaf-spring5-3.0.15.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\thymeleaf\3.0.15.RELEASE\thymeleaf-3.0.15.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\attoparser\attoparser\2.0.5.RELEASE\attoparser-2.0.5.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-java8time\3.0.4.RELEASE\thymeleaf-extras-java8time-3.0.4.RELEASE.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.1\jackson-databind-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.1\jackson-annotations-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.1\jackson-core-2.13.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-api\2.4.1\log4j-api-2.4.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-core\2.4.1\log4j-core-2.4.1.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.2\lib\idea_rt.jar, java.vm.vendor=Temurin, sun.arch.data.model=64, user.variant=, java.vendor.url=https://adoptium.net/, catalina.useNaming=false, user.timezone=Europe/Moscow, jakarta.persistence.sharedCache.mode=UNSPECIFIED, os.name=Windows 10, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), user.country=RU, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\bin, sun.java.command=ru.edu.helpdesk.HelpdeskApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@27e6b9ba, com.sun.management.jmxremote=, javax.persistence.sharedCache.mode=UNSPECIFIED, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, user.home=C:\Users\Ольга, user.language=ru, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre, file.separator=\, spring.output.ansi.enabled=always, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, sun.boot.class.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\resources.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\rt.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\sunrsasign.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jsse.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jce.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\charsets.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jfr.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\classes, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_312-b07, user.name=Эльдорадо, spring.jmx.enabled=true, path.separator=;, os.version=10.0, java.endorsed.dirs=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\endorsed, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=default, spring.beaninfo.ignore=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=C:\Users\134E~1\AppData\Local\Temp\, catalina.home=C:\Users\Ольга\AppData\Local\Temp\tomcat.8080.7861918995796401711, java.version=1.8.0_312, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\Ольга\Desktop\Java\Project\Project1\helpdeskproject, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=6384, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\Ольга\AppData\Local\Temp\tomcat.8080.7861918995796401711, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@217a2359, java.library.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\windows\System32\OpenSSH\;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\Program Files\apache-maven-3.8.4\bin;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Ольга\AppData\Local\Microsoft\WindowsApps;C:\Users\Ольга\AppData\Local\Programs\Microsoft VS Code\bin;C:\SQLite;C:\Users\Ольга\AppData\Roaming\npm;C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.2\bin;;., java.vendor=Temurin, java.vm.info=mixed mode, java.vm.version=25.312-b07, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, java.ext.dirs=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext;C:\windows\Sun\Java\lib\ext, hibernate.connection.datasource=HikariDataSource (HikariPool-1), hibernate.hbm2ddl.import_files=data/import.sql, java.class.version=52.0}
w2022-03-15 01:02:37 DEBUG Skipping JACC integration as it was not enabled
w2022-03-15 01:02:37 DEBUG Using ORDINAL-based conversion for Enum ru.edu.helpdesk.entity.UserRole
w2022-03-15 01:02:37 DEBUG Using ORDINAL-based conversion for Enum ru.edu.helpdesk.entity.TicketStatus
w2022-03-15 01:02:37 DEBUG Instantiated session factory
w2022-03-15 01:02:37 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2907e8ea] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@38846575]
w2022-03-15 01:02:37 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.User] is safe
w2022-03-15 01:02:37 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.User
w2022-03-15 01:02:37 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:02:37 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:02:37 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:02:37 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:02:37 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Ticket] is safe
w2022-03-15 01:02:37 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Ticket
w2022-03-15 01:02:37 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:02:37 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:02:37 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:02:37 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:02:37 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:02:37 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:02:37 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:02:37 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:02:37 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Comment] is safe
w2022-03-15 01:02:37 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Comment
w2022-03-15 01:02:37 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:02:37 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:02:37 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:02:37 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:02:37 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.User
w2022-03-15 01:02:37 DEBUG  Version select: select id from user where id =?
w2022-03-15 01:02:37 DEBUG  Snapshot select: select user_.id, user_.first_name as first_na2_2_, user_.last_name as last_nam3_2_, user_.login as login4_2_, user_.password as password5_2_, user_.role as role6_2_ from user user_ where user_.id=?
w2022-03-15 01:02:37 DEBUG  Insert 0: insert into user (first_name, last_name, login, password, role, id) values (?, ?, ?, ?, ?, ?)
w2022-03-15 01:02:37 DEBUG  Update 0: update user set first_name=?, last_name=?, login=?, password=?, role=? where id=?
w2022-03-15 01:02:37 DEBUG  Delete 0: delete from user where id=?
w2022-03-15 01:02:37 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6dc314d8]
w2022-03-15 01:02:37 DEBUG Visiting attribute path : firstName
w2022-03-15 01:02:37 DEBUG Visiting attribute path : lastName
w2022-03-15 01:02:37 DEBUG Visiting attribute path : login
w2022-03-15 01:02:37 DEBUG Visiting attribute path : password
w2022-03-15 01:02:37 DEBUG Visiting attribute path : role
w2022-03-15 01:02:37 DEBUG Building LoadPlan...
w2022-03-15 01:02:37 DEBUG processing queryspace <gen:0>
w2022-03-15 01:02:37 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.User)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

w2022-03-15 01:02:37 DEBUG Static select for entity ru.edu.helpdesk.entity.User [NONE]: select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 01:02:37 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.Ticket
w2022-03-15 01:02:37 DEBUG  Version select: select id from ticket where id =?
w2022-03-15 01:02:37 DEBUG  Snapshot select: select ticket_.id, ticket_.client_id as client_i4_1_, ticket_.status as status2_1_, ticket_.support_id as support_5_1_, ticket_.title as title3_1_ from ticket ticket_ where ticket_.id=?
w2022-03-15 01:02:37 DEBUG  Insert 0: insert into ticket (client_id, status, support_id, title, id) values (?, ?, ?, ?, ?)
w2022-03-15 01:02:37 DEBUG  Update 0: update ticket set client_id=?, status=?, support_id=?, title=? where id=?
w2022-03-15 01:02:37 DEBUG  Delete 0: delete from ticket where id=?
w2022-03-15 01:02:37 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3577163]
w2022-03-15 01:02:37 DEBUG Visiting attribute path : client
w2022-03-15 01:02:37 DEBUG Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@381f8d6c]
w2022-03-15 01:02:37 DEBUG Visiting attribute path : client.firstName
w2022-03-15 01:02:37 DEBUG Visiting attribute path : client.lastName
w2022-03-15 01:02:37 DEBUG Visiting attribute path : client.login
w2022-03-15 01:02:37 DEBUG Visiting attribute path : client.password
w2022-03-15 01:02:37 DEBUG Visiting attribute path : client.role
w2022-03-15 01:02:37 DEBUG Visiting attribute path : status
w2022-03-15 01:02:37 DEBUG Visiting attribute path : support
w2022-03-15 01:02:37 DEBUG Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54a9462]
w2022-03-15 01:02:37 DEBUG Visiting attribute path : support.firstName
w2022-03-15 01:02:37 DEBUG Visiting attribute path : support.lastName
w2022-03-15 01:02:37 DEBUG Visiting attribute path : support.login
w2022-03-15 01:02:37 DEBUG Visiting attribute path : support.password
w2022-03-15 01:02:37 DEBUG Visiting attribute path : support.role
w2022-03-15 01:02:37 DEBUG Visiting attribute path : title
w2022-03-15 01:02:37 DEBUG Building LoadPlan...
w2022-03-15 01:02:37 DEBUG processing queryspace <gen:0>
w2022-03-15 01:02:37 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.Ticket)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.Ticket, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.Ticket)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:1>, path=ru.edu.helpdesk.entity.Ticket.client)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:2>, path=ru.edu.helpdesk.entity.Ticket.support)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.Ticket)
          - SQL table alias mapping - ticket0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(client)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
          - JOIN (JoinDefinedByMetadata(support)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user2_
                - alias suffix - 2_
                - suffixed key columns - {id1_2_2_}

w2022-03-15 01:02:37 DEBUG Static select for entity ru.edu.helpdesk.entity.Ticket [NONE]: select ticket0_.id as id1_1_0_, ticket0_.client_id as client_i4_1_0_, ticket0_.status as status2_1_0_, ticket0_.support_id as support_5_1_0_, ticket0_.title as title3_1_0_, user1_.id as id1_2_1_, user1_.first_name as first_na2_2_1_, user1_.last_name as last_nam3_2_1_, user1_.login as login4_2_1_, user1_.password as password5_2_1_, user1_.role as role6_2_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id left outer join user user2_ on ticket0_.support_id=user2_.id where ticket0_.id=?
w2022-03-15 01:02:37 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.Comment
w2022-03-15 01:02:37 DEBUG  Version select: select id from comment where id =?
w2022-03-15 01:02:37 DEBUG  Snapshot select: select comment_.id, comment_.message as message2_0_, comment_.ticket_id as ticket_i3_0_, comment_.user_id as user_id4_0_ from comment comment_ where comment_.id=?
w2022-03-15 01:02:37 DEBUG  Insert 0: insert into comment (message, ticket_id, user_id, id) values (?, ?, ?, ?)
w2022-03-15 01:02:37 DEBUG  Update 0: update comment set message=?, ticket_id=?, user_id=? where id=?
w2022-03-15 01:02:37 DEBUG  Delete 0: delete from comment where id=?
w2022-03-15 01:02:37 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6adb65e4]
w2022-03-15 01:02:37 DEBUG Visiting attribute path : message
w2022-03-15 01:02:37 DEBUG Visiting attribute path : ticket
w2022-03-15 01:02:37 DEBUG Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f068a8b]
w2022-03-15 01:02:37 DEBUG Visiting attribute path : ticket.client
w2022-03-15 01:02:37 DEBUG Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29eeaff5]
w2022-03-15 01:02:37 DEBUG Visiting attribute path : ticket.client.firstName
w2022-03-15 01:02:37 DEBUG Visiting attribute path : ticket.client.lastName
w2022-03-15 01:02:37 DEBUG Visiting attribute path : ticket.client.login
w2022-03-15 01:02:37 DEBUG Visiting attribute path : ticket.client.password
w2022-03-15 01:02:37 DEBUG Visiting attribute path : ticket.client.role
w2022-03-15 01:02:37 DEBUG Visiting attribute path : ticket.status
w2022-03-15 01:02:37 DEBUG Visiting attribute path : ticket.support
w2022-03-15 01:02:37 DEBUG Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ae383be]
w2022-03-15 01:02:37 DEBUG Visiting attribute path : ticket.support.firstName
w2022-03-15 01:02:37 DEBUG Visiting attribute path : ticket.support.lastName
w2022-03-15 01:02:37 DEBUG Visiting attribute path : ticket.support.login
w2022-03-15 01:02:37 DEBUG Visiting attribute path : ticket.support.password
w2022-03-15 01:02:37 DEBUG Visiting attribute path : ticket.support.role
w2022-03-15 01:02:37 DEBUG Visiting attribute path : ticket.title
w2022-03-15 01:02:37 DEBUG Visiting attribute path : user
w2022-03-15 01:02:37 DEBUG Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@462fc988]
w2022-03-15 01:02:37 DEBUG Visiting attribute path : user.firstName
w2022-03-15 01:02:37 DEBUG Visiting attribute path : user.lastName
w2022-03-15 01:02:37 DEBUG Visiting attribute path : user.login
w2022-03-15 01:02:37 DEBUG Visiting attribute path : user.password
w2022-03-15 01:02:37 DEBUG Visiting attribute path : user.role
w2022-03-15 01:02:37 DEBUG Building LoadPlan...
w2022-03-15 01:02:37 DEBUG processing queryspace <gen:0>
w2022-03-15 01:02:37 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.Comment)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.Comment, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.Comment)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.Ticket, querySpaceUid=<gen:1>, path=ru.edu.helpdesk.entity.Comment.ticket)
             - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:2>, path=ru.edu.helpdesk.entity.Comment.ticket.client)
             - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:3>, path=ru.edu.helpdesk.entity.Comment.ticket.support)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:4>, path=ru.edu.helpdesk.entity.Comment.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(ticket)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ru.edu.helpdesk.entity.Ticket)
                - SQL table alias mapping - ticket1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(client)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=ru.edu.helpdesk.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}
                - JOIN (JoinDefinedByMetadata(support)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=ru.edu.helpdesk.entity.User)
                      - SQL table alias mapping - user3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_2_3_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user4_
                - alias suffix - 4_
                - suffixed key columns - {id1_2_4_}

w2022-03-15 01:02:37 DEBUG Static select for entity ru.edu.helpdesk.entity.Comment [NONE]: select comment0_.id as id1_0_0_, comment0_.message as message2_0_0_, comment0_.ticket_id as ticket_i3_0_0_, comment0_.user_id as user_id4_0_0_, ticket1_.id as id1_1_1_, ticket1_.client_id as client_i4_1_1_, ticket1_.status as status2_1_1_, ticket1_.support_id as support_5_1_1_, ticket1_.title as title3_1_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_, user3_.id as id1_2_3_, user3_.first_name as first_na2_2_3_, user3_.last_name as last_nam3_2_3_, user3_.login as login4_2_3_, user3_.password as password5_2_3_, user3_.role as role6_2_3_, user4_.id as id1_2_4_, user4_.first_name as first_na2_2_4_, user4_.last_name as last_nam3_2_4_, user4_.login as login4_2_4_, user4_.password as password5_2_4_, user4_.role as role6_2_4_ from comment comment0_ left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id left outer join user user2_ on ticket1_.client_id=user2_.id left outer join user user3_ on ticket1_.support_id=user3_.id left outer join user user4_ on comment0_.user_id=user4_.id where comment0_.id=?
w2022-03-15 01:02:37 DEBUG drop table if exists comment
w2022-03-15 01:02:37 DEBUG drop table if exists hibernate_sequence
w2022-03-15 01:02:37 DEBUG drop table if exists ticket
w2022-03-15 01:02:37 DEBUG drop table if exists user
w2022-03-15 01:02:37 DEBUG create table comment (id bigint not null, message varchar(255) not null, ticket_id bigint, user_id bigint, primary key (id))
w2022-03-15 01:02:37 DEBUG create table hibernate_sequence (next_val bigint)
w2022-03-15 01:02:37 DEBUG insert into hibernate_sequence values ( 1 )
w2022-03-15 01:02:37 DEBUG create table ticket (id bigint not null, status integer, title varchar(255) not null, client_id bigint, support_id bigint, primary key (id))
w2022-03-15 01:02:37 DEBUG create table user (id bigint not null, first_name varchar(255), last_name varchar(255), login varchar(255) not null, password varchar(255) not null, role integer, primary key (id))
w2022-03-15 01:02:38 INFO  HHH000476: Executing import script 'file:/C:/Users/%d0%9e%d0%bb%d1%8c%d0%b3%d0%b0/Desktop/Java/Project/Project1/helpdeskproject/target/classes/data/import.sql'
w2022-03-15 01:02:38 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (1, 'admin', 'admin', 'admin', 'admin', 0)
w2022-03-15 01:02:38 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (2, 'support', 'support', 'support', 'support', 1)
w2022-03-15 01:02:38 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (3, 'user1', 'user1', 'user1', 'user1', 2)
w2022-03-15 01:02:38 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (4, 'user2', 'user2', 'user2', 'user2', 2)
w2022-03-15 01:02:38 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (1, 1, 'Hello user1', 3, 2)
w2022-03-15 01:02:38 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (2, 0, 'Title2', 3, NULL)
w2022-03-15 01:02:38 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (3, 0, 'Message user2', 4, NULL)
w2022-03-15 01:02:38 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (1, "Hello ticket1", 1, 3)
w2022-03-15 01:02:38 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (2, "Hello ticket2", 2, 3)
w2022-03-15 01:02:38 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (3, "Hello ticket11", 1, 2)
w2022-03-15 01:02:38 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (4, "Hello ticket111", 1, 2)
w2022-03-15 01:02:38 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (5, "Hello ticket22", 2, 2)
w2022-03-15 01:02:38 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (6, "Hello ticket3", 3, 4)
w2022-03-15 01:02:38 DEBUG UPDATE hibernate_sequence SET next_val = 8 WHERE next_val = 1
w2022-03-15 01:02:38 INFO  HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
w2022-03-15 01:02:38 DEBUG Checking 0 named HQL queries
w2022-03-15 01:02:38 DEBUG Checking 0 named SQL queries
w2022-03-15 01:02:38 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 01:02:38 DEBUG Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6f1218d3
w2022-03-15 01:02:38 DEBUG Registering SessionFactory: 841edc32-7983-4b5d-b600-d48d67f54ca5 (<unnamed>)
w2022-03-15 01:02:38 DEBUG Not binding SessionFactory to JNDI, no JNDI name configured
w2022-03-15 01:02:38 DEBUG Statistics initialized [enabled=false]
w2022-03-15 01:02:38 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 01:02:38 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 01:02:38 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 01:03:20 DEBUG Logging Provider: org.jboss.logging.Log4j2LoggerProvider
w2022-03-15 01:03:20 DEBUG PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@641916a2
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/%d0%9e%d0%bb%d1%8c%d0%b3%d0%b0/Desktop/Java/Project/Project1/helpdeskproject/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		ru.edu.helpdesk.entity.Comment
		ru.edu.helpdesk.entity.Ticket
		ru.edu.helpdesk.entity.User]
	Mapping files names []
	Properties []
w2022-03-15 01:03:20 DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
w2022-03-15 01:03:20 DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
w2022-03-15 01:03:20 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
w2022-03-15 01:03:20 INFO  HHH000412: Hibernate ORM core version 5.6.5.Final
w2022-03-15 01:03:20 DEBUG HHH000206: hibernate.properties not found
w2022-03-15 01:03:20 DEBUG Overriding existing service binding [org.hibernate.secure.spi.JaccService]
w2022-03-15 01:03:20 DEBUG Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
w2022-03-15 01:03:20 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
w2022-03-15 01:03:20 INFO  HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
w2022-03-15 01:03:20 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@4c0294c8
w2022-03-15 01:03:20 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@4c0294c8
w2022-03-15 01:03:20 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4c0294c8
w2022-03-15 01:03:20 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6706a420
w2022-03-15 01:03:20 DEBUG Adding type registration true_false -> org.hibernate.type.TrueFalseType@5153c525
w2022-03-15 01:03:20 DEBUG Adding type registration yes_no -> org.hibernate.type.YesNoType@4baeb7d6
w2022-03-15 01:03:20 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@6f2f1e30
w2022-03-15 01:03:20 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@6f2f1e30
w2022-03-15 01:03:20 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6f2f1e30
w2022-03-15 01:03:20 DEBUG Adding type registration character -> org.hibernate.type.CharacterType@794feef6
w2022-03-15 01:03:20 DEBUG Adding type registration char -> org.hibernate.type.CharacterType@794feef6
w2022-03-15 01:03:20 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@794feef6
w2022-03-15 01:03:20 DEBUG Adding type registration short -> org.hibernate.type.ShortType@35cce4d9
w2022-03-15 01:03:20 DEBUG Adding type registration short -> org.hibernate.type.ShortType@35cce4d9
w2022-03-15 01:03:20 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.ShortType@35cce4d9
w2022-03-15 01:03:20 DEBUG Adding type registration integer -> org.hibernate.type.IntegerType@6a758dca
w2022-03-15 01:03:20 DEBUG Adding type registration int -> org.hibernate.type.IntegerType@6a758dca
w2022-03-15 01:03:20 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6a758dca
w2022-03-15 01:03:20 DEBUG Adding type registration long -> org.hibernate.type.LongType@2abd541
w2022-03-15 01:03:20 DEBUG Adding type registration long -> org.hibernate.type.LongType@2abd541
w2022-03-15 01:03:20 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.LongType@2abd541
w2022-03-15 01:03:20 DEBUG Adding type registration float -> org.hibernate.type.FloatType@591ed415
w2022-03-15 01:03:20 DEBUG Adding type registration float -> org.hibernate.type.FloatType@591ed415
w2022-03-15 01:03:20 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.FloatType@591ed415
w2022-03-15 01:03:20 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@77985777
w2022-03-15 01:03:20 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@77985777
w2022-03-15 01:03:20 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@77985777
w2022-03-15 01:03:20 DEBUG Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6282307d
w2022-03-15 01:03:20 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6282307d
w2022-03-15 01:03:20 DEBUG Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1ab21a14
w2022-03-15 01:03:20 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1ab21a14
w2022-03-15 01:03:20 DEBUG Adding type registration string -> org.hibernate.type.StringType@2d318bfa
w2022-03-15 01:03:20 DEBUG Adding type registration java.lang.String -> org.hibernate.type.StringType@2d318bfa
w2022-03-15 01:03:20 DEBUG Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5ca857f9
w2022-03-15 01:03:20 DEBUG Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@29d2fd3d
w2022-03-15 01:03:20 DEBUG Adding type registration url -> org.hibernate.type.UrlType@30721b4c
w2022-03-15 01:03:20 DEBUG Adding type registration java.net.URL -> org.hibernate.type.UrlType@30721b4c
w2022-03-15 01:03:20 DEBUG Adding type registration Duration -> org.hibernate.type.DurationType@2e5ce454
w2022-03-15 01:03:20 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2e5ce454
w2022-03-15 01:03:20 DEBUG Adding type registration Instant -> org.hibernate.type.InstantType@4f71e587
w2022-03-15 01:03:20 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.InstantType@4f71e587
w2022-03-15 01:03:20 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@381c2eea
w2022-03-15 01:03:20 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@381c2eea
w2022-03-15 01:03:20 DEBUG Adding type registration LocalDate -> org.hibernate.type.LocalDateType@58bc0685
w2022-03-15 01:03:20 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@58bc0685
w2022-03-15 01:03:20 DEBUG Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3c853ca6
w2022-03-15 01:03:20 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3c853ca6
w2022-03-15 01:03:20 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5e15658
w2022-03-15 01:03:20 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5e15658
w2022-03-15 01:03:20 DEBUG Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4f725a71
w2022-03-15 01:03:20 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4f725a71
w2022-03-15 01:03:20 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@73934517
w2022-03-15 01:03:20 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@73934517
w2022-03-15 01:03:20 DEBUG Adding type registration date -> org.hibernate.type.DateType@6dcfcda0
w2022-03-15 01:03:20 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.DateType@6dcfcda0
w2022-03-15 01:03:20 DEBUG Adding type registration time -> org.hibernate.type.TimeType@2b2a9c79
w2022-03-15 01:03:20 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2b2a9c79
w2022-03-15 01:03:20 DEBUG Adding type registration timestamp -> org.hibernate.type.TimestampType@6fe71b93
w2022-03-15 01:03:20 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6fe71b93
w2022-03-15 01:03:20 DEBUG Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6fe71b93
w2022-03-15 01:03:20 DEBUG Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@35ba0cce
w2022-03-15 01:03:20 DEBUG Adding type registration calendar -> org.hibernate.type.CalendarType@4cc7e6a3
w2022-03-15 01:03:20 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4cc7e6a3
w2022-03-15 01:03:20 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4cc7e6a3
w2022-03-15 01:03:20 DEBUG Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1e7c8998
w2022-03-15 01:03:20 DEBUG Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@2decc425
w2022-03-15 01:03:20 DEBUG Adding type registration locale -> org.hibernate.type.LocaleType@55794e1f
w2022-03-15 01:03:20 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@55794e1f
w2022-03-15 01:03:20 DEBUG Adding type registration currency -> org.hibernate.type.CurrencyType@c16a20
w2022-03-15 01:03:20 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@c16a20
w2022-03-15 01:03:20 DEBUG Adding type registration timezone -> org.hibernate.type.TimeZoneType@41bbc065
w2022-03-15 01:03:20 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@41bbc065
w2022-03-15 01:03:20 DEBUG Adding type registration class -> org.hibernate.type.ClassType@38afd257
w2022-03-15 01:03:20 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.ClassType@38afd257
w2022-03-15 01:03:20 DEBUG Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@9ec6477
w2022-03-15 01:03:20 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@9ec6477
w2022-03-15 01:03:20 DEBUG Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@382dc9af
w2022-03-15 01:03:20 DEBUG Adding type registration binary -> org.hibernate.type.BinaryType@7a73691
w2022-03-15 01:03:20 DEBUG Adding type registration byte[] -> org.hibernate.type.BinaryType@7a73691
w2022-03-15 01:03:20 DEBUG Adding type registration [B -> org.hibernate.type.BinaryType@7a73691
w2022-03-15 01:03:20 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@43fb592
w2022-03-15 01:03:20 DEBUG Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@43fb592
w2022-03-15 01:03:20 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@43fb592
w2022-03-15 01:03:20 DEBUG Adding type registration row_version -> org.hibernate.type.RowVersionType@3b0057e7
w2022-03-15 01:03:20 DEBUG Adding type registration image -> org.hibernate.type.ImageType@89c250e
w2022-03-15 01:03:20 DEBUG Adding type registration characters -> org.hibernate.type.CharArrayType@5beef8be
w2022-03-15 01:03:20 DEBUG Adding type registration char[] -> org.hibernate.type.CharArrayType@5beef8be
w2022-03-15 01:03:20 DEBUG Adding type registration [C -> org.hibernate.type.CharArrayType@5beef8be
w2022-03-15 01:03:20 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@93969b7
w2022-03-15 01:03:20 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@93969b7
w2022-03-15 01:03:20 DEBUG Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@93969b7
w2022-03-15 01:03:20 DEBUG Adding type registration text -> org.hibernate.type.TextType@3e6a2078
w2022-03-15 01:03:20 DEBUG Adding type registration ntext -> org.hibernate.type.NTextType@13ac97cf
w2022-03-15 01:03:20 DEBUG Adding type registration blob -> org.hibernate.type.BlobType@383f716a
w2022-03-15 01:03:20 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@383f716a
w2022-03-15 01:03:20 DEBUG Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@596b9b6c
w2022-03-15 01:03:20 DEBUG Adding type registration clob -> org.hibernate.type.ClobType@1f97fcd7
w2022-03-15 01:03:20 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1f97fcd7
w2022-03-15 01:03:20 DEBUG Adding type registration nclob -> org.hibernate.type.NClobType@48d8b33f
w2022-03-15 01:03:20 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@48d8b33f
w2022-03-15 01:03:20 DEBUG Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1f74015f
w2022-03-15 01:03:20 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@516f23b9
w2022-03-15 01:03:20 DEBUG Adding type registration serializable -> org.hibernate.type.SerializableType@38e03eba
w2022-03-15 01:03:20 DEBUG Adding type registration object -> org.hibernate.type.ObjectType@4354bc3
w2022-03-15 01:03:20 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4354bc3
w2022-03-15 01:03:20 DEBUG Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@53b6f28c
w2022-03-15 01:03:20 DEBUG Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7d73c06a
w2022-03-15 01:03:20 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@591d8b22
w2022-03-15 01:03:20 DEBUG Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5fff71c0
w2022-03-15 01:03:20 DEBUG Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3b39da21
w2022-03-15 01:03:20 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@582a3dbc
w2022-03-15 01:03:20 DEBUG Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6d5be900
w2022-03-15 01:03:20 DEBUG Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@490ee41a
w2022-03-15 01:03:20 INFO  HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
w2022-03-15 01:03:20 DEBUG Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@65860755] into BootstrapContext; was [null]
w2022-03-15 01:03:20 DEBUG ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@65860755) [was null]
w2022-03-15 01:03:20 DEBUG Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@21abdb88] into BootstrapContext; was [null]
w2022-03-15 01:03:20 DEBUG Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@4999a924] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@237ca8fb]
w2022-03-15 01:03:20 DEBUG Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@65860755]
w2022-03-15 01:03:20 DEBUG ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@65860755]
w2022-03-15 01:03:20 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
w2022-03-15 01:03:20 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
w2022-03-15 01:03:20 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
w2022-03-15 01:03:20 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
w2022-03-15 01:03:20 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
w2022-03-15 01:03:20 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
w2022-03-15 01:03:20 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
w2022-03-15 01:03:20 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
w2022-03-15 01:03:20 DEBUG Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
w2022-03-15 01:03:20 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
w2022-03-15 01:03:20 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
w2022-03-15 01:03:20 DEBUG Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
w2022-03-15 01:03:20 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
w2022-03-15 01:03:20 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
w2022-03-15 01:03:21 DEBUG Database ->
       name : SQLite
    version : 3.36.0
      major : 3
      minor : 36
w2022-03-15 01:03:21 DEBUG Driver ->
       name : SQLite JDBC
    version : 3.36.0.3
      major : 3
      minor : 36
w2022-03-15 01:03:21 DEBUG JDBC version : 2.1
w2022-03-15 01:03:21 INFO  HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
w2022-03-15 01:03:21 DEBUG JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
w2022-03-15 01:03:21 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
w2022-03-15 01:03:21 DEBUG HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [2] less than 4
w2022-03-15 01:03:21 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@60ea832] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1acac97d]
w2022-03-15 01:03:21 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
w2022-03-15 01:03:21 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.Comment
w2022-03-15 01:03:21 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 01:03:21 DEBUG Import with entity name Comment
w2022-03-15 01:03:21 DEBUG Bind entity ru.edu.helpdesk.entity.Comment on table comment
w2022-03-15 01:03:21 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 01:03:21 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Comment] is safe
w2022-03-15 01:03:21 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Comment
w2022-03-15 01:03:21 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 01:03:21 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Comment:id]
w2022-03-15 01:03:21 DEBUG building SimpleValue for id
w2022-03-15 01:03:21 DEBUG Building property id
w2022-03-15 01:03:21 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 01:03:21 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=message, insertable=true, updatable=true, unique=false}
w2022-03-15 01:03:21 DEBUG MetadataSourceProcessor property message with lazy=false
w2022-03-15 01:03:21 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Comment:message]
w2022-03-15 01:03:21 DEBUG building SimpleValue for message
w2022-03-15 01:03:21 DEBUG Building property message
w2022-03-15 01:03:21 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 01:03:21 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=ticket, insertable=true, updatable=true, unique=false}
w2022-03-15 01:03:21 DEBUG Building property ticket
w2022-03-15 01:03:21 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 01:03:21 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=user, insertable=true, updatable=true, unique=false}
w2022-03-15 01:03:21 DEBUG Building property user
w2022-03-15 01:03:21 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 01:03:21 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 01:03:21 DEBUG Import with entity name Ticket
w2022-03-15 01:03:21 DEBUG Bind entity ru.edu.helpdesk.entity.Ticket on table ticket
w2022-03-15 01:03:21 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 01:03:21 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Ticket] is safe
w2022-03-15 01:03:21 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Ticket
w2022-03-15 01:03:21 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 01:03:21 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:id]
w2022-03-15 01:03:21 DEBUG building SimpleValue for id
w2022-03-15 01:03:21 DEBUG Building property id
w2022-03-15 01:03:21 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 01:03:21 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 01:03:21 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=client, insertable=true, updatable=true, unique=false}
w2022-03-15 01:03:21 DEBUG Building property client
w2022-03-15 01:03:21 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=status, insertable=true, updatable=true, unique=false}
w2022-03-15 01:03:21 DEBUG MetadataSourceProcessor property status with lazy=false
w2022-03-15 01:03:21 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:status]
w2022-03-15 01:03:21 DEBUG building SimpleValue for status
w2022-03-15 01:03:21 DEBUG Building property status
w2022-03-15 01:03:21 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 01:03:21 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=support, insertable=true, updatable=true, unique=false}
w2022-03-15 01:03:21 DEBUG Building property support
w2022-03-15 01:03:21 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=title, insertable=true, updatable=true, unique=false}
w2022-03-15 01:03:21 DEBUG MetadataSourceProcessor property title with lazy=false
w2022-03-15 01:03:21 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:title]
w2022-03-15 01:03:21 DEBUG building SimpleValue for title
w2022-03-15 01:03:21 DEBUG Building property title
w2022-03-15 01:03:21 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.User
w2022-03-15 01:03:21 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 01:03:21 DEBUG Import with entity name User
w2022-03-15 01:03:21 DEBUG Bind entity ru.edu.helpdesk.entity.User on table user
w2022-03-15 01:03:21 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 01:03:21 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.User] is safe
w2022-03-15 01:03:21 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.User
w2022-03-15 01:03:21 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 01:03:21 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:id]
w2022-03-15 01:03:21 DEBUG building SimpleValue for id
w2022-03-15 01:03:21 DEBUG Building property id
w2022-03-15 01:03:21 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 01:03:21 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
w2022-03-15 01:03:21 DEBUG MetadataSourceProcessor property firstName with lazy=false
w2022-03-15 01:03:21 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:firstName]
w2022-03-15 01:03:21 DEBUG building SimpleValue for firstName
w2022-03-15 01:03:21 DEBUG Building property firstName
w2022-03-15 01:03:21 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
w2022-03-15 01:03:21 DEBUG MetadataSourceProcessor property lastName with lazy=false
w2022-03-15 01:03:21 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:lastName]
w2022-03-15 01:03:21 DEBUG building SimpleValue for lastName
w2022-03-15 01:03:21 DEBUG Building property lastName
w2022-03-15 01:03:21 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=login, insertable=true, updatable=true, unique=false}
w2022-03-15 01:03:21 DEBUG MetadataSourceProcessor property login with lazy=false
w2022-03-15 01:03:21 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:login]
w2022-03-15 01:03:21 DEBUG building SimpleValue for login
w2022-03-15 01:03:21 DEBUG Building property login
w2022-03-15 01:03:21 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
w2022-03-15 01:03:21 DEBUG MetadataSourceProcessor property password with lazy=false
w2022-03-15 01:03:21 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:password]
w2022-03-15 01:03:21 DEBUG building SimpleValue for password
w2022-03-15 01:03:21 DEBUG Building property password
w2022-03-15 01:03:21 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=role, insertable=true, updatable=true, unique=false}
w2022-03-15 01:03:21 DEBUG MetadataSourceProcessor property role with lazy=false
w2022-03-15 01:03:21 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:role]
w2022-03-15 01:03:21 DEBUG building SimpleValue for role
w2022-03-15 01:03:21 DEBUG Building property role
w2022-03-15 01:03:21 DEBUG Starting fillSimpleValue for id
w2022-03-15 01:03:21 DEBUG Starting fillSimpleValue for message
w2022-03-15 01:03:21 DEBUG Starting fillSimpleValue for id
w2022-03-15 01:03:21 DEBUG Starting fillSimpleValue for status
w2022-03-15 01:03:21 DEBUG Starting fillSimpleValue for title
w2022-03-15 01:03:21 DEBUG Starting fillSimpleValue for id
w2022-03-15 01:03:21 DEBUG Starting fillSimpleValue for firstName
w2022-03-15 01:03:21 DEBUG Starting fillSimpleValue for lastName
w2022-03-15 01:03:21 DEBUG Starting fillSimpleValue for login
w2022-03-15 01:03:21 DEBUG Starting fillSimpleValue for password
w2022-03-15 01:03:21 DEBUG Starting fillSimpleValue for role
w2022-03-15 01:03:21 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [comment]
w2022-03-15 01:03:21 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [ticket]
w2022-03-15 01:03:21 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [user]
w2022-03-15 01:03:21 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 01:03:21 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 01:03:21 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 01:03:21 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 01:03:21 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 01:03:21 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 01:03:21 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 01:03:21 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 01:03:21 DEBUG Building session factory
w2022-03-15 01:03:21 DEBUG SessionFactory name : null
w2022-03-15 01:03:21 DEBUG Automatic flush during beforeCompletion(): enabled
w2022-03-15 01:03:21 DEBUG Automatic session close at end of transaction: disabled
w2022-03-15 01:03:21 DEBUG Statistics: disabled
w2022-03-15 01:03:21 DEBUG Deleted entity synthetic identifier rollback: disabled
w2022-03-15 01:03:21 DEBUG Default entity-mode: pojo
w2022-03-15 01:03:21 DEBUG Check Nullability in Core (should be disabled when Bean Validation is on): enabled
w2022-03-15 01:03:21 DEBUG Allow initialization of lazy state outside session : disabled
w2022-03-15 01:03:21 DEBUG Using BatchFetchStyle : LEGACY
w2022-03-15 01:03:21 DEBUG Default batch fetch size: -1
w2022-03-15 01:03:21 DEBUG Maximum outer join fetch depth: null
w2022-03-15 01:03:21 DEBUG Default null ordering: NONE
w2022-03-15 01:03:21 DEBUG Order SQL updates by primary key: disabled
w2022-03-15 01:03:21 DEBUG Order SQL inserts for batching: disabled
w2022-03-15 01:03:21 DEBUG multi-tenancy strategy : NONE
w2022-03-15 01:03:21 DEBUG JTA Track by Thread: enabled
w2022-03-15 01:03:21 DEBUG Query language substitutions: {}
w2022-03-15 01:03:21 DEBUG Named query checking : enabled
w2022-03-15 01:03:21 DEBUG Second-level cache: disabled
w2022-03-15 01:03:21 DEBUG Second-level query cache: disabled
w2022-03-15 01:03:21 DEBUG Second-level query cache factory: null
w2022-03-15 01:03:21 DEBUG Second-level cache region prefix: null
w2022-03-15 01:03:21 DEBUG Optimize second-level cache for minimal puts: disabled
w2022-03-15 01:03:21 DEBUG Structured second-level cache entries: disabled
w2022-03-15 01:03:21 DEBUG Second-level cache direct-reference entries: disabled
w2022-03-15 01:03:21 DEBUG Automatic eviction of collection cache: disabled
w2022-03-15 01:03:21 DEBUG JDBC batch size: 1
w2022-03-15 01:03:21 DEBUG JDBC batch updates for versioned data: enabled
w2022-03-15 01:03:21 DEBUG Scrollable result sets: disabled
w2022-03-15 01:03:21 DEBUG Wrap result sets: disabled
w2022-03-15 01:03:21 DEBUG JDBC3 getGeneratedKeys(): enabled
w2022-03-15 01:03:21 DEBUG JDBC result set fetch size: null
w2022-03-15 01:03:21 DEBUG Connection release mode: ON_CLOSE
w2022-03-15 01:03:21 DEBUG Generate SQL with comments: disabled
w2022-03-15 01:03:21 DEBUG JPA compliance - query : disabled
w2022-03-15 01:03:21 DEBUG JPA compliance - closed-handling : disabled
w2022-03-15 01:03:21 DEBUG JPA compliance - lists : disabled
w2022-03-15 01:03:21 DEBUG JPA compliance - transactions : disabled
w2022-03-15 01:03:21 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 01:03:21 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 01:03:21 DEBUG Session factory constructed with filter configurations : {}
w2022-03-15 01:03:21 DEBUG Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=true, java.specification.version=1.8, file.encoding.pkg=sun.io, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@b1438b, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.SQLiteDialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\charsets.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\cldrdata.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\dnsns.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\jaccess.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\localedata.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\nashorn.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunec.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunmscapi.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\zipfs.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jce.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jfr.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jsse.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\management-agent.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\resources.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\rt.jar;C:\Users\Ольга\Desktop\Java\Project\Project1\helpdeskproject\target\classes;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\2.6.4\spring-boot-starter-data-jpa-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\2.6.4\spring-boot-starter-jdbc-2.6.4.jar;C:\Users\Ольга\.m2\repository\com\zaxxer\HikariCP\4.0.3\HikariCP-4.0.3.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-jdbc\5.3.16\spring-jdbc-5.3.16.jar;C:\Users\Ольга\.m2\repository\jakarta\transaction\jakarta.transaction-api\1.3.3\jakarta.transaction-api-1.3.3.jar;C:\Users\Ольга\.m2\repository\jakarta\persistence\jakarta.persistence-api\2.2.3\jakarta.persistence-api-2.2.3.jar;C:\Users\Ольга\.m2\repository\org\hibernate\hibernate-core\5.6.5.Final\hibernate-core-5.6.5.Final.jar;C:\Users\Ольга\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy\1.11.22\byte-buddy-1.11.22.jar;C:\Users\Ольга\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ольга\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Ольга\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.6\jaxb-runtime-2.3.6.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\txw2\2.3.6\txw2-2.3.6.jar;C:\Users\Ольга\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.12\istack-commons-runtime-3.0.12.jar;C:\Users\Ольга\.m2\repository\com\sun\activation\jakarta.activation\1.2.2\jakarta.activation-1.2.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\data\spring-data-jpa\2.6.2\spring-data-jpa-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\data\spring-data-commons\2.6.2\spring-data-commons-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-orm\5.3.16\spring-orm-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-context\5.3.16\spring-context-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-tx\5.3.16\spring-tx-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-beans\5.3.16\spring-beans-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-aspects\5.3.16\spring-aspects-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-security\2.6.4\spring-boot-starter-security-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter\2.6.4\spring-boot-starter-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-logging\2.6.4\spring-boot-starter-logging-2.6.4.jar;C:\Users\Ольга\.m2\repository\ch\qos\logback\logback-classic\1.2.10\logback-classic-1.2.10.jar;C:\Users\Ольга\.m2\repository\ch\qos\logback\logback-core\1.2.10\logback-core-1.2.10.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.17.1\log4j-to-slf4j-2.17.1.jar;C:\Users\Ольга\.m2\repository\org\slf4j\jul-to-slf4j\1.7.36\jul-to-slf4j-1.7.36.jar;C:\Users\Ольга\.m2\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;C:\Users\Ольга\.m2\repository\org\yaml\snakeyaml\1.29\snakeyaml-1.29.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-aop\5.3.16\spring-aop-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-config\5.6.2\spring-security-config-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-web\5.6.2\spring-security-web-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-expression\5.3.16\spring-expression-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-web\2.6.4\spring-boot-starter-web-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-json\2.6.4\spring-boot-starter-json-2.6.4.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.13.1\jackson-datatype-jdk8-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.13.1\jackson-datatype-jsr310-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.13.1\jackson-module-parameter-names-2.13.1.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\2.6.4\spring-boot-starter-tomcat-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.58\tomcat-embed-core-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\9.0.58\tomcat-embed-el-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.58\tomcat-embed-websocket-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-web\5.3.16\spring-web-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-webmvc\5.3.16\spring-webmvc-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-devtools\2.6.4\spring-boot-devtools-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot\2.6.4\spring-boot-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\2.6.4\spring-boot-autoconfigure-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\xerial\sqlite-jdbc\3.36.0.3\sqlite-jdbc-3.36.0.3.jar;C:\Users\Ольга\.m2\repository\com\zsoltfabok\sqlite-dialect\1.0\sqlite-dialect-1.0.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-aop\2.6.2\spring-boot-starter-aop-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\aspectj\aspectjweaver\1.9.7\aspectjweaver-1.9.7.jar;C:\Users\Ольга\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.3\jakarta.xml.bind-api-2.3.3.jar;C:\Users\Ольга\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.2\jakarta.activation-api-1.2.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-core\5.3.16\spring-core-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-jcl\5.3.16\spring-jcl-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-core\5.6.2\spring-security-core-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-crypto\5.6.2\spring-security-crypto-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\projectlombok\lombok\1.18.22\lombok-1.18.22.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\2.6.4\spring-boot-starter-thymeleaf-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\thymeleaf-spring5\3.0.15.RELEASE\thymeleaf-spring5-3.0.15.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\thymeleaf\3.0.15.RELEASE\thymeleaf-3.0.15.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\attoparser\attoparser\2.0.5.RELEASE\attoparser-2.0.5.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-java8time\3.0.4.RELEASE\thymeleaf-extras-java8time-3.0.4.RELEASE.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.1\jackson-databind-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.1\jackson-annotations-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.1\jackson-core-2.13.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-api\2.4.1\log4j-api-2.4.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-core\2.4.1\log4j-core-2.4.1.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.2\lib\idea_rt.jar, java.vm.vendor=Temurin, sun.arch.data.model=64, user.variant=, java.vendor.url=https://adoptium.net/, catalina.useNaming=false, user.timezone=Europe/Moscow, jakarta.persistence.sharedCache.mode=UNSPECIFIED, os.name=Windows 10, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), user.country=RU, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\bin, sun.java.command=ru.edu.helpdesk.HelpdeskApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@1a4f994, com.sun.management.jmxremote=, javax.persistence.sharedCache.mode=UNSPECIFIED, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, user.home=C:\Users\Ольга, user.language=ru, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre, file.separator=\, spring.output.ansi.enabled=always, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, sun.boot.class.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\resources.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\rt.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\sunrsasign.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jsse.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jce.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\charsets.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jfr.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\classes, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_312-b07, user.name=Эльдорадо, spring.jmx.enabled=true, path.separator=;, os.version=10.0, java.endorsed.dirs=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\endorsed, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=default, spring.beaninfo.ignore=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=C:\Users\134E~1\AppData\Local\Temp\, catalina.home=C:\Users\Ольга\AppData\Local\Temp\tomcat.8080.6678619685398747766, java.version=1.8.0_312, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\Ольга\Desktop\Java\Project\Project1\helpdeskproject, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=7464, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\Ольга\AppData\Local\Temp\tomcat.8080.6678619685398747766, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@51503d4f, java.library.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\windows\System32\OpenSSH\;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\Program Files\apache-maven-3.8.4\bin;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Ольга\AppData\Local\Microsoft\WindowsApps;C:\Users\Ольга\AppData\Local\Programs\Microsoft VS Code\bin;C:\SQLite;C:\Users\Ольга\AppData\Roaming\npm;C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.2\bin;;., java.vendor=Temurin, java.vm.info=mixed mode, java.vm.version=25.312-b07, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, java.ext.dirs=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext;C:\windows\Sun\Java\lib\ext, hibernate.connection.datasource=HikariDataSource (HikariPool-1), hibernate.hbm2ddl.import_files=data/import.sql, java.class.version=52.0}
w2022-03-15 01:03:21 DEBUG Skipping JACC integration as it was not enabled
w2022-03-15 01:03:21 DEBUG Using ORDINAL-based conversion for Enum ru.edu.helpdesk.entity.UserRole
w2022-03-15 01:03:21 DEBUG Using ORDINAL-based conversion for Enum ru.edu.helpdesk.entity.TicketStatus
w2022-03-15 01:03:21 DEBUG Instantiated session factory
w2022-03-15 01:03:21 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@60ea832] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@78cf4162]
w2022-03-15 01:03:21 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.User] is safe
w2022-03-15 01:03:21 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.User
w2022-03-15 01:03:21 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:03:21 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:03:21 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:03:21 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:03:21 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Ticket] is safe
w2022-03-15 01:03:21 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Ticket
w2022-03-15 01:03:21 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:03:21 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:03:21 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:03:21 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:03:21 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:03:21 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:03:21 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:03:21 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:03:21 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Comment] is safe
w2022-03-15 01:03:21 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Comment
w2022-03-15 01:03:21 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:03:21 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:03:21 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:03:21 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:03:21 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.User
w2022-03-15 01:03:21 DEBUG  Version select: select id from user where id =?
w2022-03-15 01:03:21 DEBUG  Snapshot select: select user_.id, user_.first_name as first_na2_2_, user_.last_name as last_nam3_2_, user_.login as login4_2_, user_.password as password5_2_, user_.role as role6_2_ from user user_ where user_.id=?
w2022-03-15 01:03:21 DEBUG  Insert 0: insert into user (first_name, last_name, login, password, role, id) values (?, ?, ?, ?, ?, ?)
w2022-03-15 01:03:21 DEBUG  Update 0: update user set first_name=?, last_name=?, login=?, password=?, role=? where id=?
w2022-03-15 01:03:21 DEBUG  Delete 0: delete from user where id=?
w2022-03-15 01:03:21 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@699f8822]
w2022-03-15 01:03:21 DEBUG Visiting attribute path : firstName
w2022-03-15 01:03:21 DEBUG Visiting attribute path : lastName
w2022-03-15 01:03:21 DEBUG Visiting attribute path : login
w2022-03-15 01:03:21 DEBUG Visiting attribute path : password
w2022-03-15 01:03:21 DEBUG Visiting attribute path : role
w2022-03-15 01:03:21 DEBUG Building LoadPlan...
w2022-03-15 01:03:21 DEBUG processing queryspace <gen:0>
w2022-03-15 01:03:21 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.User)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

w2022-03-15 01:03:21 DEBUG Static select for entity ru.edu.helpdesk.entity.User [NONE]: select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 01:03:21 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.Ticket
w2022-03-15 01:03:21 DEBUG  Version select: select id from ticket where id =?
w2022-03-15 01:03:21 DEBUG  Snapshot select: select ticket_.id, ticket_.client_id as client_i4_1_, ticket_.status as status2_1_, ticket_.support_id as support_5_1_, ticket_.title as title3_1_ from ticket ticket_ where ticket_.id=?
w2022-03-15 01:03:21 DEBUG  Insert 0: insert into ticket (client_id, status, support_id, title, id) values (?, ?, ?, ?, ?)
w2022-03-15 01:03:21 DEBUG  Update 0: update ticket set client_id=?, status=?, support_id=?, title=? where id=?
w2022-03-15 01:03:21 DEBUG  Delete 0: delete from ticket where id=?
w2022-03-15 01:03:21 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c285c41]
w2022-03-15 01:03:21 DEBUG Visiting attribute path : client
w2022-03-15 01:03:21 DEBUG Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41455406]
w2022-03-15 01:03:21 DEBUG Visiting attribute path : client.firstName
w2022-03-15 01:03:21 DEBUG Visiting attribute path : client.lastName
w2022-03-15 01:03:21 DEBUG Visiting attribute path : client.login
w2022-03-15 01:03:21 DEBUG Visiting attribute path : client.password
w2022-03-15 01:03:21 DEBUG Visiting attribute path : client.role
w2022-03-15 01:03:21 DEBUG Visiting attribute path : status
w2022-03-15 01:03:21 DEBUG Visiting attribute path : support
w2022-03-15 01:03:21 DEBUG Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b45b01b]
w2022-03-15 01:03:21 DEBUG Visiting attribute path : support.firstName
w2022-03-15 01:03:21 DEBUG Visiting attribute path : support.lastName
w2022-03-15 01:03:21 DEBUG Visiting attribute path : support.login
w2022-03-15 01:03:21 DEBUG Visiting attribute path : support.password
w2022-03-15 01:03:21 DEBUG Visiting attribute path : support.role
w2022-03-15 01:03:21 DEBUG Visiting attribute path : title
w2022-03-15 01:03:21 DEBUG Building LoadPlan...
w2022-03-15 01:03:21 DEBUG processing queryspace <gen:0>
w2022-03-15 01:03:21 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.Ticket)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.Ticket, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.Ticket)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:1>, path=ru.edu.helpdesk.entity.Ticket.client)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:2>, path=ru.edu.helpdesk.entity.Ticket.support)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.Ticket)
          - SQL table alias mapping - ticket0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(client)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
          - JOIN (JoinDefinedByMetadata(support)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user2_
                - alias suffix - 2_
                - suffixed key columns - {id1_2_2_}

w2022-03-15 01:03:21 DEBUG Static select for entity ru.edu.helpdesk.entity.Ticket [NONE]: select ticket0_.id as id1_1_0_, ticket0_.client_id as client_i4_1_0_, ticket0_.status as status2_1_0_, ticket0_.support_id as support_5_1_0_, ticket0_.title as title3_1_0_, user1_.id as id1_2_1_, user1_.first_name as first_na2_2_1_, user1_.last_name as last_nam3_2_1_, user1_.login as login4_2_1_, user1_.password as password5_2_1_, user1_.role as role6_2_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id left outer join user user2_ on ticket0_.support_id=user2_.id where ticket0_.id=?
w2022-03-15 01:03:21 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.Comment
w2022-03-15 01:03:21 DEBUG  Version select: select id from comment where id =?
w2022-03-15 01:03:21 DEBUG  Snapshot select: select comment_.id, comment_.message as message2_0_, comment_.ticket_id as ticket_i3_0_, comment_.user_id as user_id4_0_ from comment comment_ where comment_.id=?
w2022-03-15 01:03:21 DEBUG  Insert 0: insert into comment (message, ticket_id, user_id, id) values (?, ?, ?, ?)
w2022-03-15 01:03:21 DEBUG  Update 0: update comment set message=?, ticket_id=?, user_id=? where id=?
w2022-03-15 01:03:21 DEBUG  Delete 0: delete from comment where id=?
w2022-03-15 01:03:21 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4842fb1e]
w2022-03-15 01:03:21 DEBUG Visiting attribute path : message
w2022-03-15 01:03:21 DEBUG Visiting attribute path : ticket
w2022-03-15 01:03:21 DEBUG Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79461873]
w2022-03-15 01:03:21 DEBUG Visiting attribute path : ticket.client
w2022-03-15 01:03:21 DEBUG Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1eb9126f]
w2022-03-15 01:03:21 DEBUG Visiting attribute path : ticket.client.firstName
w2022-03-15 01:03:21 DEBUG Visiting attribute path : ticket.client.lastName
w2022-03-15 01:03:21 DEBUG Visiting attribute path : ticket.client.login
w2022-03-15 01:03:21 DEBUG Visiting attribute path : ticket.client.password
w2022-03-15 01:03:21 DEBUG Visiting attribute path : ticket.client.role
w2022-03-15 01:03:21 DEBUG Visiting attribute path : ticket.status
w2022-03-15 01:03:21 DEBUG Visiting attribute path : ticket.support
w2022-03-15 01:03:21 DEBUG Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1027ee0a]
w2022-03-15 01:03:21 DEBUG Visiting attribute path : ticket.support.firstName
w2022-03-15 01:03:21 DEBUG Visiting attribute path : ticket.support.lastName
w2022-03-15 01:03:21 DEBUG Visiting attribute path : ticket.support.login
w2022-03-15 01:03:21 DEBUG Visiting attribute path : ticket.support.password
w2022-03-15 01:03:21 DEBUG Visiting attribute path : ticket.support.role
w2022-03-15 01:03:21 DEBUG Visiting attribute path : ticket.title
w2022-03-15 01:03:21 DEBUG Visiting attribute path : user
w2022-03-15 01:03:21 DEBUG Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6358bf49]
w2022-03-15 01:03:21 DEBUG Visiting attribute path : user.firstName
w2022-03-15 01:03:21 DEBUG Visiting attribute path : user.lastName
w2022-03-15 01:03:21 DEBUG Visiting attribute path : user.login
w2022-03-15 01:03:21 DEBUG Visiting attribute path : user.password
w2022-03-15 01:03:21 DEBUG Visiting attribute path : user.role
w2022-03-15 01:03:21 DEBUG Building LoadPlan...
w2022-03-15 01:03:21 DEBUG processing queryspace <gen:0>
w2022-03-15 01:03:21 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.Comment)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.Comment, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.Comment)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.Ticket, querySpaceUid=<gen:1>, path=ru.edu.helpdesk.entity.Comment.ticket)
             - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:2>, path=ru.edu.helpdesk.entity.Comment.ticket.client)
             - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:3>, path=ru.edu.helpdesk.entity.Comment.ticket.support)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:4>, path=ru.edu.helpdesk.entity.Comment.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(ticket)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ru.edu.helpdesk.entity.Ticket)
                - SQL table alias mapping - ticket1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(client)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=ru.edu.helpdesk.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}
                - JOIN (JoinDefinedByMetadata(support)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=ru.edu.helpdesk.entity.User)
                      - SQL table alias mapping - user3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_2_3_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user4_
                - alias suffix - 4_
                - suffixed key columns - {id1_2_4_}

w2022-03-15 01:03:21 DEBUG Static select for entity ru.edu.helpdesk.entity.Comment [NONE]: select comment0_.id as id1_0_0_, comment0_.message as message2_0_0_, comment0_.ticket_id as ticket_i3_0_0_, comment0_.user_id as user_id4_0_0_, ticket1_.id as id1_1_1_, ticket1_.client_id as client_i4_1_1_, ticket1_.status as status2_1_1_, ticket1_.support_id as support_5_1_1_, ticket1_.title as title3_1_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_, user3_.id as id1_2_3_, user3_.first_name as first_na2_2_3_, user3_.last_name as last_nam3_2_3_, user3_.login as login4_2_3_, user3_.password as password5_2_3_, user3_.role as role6_2_3_, user4_.id as id1_2_4_, user4_.first_name as first_na2_2_4_, user4_.last_name as last_nam3_2_4_, user4_.login as login4_2_4_, user4_.password as password5_2_4_, user4_.role as role6_2_4_ from comment comment0_ left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id left outer join user user2_ on ticket1_.client_id=user2_.id left outer join user user3_ on ticket1_.support_id=user3_.id left outer join user user4_ on comment0_.user_id=user4_.id where comment0_.id=?
w2022-03-15 01:03:21 DEBUG drop table if exists comment
w2022-03-15 01:03:21 DEBUG drop table if exists hibernate_sequence
w2022-03-15 01:03:21 DEBUG drop table if exists ticket
w2022-03-15 01:03:21 DEBUG drop table if exists user
w2022-03-15 01:03:21 DEBUG create table comment (id bigint not null, message varchar(255) not null, ticket_id bigint, user_id bigint, primary key (id))
w2022-03-15 01:03:21 DEBUG create table hibernate_sequence (next_val bigint)
w2022-03-15 01:03:21 DEBUG insert into hibernate_sequence values ( 1 )
w2022-03-15 01:03:21 DEBUG create table ticket (id bigint not null, status integer, title varchar(255) not null, client_id bigint, support_id bigint, primary key (id))
w2022-03-15 01:03:21 DEBUG create table user (id bigint not null, first_name varchar(255), last_name varchar(255), login varchar(255) not null, password varchar(255) not null, role integer, primary key (id))
w2022-03-15 01:03:21 INFO  HHH000476: Executing import script 'file:/C:/Users/%d0%9e%d0%bb%d1%8c%d0%b3%d0%b0/Desktop/Java/Project/Project1/helpdeskproject/target/classes/data/import.sql'
w2022-03-15 01:03:21 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (1, 'admin', 'admin', 'admin', 'admin', 0)
w2022-03-15 01:03:21 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (2, 'support', 'support', 'support', 'support', 1)
w2022-03-15 01:03:21 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (3, 'user1', 'user1', 'user1', 'user1', 2)
w2022-03-15 01:03:21 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (4, 'user2', 'user2', 'user2', 'user2', 2)
w2022-03-15 01:03:21 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (1, 1, 'Hello user1',1, 2)
w2022-03-15 01:03:21 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (2, 0, 'Title2', 1, NULL)
w2022-03-15 01:03:21 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (3, 0, 'Message user2', 4, NULL)
w2022-03-15 01:03:21 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (1, "Hello ticket1", 1, 3)
w2022-03-15 01:03:21 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (2, "Hello ticket2", 2, 3)
w2022-03-15 01:03:21 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (3, "Hello ticket11", 1, 2)
w2022-03-15 01:03:21 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (4, "Hello ticket111", 1, 2)
w2022-03-15 01:03:21 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (5, "Hello ticket22", 2, 2)
w2022-03-15 01:03:21 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (6, "Hello ticket3", 3, 4)
w2022-03-15 01:03:21 DEBUG UPDATE hibernate_sequence SET next_val = 8 WHERE next_val = 1
w2022-03-15 01:03:21 INFO  HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
w2022-03-15 01:03:21 DEBUG Checking 0 named HQL queries
w2022-03-15 01:03:21 DEBUG Checking 0 named SQL queries
w2022-03-15 01:03:21 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 01:03:21 DEBUG Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@28a7fc92
w2022-03-15 01:03:21 DEBUG Registering SessionFactory: a2973e71-9648-4218-94a2-0a5ead93ae61 (<unnamed>)
w2022-03-15 01:03:21 DEBUG Not binding SessionFactory to JNDI, no JNDI name configured
w2022-03-15 01:03:21 DEBUG Statistics initialized [enabled=false]
w2022-03-15 01:03:21 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 01:03:21 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 01:03:21 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 01:03:30 DEBUG Rendered criteria query -> select generatedAlias0 from Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 01:03:30 DEBUG QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@71f53016
w2022-03-15 01:03:30 DEBUG parse() - HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 01:03:30 DEBUG throwQueryException() : no errors
w2022-03-15 01:03:30 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[IDENT] Node: 'ru'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'edu'
    |  |  |  |  |  |  \-[IDENT] Node: 'helpdesk'
    |  |  |  |  |  \-[IDENT] Node: 'entity'
    |  |  |  |  \-[IDENT] Node: 'Ticket'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'client'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias1'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

w2022-03-15 01:03:30 DEBUG select << begin [level=1, statement=select]
w2022-03-15 01:03:30 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.Ticket (generatedAlias0) -> ticket0_
w2022-03-15 01:03:30 DEBUG Resolved : generatedAlias0 -> ticket0_.id
w2022-03-15 01:03:30 DEBUG getDataType() : client -> org.hibernate.type.ManyToOneType(ru.edu.helpdesk.entity.User)
w2022-03-15 01:03:30 DEBUG dereferenceEntityJoin() : generating join for client in ru.edu.helpdesk.entity.Ticket (generatedAlias1) parent = [ {null} ]
w2022-03-15 01:03:30 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.User (generatedAlias1) -> user1_
w2022-03-15 01:03:30 DEBUG addJoinByPathMap() : generatedAlias0.client -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}
w2022-03-15 01:03:30 DEBUG Resolved : generatedAlias0.client -> ticket0_.client_id
w2022-03-15 01:03:30 DEBUG createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'user user1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Ticket.client,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}

w2022-03-15 01:03:30 DEBUG Resolved : generatedAlias0 -> ticket0_.id
w2022-03-15 01:03:30 DEBUG Resolved : generatedAlias1 -> user1_.id
w2022-03-15 01:03:30 DEBUG getDataType() : id -> org.hibernate.type.LongType@2abd541
w2022-03-15 01:03:30 DEBUG Resolved : generatedAlias1.id -> user1_.id
w2022-03-15 01:03:30 DEBUG select : finishing up [level=1, statement=select]
w2022-03-15 01:03:30 DEBUG processQuery() :  ( SELECT ( {select clause} ticket0_.id ) ( FromClause{level=1} ( ticket ticket0_ user user1_ ) ) ( where ( = ( user1_.id user1_.id id ) ? ) ) )
w2022-03-15 01:03:30 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Ticket): [ticket]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.Ticket)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.User)
          | path: generatedAlias1.id
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.User)
          |  | originalText: generatedAlias1
          |  \-IdentNode
          |    persister: null
          |    originalText: id
          \-ParameterNode

w2022-03-15 01:03:30 DEBUG Using FROM fragment [ticket ticket0_]
w2022-03-15 01:03:30 DEBUG Using FROM fragment [left outer join user user1_ on ticket0_.client_id=user1_.id]
w2022-03-15 01:03:30 DEBUG select >> end [level=1, statement=select]
w2022-03-15 01:03:30 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (ticket,user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'ticket0_.id as id1_1_' {alias=generatedAlias0, className=ru.edu.helpdesk.entity.Ticket, tableAlias=ticket0_}
    |  \-[SQL_TOKEN] SqlFragment: 'ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[ticket0_, user1_], fromElementsByPath=[generatedAlias0.client], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'ticket ticket0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=ticket,tableAlias=ticket0_,origin=null,columns={,className=ru.edu.helpdesk.entity.Ticket}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join user user1_ on ticket0_.client_id=user1_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Ticket.client,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user1_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias1.id,tableAlias=user1_,className=ru.edu.helpdesk.entity.User,classAlias=generatedAlias1}
          |  +-[ALIAS_REF] IdentNode: 'user1_.id' {alias=generatedAlias1, className=ru.edu.helpdesk.entity.User, tableAlias=user1_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LongType@2abd541}

w2022-03-15 01:03:30 DEBUG throwQueryException() : no errors
w2022-03-15 01:03:30 DEBUG HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 01:03:30 DEBUG SQL: select ticket0_.id as id1_1_, ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id where user1_.id=?
w2022-03-15 01:03:30 DEBUG throwQueryException() : no errors
w2022-03-15 01:03:30 DEBUG select ticket0_.id as id1_1_, ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id where user1_.id=?
w2022-03-15 01:03:30 DEBUG Result set row: 0
w2022-03-15 01:03:30 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 01:03:30 DEBUG Result set row: 1
w2022-03-15 01:03:30 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 01:03:30 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 01:03:30 DEBUG Processing attribute `client` : value = 1
w2022-03-15 01:03:30 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 01:03:30 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 01:03:30 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 01:03:30 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#1]
w2022-03-15 01:03:30 DEBUG Processing attribute `firstName` : value = admin
w2022-03-15 01:03:30 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 01:03:30 DEBUG Processing attribute `lastName` : value = admin
w2022-03-15 01:03:30 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 01:03:30 DEBUG Processing attribute `login` : value = admin
w2022-03-15 01:03:30 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 01:03:30 DEBUG Processing attribute `password` : value = admin
w2022-03-15 01:03:30 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 01:03:30 DEBUG Processing attribute `role` : value = ADMIN
w2022-03-15 01:03:30 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 01:03:30 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#1]
w2022-03-15 01:03:30 DEBUG Done entity load : ru.edu.helpdesk.entity.User#1
w2022-03-15 01:03:30 DEBUG Processing attribute `status` : value = WORKING
w2022-03-15 01:03:30 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 01:03:30 DEBUG Processing attribute `support` : value = 2
w2022-03-15 01:03:30 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 01:03:30 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 01:03:30 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 01:03:30 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#2]
w2022-03-15 01:03:30 DEBUG Processing attribute `firstName` : value = support
w2022-03-15 01:03:30 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 01:03:30 DEBUG Processing attribute `lastName` : value = support
w2022-03-15 01:03:30 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 01:03:30 DEBUG Processing attribute `login` : value = support
w2022-03-15 01:03:30 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 01:03:30 DEBUG Processing attribute `password` : value = support
w2022-03-15 01:03:30 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 01:03:30 DEBUG Processing attribute `role` : value = SUPPORT
w2022-03-15 01:03:30 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 01:03:30 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#2]
w2022-03-15 01:03:30 DEBUG Done entity load : ru.edu.helpdesk.entity.User#2
w2022-03-15 01:03:30 DEBUG Processing attribute `title` : value = Hello user1
w2022-03-15 01:03:30 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 01:03:30 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 01:03:30 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 01:03:30 DEBUG Processing attribute `client` : value = 1
w2022-03-15 01:03:30 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 01:03:30 DEBUG Processing attribute `status` : value = OPEN
w2022-03-15 01:03:30 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 01:03:30 DEBUG Processing attribute `support` : value = null
w2022-03-15 01:03:30 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 01:03:30 DEBUG Processing attribute `title` : value = Title2
w2022-03-15 01:03:30 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 01:03:30 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 01:03:33 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 01:03:33 DEBUG begin
w2022-03-15 01:03:33 DEBUG committing
w2022-03-15 01:05:19 DEBUG Logging Provider: org.jboss.logging.Log4j2LoggerProvider
w2022-03-15 01:05:19 DEBUG PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@7aa52917
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/%d0%9e%d0%bb%d1%8c%d0%b3%d0%b0/Desktop/Java/Project/Project1/helpdeskproject/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		ru.edu.helpdesk.entity.Comment
		ru.edu.helpdesk.entity.Ticket
		ru.edu.helpdesk.entity.User]
	Mapping files names []
	Properties []
w2022-03-15 01:05:19 DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
w2022-03-15 01:05:19 DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
w2022-03-15 01:05:19 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
w2022-03-15 01:05:19 INFO  HHH000412: Hibernate ORM core version 5.6.5.Final
w2022-03-15 01:05:19 DEBUG HHH000206: hibernate.properties not found
w2022-03-15 01:05:19 DEBUG Overriding existing service binding [org.hibernate.secure.spi.JaccService]
w2022-03-15 01:05:19 DEBUG Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
w2022-03-15 01:05:19 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
w2022-03-15 01:05:19 INFO  HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
w2022-03-15 01:05:19 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@26c99961
w2022-03-15 01:05:19 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@26c99961
w2022-03-15 01:05:19 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@26c99961
w2022-03-15 01:05:19 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@14b5cf30
w2022-03-15 01:05:19 DEBUG Adding type registration true_false -> org.hibernate.type.TrueFalseType@7051cc10
w2022-03-15 01:05:19 DEBUG Adding type registration yes_no -> org.hibernate.type.YesNoType@50175d0b
w2022-03-15 01:05:19 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@2beee066
w2022-03-15 01:05:19 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@2beee066
w2022-03-15 01:05:19 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2beee066
w2022-03-15 01:05:19 DEBUG Adding type registration character -> org.hibernate.type.CharacterType@737ad03b
w2022-03-15 01:05:19 DEBUG Adding type registration char -> org.hibernate.type.CharacterType@737ad03b
w2022-03-15 01:05:19 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@737ad03b
w2022-03-15 01:05:19 DEBUG Adding type registration short -> org.hibernate.type.ShortType@7d113337
w2022-03-15 01:05:19 DEBUG Adding type registration short -> org.hibernate.type.ShortType@7d113337
w2022-03-15 01:05:19 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7d113337
w2022-03-15 01:05:19 DEBUG Adding type registration integer -> org.hibernate.type.IntegerType@1d3951d2
w2022-03-15 01:05:19 DEBUG Adding type registration int -> org.hibernate.type.IntegerType@1d3951d2
w2022-03-15 01:05:19 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1d3951d2
w2022-03-15 01:05:19 DEBUG Adding type registration long -> org.hibernate.type.LongType@701181b7
w2022-03-15 01:05:19 DEBUG Adding type registration long -> org.hibernate.type.LongType@701181b7
w2022-03-15 01:05:19 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.LongType@701181b7
w2022-03-15 01:05:19 DEBUG Adding type registration float -> org.hibernate.type.FloatType@6a81f6a9
w2022-03-15 01:05:19 DEBUG Adding type registration float -> org.hibernate.type.FloatType@6a81f6a9
w2022-03-15 01:05:19 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6a81f6a9
w2022-03-15 01:05:19 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@488923b8
w2022-03-15 01:05:19 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@488923b8
w2022-03-15 01:05:19 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@488923b8
w2022-03-15 01:05:19 DEBUG Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@502c7f82
w2022-03-15 01:05:19 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@502c7f82
w2022-03-15 01:05:19 DEBUG Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7d5c6d8e
w2022-03-15 01:05:19 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7d5c6d8e
w2022-03-15 01:05:19 DEBUG Adding type registration string -> org.hibernate.type.StringType@1b9a54a2
w2022-03-15 01:05:19 DEBUG Adding type registration java.lang.String -> org.hibernate.type.StringType@1b9a54a2
w2022-03-15 01:05:19 DEBUG Adding type registration nstring -> org.hibernate.type.StringNVarcharType@56d0b486
w2022-03-15 01:05:19 DEBUG Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@708ac61
w2022-03-15 01:05:19 DEBUG Adding type registration url -> org.hibernate.type.UrlType@56af4131
w2022-03-15 01:05:19 DEBUG Adding type registration java.net.URL -> org.hibernate.type.UrlType@56af4131
w2022-03-15 01:05:19 DEBUG Adding type registration Duration -> org.hibernate.type.DurationType@24701d92
w2022-03-15 01:05:19 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.DurationType@24701d92
w2022-03-15 01:05:19 DEBUG Adding type registration Instant -> org.hibernate.type.InstantType@9aa79fe
w2022-03-15 01:05:19 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.InstantType@9aa79fe
w2022-03-15 01:05:19 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7b7a578
w2022-03-15 01:05:19 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7b7a578
w2022-03-15 01:05:19 DEBUG Adding type registration LocalDate -> org.hibernate.type.LocalDateType@71282e2c
w2022-03-15 01:05:19 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@71282e2c
w2022-03-15 01:05:19 DEBUG Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@65d6babf
w2022-03-15 01:05:19 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@65d6babf
w2022-03-15 01:05:19 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3920246c
w2022-03-15 01:05:19 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3920246c
w2022-03-15 01:05:19 DEBUG Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4a2d899d
w2022-03-15 01:05:19 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4a2d899d
w2022-03-15 01:05:19 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@78b76c17
w2022-03-15 01:05:19 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@78b76c17
w2022-03-15 01:05:19 DEBUG Adding type registration date -> org.hibernate.type.DateType@6f82ee8f
w2022-03-15 01:05:19 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.DateType@6f82ee8f
w2022-03-15 01:05:19 DEBUG Adding type registration time -> org.hibernate.type.TimeType@489f40fa
w2022-03-15 01:05:19 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.TimeType@489f40fa
w2022-03-15 01:05:19 DEBUG Adding type registration timestamp -> org.hibernate.type.TimestampType@239efcb7
w2022-03-15 01:05:19 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@239efcb7
w2022-03-15 01:05:19 DEBUG Adding type registration java.util.Date -> org.hibernate.type.TimestampType@239efcb7
w2022-03-15 01:05:19 DEBUG Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@71f48937
w2022-03-15 01:05:19 DEBUG Adding type registration calendar -> org.hibernate.type.CalendarType@45b79354
w2022-03-15 01:05:19 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@45b79354
w2022-03-15 01:05:19 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@45b79354
w2022-03-15 01:05:19 DEBUG Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@207732fe
w2022-03-15 01:05:19 DEBUG Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@5b323b32
w2022-03-15 01:05:19 DEBUG Adding type registration locale -> org.hibernate.type.LocaleType@7d2c7fdf
w2022-03-15 01:05:19 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7d2c7fdf
w2022-03-15 01:05:19 DEBUG Adding type registration currency -> org.hibernate.type.CurrencyType@7071d7bb
w2022-03-15 01:05:19 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7071d7bb
w2022-03-15 01:05:19 DEBUG Adding type registration timezone -> org.hibernate.type.TimeZoneType@7707b8c6
w2022-03-15 01:05:19 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7707b8c6
w2022-03-15 01:05:19 DEBUG Adding type registration class -> org.hibernate.type.ClassType@71d7bf95
w2022-03-15 01:05:19 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.ClassType@71d7bf95
w2022-03-15 01:05:19 DEBUG Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@38dbdc35
w2022-03-15 01:05:19 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@38dbdc35
w2022-03-15 01:05:19 DEBUG Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@50e426a
w2022-03-15 01:05:19 DEBUG Adding type registration binary -> org.hibernate.type.BinaryType@5d32973c
w2022-03-15 01:05:19 DEBUG Adding type registration byte[] -> org.hibernate.type.BinaryType@5d32973c
w2022-03-15 01:05:19 DEBUG Adding type registration [B -> org.hibernate.type.BinaryType@5d32973c
w2022-03-15 01:05:19 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@531b111f
w2022-03-15 01:05:19 DEBUG Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@531b111f
w2022-03-15 01:05:19 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@531b111f
w2022-03-15 01:05:19 DEBUG Adding type registration row_version -> org.hibernate.type.RowVersionType@14d585ad
w2022-03-15 01:05:19 DEBUG Adding type registration image -> org.hibernate.type.ImageType@7feb6aaf
w2022-03-15 01:05:19 DEBUG Adding type registration characters -> org.hibernate.type.CharArrayType@7fcfacc0
w2022-03-15 01:05:19 DEBUG Adding type registration char[] -> org.hibernate.type.CharArrayType@7fcfacc0
w2022-03-15 01:05:19 DEBUG Adding type registration [C -> org.hibernate.type.CharArrayType@7fcfacc0
w2022-03-15 01:05:19 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1a6625cf
w2022-03-15 01:05:19 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1a6625cf
w2022-03-15 01:05:19 DEBUG Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1a6625cf
w2022-03-15 01:05:19 DEBUG Adding type registration text -> org.hibernate.type.TextType@7fbeb2ee
w2022-03-15 01:05:19 DEBUG Adding type registration ntext -> org.hibernate.type.NTextType@2f86531
w2022-03-15 01:05:19 DEBUG Adding type registration blob -> org.hibernate.type.BlobType@7fe994ae
w2022-03-15 01:05:19 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7fe994ae
w2022-03-15 01:05:19 DEBUG Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@32a729ef
w2022-03-15 01:05:19 DEBUG Adding type registration clob -> org.hibernate.type.ClobType@bd7b8bf
w2022-03-15 01:05:19 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@bd7b8bf
w2022-03-15 01:05:19 DEBUG Adding type registration nclob -> org.hibernate.type.NClobType@4cb12782
w2022-03-15 01:05:19 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4cb12782
w2022-03-15 01:05:19 DEBUG Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@8a38a0d
w2022-03-15 01:05:19 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1ff4c880
w2022-03-15 01:05:19 DEBUG Adding type registration serializable -> org.hibernate.type.SerializableType@3d05a586
w2022-03-15 01:05:19 DEBUG Adding type registration object -> org.hibernate.type.ObjectType@48390971
w2022-03-15 01:05:19 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@48390971
w2022-03-15 01:05:19 DEBUG Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@159d5dcc
w2022-03-15 01:05:19 DEBUG Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@156fbc8f
w2022-03-15 01:05:19 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@606a5c6f
w2022-03-15 01:05:19 DEBUG Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@aefec7f
w2022-03-15 01:05:19 DEBUG Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@75e3b3d3
w2022-03-15 01:05:19 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1d00e224
w2022-03-15 01:05:19 DEBUG Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2fbb5ccf
w2022-03-15 01:05:19 DEBUG Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5ac2d153
w2022-03-15 01:05:19 INFO  HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
w2022-03-15 01:05:19 DEBUG Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@6b3bad6d] into BootstrapContext; was [null]
w2022-03-15 01:05:19 DEBUG ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@6b3bad6d) [was null]
w2022-03-15 01:05:19 DEBUG Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@7ed28fac] into BootstrapContext; was [null]
w2022-03-15 01:05:19 DEBUG Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@647a9ae5] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@2a0fbfec]
w2022-03-15 01:05:19 DEBUG Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@6b3bad6d]
w2022-03-15 01:05:19 DEBUG ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@6b3bad6d]
w2022-03-15 01:05:19 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
w2022-03-15 01:05:19 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
w2022-03-15 01:05:19 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
w2022-03-15 01:05:19 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
w2022-03-15 01:05:19 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
w2022-03-15 01:05:19 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
w2022-03-15 01:05:19 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
w2022-03-15 01:05:19 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
w2022-03-15 01:05:19 DEBUG Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
w2022-03-15 01:05:19 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
w2022-03-15 01:05:19 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
w2022-03-15 01:05:19 DEBUG Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
w2022-03-15 01:05:19 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
w2022-03-15 01:05:19 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
w2022-03-15 01:05:19 DEBUG Database ->
       name : SQLite
    version : 3.36.0
      major : 3
      minor : 36
w2022-03-15 01:05:19 DEBUG Driver ->
       name : SQLite JDBC
    version : 3.36.0.3
      major : 3
      minor : 36
w2022-03-15 01:05:19 DEBUG JDBC version : 2.1
w2022-03-15 01:05:19 INFO  HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
w2022-03-15 01:05:19 DEBUG JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
w2022-03-15 01:05:19 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
w2022-03-15 01:05:19 DEBUG HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [2] less than 4
w2022-03-15 01:05:19 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4eb9346] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3e9a5318]
w2022-03-15 01:05:19 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
w2022-03-15 01:05:19 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.Comment
w2022-03-15 01:05:19 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 01:05:19 DEBUG Import with entity name Comment
w2022-03-15 01:05:19 DEBUG Bind entity ru.edu.helpdesk.entity.Comment on table comment
w2022-03-15 01:05:19 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 01:05:19 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Comment] is safe
w2022-03-15 01:05:19 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Comment
w2022-03-15 01:05:19 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 01:05:19 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Comment:id]
w2022-03-15 01:05:19 DEBUG building SimpleValue for id
w2022-03-15 01:05:19 DEBUG Building property id
w2022-03-15 01:05:19 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 01:05:19 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=message, insertable=true, updatable=true, unique=false}
w2022-03-15 01:05:19 DEBUG MetadataSourceProcessor property message with lazy=false
w2022-03-15 01:05:19 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Comment:message]
w2022-03-15 01:05:19 DEBUG building SimpleValue for message
w2022-03-15 01:05:19 DEBUG Building property message
w2022-03-15 01:05:19 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 01:05:19 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=ticket, insertable=true, updatable=true, unique=false}
w2022-03-15 01:05:19 DEBUG Building property ticket
w2022-03-15 01:05:19 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 01:05:19 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=user, insertable=true, updatable=true, unique=false}
w2022-03-15 01:05:19 DEBUG Building property user
w2022-03-15 01:05:19 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 01:05:19 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 01:05:19 DEBUG Import with entity name Ticket
w2022-03-15 01:05:19 DEBUG Bind entity ru.edu.helpdesk.entity.Ticket on table ticket
w2022-03-15 01:05:19 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 01:05:19 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Ticket] is safe
w2022-03-15 01:05:19 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Ticket
w2022-03-15 01:05:19 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 01:05:19 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:id]
w2022-03-15 01:05:19 DEBUG building SimpleValue for id
w2022-03-15 01:05:19 DEBUG Building property id
w2022-03-15 01:05:19 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 01:05:19 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 01:05:19 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=client, insertable=true, updatable=true, unique=false}
w2022-03-15 01:05:19 DEBUG Building property client
w2022-03-15 01:05:19 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=status, insertable=true, updatable=true, unique=false}
w2022-03-15 01:05:19 DEBUG MetadataSourceProcessor property status with lazy=false
w2022-03-15 01:05:19 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:status]
w2022-03-15 01:05:19 DEBUG building SimpleValue for status
w2022-03-15 01:05:19 DEBUG Building property status
w2022-03-15 01:05:19 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 01:05:19 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=support, insertable=true, updatable=true, unique=false}
w2022-03-15 01:05:19 DEBUG Building property support
w2022-03-15 01:05:19 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=title, insertable=true, updatable=true, unique=false}
w2022-03-15 01:05:19 DEBUG MetadataSourceProcessor property title with lazy=false
w2022-03-15 01:05:19 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:title]
w2022-03-15 01:05:19 DEBUG building SimpleValue for title
w2022-03-15 01:05:19 DEBUG Building property title
w2022-03-15 01:05:19 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.User
w2022-03-15 01:05:19 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 01:05:19 DEBUG Import with entity name User
w2022-03-15 01:05:19 DEBUG Bind entity ru.edu.helpdesk.entity.User on table user
w2022-03-15 01:05:19 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 01:05:19 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.User] is safe
w2022-03-15 01:05:19 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.User
w2022-03-15 01:05:19 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 01:05:19 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:id]
w2022-03-15 01:05:19 DEBUG building SimpleValue for id
w2022-03-15 01:05:19 DEBUG Building property id
w2022-03-15 01:05:19 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 01:05:19 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
w2022-03-15 01:05:19 DEBUG MetadataSourceProcessor property firstName with lazy=false
w2022-03-15 01:05:19 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:firstName]
w2022-03-15 01:05:19 DEBUG building SimpleValue for firstName
w2022-03-15 01:05:19 DEBUG Building property firstName
w2022-03-15 01:05:19 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
w2022-03-15 01:05:19 DEBUG MetadataSourceProcessor property lastName with lazy=false
w2022-03-15 01:05:19 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:lastName]
w2022-03-15 01:05:19 DEBUG building SimpleValue for lastName
w2022-03-15 01:05:19 DEBUG Building property lastName
w2022-03-15 01:05:19 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=login, insertable=true, updatable=true, unique=false}
w2022-03-15 01:05:19 DEBUG MetadataSourceProcessor property login with lazy=false
w2022-03-15 01:05:19 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:login]
w2022-03-15 01:05:19 DEBUG building SimpleValue for login
w2022-03-15 01:05:19 DEBUG Building property login
w2022-03-15 01:05:19 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
w2022-03-15 01:05:19 DEBUG MetadataSourceProcessor property password with lazy=false
w2022-03-15 01:05:19 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:password]
w2022-03-15 01:05:19 DEBUG building SimpleValue for password
w2022-03-15 01:05:19 DEBUG Building property password
w2022-03-15 01:05:19 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=role, insertable=true, updatable=true, unique=false}
w2022-03-15 01:05:19 DEBUG MetadataSourceProcessor property role with lazy=false
w2022-03-15 01:05:19 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:role]
w2022-03-15 01:05:19 DEBUG building SimpleValue for role
w2022-03-15 01:05:19 DEBUG Building property role
w2022-03-15 01:05:19 DEBUG Starting fillSimpleValue for id
w2022-03-15 01:05:19 DEBUG Starting fillSimpleValue for message
w2022-03-15 01:05:19 DEBUG Starting fillSimpleValue for id
w2022-03-15 01:05:19 DEBUG Starting fillSimpleValue for status
w2022-03-15 01:05:19 DEBUG Starting fillSimpleValue for title
w2022-03-15 01:05:19 DEBUG Starting fillSimpleValue for id
w2022-03-15 01:05:19 DEBUG Starting fillSimpleValue for firstName
w2022-03-15 01:05:19 DEBUG Starting fillSimpleValue for lastName
w2022-03-15 01:05:19 DEBUG Starting fillSimpleValue for login
w2022-03-15 01:05:19 DEBUG Starting fillSimpleValue for password
w2022-03-15 01:05:19 DEBUG Starting fillSimpleValue for role
w2022-03-15 01:05:19 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [comment]
w2022-03-15 01:05:19 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [ticket]
w2022-03-15 01:05:19 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [user]
w2022-03-15 01:05:19 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 01:05:19 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 01:05:19 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 01:05:19 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 01:05:19 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 01:05:19 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 01:05:19 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 01:05:19 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 01:05:19 DEBUG Building session factory
w2022-03-15 01:05:19 DEBUG SessionFactory name : null
w2022-03-15 01:05:19 DEBUG Automatic flush during beforeCompletion(): enabled
w2022-03-15 01:05:19 DEBUG Automatic session close at end of transaction: disabled
w2022-03-15 01:05:19 DEBUG Statistics: disabled
w2022-03-15 01:05:19 DEBUG Deleted entity synthetic identifier rollback: disabled
w2022-03-15 01:05:19 DEBUG Default entity-mode: pojo
w2022-03-15 01:05:19 DEBUG Check Nullability in Core (should be disabled when Bean Validation is on): enabled
w2022-03-15 01:05:19 DEBUG Allow initialization of lazy state outside session : disabled
w2022-03-15 01:05:19 DEBUG Using BatchFetchStyle : LEGACY
w2022-03-15 01:05:19 DEBUG Default batch fetch size: -1
w2022-03-15 01:05:19 DEBUG Maximum outer join fetch depth: null
w2022-03-15 01:05:19 DEBUG Default null ordering: NONE
w2022-03-15 01:05:19 DEBUG Order SQL updates by primary key: disabled
w2022-03-15 01:05:19 DEBUG Order SQL inserts for batching: disabled
w2022-03-15 01:05:19 DEBUG multi-tenancy strategy : NONE
w2022-03-15 01:05:19 DEBUG JTA Track by Thread: enabled
w2022-03-15 01:05:19 DEBUG Query language substitutions: {}
w2022-03-15 01:05:19 DEBUG Named query checking : enabled
w2022-03-15 01:05:19 DEBUG Second-level cache: disabled
w2022-03-15 01:05:19 DEBUG Second-level query cache: disabled
w2022-03-15 01:05:19 DEBUG Second-level query cache factory: null
w2022-03-15 01:05:19 DEBUG Second-level cache region prefix: null
w2022-03-15 01:05:19 DEBUG Optimize second-level cache for minimal puts: disabled
w2022-03-15 01:05:19 DEBUG Structured second-level cache entries: disabled
w2022-03-15 01:05:19 DEBUG Second-level cache direct-reference entries: disabled
w2022-03-15 01:05:19 DEBUG Automatic eviction of collection cache: disabled
w2022-03-15 01:05:19 DEBUG JDBC batch size: 1
w2022-03-15 01:05:19 DEBUG JDBC batch updates for versioned data: enabled
w2022-03-15 01:05:19 DEBUG Scrollable result sets: disabled
w2022-03-15 01:05:19 DEBUG Wrap result sets: disabled
w2022-03-15 01:05:19 DEBUG JDBC3 getGeneratedKeys(): enabled
w2022-03-15 01:05:19 DEBUG JDBC result set fetch size: null
w2022-03-15 01:05:19 DEBUG Connection release mode: ON_CLOSE
w2022-03-15 01:05:19 DEBUG Generate SQL with comments: disabled
w2022-03-15 01:05:19 DEBUG JPA compliance - query : disabled
w2022-03-15 01:05:19 DEBUG JPA compliance - closed-handling : disabled
w2022-03-15 01:05:19 DEBUG JPA compliance - lists : disabled
w2022-03-15 01:05:19 DEBUG JPA compliance - transactions : disabled
w2022-03-15 01:05:19 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 01:05:19 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 01:05:19 DEBUG Session factory constructed with filter configurations : {}
w2022-03-15 01:05:19 DEBUG Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=true, java.specification.version=1.8, file.encoding.pkg=sun.io, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@4ccfc59, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.SQLiteDialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\charsets.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\cldrdata.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\dnsns.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\jaccess.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\localedata.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\nashorn.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunec.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunmscapi.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\zipfs.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jce.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jfr.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jsse.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\management-agent.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\resources.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\rt.jar;C:\Users\Ольга\Desktop\Java\Project\Project1\helpdeskproject\target\classes;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\2.6.4\spring-boot-starter-data-jpa-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\2.6.4\spring-boot-starter-jdbc-2.6.4.jar;C:\Users\Ольга\.m2\repository\com\zaxxer\HikariCP\4.0.3\HikariCP-4.0.3.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-jdbc\5.3.16\spring-jdbc-5.3.16.jar;C:\Users\Ольга\.m2\repository\jakarta\transaction\jakarta.transaction-api\1.3.3\jakarta.transaction-api-1.3.3.jar;C:\Users\Ольга\.m2\repository\jakarta\persistence\jakarta.persistence-api\2.2.3\jakarta.persistence-api-2.2.3.jar;C:\Users\Ольга\.m2\repository\org\hibernate\hibernate-core\5.6.5.Final\hibernate-core-5.6.5.Final.jar;C:\Users\Ольга\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy\1.11.22\byte-buddy-1.11.22.jar;C:\Users\Ольга\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ольга\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Ольга\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.6\jaxb-runtime-2.3.6.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\txw2\2.3.6\txw2-2.3.6.jar;C:\Users\Ольга\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.12\istack-commons-runtime-3.0.12.jar;C:\Users\Ольга\.m2\repository\com\sun\activation\jakarta.activation\1.2.2\jakarta.activation-1.2.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\data\spring-data-jpa\2.6.2\spring-data-jpa-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\data\spring-data-commons\2.6.2\spring-data-commons-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-orm\5.3.16\spring-orm-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-context\5.3.16\spring-context-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-tx\5.3.16\spring-tx-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-beans\5.3.16\spring-beans-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-aspects\5.3.16\spring-aspects-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-security\2.6.4\spring-boot-starter-security-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter\2.6.4\spring-boot-starter-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-logging\2.6.4\spring-boot-starter-logging-2.6.4.jar;C:\Users\Ольга\.m2\repository\ch\qos\logback\logback-classic\1.2.10\logback-classic-1.2.10.jar;C:\Users\Ольга\.m2\repository\ch\qos\logback\logback-core\1.2.10\logback-core-1.2.10.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.17.1\log4j-to-slf4j-2.17.1.jar;C:\Users\Ольга\.m2\repository\org\slf4j\jul-to-slf4j\1.7.36\jul-to-slf4j-1.7.36.jar;C:\Users\Ольга\.m2\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;C:\Users\Ольга\.m2\repository\org\yaml\snakeyaml\1.29\snakeyaml-1.29.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-aop\5.3.16\spring-aop-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-config\5.6.2\spring-security-config-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-web\5.6.2\spring-security-web-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-expression\5.3.16\spring-expression-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-web\2.6.4\spring-boot-starter-web-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-json\2.6.4\spring-boot-starter-json-2.6.4.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.13.1\jackson-datatype-jdk8-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.13.1\jackson-datatype-jsr310-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.13.1\jackson-module-parameter-names-2.13.1.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\2.6.4\spring-boot-starter-tomcat-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.58\tomcat-embed-core-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\9.0.58\tomcat-embed-el-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.58\tomcat-embed-websocket-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-web\5.3.16\spring-web-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-webmvc\5.3.16\spring-webmvc-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-devtools\2.6.4\spring-boot-devtools-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot\2.6.4\spring-boot-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\2.6.4\spring-boot-autoconfigure-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\xerial\sqlite-jdbc\3.36.0.3\sqlite-jdbc-3.36.0.3.jar;C:\Users\Ольга\.m2\repository\com\zsoltfabok\sqlite-dialect\1.0\sqlite-dialect-1.0.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-aop\2.6.2\spring-boot-starter-aop-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\aspectj\aspectjweaver\1.9.7\aspectjweaver-1.9.7.jar;C:\Users\Ольга\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.3\jakarta.xml.bind-api-2.3.3.jar;C:\Users\Ольга\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.2\jakarta.activation-api-1.2.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-core\5.3.16\spring-core-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-jcl\5.3.16\spring-jcl-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-core\5.6.2\spring-security-core-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-crypto\5.6.2\spring-security-crypto-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\projectlombok\lombok\1.18.22\lombok-1.18.22.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\2.6.4\spring-boot-starter-thymeleaf-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\thymeleaf-spring5\3.0.15.RELEASE\thymeleaf-spring5-3.0.15.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\thymeleaf\3.0.15.RELEASE\thymeleaf-3.0.15.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\attoparser\attoparser\2.0.5.RELEASE\attoparser-2.0.5.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-java8time\3.0.4.RELEASE\thymeleaf-extras-java8time-3.0.4.RELEASE.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.1\jackson-databind-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.1\jackson-annotations-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.1\jackson-core-2.13.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-api\2.4.1\log4j-api-2.4.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-core\2.4.1\log4j-core-2.4.1.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.2\lib\idea_rt.jar, java.vm.vendor=Temurin, sun.arch.data.model=64, user.variant=, java.vendor.url=https://adoptium.net/, catalina.useNaming=false, user.timezone=Europe/Moscow, jakarta.persistence.sharedCache.mode=UNSPECIFIED, os.name=Windows 10, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), user.country=RU, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\bin, sun.java.command=ru.edu.helpdesk.HelpdeskApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@333a0601, com.sun.management.jmxremote=, javax.persistence.sharedCache.mode=UNSPECIFIED, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, user.home=C:\Users\Ольга, user.language=ru, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre, file.separator=\, spring.output.ansi.enabled=always, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, sun.boot.class.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\resources.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\rt.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\sunrsasign.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jsse.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jce.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\charsets.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jfr.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\classes, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_312-b07, user.name=Эльдорадо, spring.jmx.enabled=true, path.separator=;, os.version=10.0, java.endorsed.dirs=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\endorsed, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=default, spring.beaninfo.ignore=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=C:\Users\134E~1\AppData\Local\Temp\, catalina.home=C:\Users\Ольга\AppData\Local\Temp\tomcat.8080.167435455050198647, java.version=1.8.0_312, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\Ольга\Desktop\Java\Project\Project1\helpdeskproject, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=2900, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\Ольга\AppData\Local\Temp\tomcat.8080.167435455050198647, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@211231ed, java.library.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\windows\System32\OpenSSH\;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\Program Files\apache-maven-3.8.4\bin;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Ольга\AppData\Local\Microsoft\WindowsApps;C:\Users\Ольга\AppData\Local\Programs\Microsoft VS Code\bin;C:\SQLite;C:\Users\Ольга\AppData\Roaming\npm;C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.2\bin;;., java.vendor=Temurin, java.vm.info=mixed mode, java.vm.version=25.312-b07, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, java.ext.dirs=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext;C:\windows\Sun\Java\lib\ext, hibernate.connection.datasource=HikariDataSource (HikariPool-1), hibernate.hbm2ddl.import_files=data/import.sql, java.class.version=52.0}
w2022-03-15 01:05:19 DEBUG Skipping JACC integration as it was not enabled
w2022-03-15 01:05:19 DEBUG Using ORDINAL-based conversion for Enum ru.edu.helpdesk.entity.UserRole
w2022-03-15 01:05:19 DEBUG Using ORDINAL-based conversion for Enum ru.edu.helpdesk.entity.TicketStatus
w2022-03-15 01:05:19 DEBUG Instantiated session factory
w2022-03-15 01:05:19 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4eb9346] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@5f473cf5]
w2022-03-15 01:05:19 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.User] is safe
w2022-03-15 01:05:19 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.User
w2022-03-15 01:05:20 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:05:20 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:05:20 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:05:20 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:05:20 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Ticket] is safe
w2022-03-15 01:05:20 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Ticket
w2022-03-15 01:05:20 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:05:20 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:05:20 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:05:20 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:05:20 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:05:20 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:05:20 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:05:20 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:05:20 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Comment] is safe
w2022-03-15 01:05:20 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Comment
w2022-03-15 01:05:20 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:05:20 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:05:20 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:05:20 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:05:20 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.User
w2022-03-15 01:05:20 DEBUG  Version select: select id from user where id =?
w2022-03-15 01:05:20 DEBUG  Snapshot select: select user_.id, user_.first_name as first_na2_2_, user_.last_name as last_nam3_2_, user_.login as login4_2_, user_.password as password5_2_, user_.role as role6_2_ from user user_ where user_.id=?
w2022-03-15 01:05:20 DEBUG  Insert 0: insert into user (first_name, last_name, login, password, role, id) values (?, ?, ?, ?, ?, ?)
w2022-03-15 01:05:20 DEBUG  Update 0: update user set first_name=?, last_name=?, login=?, password=?, role=? where id=?
w2022-03-15 01:05:20 DEBUG  Delete 0: delete from user where id=?
w2022-03-15 01:05:20 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ac38584]
w2022-03-15 01:05:20 DEBUG Visiting attribute path : firstName
w2022-03-15 01:05:20 DEBUG Visiting attribute path : lastName
w2022-03-15 01:05:20 DEBUG Visiting attribute path : login
w2022-03-15 01:05:20 DEBUG Visiting attribute path : password
w2022-03-15 01:05:20 DEBUG Visiting attribute path : role
w2022-03-15 01:05:20 DEBUG Building LoadPlan...
w2022-03-15 01:05:20 DEBUG processing queryspace <gen:0>
w2022-03-15 01:05:20 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.User)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

w2022-03-15 01:05:20 DEBUG Static select for entity ru.edu.helpdesk.entity.User [NONE]: select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 01:05:20 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.Ticket
w2022-03-15 01:05:20 DEBUG  Version select: select id from ticket where id =?
w2022-03-15 01:05:20 DEBUG  Snapshot select: select ticket_.id, ticket_.client_id as client_i4_1_, ticket_.status as status2_1_, ticket_.support_id as support_5_1_, ticket_.title as title3_1_ from ticket ticket_ where ticket_.id=?
w2022-03-15 01:05:20 DEBUG  Insert 0: insert into ticket (client_id, status, support_id, title, id) values (?, ?, ?, ?, ?)
w2022-03-15 01:05:20 DEBUG  Update 0: update ticket set client_id=?, status=?, support_id=?, title=? where id=?
w2022-03-15 01:05:20 DEBUG  Delete 0: delete from ticket where id=?
w2022-03-15 01:05:20 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58aafb9]
w2022-03-15 01:05:20 DEBUG Visiting attribute path : client
w2022-03-15 01:05:20 DEBUG Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1985dcef]
w2022-03-15 01:05:20 DEBUG Visiting attribute path : client.firstName
w2022-03-15 01:05:20 DEBUG Visiting attribute path : client.lastName
w2022-03-15 01:05:20 DEBUG Visiting attribute path : client.login
w2022-03-15 01:05:20 DEBUG Visiting attribute path : client.password
w2022-03-15 01:05:20 DEBUG Visiting attribute path : client.role
w2022-03-15 01:05:20 DEBUG Visiting attribute path : status
w2022-03-15 01:05:20 DEBUG Visiting attribute path : support
w2022-03-15 01:05:20 DEBUG Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@162e8128]
w2022-03-15 01:05:20 DEBUG Visiting attribute path : support.firstName
w2022-03-15 01:05:20 DEBUG Visiting attribute path : support.lastName
w2022-03-15 01:05:20 DEBUG Visiting attribute path : support.login
w2022-03-15 01:05:20 DEBUG Visiting attribute path : support.password
w2022-03-15 01:05:20 DEBUG Visiting attribute path : support.role
w2022-03-15 01:05:20 DEBUG Visiting attribute path : title
w2022-03-15 01:05:20 DEBUG Building LoadPlan...
w2022-03-15 01:05:20 DEBUG processing queryspace <gen:0>
w2022-03-15 01:05:20 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.Ticket)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.Ticket, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.Ticket)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:1>, path=ru.edu.helpdesk.entity.Ticket.client)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:2>, path=ru.edu.helpdesk.entity.Ticket.support)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.Ticket)
          - SQL table alias mapping - ticket0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(client)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
          - JOIN (JoinDefinedByMetadata(support)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user2_
                - alias suffix - 2_
                - suffixed key columns - {id1_2_2_}

w2022-03-15 01:05:20 DEBUG Static select for entity ru.edu.helpdesk.entity.Ticket [NONE]: select ticket0_.id as id1_1_0_, ticket0_.client_id as client_i4_1_0_, ticket0_.status as status2_1_0_, ticket0_.support_id as support_5_1_0_, ticket0_.title as title3_1_0_, user1_.id as id1_2_1_, user1_.first_name as first_na2_2_1_, user1_.last_name as last_nam3_2_1_, user1_.login as login4_2_1_, user1_.password as password5_2_1_, user1_.role as role6_2_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id left outer join user user2_ on ticket0_.support_id=user2_.id where ticket0_.id=?
w2022-03-15 01:05:20 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.Comment
w2022-03-15 01:05:20 DEBUG  Version select: select id from comment where id =?
w2022-03-15 01:05:20 DEBUG  Snapshot select: select comment_.id, comment_.message as message2_0_, comment_.ticket_id as ticket_i3_0_, comment_.user_id as user_id4_0_ from comment comment_ where comment_.id=?
w2022-03-15 01:05:20 DEBUG  Insert 0: insert into comment (message, ticket_id, user_id, id) values (?, ?, ?, ?)
w2022-03-15 01:05:20 DEBUG  Update 0: update comment set message=?, ticket_id=?, user_id=? where id=?
w2022-03-15 01:05:20 DEBUG  Delete 0: delete from comment where id=?
w2022-03-15 01:05:20 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57b97c17]
w2022-03-15 01:05:20 DEBUG Visiting attribute path : message
w2022-03-15 01:05:20 DEBUG Visiting attribute path : ticket
w2022-03-15 01:05:20 DEBUG Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38a39439]
w2022-03-15 01:05:20 DEBUG Visiting attribute path : ticket.client
w2022-03-15 01:05:20 DEBUG Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@108b3d15]
w2022-03-15 01:05:20 DEBUG Visiting attribute path : ticket.client.firstName
w2022-03-15 01:05:20 DEBUG Visiting attribute path : ticket.client.lastName
w2022-03-15 01:05:20 DEBUG Visiting attribute path : ticket.client.login
w2022-03-15 01:05:20 DEBUG Visiting attribute path : ticket.client.password
w2022-03-15 01:05:20 DEBUG Visiting attribute path : ticket.client.role
w2022-03-15 01:05:20 DEBUG Visiting attribute path : ticket.status
w2022-03-15 01:05:20 DEBUG Visiting attribute path : ticket.support
w2022-03-15 01:05:20 DEBUG Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f7eaf1e]
w2022-03-15 01:05:20 DEBUG Visiting attribute path : ticket.support.firstName
w2022-03-15 01:05:20 DEBUG Visiting attribute path : ticket.support.lastName
w2022-03-15 01:05:20 DEBUG Visiting attribute path : ticket.support.login
w2022-03-15 01:05:20 DEBUG Visiting attribute path : ticket.support.password
w2022-03-15 01:05:20 DEBUG Visiting attribute path : ticket.support.role
w2022-03-15 01:05:20 DEBUG Visiting attribute path : ticket.title
w2022-03-15 01:05:20 DEBUG Visiting attribute path : user
w2022-03-15 01:05:20 DEBUG Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f694b3f]
w2022-03-15 01:05:20 DEBUG Visiting attribute path : user.firstName
w2022-03-15 01:05:20 DEBUG Visiting attribute path : user.lastName
w2022-03-15 01:05:20 DEBUG Visiting attribute path : user.login
w2022-03-15 01:05:20 DEBUG Visiting attribute path : user.password
w2022-03-15 01:05:20 DEBUG Visiting attribute path : user.role
w2022-03-15 01:05:20 DEBUG Building LoadPlan...
w2022-03-15 01:05:20 DEBUG processing queryspace <gen:0>
w2022-03-15 01:05:20 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.Comment)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.Comment, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.Comment)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.Ticket, querySpaceUid=<gen:1>, path=ru.edu.helpdesk.entity.Comment.ticket)
             - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:2>, path=ru.edu.helpdesk.entity.Comment.ticket.client)
             - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:3>, path=ru.edu.helpdesk.entity.Comment.ticket.support)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:4>, path=ru.edu.helpdesk.entity.Comment.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(ticket)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ru.edu.helpdesk.entity.Ticket)
                - SQL table alias mapping - ticket1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(client)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=ru.edu.helpdesk.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}
                - JOIN (JoinDefinedByMetadata(support)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=ru.edu.helpdesk.entity.User)
                      - SQL table alias mapping - user3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_2_3_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user4_
                - alias suffix - 4_
                - suffixed key columns - {id1_2_4_}

w2022-03-15 01:05:20 DEBUG Static select for entity ru.edu.helpdesk.entity.Comment [NONE]: select comment0_.id as id1_0_0_, comment0_.message as message2_0_0_, comment0_.ticket_id as ticket_i3_0_0_, comment0_.user_id as user_id4_0_0_, ticket1_.id as id1_1_1_, ticket1_.client_id as client_i4_1_1_, ticket1_.status as status2_1_1_, ticket1_.support_id as support_5_1_1_, ticket1_.title as title3_1_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_, user3_.id as id1_2_3_, user3_.first_name as first_na2_2_3_, user3_.last_name as last_nam3_2_3_, user3_.login as login4_2_3_, user3_.password as password5_2_3_, user3_.role as role6_2_3_, user4_.id as id1_2_4_, user4_.first_name as first_na2_2_4_, user4_.last_name as last_nam3_2_4_, user4_.login as login4_2_4_, user4_.password as password5_2_4_, user4_.role as role6_2_4_ from comment comment0_ left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id left outer join user user2_ on ticket1_.client_id=user2_.id left outer join user user3_ on ticket1_.support_id=user3_.id left outer join user user4_ on comment0_.user_id=user4_.id where comment0_.id=?
w2022-03-15 01:05:20 DEBUG drop table if exists comment
w2022-03-15 01:05:20 DEBUG drop table if exists hibernate_sequence
w2022-03-15 01:05:20 DEBUG drop table if exists ticket
w2022-03-15 01:05:20 DEBUG drop table if exists user
w2022-03-15 01:05:20 DEBUG create table comment (id bigint not null, message varchar(255) not null, ticket_id bigint, user_id bigint, primary key (id))
w2022-03-15 01:05:20 DEBUG create table hibernate_sequence (next_val bigint)
w2022-03-15 01:05:20 DEBUG insert into hibernate_sequence values ( 1 )
w2022-03-15 01:05:20 DEBUG create table ticket (id bigint not null, status integer, title varchar(255) not null, client_id bigint, support_id bigint, primary key (id))
w2022-03-15 01:05:20 DEBUG create table user (id bigint not null, first_name varchar(255), last_name varchar(255), login varchar(255) not null, password varchar(255) not null, role integer, primary key (id))
w2022-03-15 01:05:20 INFO  HHH000476: Executing import script 'file:/C:/Users/%d0%9e%d0%bb%d1%8c%d0%b3%d0%b0/Desktop/Java/Project/Project1/helpdeskproject/target/classes/data/import.sql'
w2022-03-15 01:05:20 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (1, 'admin', 'admin', 'admin', 'admin', 0)
w2022-03-15 01:05:20 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (2, 'support', 'support', 'support', 'support', 1)
w2022-03-15 01:05:20 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (3, 'user1', 'user1', 'user1', 'user1', 2)
w2022-03-15 01:05:20 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (4, 'user2', 'user2', 'user2', 'user2', 2)
w2022-03-15 01:05:20 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (1, 1, 'Hello user1',1, 2)
w2022-03-15 01:05:20 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (2, 0, 'Title2', 1, NULL)
w2022-03-15 01:05:20 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (3, 0, 'Message user2', 4, NULL)
w2022-03-15 01:05:20 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (1, "Hello ticket1", 1, 3)
w2022-03-15 01:05:20 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (2, "Hello ticket2", 2, 3)
w2022-03-15 01:05:20 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (3, "Hello ticket11", 1, 2)
w2022-03-15 01:05:20 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (4, "Hello ticket111", 1, 2)
w2022-03-15 01:05:20 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (5, "Hello ticket22", 2, 2)
w2022-03-15 01:05:20 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (6, "Hello ticket3", 3, 4)
w2022-03-15 01:05:20 DEBUG UPDATE hibernate_sequence SET next_val = 8 WHERE next_val = 1
w2022-03-15 01:05:20 INFO  HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
w2022-03-15 01:05:20 DEBUG Checking 0 named HQL queries
w2022-03-15 01:05:20 DEBUG Checking 0 named SQL queries
w2022-03-15 01:05:20 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 01:05:20 DEBUG Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5b21c3b8
w2022-03-15 01:05:20 DEBUG Registering SessionFactory: 324d34e4-73bf-4529-b3c3-0642bc491fdb (<unnamed>)
w2022-03-15 01:05:20 DEBUG Not binding SessionFactory to JNDI, no JNDI name configured
w2022-03-15 01:05:20 DEBUG Statistics initialized [enabled=false]
w2022-03-15 01:05:20 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 01:05:20 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 01:05:20 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 01:05:28 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 01:05:28 DEBUG begin
w2022-03-15 01:05:28 DEBUG committing
w2022-03-15 01:05:28 DEBUG Initializing proxy: [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 01:05:28 DEBUG select ticket0_.id as id1_1_0_, ticket0_.client_id as client_i4_1_0_, ticket0_.status as status2_1_0_, ticket0_.support_id as support_5_1_0_, ticket0_.title as title3_1_0_, user1_.id as id1_2_1_, user1_.first_name as first_na2_2_1_, user1_.last_name as last_nam3_2_1_, user1_.login as login4_2_1_, user1_.password as password5_2_1_, user1_.role as role6_2_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id left outer join user user2_ on ticket0_.support_id=user2_.id where ticket0_.id=?
w2022-03-15 01:05:28 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 01:05:28 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 01:05:28 DEBUG Processing attribute `client` : value = 1
w2022-03-15 01:05:28 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 01:05:28 DEBUG Processing attribute `status` : value = WORKING
w2022-03-15 01:05:28 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 01:05:28 DEBUG Processing attribute `support` : value = 2
w2022-03-15 01:05:28 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 01:05:28 DEBUG Processing attribute `title` : value = Hello user1
w2022-03-15 01:05:28 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 01:05:28 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 01:05:28 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#1]
w2022-03-15 01:05:28 DEBUG Processing attribute `firstName` : value = admin
w2022-03-15 01:05:28 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 01:05:28 DEBUG Processing attribute `lastName` : value = admin
w2022-03-15 01:05:28 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 01:05:28 DEBUG Processing attribute `login` : value = admin
w2022-03-15 01:05:28 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 01:05:28 DEBUG Processing attribute `password` : value = admin
w2022-03-15 01:05:28 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 01:05:28 DEBUG Processing attribute `role` : value = ADMIN
w2022-03-15 01:05:28 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 01:05:28 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#1]
w2022-03-15 01:05:28 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#2]
w2022-03-15 01:05:28 DEBUG Processing attribute `firstName` : value = support
w2022-03-15 01:05:28 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 01:05:28 DEBUG Processing attribute `lastName` : value = support
w2022-03-15 01:05:28 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 01:05:28 DEBUG Processing attribute `login` : value = support
w2022-03-15 01:05:28 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 01:05:28 DEBUG Processing attribute `password` : value = support
w2022-03-15 01:05:28 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 01:05:28 DEBUG Processing attribute `role` : value = SUPPORT
w2022-03-15 01:05:28 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 01:05:28 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#2]
w2022-03-15 01:05:28 DEBUG Done entity load : ru.edu.helpdesk.entity.Ticket#1
w2022-03-15 01:06:20 DEBUG Logging Provider: org.jboss.logging.Log4j2LoggerProvider
w2022-03-15 01:06:21 DEBUG PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@654de1dc
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/%d0%9e%d0%bb%d1%8c%d0%b3%d0%b0/Desktop/Java/Project/Project1/helpdeskproject/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		ru.edu.helpdesk.entity.Comment
		ru.edu.helpdesk.entity.Ticket
		ru.edu.helpdesk.entity.User]
	Mapping files names []
	Properties []
w2022-03-15 01:06:21 DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
w2022-03-15 01:06:21 DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
w2022-03-15 01:06:21 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
w2022-03-15 01:06:21 INFO  HHH000412: Hibernate ORM core version 5.6.5.Final
w2022-03-15 01:06:21 DEBUG HHH000206: hibernate.properties not found
w2022-03-15 01:06:21 DEBUG Overriding existing service binding [org.hibernate.secure.spi.JaccService]
w2022-03-15 01:06:21 DEBUG Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
w2022-03-15 01:06:21 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
w2022-03-15 01:06:21 INFO  HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
w2022-03-15 01:06:21 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@3cfdb43c
w2022-03-15 01:06:21 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@3cfdb43c
w2022-03-15 01:06:21 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3cfdb43c
w2022-03-15 01:06:21 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1189a4b
w2022-03-15 01:06:21 DEBUG Adding type registration true_false -> org.hibernate.type.TrueFalseType@305b8163
w2022-03-15 01:06:21 DEBUG Adding type registration yes_no -> org.hibernate.type.YesNoType@d613e08
w2022-03-15 01:06:21 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@68782b37
w2022-03-15 01:06:21 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@68782b37
w2022-03-15 01:06:21 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@68782b37
w2022-03-15 01:06:21 DEBUG Adding type registration character -> org.hibernate.type.CharacterType@4ebed4c7
w2022-03-15 01:06:21 DEBUG Adding type registration char -> org.hibernate.type.CharacterType@4ebed4c7
w2022-03-15 01:06:21 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4ebed4c7
w2022-03-15 01:06:21 DEBUG Adding type registration short -> org.hibernate.type.ShortType@21ab6340
w2022-03-15 01:06:21 DEBUG Adding type registration short -> org.hibernate.type.ShortType@21ab6340
w2022-03-15 01:06:21 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.ShortType@21ab6340
w2022-03-15 01:06:21 DEBUG Adding type registration integer -> org.hibernate.type.IntegerType@1f203505
w2022-03-15 01:06:21 DEBUG Adding type registration int -> org.hibernate.type.IntegerType@1f203505
w2022-03-15 01:06:21 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1f203505
w2022-03-15 01:06:21 DEBUG Adding type registration long -> org.hibernate.type.LongType@2ad68501
w2022-03-15 01:06:21 DEBUG Adding type registration long -> org.hibernate.type.LongType@2ad68501
w2022-03-15 01:06:21 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.LongType@2ad68501
w2022-03-15 01:06:21 DEBUG Adding type registration float -> org.hibernate.type.FloatType@3012c036
w2022-03-15 01:06:21 DEBUG Adding type registration float -> org.hibernate.type.FloatType@3012c036
w2022-03-15 01:06:21 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3012c036
w2022-03-15 01:06:21 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@90e51f9
w2022-03-15 01:06:21 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@90e51f9
w2022-03-15 01:06:21 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@90e51f9
w2022-03-15 01:06:21 DEBUG Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4dc6aef2
w2022-03-15 01:06:21 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4dc6aef2
w2022-03-15 01:06:21 DEBUG Adding type registration big_integer -> org.hibernate.type.BigIntegerType@53150c41
w2022-03-15 01:06:21 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@53150c41
w2022-03-15 01:06:21 DEBUG Adding type registration string -> org.hibernate.type.StringType@7d13ddc3
w2022-03-15 01:06:21 DEBUG Adding type registration java.lang.String -> org.hibernate.type.StringType@7d13ddc3
w2022-03-15 01:06:21 DEBUG Adding type registration nstring -> org.hibernate.type.StringNVarcharType@66a14cf0
w2022-03-15 01:06:21 DEBUG Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2cb156bc
w2022-03-15 01:06:21 DEBUG Adding type registration url -> org.hibernate.type.UrlType@469c890e
w2022-03-15 01:06:21 DEBUG Adding type registration java.net.URL -> org.hibernate.type.UrlType@469c890e
w2022-03-15 01:06:21 DEBUG Adding type registration Duration -> org.hibernate.type.DurationType@599e2cd4
w2022-03-15 01:06:21 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.DurationType@599e2cd4
w2022-03-15 01:06:21 DEBUG Adding type registration Instant -> org.hibernate.type.InstantType@223c3ba3
w2022-03-15 01:06:21 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.InstantType@223c3ba3
w2022-03-15 01:06:21 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@560a8a44
w2022-03-15 01:06:21 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@560a8a44
w2022-03-15 01:06:21 DEBUG Adding type registration LocalDate -> org.hibernate.type.LocalDateType@48412246
w2022-03-15 01:06:21 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@48412246
w2022-03-15 01:06:21 DEBUG Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@100a624f
w2022-03-15 01:06:21 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@100a624f
w2022-03-15 01:06:21 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3cc628d7
w2022-03-15 01:06:21 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3cc628d7
w2022-03-15 01:06:21 DEBUG Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@506da2aa
w2022-03-15 01:06:21 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@506da2aa
w2022-03-15 01:06:21 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7705466f
w2022-03-15 01:06:21 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7705466f
w2022-03-15 01:06:21 DEBUG Adding type registration date -> org.hibernate.type.DateType@1008e98
w2022-03-15 01:06:21 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.DateType@1008e98
w2022-03-15 01:06:21 DEBUG Adding type registration time -> org.hibernate.type.TimeType@3cad184
w2022-03-15 01:06:21 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3cad184
w2022-03-15 01:06:21 DEBUG Adding type registration timestamp -> org.hibernate.type.TimestampType@4becec35
w2022-03-15 01:06:21 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4becec35
w2022-03-15 01:06:21 DEBUG Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4becec35
w2022-03-15 01:06:21 DEBUG Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7af58886
w2022-03-15 01:06:21 DEBUG Adding type registration calendar -> org.hibernate.type.CalendarType@7bf6e190
w2022-03-15 01:06:21 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7bf6e190
w2022-03-15 01:06:21 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7bf6e190
w2022-03-15 01:06:21 DEBUG Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@73970581
w2022-03-15 01:06:21 DEBUG Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@685aa6aa
w2022-03-15 01:06:21 DEBUG Adding type registration locale -> org.hibernate.type.LocaleType@632fbf64
w2022-03-15 01:06:21 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@632fbf64
w2022-03-15 01:06:21 DEBUG Adding type registration currency -> org.hibernate.type.CurrencyType@5d46cf63
w2022-03-15 01:06:21 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5d46cf63
w2022-03-15 01:06:21 DEBUG Adding type registration timezone -> org.hibernate.type.TimeZoneType@3a692110
w2022-03-15 01:06:21 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3a692110
w2022-03-15 01:06:21 DEBUG Adding type registration class -> org.hibernate.type.ClassType@aa1d5f5
w2022-03-15 01:06:21 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.ClassType@aa1d5f5
w2022-03-15 01:06:21 DEBUG Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@524e5f03
w2022-03-15 01:06:21 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@524e5f03
w2022-03-15 01:06:21 DEBUG Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4186b460
w2022-03-15 01:06:21 DEBUG Adding type registration binary -> org.hibernate.type.BinaryType@7f385571
w2022-03-15 01:06:21 DEBUG Adding type registration byte[] -> org.hibernate.type.BinaryType@7f385571
w2022-03-15 01:06:21 DEBUG Adding type registration [B -> org.hibernate.type.BinaryType@7f385571
w2022-03-15 01:06:21 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4a5dbb25
w2022-03-15 01:06:21 DEBUG Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4a5dbb25
w2022-03-15 01:06:21 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4a5dbb25
w2022-03-15 01:06:21 DEBUG Adding type registration row_version -> org.hibernate.type.RowVersionType@56fdc79e
w2022-03-15 01:06:21 DEBUG Adding type registration image -> org.hibernate.type.ImageType@4e357424
w2022-03-15 01:06:21 DEBUG Adding type registration characters -> org.hibernate.type.CharArrayType@12c3322a
w2022-03-15 01:06:21 DEBUG Adding type registration char[] -> org.hibernate.type.CharArrayType@12c3322a
w2022-03-15 01:06:21 DEBUG Adding type registration [C -> org.hibernate.type.CharArrayType@12c3322a
w2022-03-15 01:06:21 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2218e22b
w2022-03-15 01:06:21 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2218e22b
w2022-03-15 01:06:21 DEBUG Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2218e22b
w2022-03-15 01:06:21 DEBUG Adding type registration text -> org.hibernate.type.TextType@6e2e31ef
w2022-03-15 01:06:21 DEBUG Adding type registration ntext -> org.hibernate.type.NTextType@506717a0
w2022-03-15 01:06:21 DEBUG Adding type registration blob -> org.hibernate.type.BlobType@4c3ac3dd
w2022-03-15 01:06:21 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4c3ac3dd
w2022-03-15 01:06:21 DEBUG Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4d23eeaa
w2022-03-15 01:06:21 DEBUG Adding type registration clob -> org.hibernate.type.ClobType@347e2560
w2022-03-15 01:06:21 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@347e2560
w2022-03-15 01:06:21 DEBUG Adding type registration nclob -> org.hibernate.type.NClobType@d70b320
w2022-03-15 01:06:21 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@d70b320
w2022-03-15 01:06:21 DEBUG Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@8861d6e
w2022-03-15 01:06:21 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@531c6a7e
w2022-03-15 01:06:21 DEBUG Adding type registration serializable -> org.hibernate.type.SerializableType@a869198
w2022-03-15 01:06:21 DEBUG Adding type registration object -> org.hibernate.type.ObjectType@1416dbae
w2022-03-15 01:06:21 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1416dbae
w2022-03-15 01:06:21 DEBUG Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6b871606
w2022-03-15 01:06:21 DEBUG Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@49ee6b73
w2022-03-15 01:06:21 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@71c03504
w2022-03-15 01:06:21 DEBUG Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@65775129
w2022-03-15 01:06:21 DEBUG Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@36934ca7
w2022-03-15 01:06:21 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@c1c1cf5
w2022-03-15 01:06:21 DEBUG Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7c847067
w2022-03-15 01:06:21 DEBUG Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@23a598c7
w2022-03-15 01:06:21 INFO  HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
w2022-03-15 01:06:21 DEBUG Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@4897205e] into BootstrapContext; was [null]
w2022-03-15 01:06:21 DEBUG ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@4897205e) [was null]
w2022-03-15 01:06:21 DEBUG Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@253876d1] into BootstrapContext; was [null]
w2022-03-15 01:06:21 DEBUG Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@5ffb8729] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@208a9252]
w2022-03-15 01:06:21 DEBUG Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@4897205e]
w2022-03-15 01:06:21 DEBUG ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@4897205e]
w2022-03-15 01:06:21 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
w2022-03-15 01:06:21 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
w2022-03-15 01:06:21 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
w2022-03-15 01:06:21 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
w2022-03-15 01:06:21 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
w2022-03-15 01:06:21 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
w2022-03-15 01:06:21 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
w2022-03-15 01:06:21 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
w2022-03-15 01:06:21 DEBUG Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
w2022-03-15 01:06:21 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
w2022-03-15 01:06:21 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
w2022-03-15 01:06:21 DEBUG Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
w2022-03-15 01:06:21 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
w2022-03-15 01:06:21 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
w2022-03-15 01:06:21 DEBUG Database ->
       name : SQLite
    version : 3.36.0
      major : 3
      minor : 36
w2022-03-15 01:06:21 DEBUG Driver ->
       name : SQLite JDBC
    version : 3.36.0.3
      major : 3
      minor : 36
w2022-03-15 01:06:21 DEBUG JDBC version : 2.1
w2022-03-15 01:06:21 INFO  HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
w2022-03-15 01:06:21 DEBUG JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
w2022-03-15 01:06:21 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
w2022-03-15 01:06:21 DEBUG HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [2] less than 4
w2022-03-15 01:06:21 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@28bcfd4a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@496f774e]
w2022-03-15 01:06:21 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
w2022-03-15 01:06:21 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.Comment
w2022-03-15 01:06:21 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 01:06:21 DEBUG Import with entity name Comment
w2022-03-15 01:06:21 DEBUG Bind entity ru.edu.helpdesk.entity.Comment on table comment
w2022-03-15 01:06:21 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 01:06:21 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Comment] is safe
w2022-03-15 01:06:21 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Comment
w2022-03-15 01:06:21 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 01:06:21 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Comment:id]
w2022-03-15 01:06:21 DEBUG building SimpleValue for id
w2022-03-15 01:06:21 DEBUG Building property id
w2022-03-15 01:06:21 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 01:06:21 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=message, insertable=true, updatable=true, unique=false}
w2022-03-15 01:06:21 DEBUG MetadataSourceProcessor property message with lazy=false
w2022-03-15 01:06:21 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Comment:message]
w2022-03-15 01:06:21 DEBUG building SimpleValue for message
w2022-03-15 01:06:21 DEBUG Building property message
w2022-03-15 01:06:21 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 01:06:21 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=ticket, insertable=true, updatable=true, unique=false}
w2022-03-15 01:06:21 DEBUG Building property ticket
w2022-03-15 01:06:21 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 01:06:21 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=user, insertable=true, updatable=true, unique=false}
w2022-03-15 01:06:21 DEBUG Building property user
w2022-03-15 01:06:21 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 01:06:21 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 01:06:21 DEBUG Import with entity name Ticket
w2022-03-15 01:06:21 DEBUG Bind entity ru.edu.helpdesk.entity.Ticket on table ticket
w2022-03-15 01:06:21 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 01:06:21 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Ticket] is safe
w2022-03-15 01:06:21 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Ticket
w2022-03-15 01:06:21 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 01:06:21 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:id]
w2022-03-15 01:06:21 DEBUG building SimpleValue for id
w2022-03-15 01:06:21 DEBUG Building property id
w2022-03-15 01:06:21 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 01:06:21 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 01:06:21 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=client, insertable=true, updatable=true, unique=false}
w2022-03-15 01:06:21 DEBUG Building property client
w2022-03-15 01:06:21 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=status, insertable=true, updatable=true, unique=false}
w2022-03-15 01:06:21 DEBUG MetadataSourceProcessor property status with lazy=false
w2022-03-15 01:06:21 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:status]
w2022-03-15 01:06:21 DEBUG building SimpleValue for status
w2022-03-15 01:06:21 DEBUG Building property status
w2022-03-15 01:06:21 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 01:06:21 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=support, insertable=true, updatable=true, unique=false}
w2022-03-15 01:06:21 DEBUG Building property support
w2022-03-15 01:06:21 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=title, insertable=true, updatable=true, unique=false}
w2022-03-15 01:06:21 DEBUG MetadataSourceProcessor property title with lazy=false
w2022-03-15 01:06:21 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:title]
w2022-03-15 01:06:21 DEBUG building SimpleValue for title
w2022-03-15 01:06:21 DEBUG Building property title
w2022-03-15 01:06:21 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.User
w2022-03-15 01:06:21 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 01:06:21 DEBUG Import with entity name User
w2022-03-15 01:06:21 DEBUG Bind entity ru.edu.helpdesk.entity.User on table user
w2022-03-15 01:06:21 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 01:06:21 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.User] is safe
w2022-03-15 01:06:21 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.User
w2022-03-15 01:06:21 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 01:06:21 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:id]
w2022-03-15 01:06:21 DEBUG building SimpleValue for id
w2022-03-15 01:06:21 DEBUG Building property id
w2022-03-15 01:06:21 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 01:06:21 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
w2022-03-15 01:06:21 DEBUG MetadataSourceProcessor property firstName with lazy=false
w2022-03-15 01:06:21 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:firstName]
w2022-03-15 01:06:21 DEBUG building SimpleValue for firstName
w2022-03-15 01:06:21 DEBUG Building property firstName
w2022-03-15 01:06:21 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
w2022-03-15 01:06:21 DEBUG MetadataSourceProcessor property lastName with lazy=false
w2022-03-15 01:06:21 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:lastName]
w2022-03-15 01:06:21 DEBUG building SimpleValue for lastName
w2022-03-15 01:06:21 DEBUG Building property lastName
w2022-03-15 01:06:21 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=login, insertable=true, updatable=true, unique=false}
w2022-03-15 01:06:21 DEBUG MetadataSourceProcessor property login with lazy=false
w2022-03-15 01:06:21 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:login]
w2022-03-15 01:06:21 DEBUG building SimpleValue for login
w2022-03-15 01:06:21 DEBUG Building property login
w2022-03-15 01:06:21 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
w2022-03-15 01:06:21 DEBUG MetadataSourceProcessor property password with lazy=false
w2022-03-15 01:06:21 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:password]
w2022-03-15 01:06:21 DEBUG building SimpleValue for password
w2022-03-15 01:06:21 DEBUG Building property password
w2022-03-15 01:06:21 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=role, insertable=true, updatable=true, unique=false}
w2022-03-15 01:06:21 DEBUG MetadataSourceProcessor property role with lazy=false
w2022-03-15 01:06:21 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:role]
w2022-03-15 01:06:21 DEBUG building SimpleValue for role
w2022-03-15 01:06:21 DEBUG Building property role
w2022-03-15 01:06:21 DEBUG Starting fillSimpleValue for id
w2022-03-15 01:06:21 DEBUG Starting fillSimpleValue for message
w2022-03-15 01:06:21 DEBUG Starting fillSimpleValue for id
w2022-03-15 01:06:21 DEBUG Starting fillSimpleValue for status
w2022-03-15 01:06:21 DEBUG Starting fillSimpleValue for title
w2022-03-15 01:06:21 DEBUG Starting fillSimpleValue for id
w2022-03-15 01:06:21 DEBUG Starting fillSimpleValue for firstName
w2022-03-15 01:06:21 DEBUG Starting fillSimpleValue for lastName
w2022-03-15 01:06:21 DEBUG Starting fillSimpleValue for login
w2022-03-15 01:06:21 DEBUG Starting fillSimpleValue for password
w2022-03-15 01:06:21 DEBUG Starting fillSimpleValue for role
w2022-03-15 01:06:21 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [comment]
w2022-03-15 01:06:21 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [ticket]
w2022-03-15 01:06:21 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [user]
w2022-03-15 01:06:21 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 01:06:21 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 01:06:21 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 01:06:21 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 01:06:21 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 01:06:21 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 01:06:21 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 01:06:21 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 01:06:21 DEBUG Building session factory
w2022-03-15 01:06:21 DEBUG SessionFactory name : null
w2022-03-15 01:06:21 DEBUG Automatic flush during beforeCompletion(): enabled
w2022-03-15 01:06:21 DEBUG Automatic session close at end of transaction: disabled
w2022-03-15 01:06:21 DEBUG Statistics: disabled
w2022-03-15 01:06:21 DEBUG Deleted entity synthetic identifier rollback: disabled
w2022-03-15 01:06:21 DEBUG Default entity-mode: pojo
w2022-03-15 01:06:21 DEBUG Check Nullability in Core (should be disabled when Bean Validation is on): enabled
w2022-03-15 01:06:21 DEBUG Allow initialization of lazy state outside session : disabled
w2022-03-15 01:06:21 DEBUG Using BatchFetchStyle : LEGACY
w2022-03-15 01:06:21 DEBUG Default batch fetch size: -1
w2022-03-15 01:06:21 DEBUG Maximum outer join fetch depth: null
w2022-03-15 01:06:21 DEBUG Default null ordering: NONE
w2022-03-15 01:06:21 DEBUG Order SQL updates by primary key: disabled
w2022-03-15 01:06:21 DEBUG Order SQL inserts for batching: disabled
w2022-03-15 01:06:21 DEBUG multi-tenancy strategy : NONE
w2022-03-15 01:06:21 DEBUG JTA Track by Thread: enabled
w2022-03-15 01:06:21 DEBUG Query language substitutions: {}
w2022-03-15 01:06:21 DEBUG Named query checking : enabled
w2022-03-15 01:06:21 DEBUG Second-level cache: disabled
w2022-03-15 01:06:21 DEBUG Second-level query cache: disabled
w2022-03-15 01:06:21 DEBUG Second-level query cache factory: null
w2022-03-15 01:06:21 DEBUG Second-level cache region prefix: null
w2022-03-15 01:06:21 DEBUG Optimize second-level cache for minimal puts: disabled
w2022-03-15 01:06:21 DEBUG Structured second-level cache entries: disabled
w2022-03-15 01:06:21 DEBUG Second-level cache direct-reference entries: disabled
w2022-03-15 01:06:21 DEBUG Automatic eviction of collection cache: disabled
w2022-03-15 01:06:21 DEBUG JDBC batch size: 1
w2022-03-15 01:06:21 DEBUG JDBC batch updates for versioned data: enabled
w2022-03-15 01:06:21 DEBUG Scrollable result sets: disabled
w2022-03-15 01:06:21 DEBUG Wrap result sets: disabled
w2022-03-15 01:06:21 DEBUG JDBC3 getGeneratedKeys(): enabled
w2022-03-15 01:06:21 DEBUG JDBC result set fetch size: null
w2022-03-15 01:06:21 DEBUG Connection release mode: ON_CLOSE
w2022-03-15 01:06:21 DEBUG Generate SQL with comments: disabled
w2022-03-15 01:06:21 DEBUG JPA compliance - query : disabled
w2022-03-15 01:06:21 DEBUG JPA compliance - closed-handling : disabled
w2022-03-15 01:06:21 DEBUG JPA compliance - lists : disabled
w2022-03-15 01:06:21 DEBUG JPA compliance - transactions : disabled
w2022-03-15 01:06:21 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 01:06:21 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 01:06:21 DEBUG Session factory constructed with filter configurations : {}
w2022-03-15 01:06:21 DEBUG Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=true, java.specification.version=1.8, file.encoding.pkg=sun.io, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@455c1a3a, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.SQLiteDialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\charsets.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\cldrdata.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\dnsns.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\jaccess.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\localedata.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\nashorn.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunec.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunmscapi.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\zipfs.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jce.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jfr.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jsse.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\management-agent.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\resources.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\rt.jar;C:\Users\Ольга\Desktop\Java\Project\Project1\helpdeskproject\target\classes;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\2.6.4\spring-boot-starter-data-jpa-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\2.6.4\spring-boot-starter-jdbc-2.6.4.jar;C:\Users\Ольга\.m2\repository\com\zaxxer\HikariCP\4.0.3\HikariCP-4.0.3.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-jdbc\5.3.16\spring-jdbc-5.3.16.jar;C:\Users\Ольга\.m2\repository\jakarta\transaction\jakarta.transaction-api\1.3.3\jakarta.transaction-api-1.3.3.jar;C:\Users\Ольга\.m2\repository\jakarta\persistence\jakarta.persistence-api\2.2.3\jakarta.persistence-api-2.2.3.jar;C:\Users\Ольга\.m2\repository\org\hibernate\hibernate-core\5.6.5.Final\hibernate-core-5.6.5.Final.jar;C:\Users\Ольга\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy\1.11.22\byte-buddy-1.11.22.jar;C:\Users\Ольга\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ольга\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Ольга\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.6\jaxb-runtime-2.3.6.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\txw2\2.3.6\txw2-2.3.6.jar;C:\Users\Ольга\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.12\istack-commons-runtime-3.0.12.jar;C:\Users\Ольга\.m2\repository\com\sun\activation\jakarta.activation\1.2.2\jakarta.activation-1.2.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\data\spring-data-jpa\2.6.2\spring-data-jpa-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\data\spring-data-commons\2.6.2\spring-data-commons-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-orm\5.3.16\spring-orm-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-context\5.3.16\spring-context-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-tx\5.3.16\spring-tx-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-beans\5.3.16\spring-beans-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-aspects\5.3.16\spring-aspects-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-security\2.6.4\spring-boot-starter-security-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter\2.6.4\spring-boot-starter-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-logging\2.6.4\spring-boot-starter-logging-2.6.4.jar;C:\Users\Ольга\.m2\repository\ch\qos\logback\logback-classic\1.2.10\logback-classic-1.2.10.jar;C:\Users\Ольга\.m2\repository\ch\qos\logback\logback-core\1.2.10\logback-core-1.2.10.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.17.1\log4j-to-slf4j-2.17.1.jar;C:\Users\Ольга\.m2\repository\org\slf4j\jul-to-slf4j\1.7.36\jul-to-slf4j-1.7.36.jar;C:\Users\Ольга\.m2\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;C:\Users\Ольга\.m2\repository\org\yaml\snakeyaml\1.29\snakeyaml-1.29.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-aop\5.3.16\spring-aop-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-config\5.6.2\spring-security-config-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-web\5.6.2\spring-security-web-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-expression\5.3.16\spring-expression-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-web\2.6.4\spring-boot-starter-web-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-json\2.6.4\spring-boot-starter-json-2.6.4.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.13.1\jackson-datatype-jdk8-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.13.1\jackson-datatype-jsr310-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.13.1\jackson-module-parameter-names-2.13.1.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\2.6.4\spring-boot-starter-tomcat-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.58\tomcat-embed-core-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\9.0.58\tomcat-embed-el-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.58\tomcat-embed-websocket-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-web\5.3.16\spring-web-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-webmvc\5.3.16\spring-webmvc-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-devtools\2.6.4\spring-boot-devtools-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot\2.6.4\spring-boot-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\2.6.4\spring-boot-autoconfigure-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\xerial\sqlite-jdbc\3.36.0.3\sqlite-jdbc-3.36.0.3.jar;C:\Users\Ольга\.m2\repository\com\zsoltfabok\sqlite-dialect\1.0\sqlite-dialect-1.0.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-aop\2.6.2\spring-boot-starter-aop-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\aspectj\aspectjweaver\1.9.7\aspectjweaver-1.9.7.jar;C:\Users\Ольга\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.3\jakarta.xml.bind-api-2.3.3.jar;C:\Users\Ольга\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.2\jakarta.activation-api-1.2.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-core\5.3.16\spring-core-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-jcl\5.3.16\spring-jcl-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-core\5.6.2\spring-security-core-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-crypto\5.6.2\spring-security-crypto-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\projectlombok\lombok\1.18.22\lombok-1.18.22.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\2.6.4\spring-boot-starter-thymeleaf-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\thymeleaf-spring5\3.0.15.RELEASE\thymeleaf-spring5-3.0.15.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\thymeleaf\3.0.15.RELEASE\thymeleaf-3.0.15.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\attoparser\attoparser\2.0.5.RELEASE\attoparser-2.0.5.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-java8time\3.0.4.RELEASE\thymeleaf-extras-java8time-3.0.4.RELEASE.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.1\jackson-databind-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.1\jackson-annotations-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.1\jackson-core-2.13.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-api\2.4.1\log4j-api-2.4.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-core\2.4.1\log4j-core-2.4.1.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.2\lib\idea_rt.jar, java.vm.vendor=Temurin, sun.arch.data.model=64, user.variant=, java.vendor.url=https://adoptium.net/, catalina.useNaming=false, user.timezone=Europe/Moscow, jakarta.persistence.sharedCache.mode=UNSPECIFIED, os.name=Windows 10, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), user.country=RU, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\bin, sun.java.command=ru.edu.helpdesk.HelpdeskApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@63eeb4e9, com.sun.management.jmxremote=, javax.persistence.sharedCache.mode=UNSPECIFIED, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, user.home=C:\Users\Ольга, user.language=ru, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre, file.separator=\, spring.output.ansi.enabled=always, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, sun.boot.class.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\resources.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\rt.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\sunrsasign.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jsse.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jce.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\charsets.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jfr.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\classes, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_312-b07, user.name=Эльдорадо, spring.jmx.enabled=true, path.separator=;, os.version=10.0, java.endorsed.dirs=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\endorsed, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=default, spring.beaninfo.ignore=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=C:\Users\134E~1\AppData\Local\Temp\, catalina.home=C:\Users\Ольга\AppData\Local\Temp\tomcat.8080.1434460696932774422, java.version=1.8.0_312, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\Ольга\Desktop\Java\Project\Project1\helpdeskproject, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=3492, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\Ольга\AppData\Local\Temp\tomcat.8080.1434460696932774422, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@5c116a85, java.library.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\windows\System32\OpenSSH\;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\Program Files\apache-maven-3.8.4\bin;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Ольга\AppData\Local\Microsoft\WindowsApps;C:\Users\Ольга\AppData\Local\Programs\Microsoft VS Code\bin;C:\SQLite;C:\Users\Ольга\AppData\Roaming\npm;C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.2\bin;;., java.vendor=Temurin, java.vm.info=mixed mode, java.vm.version=25.312-b07, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, java.ext.dirs=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext;C:\windows\Sun\Java\lib\ext, hibernate.connection.datasource=HikariDataSource (HikariPool-1), hibernate.hbm2ddl.import_files=data/import.sql, java.class.version=52.0}
w2022-03-15 01:06:21 DEBUG Skipping JACC integration as it was not enabled
w2022-03-15 01:06:21 DEBUG Using ORDINAL-based conversion for Enum ru.edu.helpdesk.entity.UserRole
w2022-03-15 01:06:21 DEBUG Using ORDINAL-based conversion for Enum ru.edu.helpdesk.entity.TicketStatus
w2022-03-15 01:06:21 DEBUG Instantiated session factory
w2022-03-15 01:06:21 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@28bcfd4a] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@4201c357]
w2022-03-15 01:06:21 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.User] is safe
w2022-03-15 01:06:21 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.User
w2022-03-15 01:06:21 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:06:21 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:06:21 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:06:21 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:06:21 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Ticket] is safe
w2022-03-15 01:06:21 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Ticket
w2022-03-15 01:06:21 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:06:21 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:06:21 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:06:21 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:06:21 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:06:21 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:06:21 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:06:21 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:06:21 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Comment] is safe
w2022-03-15 01:06:21 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Comment
w2022-03-15 01:06:21 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:06:21 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:06:21 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:06:21 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:06:21 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.User
w2022-03-15 01:06:21 DEBUG  Version select: select id from user where id =?
w2022-03-15 01:06:21 DEBUG  Snapshot select: select user_.id, user_.first_name as first_na2_2_, user_.last_name as last_nam3_2_, user_.login as login4_2_, user_.password as password5_2_, user_.role as role6_2_ from user user_ where user_.id=?
w2022-03-15 01:06:21 DEBUG  Insert 0: insert into user (first_name, last_name, login, password, role, id) values (?, ?, ?, ?, ?, ?)
w2022-03-15 01:06:21 DEBUG  Update 0: update user set first_name=?, last_name=?, login=?, password=?, role=? where id=?
w2022-03-15 01:06:21 DEBUG  Delete 0: delete from user where id=?
w2022-03-15 01:06:21 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57968fab]
w2022-03-15 01:06:21 DEBUG Visiting attribute path : firstName
w2022-03-15 01:06:21 DEBUG Visiting attribute path : lastName
w2022-03-15 01:06:21 DEBUG Visiting attribute path : login
w2022-03-15 01:06:21 DEBUG Visiting attribute path : password
w2022-03-15 01:06:21 DEBUG Visiting attribute path : role
w2022-03-15 01:06:21 DEBUG Building LoadPlan...
w2022-03-15 01:06:21 DEBUG processing queryspace <gen:0>
w2022-03-15 01:06:21 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.User)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

w2022-03-15 01:06:21 DEBUG Static select for entity ru.edu.helpdesk.entity.User [NONE]: select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 01:06:21 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.Ticket
w2022-03-15 01:06:21 DEBUG  Version select: select id from ticket where id =?
w2022-03-15 01:06:21 DEBUG  Snapshot select: select ticket_.id, ticket_.client_id as client_i4_1_, ticket_.status as status2_1_, ticket_.support_id as support_5_1_, ticket_.title as title3_1_ from ticket ticket_ where ticket_.id=?
w2022-03-15 01:06:21 DEBUG  Insert 0: insert into ticket (client_id, status, support_id, title, id) values (?, ?, ?, ?, ?)
w2022-03-15 01:06:21 DEBUG  Update 0: update ticket set client_id=?, status=?, support_id=?, title=? where id=?
w2022-03-15 01:06:21 DEBUG  Delete 0: delete from ticket where id=?
w2022-03-15 01:06:21 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ec63b03]
w2022-03-15 01:06:21 DEBUG Visiting attribute path : client
w2022-03-15 01:06:21 DEBUG Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5fba088c]
w2022-03-15 01:06:21 DEBUG Visiting attribute path : client.firstName
w2022-03-15 01:06:21 DEBUG Visiting attribute path : client.lastName
w2022-03-15 01:06:21 DEBUG Visiting attribute path : client.login
w2022-03-15 01:06:21 DEBUG Visiting attribute path : client.password
w2022-03-15 01:06:21 DEBUG Visiting attribute path : client.role
w2022-03-15 01:06:21 DEBUG Visiting attribute path : status
w2022-03-15 01:06:21 DEBUG Visiting attribute path : support
w2022-03-15 01:06:21 DEBUG Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49fed3f4]
w2022-03-15 01:06:21 DEBUG Visiting attribute path : support.firstName
w2022-03-15 01:06:21 DEBUG Visiting attribute path : support.lastName
w2022-03-15 01:06:21 DEBUG Visiting attribute path : support.login
w2022-03-15 01:06:21 DEBUG Visiting attribute path : support.password
w2022-03-15 01:06:21 DEBUG Visiting attribute path : support.role
w2022-03-15 01:06:21 DEBUG Visiting attribute path : title
w2022-03-15 01:06:21 DEBUG Building LoadPlan...
w2022-03-15 01:06:21 DEBUG processing queryspace <gen:0>
w2022-03-15 01:06:21 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.Ticket)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.Ticket, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.Ticket)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:1>, path=ru.edu.helpdesk.entity.Ticket.client)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:2>, path=ru.edu.helpdesk.entity.Ticket.support)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.Ticket)
          - SQL table alias mapping - ticket0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(client)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
          - JOIN (JoinDefinedByMetadata(support)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user2_
                - alias suffix - 2_
                - suffixed key columns - {id1_2_2_}

w2022-03-15 01:06:21 DEBUG Static select for entity ru.edu.helpdesk.entity.Ticket [NONE]: select ticket0_.id as id1_1_0_, ticket0_.client_id as client_i4_1_0_, ticket0_.status as status2_1_0_, ticket0_.support_id as support_5_1_0_, ticket0_.title as title3_1_0_, user1_.id as id1_2_1_, user1_.first_name as first_na2_2_1_, user1_.last_name as last_nam3_2_1_, user1_.login as login4_2_1_, user1_.password as password5_2_1_, user1_.role as role6_2_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id left outer join user user2_ on ticket0_.support_id=user2_.id where ticket0_.id=?
w2022-03-15 01:06:21 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.Comment
w2022-03-15 01:06:21 DEBUG  Version select: select id from comment where id =?
w2022-03-15 01:06:21 DEBUG  Snapshot select: select comment_.id, comment_.message as message2_0_, comment_.ticket_id as ticket_i3_0_, comment_.user_id as user_id4_0_ from comment comment_ where comment_.id=?
w2022-03-15 01:06:21 DEBUG  Insert 0: insert into comment (message, ticket_id, user_id, id) values (?, ?, ?, ?)
w2022-03-15 01:06:21 DEBUG  Update 0: update comment set message=?, ticket_id=?, user_id=? where id=?
w2022-03-15 01:06:21 DEBUG  Delete 0: delete from comment where id=?
w2022-03-15 01:06:21 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65a13c4b]
w2022-03-15 01:06:21 DEBUG Visiting attribute path : message
w2022-03-15 01:06:21 DEBUG Visiting attribute path : ticket
w2022-03-15 01:06:21 DEBUG Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60300331]
w2022-03-15 01:06:21 DEBUG Visiting attribute path : ticket.client
w2022-03-15 01:06:21 DEBUG Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@180c2fc9]
w2022-03-15 01:06:21 DEBUG Visiting attribute path : ticket.client.firstName
w2022-03-15 01:06:21 DEBUG Visiting attribute path : ticket.client.lastName
w2022-03-15 01:06:21 DEBUG Visiting attribute path : ticket.client.login
w2022-03-15 01:06:21 DEBUG Visiting attribute path : ticket.client.password
w2022-03-15 01:06:21 DEBUG Visiting attribute path : ticket.client.role
w2022-03-15 01:06:21 DEBUG Visiting attribute path : ticket.status
w2022-03-15 01:06:21 DEBUG Visiting attribute path : ticket.support
w2022-03-15 01:06:21 DEBUG Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c86ae2b]
w2022-03-15 01:06:21 DEBUG Visiting attribute path : ticket.support.firstName
w2022-03-15 01:06:21 DEBUG Visiting attribute path : ticket.support.lastName
w2022-03-15 01:06:21 DEBUG Visiting attribute path : ticket.support.login
w2022-03-15 01:06:21 DEBUG Visiting attribute path : ticket.support.password
w2022-03-15 01:06:21 DEBUG Visiting attribute path : ticket.support.role
w2022-03-15 01:06:21 DEBUG Visiting attribute path : ticket.title
w2022-03-15 01:06:21 DEBUG Visiting attribute path : user
w2022-03-15 01:06:21 DEBUG Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49f1b0fe]
w2022-03-15 01:06:21 DEBUG Visiting attribute path : user.firstName
w2022-03-15 01:06:21 DEBUG Visiting attribute path : user.lastName
w2022-03-15 01:06:21 DEBUG Visiting attribute path : user.login
w2022-03-15 01:06:21 DEBUG Visiting attribute path : user.password
w2022-03-15 01:06:21 DEBUG Visiting attribute path : user.role
w2022-03-15 01:06:21 DEBUG Building LoadPlan...
w2022-03-15 01:06:21 DEBUG processing queryspace <gen:0>
w2022-03-15 01:06:21 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.Comment)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.Comment, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.Comment)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.Ticket, querySpaceUid=<gen:1>, path=ru.edu.helpdesk.entity.Comment.ticket)
             - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:2>, path=ru.edu.helpdesk.entity.Comment.ticket.client)
             - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:3>, path=ru.edu.helpdesk.entity.Comment.ticket.support)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:4>, path=ru.edu.helpdesk.entity.Comment.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(ticket)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ru.edu.helpdesk.entity.Ticket)
                - SQL table alias mapping - ticket1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(client)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=ru.edu.helpdesk.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}
                - JOIN (JoinDefinedByMetadata(support)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=ru.edu.helpdesk.entity.User)
                      - SQL table alias mapping - user3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_2_3_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user4_
                - alias suffix - 4_
                - suffixed key columns - {id1_2_4_}

w2022-03-15 01:06:21 DEBUG Static select for entity ru.edu.helpdesk.entity.Comment [NONE]: select comment0_.id as id1_0_0_, comment0_.message as message2_0_0_, comment0_.ticket_id as ticket_i3_0_0_, comment0_.user_id as user_id4_0_0_, ticket1_.id as id1_1_1_, ticket1_.client_id as client_i4_1_1_, ticket1_.status as status2_1_1_, ticket1_.support_id as support_5_1_1_, ticket1_.title as title3_1_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_, user3_.id as id1_2_3_, user3_.first_name as first_na2_2_3_, user3_.last_name as last_nam3_2_3_, user3_.login as login4_2_3_, user3_.password as password5_2_3_, user3_.role as role6_2_3_, user4_.id as id1_2_4_, user4_.first_name as first_na2_2_4_, user4_.last_name as last_nam3_2_4_, user4_.login as login4_2_4_, user4_.password as password5_2_4_, user4_.role as role6_2_4_ from comment comment0_ left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id left outer join user user2_ on ticket1_.client_id=user2_.id left outer join user user3_ on ticket1_.support_id=user3_.id left outer join user user4_ on comment0_.user_id=user4_.id where comment0_.id=?
w2022-03-15 01:06:21 DEBUG drop table if exists comment
w2022-03-15 01:06:21 DEBUG drop table if exists hibernate_sequence
w2022-03-15 01:06:21 DEBUG drop table if exists ticket
w2022-03-15 01:06:21 DEBUG drop table if exists user
w2022-03-15 01:06:21 DEBUG create table comment (id bigint not null, message varchar(255) not null, ticket_id bigint, user_id bigint, primary key (id))
w2022-03-15 01:06:21 DEBUG create table hibernate_sequence (next_val bigint)
w2022-03-15 01:06:21 DEBUG insert into hibernate_sequence values ( 1 )
w2022-03-15 01:06:21 DEBUG create table ticket (id bigint not null, status integer, title varchar(255) not null, client_id bigint, support_id bigint, primary key (id))
w2022-03-15 01:06:21 DEBUG create table user (id bigint not null, first_name varchar(255), last_name varchar(255), login varchar(255) not null, password varchar(255) not null, role integer, primary key (id))
w2022-03-15 01:06:21 INFO  HHH000476: Executing import script 'file:/C:/Users/%d0%9e%d0%bb%d1%8c%d0%b3%d0%b0/Desktop/Java/Project/Project1/helpdeskproject/target/classes/data/import.sql'
w2022-03-15 01:06:21 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (1, 'admin', 'admin', 'admin', 'admin', 0)
w2022-03-15 01:06:21 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (2, 'support', 'support', 'support', 'support', 1)
w2022-03-15 01:06:21 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (3, 'user1', 'user1', 'user1', 'user1', 2)
w2022-03-15 01:06:21 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (4, 'user2', 'user2', 'user2', 'user2', 2)
w2022-03-15 01:06:21 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (1, 1, 'Hello user1',1, 2)
w2022-03-15 01:06:21 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (2, 0, 'Title2', 1, NULL)
w2022-03-15 01:06:21 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (3, 0, 'Message user2', 4, NULL)
w2022-03-15 01:06:21 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (1, "Hello ticket1", 1, 3)
w2022-03-15 01:06:21 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (2, "Hello ticket2", 2, 3)
w2022-03-15 01:06:21 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (3, "Hello ticket11", 1, 2)
w2022-03-15 01:06:21 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (4, "Hello ticket111", 1, 2)
w2022-03-15 01:06:21 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (5, "Hello ticket22", 2, 2)
w2022-03-15 01:06:21 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (6, "Hello ticket3", 3, 4)
w2022-03-15 01:06:21 DEBUG UPDATE hibernate_sequence SET next_val = 8 WHERE next_val = 1
w2022-03-15 01:06:21 INFO  HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
w2022-03-15 01:06:21 DEBUG Checking 0 named HQL queries
w2022-03-15 01:06:21 DEBUG Checking 0 named SQL queries
w2022-03-15 01:06:22 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 01:06:22 DEBUG Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@31ad99ca
w2022-03-15 01:06:22 DEBUG Registering SessionFactory: 5cffbff3-70da-40c2-a860-e1c93387c747 (<unnamed>)
w2022-03-15 01:06:22 DEBUG Not binding SessionFactory to JNDI, no JNDI name configured
w2022-03-15 01:06:22 DEBUG Statistics initialized [enabled=false]
w2022-03-15 01:06:22 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 01:06:22 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 01:06:22 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 01:06:31 DEBUG Rendered criteria query -> select generatedAlias0 from Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 01:06:31 DEBUG QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@25007114
w2022-03-15 01:06:31 DEBUG parse() - HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 01:06:31 DEBUG throwQueryException() : no errors
w2022-03-15 01:06:31 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[IDENT] Node: 'ru'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'edu'
    |  |  |  |  |  |  \-[IDENT] Node: 'helpdesk'
    |  |  |  |  |  \-[IDENT] Node: 'entity'
    |  |  |  |  \-[IDENT] Node: 'Ticket'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'client'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias1'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

w2022-03-15 01:06:31 DEBUG select << begin [level=1, statement=select]
w2022-03-15 01:06:31 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.Ticket (generatedAlias0) -> ticket0_
w2022-03-15 01:06:31 DEBUG Resolved : generatedAlias0 -> ticket0_.id
w2022-03-15 01:06:31 DEBUG getDataType() : client -> org.hibernate.type.ManyToOneType(ru.edu.helpdesk.entity.User)
w2022-03-15 01:06:31 DEBUG dereferenceEntityJoin() : generating join for client in ru.edu.helpdesk.entity.Ticket (generatedAlias1) parent = [ {null} ]
w2022-03-15 01:06:31 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.User (generatedAlias1) -> user1_
w2022-03-15 01:06:31 DEBUG addJoinByPathMap() : generatedAlias0.client -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}
w2022-03-15 01:06:31 DEBUG Resolved : generatedAlias0.client -> ticket0_.client_id
w2022-03-15 01:06:31 DEBUG createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'user user1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Ticket.client,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}

w2022-03-15 01:06:31 DEBUG Resolved : generatedAlias0 -> ticket0_.id
w2022-03-15 01:06:31 DEBUG Resolved : generatedAlias1 -> user1_.id
w2022-03-15 01:06:31 DEBUG getDataType() : id -> org.hibernate.type.LongType@2ad68501
w2022-03-15 01:06:31 DEBUG Resolved : generatedAlias1.id -> user1_.id
w2022-03-15 01:06:31 DEBUG select : finishing up [level=1, statement=select]
w2022-03-15 01:06:31 DEBUG processQuery() :  ( SELECT ( {select clause} ticket0_.id ) ( FromClause{level=1} ( ticket ticket0_ user user1_ ) ) ( where ( = ( user1_.id user1_.id id ) ? ) ) )
w2022-03-15 01:06:31 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Ticket): [ticket]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.Ticket)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.User)
          | path: generatedAlias1.id
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.User)
          |  | originalText: generatedAlias1
          |  \-IdentNode
          |    persister: null
          |    originalText: id
          \-ParameterNode

w2022-03-15 01:06:31 DEBUG Using FROM fragment [ticket ticket0_]
w2022-03-15 01:06:31 DEBUG Using FROM fragment [left outer join user user1_ on ticket0_.client_id=user1_.id]
w2022-03-15 01:06:31 DEBUG select >> end [level=1, statement=select]
w2022-03-15 01:06:31 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (ticket,user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'ticket0_.id as id1_1_' {alias=generatedAlias0, className=ru.edu.helpdesk.entity.Ticket, tableAlias=ticket0_}
    |  \-[SQL_TOKEN] SqlFragment: 'ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[ticket0_, user1_], fromElementsByPath=[generatedAlias0.client], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'ticket ticket0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=ticket,tableAlias=ticket0_,origin=null,columns={,className=ru.edu.helpdesk.entity.Ticket}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join user user1_ on ticket0_.client_id=user1_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Ticket.client,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user1_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias1.id,tableAlias=user1_,className=ru.edu.helpdesk.entity.User,classAlias=generatedAlias1}
          |  +-[ALIAS_REF] IdentNode: 'user1_.id' {alias=generatedAlias1, className=ru.edu.helpdesk.entity.User, tableAlias=user1_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LongType@2ad68501}

w2022-03-15 01:06:31 DEBUG throwQueryException() : no errors
w2022-03-15 01:06:31 DEBUG HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 01:06:31 DEBUG SQL: select ticket0_.id as id1_1_, ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id where user1_.id=?
w2022-03-15 01:06:31 DEBUG throwQueryException() : no errors
w2022-03-15 01:06:31 DEBUG select ticket0_.id as id1_1_, ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id where user1_.id=?
w2022-03-15 01:06:31 DEBUG Result set row: 0
w2022-03-15 01:06:31 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 01:06:31 DEBUG Result set row: 1
w2022-03-15 01:06:31 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 01:06:31 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 01:06:31 DEBUG Processing attribute `client` : value = 1
w2022-03-15 01:06:31 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 01:06:31 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 01:06:31 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 01:06:31 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#1]
w2022-03-15 01:06:31 DEBUG Processing attribute `firstName` : value = admin
w2022-03-15 01:06:31 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 01:06:31 DEBUG Processing attribute `lastName` : value = admin
w2022-03-15 01:06:31 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 01:06:31 DEBUG Processing attribute `login` : value = admin
w2022-03-15 01:06:31 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 01:06:31 DEBUG Processing attribute `password` : value = admin
w2022-03-15 01:06:31 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 01:06:31 DEBUG Processing attribute `role` : value = ADMIN
w2022-03-15 01:06:31 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 01:06:31 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#1]
w2022-03-15 01:06:31 DEBUG Done entity load : ru.edu.helpdesk.entity.User#1
w2022-03-15 01:06:31 DEBUG Processing attribute `status` : value = WORKING
w2022-03-15 01:06:31 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 01:06:31 DEBUG Processing attribute `support` : value = 2
w2022-03-15 01:06:31 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 01:06:31 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 01:06:31 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 01:06:31 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#2]
w2022-03-15 01:06:31 DEBUG Processing attribute `firstName` : value = support
w2022-03-15 01:06:31 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 01:06:31 DEBUG Processing attribute `lastName` : value = support
w2022-03-15 01:06:31 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 01:06:31 DEBUG Processing attribute `login` : value = support
w2022-03-15 01:06:31 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 01:06:31 DEBUG Processing attribute `password` : value = support
w2022-03-15 01:06:31 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 01:06:31 DEBUG Processing attribute `role` : value = SUPPORT
w2022-03-15 01:06:31 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 01:06:31 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#2]
w2022-03-15 01:06:31 DEBUG Done entity load : ru.edu.helpdesk.entity.User#2
w2022-03-15 01:06:31 DEBUG Processing attribute `title` : value = Hello user1
w2022-03-15 01:06:31 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 01:06:31 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 01:06:31 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 01:06:31 DEBUG Processing attribute `client` : value = 1
w2022-03-15 01:06:31 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 01:06:31 DEBUG Processing attribute `status` : value = OPEN
w2022-03-15 01:06:31 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 01:06:31 DEBUG Processing attribute `support` : value = null
w2022-03-15 01:06:31 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 01:06:31 DEBUG Processing attribute `title` : value = Title2
w2022-03-15 01:06:31 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 01:06:31 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 01:06:33 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 01:06:33 DEBUG begin
w2022-03-15 01:06:33 DEBUG committing
w2022-03-15 01:08:29 DEBUG Logging Provider: org.jboss.logging.Log4j2LoggerProvider
w2022-03-15 01:08:29 DEBUG PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@4d7fb5a0
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/%d0%9e%d0%bb%d1%8c%d0%b3%d0%b0/Desktop/Java/Project/Project1/helpdeskproject/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		ru.edu.helpdesk.entity.Comment
		ru.edu.helpdesk.entity.Ticket
		ru.edu.helpdesk.entity.User]
	Mapping files names []
	Properties []
w2022-03-15 01:08:29 DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
w2022-03-15 01:08:29 DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
w2022-03-15 01:08:29 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
w2022-03-15 01:08:29 INFO  HHH000412: Hibernate ORM core version 5.6.5.Final
w2022-03-15 01:08:29 DEBUG HHH000206: hibernate.properties not found
w2022-03-15 01:08:29 DEBUG Overriding existing service binding [org.hibernate.secure.spi.JaccService]
w2022-03-15 01:08:29 DEBUG Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
w2022-03-15 01:08:29 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
w2022-03-15 01:08:29 INFO  HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
w2022-03-15 01:08:29 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@79033dce
w2022-03-15 01:08:29 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@79033dce
w2022-03-15 01:08:29 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@79033dce
w2022-03-15 01:08:29 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@220b029a
w2022-03-15 01:08:29 DEBUG Adding type registration true_false -> org.hibernate.type.TrueFalseType@69c3fe92
w2022-03-15 01:08:29 DEBUG Adding type registration yes_no -> org.hibernate.type.YesNoType@36db4359
w2022-03-15 01:08:29 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@4329bd3d
w2022-03-15 01:08:29 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@4329bd3d
w2022-03-15 01:08:29 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4329bd3d
w2022-03-15 01:08:29 DEBUG Adding type registration character -> org.hibernate.type.CharacterType@369b0d35
w2022-03-15 01:08:29 DEBUG Adding type registration char -> org.hibernate.type.CharacterType@369b0d35
w2022-03-15 01:08:29 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@369b0d35
w2022-03-15 01:08:29 DEBUG Adding type registration short -> org.hibernate.type.ShortType@1b140167
w2022-03-15 01:08:29 DEBUG Adding type registration short -> org.hibernate.type.ShortType@1b140167
w2022-03-15 01:08:29 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1b140167
w2022-03-15 01:08:29 DEBUG Adding type registration integer -> org.hibernate.type.IntegerType@dd48519
w2022-03-15 01:08:29 DEBUG Adding type registration int -> org.hibernate.type.IntegerType@dd48519
w2022-03-15 01:08:29 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@dd48519
w2022-03-15 01:08:29 DEBUG Adding type registration long -> org.hibernate.type.LongType@318abdff
w2022-03-15 01:08:29 DEBUG Adding type registration long -> org.hibernate.type.LongType@318abdff
w2022-03-15 01:08:29 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.LongType@318abdff
w2022-03-15 01:08:29 DEBUG Adding type registration float -> org.hibernate.type.FloatType@7fa39af4
w2022-03-15 01:08:29 DEBUG Adding type registration float -> org.hibernate.type.FloatType@7fa39af4
w2022-03-15 01:08:29 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7fa39af4
w2022-03-15 01:08:29 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@25376394
w2022-03-15 01:08:29 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@25376394
w2022-03-15 01:08:29 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@25376394
w2022-03-15 01:08:29 DEBUG Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@129e3508
w2022-03-15 01:08:29 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@129e3508
w2022-03-15 01:08:29 DEBUG Adding type registration big_integer -> org.hibernate.type.BigIntegerType@73270691
w2022-03-15 01:08:29 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@73270691
w2022-03-15 01:08:29 DEBUG Adding type registration string -> org.hibernate.type.StringType@16743381
w2022-03-15 01:08:29 DEBUG Adding type registration java.lang.String -> org.hibernate.type.StringType@16743381
w2022-03-15 01:08:29 DEBUG Adding type registration nstring -> org.hibernate.type.StringNVarcharType@d7e7865
w2022-03-15 01:08:29 DEBUG Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5224a307
w2022-03-15 01:08:29 DEBUG Adding type registration url -> org.hibernate.type.UrlType@3da8734d
w2022-03-15 01:08:29 DEBUG Adding type registration java.net.URL -> org.hibernate.type.UrlType@3da8734d
w2022-03-15 01:08:29 DEBUG Adding type registration Duration -> org.hibernate.type.DurationType@14a92d95
w2022-03-15 01:08:29 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.DurationType@14a92d95
w2022-03-15 01:08:29 DEBUG Adding type registration Instant -> org.hibernate.type.InstantType@2a0e6068
w2022-03-15 01:08:29 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2a0e6068
w2022-03-15 01:08:29 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7ac20887
w2022-03-15 01:08:29 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7ac20887
w2022-03-15 01:08:29 DEBUG Adding type registration LocalDate -> org.hibernate.type.LocalDateType@47505d5a
w2022-03-15 01:08:29 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@47505d5a
w2022-03-15 01:08:29 DEBUG Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@4b6b9e13
w2022-03-15 01:08:29 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@4b6b9e13
w2022-03-15 01:08:29 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@551d007b
w2022-03-15 01:08:29 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@551d007b
w2022-03-15 01:08:29 DEBUG Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@6e8dd67
w2022-03-15 01:08:29 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@6e8dd67
w2022-03-15 01:08:29 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2d684a5b
w2022-03-15 01:08:29 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2d684a5b
w2022-03-15 01:08:29 DEBUG Adding type registration date -> org.hibernate.type.DateType@b356b08
w2022-03-15 01:08:29 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.DateType@b356b08
w2022-03-15 01:08:29 DEBUG Adding type registration time -> org.hibernate.type.TimeType@48f16151
w2022-03-15 01:08:29 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.TimeType@48f16151
w2022-03-15 01:08:29 DEBUG Adding type registration timestamp -> org.hibernate.type.TimestampType@4c4f43b6
w2022-03-15 01:08:29 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4c4f43b6
w2022-03-15 01:08:29 DEBUG Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4c4f43b6
w2022-03-15 01:08:29 DEBUG Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5560b281
w2022-03-15 01:08:29 DEBUG Adding type registration calendar -> org.hibernate.type.CalendarType@6e8f5423
w2022-03-15 01:08:29 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6e8f5423
w2022-03-15 01:08:29 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6e8f5423
w2022-03-15 01:08:29 DEBUG Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@598c57c1
w2022-03-15 01:08:29 DEBUG Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@24f876b1
w2022-03-15 01:08:29 DEBUG Adding type registration locale -> org.hibernate.type.LocaleType@474769f0
w2022-03-15 01:08:29 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@474769f0
w2022-03-15 01:08:29 DEBUG Adding type registration currency -> org.hibernate.type.CurrencyType@24653f5
w2022-03-15 01:08:29 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@24653f5
w2022-03-15 01:08:29 DEBUG Adding type registration timezone -> org.hibernate.type.TimeZoneType@34dc349e
w2022-03-15 01:08:29 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@34dc349e
w2022-03-15 01:08:29 DEBUG Adding type registration class -> org.hibernate.type.ClassType@671b8639
w2022-03-15 01:08:29 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.ClassType@671b8639
w2022-03-15 01:08:29 DEBUG Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6b0585f1
w2022-03-15 01:08:29 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6b0585f1
w2022-03-15 01:08:29 DEBUG Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@435c8929
w2022-03-15 01:08:29 DEBUG Adding type registration binary -> org.hibernate.type.BinaryType@749d0285
w2022-03-15 01:08:29 DEBUG Adding type registration byte[] -> org.hibernate.type.BinaryType@749d0285
w2022-03-15 01:08:29 DEBUG Adding type registration [B -> org.hibernate.type.BinaryType@749d0285
w2022-03-15 01:08:29 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@61d4abe9
w2022-03-15 01:08:29 DEBUG Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@61d4abe9
w2022-03-15 01:08:29 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@61d4abe9
w2022-03-15 01:08:29 DEBUG Adding type registration row_version -> org.hibernate.type.RowVersionType@686c4736
w2022-03-15 01:08:29 DEBUG Adding type registration image -> org.hibernate.type.ImageType@101eddb1
w2022-03-15 01:08:29 DEBUG Adding type registration characters -> org.hibernate.type.CharArrayType@2d4a2324
w2022-03-15 01:08:29 DEBUG Adding type registration char[] -> org.hibernate.type.CharArrayType@2d4a2324
w2022-03-15 01:08:29 DEBUG Adding type registration [C -> org.hibernate.type.CharArrayType@2d4a2324
w2022-03-15 01:08:29 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5685236
w2022-03-15 01:08:29 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5685236
w2022-03-15 01:08:29 DEBUG Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5685236
w2022-03-15 01:08:29 DEBUG Adding type registration text -> org.hibernate.type.TextType@6f7b08e7
w2022-03-15 01:08:29 DEBUG Adding type registration ntext -> org.hibernate.type.NTextType@2f8a792a
w2022-03-15 01:08:29 DEBUG Adding type registration blob -> org.hibernate.type.BlobType@459b989d
w2022-03-15 01:08:29 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@459b989d
w2022-03-15 01:08:29 DEBUG Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@738e4b0
w2022-03-15 01:08:29 DEBUG Adding type registration clob -> org.hibernate.type.ClobType@62871bd1
w2022-03-15 01:08:29 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@62871bd1
w2022-03-15 01:08:29 DEBUG Adding type registration nclob -> org.hibernate.type.NClobType@45bc725f
w2022-03-15 01:08:29 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@45bc725f
w2022-03-15 01:08:29 DEBUG Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@39930b23
w2022-03-15 01:08:29 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@14baf330
w2022-03-15 01:08:29 DEBUG Adding type registration serializable -> org.hibernate.type.SerializableType@55992922
w2022-03-15 01:08:29 DEBUG Adding type registration object -> org.hibernate.type.ObjectType@4160e91b
w2022-03-15 01:08:29 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4160e91b
w2022-03-15 01:08:29 DEBUG Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6d934f43
w2022-03-15 01:08:29 DEBUG Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2bfd4bdb
w2022-03-15 01:08:29 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@78dc5239
w2022-03-15 01:08:29 DEBUG Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3bf4a3ec
w2022-03-15 01:08:29 DEBUG Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4c6a1a86
w2022-03-15 01:08:29 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@d882343
w2022-03-15 01:08:29 DEBUG Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@17dff551
w2022-03-15 01:08:29 DEBUG Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@9aadf85
w2022-03-15 01:08:29 INFO  HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
w2022-03-15 01:08:29 DEBUG Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@4a39c24f] into BootstrapContext; was [null]
w2022-03-15 01:08:29 DEBUG ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@4a39c24f) [was null]
w2022-03-15 01:08:29 DEBUG Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@7536f7da] into BootstrapContext; was [null]
w2022-03-15 01:08:29 DEBUG Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@7c5574af] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@7d6dba57]
w2022-03-15 01:08:29 DEBUG Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@4a39c24f]
w2022-03-15 01:08:29 DEBUG ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@4a39c24f]
w2022-03-15 01:08:29 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
w2022-03-15 01:08:29 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
w2022-03-15 01:08:29 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
w2022-03-15 01:08:29 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
w2022-03-15 01:08:29 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
w2022-03-15 01:08:29 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
w2022-03-15 01:08:29 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
w2022-03-15 01:08:29 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
w2022-03-15 01:08:29 DEBUG Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
w2022-03-15 01:08:29 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
w2022-03-15 01:08:29 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
w2022-03-15 01:08:29 DEBUG Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
w2022-03-15 01:08:29 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
w2022-03-15 01:08:29 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
w2022-03-15 01:08:29 DEBUG Database ->
       name : SQLite
    version : 3.36.0
      major : 3
      minor : 36
w2022-03-15 01:08:29 DEBUG Driver ->
       name : SQLite JDBC
    version : 3.36.0.3
      major : 3
      minor : 36
w2022-03-15 01:08:29 DEBUG JDBC version : 2.1
w2022-03-15 01:08:29 INFO  HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
w2022-03-15 01:08:29 DEBUG JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
w2022-03-15 01:08:29 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
w2022-03-15 01:08:29 DEBUG HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [2] less than 4
w2022-03-15 01:08:29 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@10a2784d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1d28c32e]
w2022-03-15 01:08:29 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
w2022-03-15 01:08:29 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.Comment
w2022-03-15 01:08:29 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 01:08:29 DEBUG Import with entity name Comment
w2022-03-15 01:08:29 DEBUG Bind entity ru.edu.helpdesk.entity.Comment on table comment
w2022-03-15 01:08:29 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 01:08:29 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Comment] is safe
w2022-03-15 01:08:29 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Comment
w2022-03-15 01:08:29 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 01:08:29 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Comment:id]
w2022-03-15 01:08:29 DEBUG building SimpleValue for id
w2022-03-15 01:08:29 DEBUG Building property id
w2022-03-15 01:08:30 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 01:08:30 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=message, insertable=true, updatable=true, unique=false}
w2022-03-15 01:08:30 DEBUG MetadataSourceProcessor property message with lazy=false
w2022-03-15 01:08:30 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Comment:message]
w2022-03-15 01:08:30 DEBUG building SimpleValue for message
w2022-03-15 01:08:30 DEBUG Building property message
w2022-03-15 01:08:30 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 01:08:30 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=ticket, insertable=true, updatable=true, unique=false}
w2022-03-15 01:08:30 DEBUG Building property ticket
w2022-03-15 01:08:30 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 01:08:30 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=user, insertable=true, updatable=true, unique=false}
w2022-03-15 01:08:30 DEBUG Building property user
w2022-03-15 01:08:30 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 01:08:30 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 01:08:30 DEBUG Import with entity name Ticket
w2022-03-15 01:08:30 DEBUG Bind entity ru.edu.helpdesk.entity.Ticket on table ticket
w2022-03-15 01:08:30 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 01:08:30 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Ticket] is safe
w2022-03-15 01:08:30 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Ticket
w2022-03-15 01:08:30 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 01:08:30 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:id]
w2022-03-15 01:08:30 DEBUG building SimpleValue for id
w2022-03-15 01:08:30 DEBUG Building property id
w2022-03-15 01:08:30 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 01:08:30 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 01:08:30 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=client, insertable=true, updatable=true, unique=false}
w2022-03-15 01:08:30 DEBUG Building property client
w2022-03-15 01:08:30 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=status, insertable=true, updatable=true, unique=false}
w2022-03-15 01:08:30 DEBUG MetadataSourceProcessor property status with lazy=false
w2022-03-15 01:08:30 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:status]
w2022-03-15 01:08:30 DEBUG building SimpleValue for status
w2022-03-15 01:08:30 DEBUG Building property status
w2022-03-15 01:08:30 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 01:08:30 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=support, insertable=true, updatable=true, unique=false}
w2022-03-15 01:08:30 DEBUG Building property support
w2022-03-15 01:08:30 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=title, insertable=true, updatable=true, unique=false}
w2022-03-15 01:08:30 DEBUG MetadataSourceProcessor property title with lazy=false
w2022-03-15 01:08:30 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:title]
w2022-03-15 01:08:30 DEBUG building SimpleValue for title
w2022-03-15 01:08:30 DEBUG Building property title
w2022-03-15 01:08:30 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.User
w2022-03-15 01:08:30 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 01:08:30 DEBUG Import with entity name User
w2022-03-15 01:08:30 DEBUG Bind entity ru.edu.helpdesk.entity.User on table user
w2022-03-15 01:08:30 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 01:08:30 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.User] is safe
w2022-03-15 01:08:30 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.User
w2022-03-15 01:08:30 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 01:08:30 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:id]
w2022-03-15 01:08:30 DEBUG building SimpleValue for id
w2022-03-15 01:08:30 DEBUG Building property id
w2022-03-15 01:08:30 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 01:08:30 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
w2022-03-15 01:08:30 DEBUG MetadataSourceProcessor property firstName with lazy=false
w2022-03-15 01:08:30 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:firstName]
w2022-03-15 01:08:30 DEBUG building SimpleValue for firstName
w2022-03-15 01:08:30 DEBUG Building property firstName
w2022-03-15 01:08:30 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
w2022-03-15 01:08:30 DEBUG MetadataSourceProcessor property lastName with lazy=false
w2022-03-15 01:08:30 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:lastName]
w2022-03-15 01:08:30 DEBUG building SimpleValue for lastName
w2022-03-15 01:08:30 DEBUG Building property lastName
w2022-03-15 01:08:30 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=login, insertable=true, updatable=true, unique=false}
w2022-03-15 01:08:30 DEBUG MetadataSourceProcessor property login with lazy=false
w2022-03-15 01:08:30 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:login]
w2022-03-15 01:08:30 DEBUG building SimpleValue for login
w2022-03-15 01:08:30 DEBUG Building property login
w2022-03-15 01:08:30 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
w2022-03-15 01:08:30 DEBUG MetadataSourceProcessor property password with lazy=false
w2022-03-15 01:08:30 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:password]
w2022-03-15 01:08:30 DEBUG building SimpleValue for password
w2022-03-15 01:08:30 DEBUG Building property password
w2022-03-15 01:08:30 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=role, insertable=true, updatable=true, unique=false}
w2022-03-15 01:08:30 DEBUG MetadataSourceProcessor property role with lazy=false
w2022-03-15 01:08:30 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:role]
w2022-03-15 01:08:30 DEBUG building SimpleValue for role
w2022-03-15 01:08:30 DEBUG Building property role
w2022-03-15 01:08:30 DEBUG Starting fillSimpleValue for id
w2022-03-15 01:08:30 DEBUG Starting fillSimpleValue for message
w2022-03-15 01:08:30 DEBUG Starting fillSimpleValue for id
w2022-03-15 01:08:30 DEBUG Starting fillSimpleValue for status
w2022-03-15 01:08:30 DEBUG Starting fillSimpleValue for title
w2022-03-15 01:08:30 DEBUG Starting fillSimpleValue for id
w2022-03-15 01:08:30 DEBUG Starting fillSimpleValue for firstName
w2022-03-15 01:08:30 DEBUG Starting fillSimpleValue for lastName
w2022-03-15 01:08:30 DEBUG Starting fillSimpleValue for login
w2022-03-15 01:08:30 DEBUG Starting fillSimpleValue for password
w2022-03-15 01:08:30 DEBUG Starting fillSimpleValue for role
w2022-03-15 01:08:30 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [comment]
w2022-03-15 01:08:30 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [ticket]
w2022-03-15 01:08:30 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [user]
w2022-03-15 01:08:30 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 01:08:30 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 01:08:30 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 01:08:30 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 01:08:30 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 01:08:30 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 01:08:30 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 01:08:30 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 01:08:30 DEBUG Building session factory
w2022-03-15 01:08:30 DEBUG SessionFactory name : null
w2022-03-15 01:08:30 DEBUG Automatic flush during beforeCompletion(): enabled
w2022-03-15 01:08:30 DEBUG Automatic session close at end of transaction: disabled
w2022-03-15 01:08:30 DEBUG Statistics: disabled
w2022-03-15 01:08:30 DEBUG Deleted entity synthetic identifier rollback: disabled
w2022-03-15 01:08:30 DEBUG Default entity-mode: pojo
w2022-03-15 01:08:30 DEBUG Check Nullability in Core (should be disabled when Bean Validation is on): enabled
w2022-03-15 01:08:30 DEBUG Allow initialization of lazy state outside session : disabled
w2022-03-15 01:08:30 DEBUG Using BatchFetchStyle : LEGACY
w2022-03-15 01:08:30 DEBUG Default batch fetch size: -1
w2022-03-15 01:08:30 DEBUG Maximum outer join fetch depth: null
w2022-03-15 01:08:30 DEBUG Default null ordering: NONE
w2022-03-15 01:08:30 DEBUG Order SQL updates by primary key: disabled
w2022-03-15 01:08:30 DEBUG Order SQL inserts for batching: disabled
w2022-03-15 01:08:30 DEBUG multi-tenancy strategy : NONE
w2022-03-15 01:08:30 DEBUG JTA Track by Thread: enabled
w2022-03-15 01:08:30 DEBUG Query language substitutions: {}
w2022-03-15 01:08:30 DEBUG Named query checking : enabled
w2022-03-15 01:08:30 DEBUG Second-level cache: disabled
w2022-03-15 01:08:30 DEBUG Second-level query cache: disabled
w2022-03-15 01:08:30 DEBUG Second-level query cache factory: null
w2022-03-15 01:08:30 DEBUG Second-level cache region prefix: null
w2022-03-15 01:08:30 DEBUG Optimize second-level cache for minimal puts: disabled
w2022-03-15 01:08:30 DEBUG Structured second-level cache entries: disabled
w2022-03-15 01:08:30 DEBUG Second-level cache direct-reference entries: disabled
w2022-03-15 01:08:30 DEBUG Automatic eviction of collection cache: disabled
w2022-03-15 01:08:30 DEBUG JDBC batch size: 1
w2022-03-15 01:08:30 DEBUG JDBC batch updates for versioned data: enabled
w2022-03-15 01:08:30 DEBUG Scrollable result sets: disabled
w2022-03-15 01:08:30 DEBUG Wrap result sets: disabled
w2022-03-15 01:08:30 DEBUG JDBC3 getGeneratedKeys(): enabled
w2022-03-15 01:08:30 DEBUG JDBC result set fetch size: null
w2022-03-15 01:08:30 DEBUG Connection release mode: ON_CLOSE
w2022-03-15 01:08:30 DEBUG Generate SQL with comments: disabled
w2022-03-15 01:08:30 DEBUG JPA compliance - query : disabled
w2022-03-15 01:08:30 DEBUG JPA compliance - closed-handling : disabled
w2022-03-15 01:08:30 DEBUG JPA compliance - lists : disabled
w2022-03-15 01:08:30 DEBUG JPA compliance - transactions : disabled
w2022-03-15 01:08:30 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 01:08:30 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 01:08:30 DEBUG Session factory constructed with filter configurations : {}
w2022-03-15 01:08:30 DEBUG Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=true, java.specification.version=1.8, file.encoding.pkg=sun.io, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@224172fe, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.SQLiteDialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\charsets.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\cldrdata.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\dnsns.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\jaccess.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\localedata.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\nashorn.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunec.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunmscapi.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\zipfs.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jce.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jfr.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jsse.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\management-agent.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\resources.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\rt.jar;C:\Users\Ольга\Desktop\Java\Project\Project1\helpdeskproject\target\classes;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\2.6.4\spring-boot-starter-data-jpa-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\2.6.4\spring-boot-starter-jdbc-2.6.4.jar;C:\Users\Ольга\.m2\repository\com\zaxxer\HikariCP\4.0.3\HikariCP-4.0.3.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-jdbc\5.3.16\spring-jdbc-5.3.16.jar;C:\Users\Ольга\.m2\repository\jakarta\transaction\jakarta.transaction-api\1.3.3\jakarta.transaction-api-1.3.3.jar;C:\Users\Ольга\.m2\repository\jakarta\persistence\jakarta.persistence-api\2.2.3\jakarta.persistence-api-2.2.3.jar;C:\Users\Ольга\.m2\repository\org\hibernate\hibernate-core\5.6.5.Final\hibernate-core-5.6.5.Final.jar;C:\Users\Ольга\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy\1.11.22\byte-buddy-1.11.22.jar;C:\Users\Ольга\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ольга\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Ольга\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.6\jaxb-runtime-2.3.6.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\txw2\2.3.6\txw2-2.3.6.jar;C:\Users\Ольга\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.12\istack-commons-runtime-3.0.12.jar;C:\Users\Ольга\.m2\repository\com\sun\activation\jakarta.activation\1.2.2\jakarta.activation-1.2.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\data\spring-data-jpa\2.6.2\spring-data-jpa-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\data\spring-data-commons\2.6.2\spring-data-commons-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-orm\5.3.16\spring-orm-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-context\5.3.16\spring-context-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-tx\5.3.16\spring-tx-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-beans\5.3.16\spring-beans-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-aspects\5.3.16\spring-aspects-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-security\2.6.4\spring-boot-starter-security-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter\2.6.4\spring-boot-starter-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-logging\2.6.4\spring-boot-starter-logging-2.6.4.jar;C:\Users\Ольга\.m2\repository\ch\qos\logback\logback-classic\1.2.10\logback-classic-1.2.10.jar;C:\Users\Ольга\.m2\repository\ch\qos\logback\logback-core\1.2.10\logback-core-1.2.10.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.17.1\log4j-to-slf4j-2.17.1.jar;C:\Users\Ольга\.m2\repository\org\slf4j\jul-to-slf4j\1.7.36\jul-to-slf4j-1.7.36.jar;C:\Users\Ольга\.m2\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;C:\Users\Ольга\.m2\repository\org\yaml\snakeyaml\1.29\snakeyaml-1.29.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-aop\5.3.16\spring-aop-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-config\5.6.2\spring-security-config-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-web\5.6.2\spring-security-web-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-expression\5.3.16\spring-expression-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-web\2.6.4\spring-boot-starter-web-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-json\2.6.4\spring-boot-starter-json-2.6.4.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.13.1\jackson-datatype-jdk8-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.13.1\jackson-datatype-jsr310-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.13.1\jackson-module-parameter-names-2.13.1.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\2.6.4\spring-boot-starter-tomcat-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.58\tomcat-embed-core-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\9.0.58\tomcat-embed-el-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.58\tomcat-embed-websocket-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-web\5.3.16\spring-web-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-webmvc\5.3.16\spring-webmvc-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-devtools\2.6.4\spring-boot-devtools-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot\2.6.4\spring-boot-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\2.6.4\spring-boot-autoconfigure-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\xerial\sqlite-jdbc\3.36.0.3\sqlite-jdbc-3.36.0.3.jar;C:\Users\Ольга\.m2\repository\com\zsoltfabok\sqlite-dialect\1.0\sqlite-dialect-1.0.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-aop\2.6.2\spring-boot-starter-aop-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\aspectj\aspectjweaver\1.9.7\aspectjweaver-1.9.7.jar;C:\Users\Ольга\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.3\jakarta.xml.bind-api-2.3.3.jar;C:\Users\Ольга\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.2\jakarta.activation-api-1.2.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-core\5.3.16\spring-core-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-jcl\5.3.16\spring-jcl-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-core\5.6.2\spring-security-core-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-crypto\5.6.2\spring-security-crypto-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\projectlombok\lombok\1.18.22\lombok-1.18.22.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\2.6.4\spring-boot-starter-thymeleaf-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\thymeleaf-spring5\3.0.15.RELEASE\thymeleaf-spring5-3.0.15.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\thymeleaf\3.0.15.RELEASE\thymeleaf-3.0.15.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\attoparser\attoparser\2.0.5.RELEASE\attoparser-2.0.5.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-java8time\3.0.4.RELEASE\thymeleaf-extras-java8time-3.0.4.RELEASE.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.1\jackson-databind-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.1\jackson-annotations-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.1\jackson-core-2.13.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-api\2.4.1\log4j-api-2.4.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-core\2.4.1\log4j-core-2.4.1.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.2\lib\idea_rt.jar, java.vm.vendor=Temurin, sun.arch.data.model=64, user.variant=, java.vendor.url=https://adoptium.net/, catalina.useNaming=false, user.timezone=Europe/Moscow, jakarta.persistence.sharedCache.mode=UNSPECIFIED, os.name=Windows 10, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), user.country=RU, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\bin, sun.java.command=ru.edu.helpdesk.HelpdeskApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@6be9d9b5, com.sun.management.jmxremote=, javax.persistence.sharedCache.mode=UNSPECIFIED, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, user.home=C:\Users\Ольга, user.language=ru, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre, file.separator=\, spring.output.ansi.enabled=always, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, sun.boot.class.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\resources.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\rt.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\sunrsasign.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jsse.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jce.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\charsets.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jfr.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\classes, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_312-b07, user.name=Эльдорадо, spring.jmx.enabled=true, path.separator=;, os.version=10.0, java.endorsed.dirs=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\endorsed, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=default, spring.beaninfo.ignore=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=C:\Users\134E~1\AppData\Local\Temp\, catalina.home=C:\Users\Ольга\AppData\Local\Temp\tomcat.8080.1014699190069239745, java.version=1.8.0_312, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\Ольга\Desktop\Java\Project\Project1\helpdeskproject, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=12560, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\Ольга\AppData\Local\Temp\tomcat.8080.1014699190069239745, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@34c0ff0, java.library.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\windows\System32\OpenSSH\;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\Program Files\apache-maven-3.8.4\bin;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Ольга\AppData\Local\Microsoft\WindowsApps;C:\Users\Ольга\AppData\Local\Programs\Microsoft VS Code\bin;C:\SQLite;C:\Users\Ольга\AppData\Roaming\npm;C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.2\bin;;., java.vendor=Temurin, java.vm.info=mixed mode, java.vm.version=25.312-b07, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, java.ext.dirs=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext;C:\windows\Sun\Java\lib\ext, hibernate.connection.datasource=HikariDataSource (HikariPool-1), hibernate.hbm2ddl.import_files=data/import.sql, java.class.version=52.0}
w2022-03-15 01:08:30 DEBUG Skipping JACC integration as it was not enabled
w2022-03-15 01:08:30 DEBUG Using ORDINAL-based conversion for Enum ru.edu.helpdesk.entity.UserRole
w2022-03-15 01:08:30 DEBUG Using ORDINAL-based conversion for Enum ru.edu.helpdesk.entity.TicketStatus
w2022-03-15 01:08:30 DEBUG Instantiated session factory
w2022-03-15 01:08:30 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@10a2784d] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@290f0668]
w2022-03-15 01:08:30 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.User] is safe
w2022-03-15 01:08:30 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.User
w2022-03-15 01:08:30 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:08:30 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:08:30 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:08:30 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:08:30 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Ticket] is safe
w2022-03-15 01:08:30 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Ticket
w2022-03-15 01:08:30 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:08:30 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:08:30 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:08:30 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:08:30 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:08:30 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:08:30 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:08:30 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:08:30 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Comment] is safe
w2022-03-15 01:08:30 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Comment
w2022-03-15 01:08:30 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:08:30 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:08:30 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:08:30 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:08:30 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.User
w2022-03-15 01:08:30 DEBUG  Version select: select id from user where id =?
w2022-03-15 01:08:30 DEBUG  Snapshot select: select user_.id, user_.first_name as first_na2_2_, user_.last_name as last_nam3_2_, user_.login as login4_2_, user_.password as password5_2_, user_.role as role6_2_ from user user_ where user_.id=?
w2022-03-15 01:08:30 DEBUG  Insert 0: insert into user (first_name, last_name, login, password, role, id) values (?, ?, ?, ?, ?, ?)
w2022-03-15 01:08:30 DEBUG  Update 0: update user set first_name=?, last_name=?, login=?, password=?, role=? where id=?
w2022-03-15 01:08:30 DEBUG  Delete 0: delete from user where id=?
w2022-03-15 01:08:30 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4baa6fcc]
w2022-03-15 01:08:30 DEBUG Visiting attribute path : firstName
w2022-03-15 01:08:30 DEBUG Visiting attribute path : lastName
w2022-03-15 01:08:30 DEBUG Visiting attribute path : login
w2022-03-15 01:08:30 DEBUG Visiting attribute path : password
w2022-03-15 01:08:30 DEBUG Visiting attribute path : role
w2022-03-15 01:08:30 DEBUG Building LoadPlan...
w2022-03-15 01:08:30 DEBUG processing queryspace <gen:0>
w2022-03-15 01:08:30 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.User)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

w2022-03-15 01:08:30 DEBUG Static select for entity ru.edu.helpdesk.entity.User [NONE]: select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 01:08:30 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.Ticket
w2022-03-15 01:08:30 DEBUG  Version select: select id from ticket where id =?
w2022-03-15 01:08:30 DEBUG  Snapshot select: select ticket_.id, ticket_.client_id as client_i4_1_, ticket_.status as status2_1_, ticket_.support_id as support_5_1_, ticket_.title as title3_1_ from ticket ticket_ where ticket_.id=?
w2022-03-15 01:08:30 DEBUG  Insert 0: insert into ticket (client_id, status, support_id, title, id) values (?, ?, ?, ?, ?)
w2022-03-15 01:08:30 DEBUG  Update 0: update ticket set client_id=?, status=?, support_id=?, title=? where id=?
w2022-03-15 01:08:30 DEBUG  Delete 0: delete from ticket where id=?
w2022-03-15 01:08:30 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2094dee4]
w2022-03-15 01:08:30 DEBUG Visiting attribute path : client
w2022-03-15 01:08:30 DEBUG Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c2d7c80]
w2022-03-15 01:08:30 DEBUG Visiting attribute path : client.firstName
w2022-03-15 01:08:30 DEBUG Visiting attribute path : client.lastName
w2022-03-15 01:08:30 DEBUG Visiting attribute path : client.login
w2022-03-15 01:08:30 DEBUG Visiting attribute path : client.password
w2022-03-15 01:08:30 DEBUG Visiting attribute path : client.role
w2022-03-15 01:08:30 DEBUG Visiting attribute path : status
w2022-03-15 01:08:30 DEBUG Visiting attribute path : support
w2022-03-15 01:08:30 DEBUG Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77b6bdc]
w2022-03-15 01:08:30 DEBUG Visiting attribute path : support.firstName
w2022-03-15 01:08:30 DEBUG Visiting attribute path : support.lastName
w2022-03-15 01:08:30 DEBUG Visiting attribute path : support.login
w2022-03-15 01:08:30 DEBUG Visiting attribute path : support.password
w2022-03-15 01:08:30 DEBUG Visiting attribute path : support.role
w2022-03-15 01:08:30 DEBUG Visiting attribute path : title
w2022-03-15 01:08:30 DEBUG Building LoadPlan...
w2022-03-15 01:08:30 DEBUG processing queryspace <gen:0>
w2022-03-15 01:08:30 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.Ticket)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.Ticket, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.Ticket)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:1>, path=ru.edu.helpdesk.entity.Ticket.client)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:2>, path=ru.edu.helpdesk.entity.Ticket.support)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.Ticket)
          - SQL table alias mapping - ticket0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(client)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
          - JOIN (JoinDefinedByMetadata(support)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user2_
                - alias suffix - 2_
                - suffixed key columns - {id1_2_2_}

w2022-03-15 01:08:30 DEBUG Static select for entity ru.edu.helpdesk.entity.Ticket [NONE]: select ticket0_.id as id1_1_0_, ticket0_.client_id as client_i4_1_0_, ticket0_.status as status2_1_0_, ticket0_.support_id as support_5_1_0_, ticket0_.title as title3_1_0_, user1_.id as id1_2_1_, user1_.first_name as first_na2_2_1_, user1_.last_name as last_nam3_2_1_, user1_.login as login4_2_1_, user1_.password as password5_2_1_, user1_.role as role6_2_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id left outer join user user2_ on ticket0_.support_id=user2_.id where ticket0_.id=?
w2022-03-15 01:08:30 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.Comment
w2022-03-15 01:08:30 DEBUG  Version select: select id from comment where id =?
w2022-03-15 01:08:30 DEBUG  Snapshot select: select comment_.id, comment_.message as message2_0_, comment_.ticket_id as ticket_i3_0_, comment_.user_id as user_id4_0_ from comment comment_ where comment_.id=?
w2022-03-15 01:08:30 DEBUG  Insert 0: insert into comment (message, ticket_id, user_id, id) values (?, ?, ?, ?)
w2022-03-15 01:08:30 DEBUG  Update 0: update comment set message=?, ticket_id=?, user_id=? where id=?
w2022-03-15 01:08:30 DEBUG  Delete 0: delete from comment where id=?
w2022-03-15 01:08:30 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d3b63ba]
w2022-03-15 01:08:30 DEBUG Visiting attribute path : message
w2022-03-15 01:08:30 DEBUG Visiting attribute path : ticket
w2022-03-15 01:08:30 DEBUG Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50028579]
w2022-03-15 01:08:30 DEBUG Visiting attribute path : ticket.client
w2022-03-15 01:08:30 DEBUG Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3bd7ec31]
w2022-03-15 01:08:30 DEBUG Visiting attribute path : ticket.client.firstName
w2022-03-15 01:08:30 DEBUG Visiting attribute path : ticket.client.lastName
w2022-03-15 01:08:30 DEBUG Visiting attribute path : ticket.client.login
w2022-03-15 01:08:30 DEBUG Visiting attribute path : ticket.client.password
w2022-03-15 01:08:30 DEBUG Visiting attribute path : ticket.client.role
w2022-03-15 01:08:30 DEBUG Visiting attribute path : ticket.status
w2022-03-15 01:08:30 DEBUG Visiting attribute path : ticket.support
w2022-03-15 01:08:30 DEBUG Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@615e6a35]
w2022-03-15 01:08:30 DEBUG Visiting attribute path : ticket.support.firstName
w2022-03-15 01:08:30 DEBUG Visiting attribute path : ticket.support.lastName
w2022-03-15 01:08:30 DEBUG Visiting attribute path : ticket.support.login
w2022-03-15 01:08:30 DEBUG Visiting attribute path : ticket.support.password
w2022-03-15 01:08:30 DEBUG Visiting attribute path : ticket.support.role
w2022-03-15 01:08:30 DEBUG Visiting attribute path : ticket.title
w2022-03-15 01:08:30 DEBUG Visiting attribute path : user
w2022-03-15 01:08:30 DEBUG Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3339a532]
w2022-03-15 01:08:30 DEBUG Visiting attribute path : user.firstName
w2022-03-15 01:08:30 DEBUG Visiting attribute path : user.lastName
w2022-03-15 01:08:30 DEBUG Visiting attribute path : user.login
w2022-03-15 01:08:30 DEBUG Visiting attribute path : user.password
w2022-03-15 01:08:30 DEBUG Visiting attribute path : user.role
w2022-03-15 01:08:30 DEBUG Building LoadPlan...
w2022-03-15 01:08:30 DEBUG processing queryspace <gen:0>
w2022-03-15 01:08:30 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.Comment)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.Comment, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.Comment)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.Ticket, querySpaceUid=<gen:1>, path=ru.edu.helpdesk.entity.Comment.ticket)
             - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:2>, path=ru.edu.helpdesk.entity.Comment.ticket.client)
             - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:3>, path=ru.edu.helpdesk.entity.Comment.ticket.support)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:4>, path=ru.edu.helpdesk.entity.Comment.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(ticket)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ru.edu.helpdesk.entity.Ticket)
                - SQL table alias mapping - ticket1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(client)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=ru.edu.helpdesk.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}
                - JOIN (JoinDefinedByMetadata(support)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=ru.edu.helpdesk.entity.User)
                      - SQL table alias mapping - user3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_2_3_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user4_
                - alias suffix - 4_
                - suffixed key columns - {id1_2_4_}

w2022-03-15 01:08:30 DEBUG Static select for entity ru.edu.helpdesk.entity.Comment [NONE]: select comment0_.id as id1_0_0_, comment0_.message as message2_0_0_, comment0_.ticket_id as ticket_i3_0_0_, comment0_.user_id as user_id4_0_0_, ticket1_.id as id1_1_1_, ticket1_.client_id as client_i4_1_1_, ticket1_.status as status2_1_1_, ticket1_.support_id as support_5_1_1_, ticket1_.title as title3_1_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_, user3_.id as id1_2_3_, user3_.first_name as first_na2_2_3_, user3_.last_name as last_nam3_2_3_, user3_.login as login4_2_3_, user3_.password as password5_2_3_, user3_.role as role6_2_3_, user4_.id as id1_2_4_, user4_.first_name as first_na2_2_4_, user4_.last_name as last_nam3_2_4_, user4_.login as login4_2_4_, user4_.password as password5_2_4_, user4_.role as role6_2_4_ from comment comment0_ left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id left outer join user user2_ on ticket1_.client_id=user2_.id left outer join user user3_ on ticket1_.support_id=user3_.id left outer join user user4_ on comment0_.user_id=user4_.id where comment0_.id=?
w2022-03-15 01:08:30 DEBUG drop table if exists comment
w2022-03-15 01:08:30 DEBUG drop table if exists hibernate_sequence
w2022-03-15 01:08:30 DEBUG drop table if exists ticket
w2022-03-15 01:08:30 DEBUG drop table if exists user
w2022-03-15 01:08:30 DEBUG create table comment (id bigint not null, message varchar(255) not null, ticket_id bigint, user_id bigint, primary key (id))
w2022-03-15 01:08:30 DEBUG create table hibernate_sequence (next_val bigint)
w2022-03-15 01:08:30 DEBUG insert into hibernate_sequence values ( 1 )
w2022-03-15 01:08:30 DEBUG create table ticket (id bigint not null, status integer, title varchar(255) not null, client_id bigint, support_id bigint, primary key (id))
w2022-03-15 01:08:30 DEBUG create table user (id bigint not null, first_name varchar(255), last_name varchar(255), login varchar(255) not null, password varchar(255) not null, role integer, primary key (id))
w2022-03-15 01:08:30 INFO  HHH000476: Executing import script 'file:/C:/Users/%d0%9e%d0%bb%d1%8c%d0%b3%d0%b0/Desktop/Java/Project/Project1/helpdeskproject/target/classes/data/import.sql'
w2022-03-15 01:08:30 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (1, 'admin', 'admin', 'admin', 'admin', 0)
w2022-03-15 01:08:30 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (2, 'support', 'support', 'support', 'support', 1)
w2022-03-15 01:08:30 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (3, 'user1', 'user1', 'user1', 'user1', 2)
w2022-03-15 01:08:30 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (4, 'user2', 'user2', 'user2', 'user2', 2)
w2022-03-15 01:08:30 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (1, 1, 'Hello user1',1, 2)
w2022-03-15 01:08:30 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (2, 0, 'Title2', 1, NULL)
w2022-03-15 01:08:30 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (3, 0, 'Message user2', 4, NULL)
w2022-03-15 01:08:30 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (1, "Hello ticket1", 1, 3)
w2022-03-15 01:08:30 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (2, "Hello ticket2", 2, 3)
w2022-03-15 01:08:30 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (3, "Hello ticket11", 1, 2)
w2022-03-15 01:08:30 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (4, "Hello ticket111", 1, 2)
w2022-03-15 01:08:30 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (5, "Hello ticket22", 2, 2)
w2022-03-15 01:08:30 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (6, "Hello ticket3", 3, 4)
w2022-03-15 01:08:30 DEBUG UPDATE hibernate_sequence SET next_val = 8 WHERE next_val = 1
w2022-03-15 01:08:30 INFO  HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
w2022-03-15 01:08:30 DEBUG Checking 0 named HQL queries
w2022-03-15 01:08:30 DEBUG Checking 0 named SQL queries
w2022-03-15 01:08:30 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 01:08:30 DEBUG Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@55805d1
w2022-03-15 01:08:30 DEBUG Registering SessionFactory: 9fdd4b07-a82a-499c-8b59-c9f6edcb8127 (<unnamed>)
w2022-03-15 01:08:30 DEBUG Not binding SessionFactory to JNDI, no JNDI name configured
w2022-03-15 01:08:30 DEBUG Statistics initialized [enabled=false]
w2022-03-15 01:08:30 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 01:08:30 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 01:08:30 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 01:08:39 DEBUG Rendered criteria query -> select generatedAlias0 from Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 01:08:39 DEBUG QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@36fec38e
w2022-03-15 01:08:39 DEBUG parse() - HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 01:08:39 DEBUG throwQueryException() : no errors
w2022-03-15 01:08:39 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[IDENT] Node: 'ru'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'edu'
    |  |  |  |  |  |  \-[IDENT] Node: 'helpdesk'
    |  |  |  |  |  \-[IDENT] Node: 'entity'
    |  |  |  |  \-[IDENT] Node: 'Ticket'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'client'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias1'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

w2022-03-15 01:08:39 DEBUG select << begin [level=1, statement=select]
w2022-03-15 01:08:39 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.Ticket (generatedAlias0) -> ticket0_
w2022-03-15 01:08:39 DEBUG Resolved : generatedAlias0 -> ticket0_.id
w2022-03-15 01:08:39 DEBUG getDataType() : client -> org.hibernate.type.ManyToOneType(ru.edu.helpdesk.entity.User)
w2022-03-15 01:08:39 DEBUG dereferenceEntityJoin() : generating join for client in ru.edu.helpdesk.entity.Ticket (generatedAlias1) parent = [ {null} ]
w2022-03-15 01:08:39 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.User (generatedAlias1) -> user1_
w2022-03-15 01:08:39 DEBUG addJoinByPathMap() : generatedAlias0.client -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}
w2022-03-15 01:08:39 DEBUG Resolved : generatedAlias0.client -> ticket0_.client_id
w2022-03-15 01:08:39 DEBUG createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'user user1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Ticket.client,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}

w2022-03-15 01:08:39 DEBUG Resolved : generatedAlias0 -> ticket0_.id
w2022-03-15 01:08:39 DEBUG Resolved : generatedAlias1 -> user1_.id
w2022-03-15 01:08:39 DEBUG getDataType() : id -> org.hibernate.type.LongType@318abdff
w2022-03-15 01:08:39 DEBUG Resolved : generatedAlias1.id -> user1_.id
w2022-03-15 01:08:39 DEBUG select : finishing up [level=1, statement=select]
w2022-03-15 01:08:39 DEBUG processQuery() :  ( SELECT ( {select clause} ticket0_.id ) ( FromClause{level=1} ( ticket ticket0_ user user1_ ) ) ( where ( = ( user1_.id user1_.id id ) ? ) ) )
w2022-03-15 01:08:39 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Ticket): [ticket]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.Ticket)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.User)
          | path: generatedAlias1.id
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.User)
          |  | originalText: generatedAlias1
          |  \-IdentNode
          |    persister: null
          |    originalText: id
          \-ParameterNode

w2022-03-15 01:08:39 DEBUG Using FROM fragment [ticket ticket0_]
w2022-03-15 01:08:39 DEBUG Using FROM fragment [left outer join user user1_ on ticket0_.client_id=user1_.id]
w2022-03-15 01:08:39 DEBUG select >> end [level=1, statement=select]
w2022-03-15 01:08:39 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (ticket,user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'ticket0_.id as id1_1_' {alias=generatedAlias0, className=ru.edu.helpdesk.entity.Ticket, tableAlias=ticket0_}
    |  \-[SQL_TOKEN] SqlFragment: 'ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[ticket0_, user1_], fromElementsByPath=[generatedAlias0.client], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'ticket ticket0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=ticket,tableAlias=ticket0_,origin=null,columns={,className=ru.edu.helpdesk.entity.Ticket}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join user user1_ on ticket0_.client_id=user1_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Ticket.client,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user1_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias1.id,tableAlias=user1_,className=ru.edu.helpdesk.entity.User,classAlias=generatedAlias1}
          |  +-[ALIAS_REF] IdentNode: 'user1_.id' {alias=generatedAlias1, className=ru.edu.helpdesk.entity.User, tableAlias=user1_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LongType@318abdff}

w2022-03-15 01:08:39 DEBUG throwQueryException() : no errors
w2022-03-15 01:08:39 DEBUG HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 01:08:39 DEBUG SQL: select ticket0_.id as id1_1_, ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id where user1_.id=?
w2022-03-15 01:08:39 DEBUG throwQueryException() : no errors
w2022-03-15 01:08:39 DEBUG select ticket0_.id as id1_1_, ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id where user1_.id=?
w2022-03-15 01:08:39 DEBUG Result set row: 0
w2022-03-15 01:08:39 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 01:08:39 DEBUG Result set row: 1
w2022-03-15 01:08:39 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 01:08:39 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 01:08:39 DEBUG Processing attribute `client` : value = 1
w2022-03-15 01:08:39 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 01:08:39 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 01:08:39 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 01:08:39 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#1]
w2022-03-15 01:08:39 DEBUG Processing attribute `firstName` : value = admin
w2022-03-15 01:08:39 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 01:08:39 DEBUG Processing attribute `lastName` : value = admin
w2022-03-15 01:08:39 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 01:08:39 DEBUG Processing attribute `login` : value = admin
w2022-03-15 01:08:39 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 01:08:39 DEBUG Processing attribute `password` : value = admin
w2022-03-15 01:08:39 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 01:08:39 DEBUG Processing attribute `role` : value = ADMIN
w2022-03-15 01:08:39 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 01:08:39 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#1]
w2022-03-15 01:08:39 DEBUG Done entity load : ru.edu.helpdesk.entity.User#1
w2022-03-15 01:08:39 DEBUG Processing attribute `status` : value = WORKING
w2022-03-15 01:08:39 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 01:08:39 DEBUG Processing attribute `support` : value = 2
w2022-03-15 01:08:39 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 01:08:39 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 01:08:39 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 01:08:39 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#2]
w2022-03-15 01:08:39 DEBUG Processing attribute `firstName` : value = support
w2022-03-15 01:08:39 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 01:08:39 DEBUG Processing attribute `lastName` : value = support
w2022-03-15 01:08:39 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 01:08:39 DEBUG Processing attribute `login` : value = support
w2022-03-15 01:08:39 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 01:08:39 DEBUG Processing attribute `password` : value = support
w2022-03-15 01:08:39 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 01:08:39 DEBUG Processing attribute `role` : value = SUPPORT
w2022-03-15 01:08:39 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 01:08:39 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#2]
w2022-03-15 01:08:39 DEBUG Done entity load : ru.edu.helpdesk.entity.User#2
w2022-03-15 01:08:39 DEBUG Processing attribute `title` : value = Hello user1
w2022-03-15 01:08:39 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 01:08:39 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 01:08:39 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 01:08:39 DEBUG Processing attribute `client` : value = 1
w2022-03-15 01:08:39 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 01:08:39 DEBUG Processing attribute `status` : value = OPEN
w2022-03-15 01:08:39 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 01:08:39 DEBUG Processing attribute `support` : value = null
w2022-03-15 01:08:39 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 01:08:39 DEBUG Processing attribute `title` : value = Title2
w2022-03-15 01:08:39 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 01:08:39 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 01:08:42 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 01:08:42 DEBUG begin
w2022-03-15 01:08:42 DEBUG committing
w2022-03-15 01:10:29 DEBUG Logging Provider: org.jboss.logging.Log4j2LoggerProvider
w2022-03-15 01:10:29 DEBUG PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@65a2ae2e
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/%d0%9e%d0%bb%d1%8c%d0%b3%d0%b0/Desktop/Java/Project/Project1/helpdeskproject/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		ru.edu.helpdesk.entity.Comment
		ru.edu.helpdesk.entity.Ticket
		ru.edu.helpdesk.entity.User]
	Mapping files names []
	Properties []
w2022-03-15 01:10:29 DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
w2022-03-15 01:10:29 DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
w2022-03-15 01:10:29 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
w2022-03-15 01:10:29 INFO  HHH000412: Hibernate ORM core version 5.6.5.Final
w2022-03-15 01:10:29 DEBUG HHH000206: hibernate.properties not found
w2022-03-15 01:10:29 DEBUG Overriding existing service binding [org.hibernate.secure.spi.JaccService]
w2022-03-15 01:10:30 DEBUG Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
w2022-03-15 01:10:30 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
w2022-03-15 01:10:30 INFO  HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
w2022-03-15 01:10:30 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@7f676619
w2022-03-15 01:10:30 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@7f676619
w2022-03-15 01:10:30 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7f676619
w2022-03-15 01:10:30 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2fd27643
w2022-03-15 01:10:30 DEBUG Adding type registration true_false -> org.hibernate.type.TrueFalseType@1bc8128f
w2022-03-15 01:10:30 DEBUG Adding type registration yes_no -> org.hibernate.type.YesNoType@384fe32c
w2022-03-15 01:10:30 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@3d2586ec
w2022-03-15 01:10:30 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@3d2586ec
w2022-03-15 01:10:30 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3d2586ec
w2022-03-15 01:10:30 DEBUG Adding type registration character -> org.hibernate.type.CharacterType@98ec6a2
w2022-03-15 01:10:30 DEBUG Adding type registration char -> org.hibernate.type.CharacterType@98ec6a2
w2022-03-15 01:10:30 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@98ec6a2
w2022-03-15 01:10:30 DEBUG Adding type registration short -> org.hibernate.type.ShortType@69fe8bbc
w2022-03-15 01:10:30 DEBUG Adding type registration short -> org.hibernate.type.ShortType@69fe8bbc
w2022-03-15 01:10:30 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.ShortType@69fe8bbc
w2022-03-15 01:10:30 DEBUG Adding type registration integer -> org.hibernate.type.IntegerType@52d77f59
w2022-03-15 01:10:30 DEBUG Adding type registration int -> org.hibernate.type.IntegerType@52d77f59
w2022-03-15 01:10:30 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@52d77f59
w2022-03-15 01:10:30 DEBUG Adding type registration long -> org.hibernate.type.LongType@10b9408e
w2022-03-15 01:10:30 DEBUG Adding type registration long -> org.hibernate.type.LongType@10b9408e
w2022-03-15 01:10:30 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.LongType@10b9408e
w2022-03-15 01:10:30 DEBUG Adding type registration float -> org.hibernate.type.FloatType@31a2c453
w2022-03-15 01:10:30 DEBUG Adding type registration float -> org.hibernate.type.FloatType@31a2c453
w2022-03-15 01:10:30 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.FloatType@31a2c453
w2022-03-15 01:10:30 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@1ba53816
w2022-03-15 01:10:30 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@1ba53816
w2022-03-15 01:10:30 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1ba53816
w2022-03-15 01:10:30 DEBUG Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2c515784
w2022-03-15 01:10:30 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2c515784
w2022-03-15 01:10:30 DEBUG Adding type registration big_integer -> org.hibernate.type.BigIntegerType@ca8369f
w2022-03-15 01:10:30 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@ca8369f
w2022-03-15 01:10:30 DEBUG Adding type registration string -> org.hibernate.type.StringType@54696d1c
w2022-03-15 01:10:30 DEBUG Adding type registration java.lang.String -> org.hibernate.type.StringType@54696d1c
w2022-03-15 01:10:30 DEBUG Adding type registration nstring -> org.hibernate.type.StringNVarcharType@67097b32
w2022-03-15 01:10:30 DEBUG Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2909f4d6
w2022-03-15 01:10:30 DEBUG Adding type registration url -> org.hibernate.type.UrlType@234aedbd
w2022-03-15 01:10:30 DEBUG Adding type registration java.net.URL -> org.hibernate.type.UrlType@234aedbd
w2022-03-15 01:10:30 DEBUG Adding type registration Duration -> org.hibernate.type.DurationType@13cf1750
w2022-03-15 01:10:30 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.DurationType@13cf1750
w2022-03-15 01:10:30 DEBUG Adding type registration Instant -> org.hibernate.type.InstantType@5d549d77
w2022-03-15 01:10:30 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5d549d77
w2022-03-15 01:10:30 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@37fdaa81
w2022-03-15 01:10:30 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@37fdaa81
w2022-03-15 01:10:30 DEBUG Adding type registration LocalDate -> org.hibernate.type.LocalDateType@78300dcd
w2022-03-15 01:10:30 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@78300dcd
w2022-03-15 01:10:30 DEBUG Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@4e3cb69a
w2022-03-15 01:10:30 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@4e3cb69a
w2022-03-15 01:10:30 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@48467b4f
w2022-03-15 01:10:30 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@48467b4f
w2022-03-15 01:10:30 DEBUG Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@17cd5077
w2022-03-15 01:10:30 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@17cd5077
w2022-03-15 01:10:30 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3092283e
w2022-03-15 01:10:30 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3092283e
w2022-03-15 01:10:30 DEBUG Adding type registration date -> org.hibernate.type.DateType@4ef7caa2
w2022-03-15 01:10:30 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.DateType@4ef7caa2
w2022-03-15 01:10:30 DEBUG Adding type registration time -> org.hibernate.type.TimeType@6ddc26a
w2022-03-15 01:10:30 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6ddc26a
w2022-03-15 01:10:30 DEBUG Adding type registration timestamp -> org.hibernate.type.TimestampType@7441366
w2022-03-15 01:10:30 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7441366
w2022-03-15 01:10:30 DEBUG Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7441366
w2022-03-15 01:10:30 DEBUG Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1832f509
w2022-03-15 01:10:30 DEBUG Adding type registration calendar -> org.hibernate.type.CalendarType@63a74a4c
w2022-03-15 01:10:30 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@63a74a4c
w2022-03-15 01:10:30 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@63a74a4c
w2022-03-15 01:10:30 DEBUG Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2e2c29bd
w2022-03-15 01:10:30 DEBUG Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@41ee42c8
w2022-03-15 01:10:30 DEBUG Adding type registration locale -> org.hibernate.type.LocaleType@6140ebc5
w2022-03-15 01:10:30 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6140ebc5
w2022-03-15 01:10:30 DEBUG Adding type registration currency -> org.hibernate.type.CurrencyType@750c5a61
w2022-03-15 01:10:30 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@750c5a61
w2022-03-15 01:10:30 DEBUG Adding type registration timezone -> org.hibernate.type.TimeZoneType@21d16adf
w2022-03-15 01:10:30 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@21d16adf
w2022-03-15 01:10:30 DEBUG Adding type registration class -> org.hibernate.type.ClassType@7efa30e6
w2022-03-15 01:10:30 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7efa30e6
w2022-03-15 01:10:30 DEBUG Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@33d9268a
w2022-03-15 01:10:30 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@33d9268a
w2022-03-15 01:10:30 DEBUG Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2dc24798
w2022-03-15 01:10:30 DEBUG Adding type registration binary -> org.hibernate.type.BinaryType@7d618f1f
w2022-03-15 01:10:30 DEBUG Adding type registration byte[] -> org.hibernate.type.BinaryType@7d618f1f
w2022-03-15 01:10:30 DEBUG Adding type registration [B -> org.hibernate.type.BinaryType@7d618f1f
w2022-03-15 01:10:30 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6f874998
w2022-03-15 01:10:30 DEBUG Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6f874998
w2022-03-15 01:10:30 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6f874998
w2022-03-15 01:10:30 DEBUG Adding type registration row_version -> org.hibernate.type.RowVersionType@266e2cb0
w2022-03-15 01:10:30 DEBUG Adding type registration image -> org.hibernate.type.ImageType@49bf2a37
w2022-03-15 01:10:30 DEBUG Adding type registration characters -> org.hibernate.type.CharArrayType@77b354
w2022-03-15 01:10:30 DEBUG Adding type registration char[] -> org.hibernate.type.CharArrayType@77b354
w2022-03-15 01:10:30 DEBUG Adding type registration [C -> org.hibernate.type.CharArrayType@77b354
w2022-03-15 01:10:30 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@49c3d9ce
w2022-03-15 01:10:30 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@49c3d9ce
w2022-03-15 01:10:30 DEBUG Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@49c3d9ce
w2022-03-15 01:10:30 DEBUG Adding type registration text -> org.hibernate.type.TextType@1337ab06
w2022-03-15 01:10:30 DEBUG Adding type registration ntext -> org.hibernate.type.NTextType@485c84b5
w2022-03-15 01:10:30 DEBUG Adding type registration blob -> org.hibernate.type.BlobType@494e72ea
w2022-03-15 01:10:30 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@494e72ea
w2022-03-15 01:10:30 DEBUG Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@34000068
w2022-03-15 01:10:30 DEBUG Adding type registration clob -> org.hibernate.type.ClobType@323a81dc
w2022-03-15 01:10:30 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@323a81dc
w2022-03-15 01:10:30 DEBUG Adding type registration nclob -> org.hibernate.type.NClobType@51ba102c
w2022-03-15 01:10:30 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@51ba102c
w2022-03-15 01:10:30 DEBUG Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@32218d40
w2022-03-15 01:10:30 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@17c38ef
w2022-03-15 01:10:30 DEBUG Adding type registration serializable -> org.hibernate.type.SerializableType@a34f78b
w2022-03-15 01:10:30 DEBUG Adding type registration object -> org.hibernate.type.ObjectType@1ec07bd6
w2022-03-15 01:10:30 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1ec07bd6
w2022-03-15 01:10:30 DEBUG Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@724f1fde
w2022-03-15 01:10:30 DEBUG Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6fccc48a
w2022-03-15 01:10:30 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5129a157
w2022-03-15 01:10:30 DEBUG Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3bf5d853
w2022-03-15 01:10:30 DEBUG Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@314e911c
w2022-03-15 01:10:30 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@382ffb2b
w2022-03-15 01:10:30 DEBUG Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2410c660
w2022-03-15 01:10:30 DEBUG Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3132b5f1
w2022-03-15 01:10:30 INFO  HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
w2022-03-15 01:10:30 DEBUG Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@3629bb50] into BootstrapContext; was [null]
w2022-03-15 01:10:30 DEBUG ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@3629bb50) [was null]
w2022-03-15 01:10:30 DEBUG Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@227cbb9b] into BootstrapContext; was [null]
w2022-03-15 01:10:30 DEBUG Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@63a6f41e] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@3257312b]
w2022-03-15 01:10:30 DEBUG Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@3629bb50]
w2022-03-15 01:10:30 DEBUG ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@3629bb50]
w2022-03-15 01:10:30 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
w2022-03-15 01:10:30 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
w2022-03-15 01:10:30 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
w2022-03-15 01:10:30 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
w2022-03-15 01:10:30 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
w2022-03-15 01:10:30 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
w2022-03-15 01:10:30 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
w2022-03-15 01:10:30 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
w2022-03-15 01:10:30 DEBUG Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
w2022-03-15 01:10:30 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
w2022-03-15 01:10:30 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
w2022-03-15 01:10:30 DEBUG Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
w2022-03-15 01:10:30 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
w2022-03-15 01:10:30 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
w2022-03-15 01:10:30 DEBUG Database ->
       name : SQLite
    version : 3.36.0
      major : 3
      minor : 36
w2022-03-15 01:10:30 DEBUG Driver ->
       name : SQLite JDBC
    version : 3.36.0.3
      major : 3
      minor : 36
w2022-03-15 01:10:30 DEBUG JDBC version : 2.1
w2022-03-15 01:10:30 INFO  HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
w2022-03-15 01:10:30 DEBUG JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
w2022-03-15 01:10:30 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
w2022-03-15 01:10:30 DEBUG HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [2] less than 4
w2022-03-15 01:10:30 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2ee68050] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7ba7a989]
w2022-03-15 01:10:30 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
w2022-03-15 01:10:30 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.Comment
w2022-03-15 01:10:30 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 01:10:30 DEBUG Import with entity name Comment
w2022-03-15 01:10:30 DEBUG Bind entity ru.edu.helpdesk.entity.Comment on table comment
w2022-03-15 01:10:30 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 01:10:30 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Comment] is safe
w2022-03-15 01:10:30 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Comment
w2022-03-15 01:10:30 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 01:10:30 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Comment:id]
w2022-03-15 01:10:30 DEBUG building SimpleValue for id
w2022-03-15 01:10:30 DEBUG Building property id
w2022-03-15 01:10:30 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 01:10:30 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=message, insertable=true, updatable=true, unique=false}
w2022-03-15 01:10:30 DEBUG MetadataSourceProcessor property message with lazy=false
w2022-03-15 01:10:30 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Comment:message]
w2022-03-15 01:10:30 DEBUG building SimpleValue for message
w2022-03-15 01:10:30 DEBUG Building property message
w2022-03-15 01:10:30 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 01:10:30 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=ticket, insertable=true, updatable=true, unique=false}
w2022-03-15 01:10:30 DEBUG Building property ticket
w2022-03-15 01:10:30 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 01:10:30 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=user, insertable=true, updatable=true, unique=false}
w2022-03-15 01:10:30 DEBUG Building property user
w2022-03-15 01:10:30 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 01:10:30 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 01:10:30 DEBUG Import with entity name Ticket
w2022-03-15 01:10:30 DEBUG Bind entity ru.edu.helpdesk.entity.Ticket on table ticket
w2022-03-15 01:10:30 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 01:10:30 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Ticket] is safe
w2022-03-15 01:10:30 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Ticket
w2022-03-15 01:10:30 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 01:10:30 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:id]
w2022-03-15 01:10:30 DEBUG building SimpleValue for id
w2022-03-15 01:10:30 DEBUG Building property id
w2022-03-15 01:10:30 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 01:10:30 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 01:10:30 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=client, insertable=true, updatable=true, unique=false}
w2022-03-15 01:10:30 DEBUG Building property client
w2022-03-15 01:10:30 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=status, insertable=true, updatable=true, unique=false}
w2022-03-15 01:10:30 DEBUG MetadataSourceProcessor property status with lazy=false
w2022-03-15 01:10:30 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:status]
w2022-03-15 01:10:30 DEBUG building SimpleValue for status
w2022-03-15 01:10:30 DEBUG Building property status
w2022-03-15 01:10:30 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 01:10:30 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=support, insertable=true, updatable=true, unique=false}
w2022-03-15 01:10:30 DEBUG Building property support
w2022-03-15 01:10:30 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=title, insertable=true, updatable=true, unique=false}
w2022-03-15 01:10:30 DEBUG MetadataSourceProcessor property title with lazy=false
w2022-03-15 01:10:30 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:title]
w2022-03-15 01:10:30 DEBUG building SimpleValue for title
w2022-03-15 01:10:30 DEBUG Building property title
w2022-03-15 01:10:30 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.User
w2022-03-15 01:10:30 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 01:10:30 DEBUG Import with entity name User
w2022-03-15 01:10:30 DEBUG Bind entity ru.edu.helpdesk.entity.User on table user
w2022-03-15 01:10:30 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 01:10:30 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.User] is safe
w2022-03-15 01:10:30 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.User
w2022-03-15 01:10:30 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 01:10:30 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:id]
w2022-03-15 01:10:30 DEBUG building SimpleValue for id
w2022-03-15 01:10:30 DEBUG Building property id
w2022-03-15 01:10:30 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 01:10:30 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
w2022-03-15 01:10:30 DEBUG MetadataSourceProcessor property firstName with lazy=false
w2022-03-15 01:10:30 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:firstName]
w2022-03-15 01:10:30 DEBUG building SimpleValue for firstName
w2022-03-15 01:10:30 DEBUG Building property firstName
w2022-03-15 01:10:30 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
w2022-03-15 01:10:30 DEBUG MetadataSourceProcessor property lastName with lazy=false
w2022-03-15 01:10:30 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:lastName]
w2022-03-15 01:10:30 DEBUG building SimpleValue for lastName
w2022-03-15 01:10:30 DEBUG Building property lastName
w2022-03-15 01:10:30 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=login, insertable=true, updatable=true, unique=false}
w2022-03-15 01:10:30 DEBUG MetadataSourceProcessor property login with lazy=false
w2022-03-15 01:10:30 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:login]
w2022-03-15 01:10:30 DEBUG building SimpleValue for login
w2022-03-15 01:10:30 DEBUG Building property login
w2022-03-15 01:10:30 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
w2022-03-15 01:10:30 DEBUG MetadataSourceProcessor property password with lazy=false
w2022-03-15 01:10:30 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:password]
w2022-03-15 01:10:30 DEBUG building SimpleValue for password
w2022-03-15 01:10:30 DEBUG Building property password
w2022-03-15 01:10:30 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=role, insertable=true, updatable=true, unique=false}
w2022-03-15 01:10:30 DEBUG MetadataSourceProcessor property role with lazy=false
w2022-03-15 01:10:30 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:role]
w2022-03-15 01:10:30 DEBUG building SimpleValue for role
w2022-03-15 01:10:30 DEBUG Building property role
w2022-03-15 01:10:30 DEBUG Starting fillSimpleValue for id
w2022-03-15 01:10:30 DEBUG Starting fillSimpleValue for message
w2022-03-15 01:10:30 DEBUG Starting fillSimpleValue for id
w2022-03-15 01:10:30 DEBUG Starting fillSimpleValue for status
w2022-03-15 01:10:30 DEBUG Starting fillSimpleValue for title
w2022-03-15 01:10:30 DEBUG Starting fillSimpleValue for id
w2022-03-15 01:10:30 DEBUG Starting fillSimpleValue for firstName
w2022-03-15 01:10:30 DEBUG Starting fillSimpleValue for lastName
w2022-03-15 01:10:30 DEBUG Starting fillSimpleValue for login
w2022-03-15 01:10:30 DEBUG Starting fillSimpleValue for password
w2022-03-15 01:10:30 DEBUG Starting fillSimpleValue for role
w2022-03-15 01:10:30 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [comment]
w2022-03-15 01:10:30 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [ticket]
w2022-03-15 01:10:30 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [user]
w2022-03-15 01:10:30 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 01:10:30 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 01:10:30 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 01:10:30 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 01:10:30 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 01:10:30 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 01:10:30 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 01:10:30 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 01:10:30 DEBUG Building session factory
w2022-03-15 01:10:30 DEBUG SessionFactory name : null
w2022-03-15 01:10:30 DEBUG Automatic flush during beforeCompletion(): enabled
w2022-03-15 01:10:30 DEBUG Automatic session close at end of transaction: disabled
w2022-03-15 01:10:30 DEBUG Statistics: disabled
w2022-03-15 01:10:30 DEBUG Deleted entity synthetic identifier rollback: disabled
w2022-03-15 01:10:30 DEBUG Default entity-mode: pojo
w2022-03-15 01:10:30 DEBUG Check Nullability in Core (should be disabled when Bean Validation is on): enabled
w2022-03-15 01:10:30 DEBUG Allow initialization of lazy state outside session : disabled
w2022-03-15 01:10:30 DEBUG Using BatchFetchStyle : LEGACY
w2022-03-15 01:10:30 DEBUG Default batch fetch size: -1
w2022-03-15 01:10:30 DEBUG Maximum outer join fetch depth: null
w2022-03-15 01:10:30 DEBUG Default null ordering: NONE
w2022-03-15 01:10:30 DEBUG Order SQL updates by primary key: disabled
w2022-03-15 01:10:30 DEBUG Order SQL inserts for batching: disabled
w2022-03-15 01:10:30 DEBUG multi-tenancy strategy : NONE
w2022-03-15 01:10:30 DEBUG JTA Track by Thread: enabled
w2022-03-15 01:10:30 DEBUG Query language substitutions: {}
w2022-03-15 01:10:30 DEBUG Named query checking : enabled
w2022-03-15 01:10:30 DEBUG Second-level cache: disabled
w2022-03-15 01:10:30 DEBUG Second-level query cache: disabled
w2022-03-15 01:10:30 DEBUG Second-level query cache factory: null
w2022-03-15 01:10:30 DEBUG Second-level cache region prefix: null
w2022-03-15 01:10:30 DEBUG Optimize second-level cache for minimal puts: disabled
w2022-03-15 01:10:30 DEBUG Structured second-level cache entries: disabled
w2022-03-15 01:10:30 DEBUG Second-level cache direct-reference entries: disabled
w2022-03-15 01:10:30 DEBUG Automatic eviction of collection cache: disabled
w2022-03-15 01:10:30 DEBUG JDBC batch size: 1
w2022-03-15 01:10:30 DEBUG JDBC batch updates for versioned data: enabled
w2022-03-15 01:10:30 DEBUG Scrollable result sets: disabled
w2022-03-15 01:10:30 DEBUG Wrap result sets: disabled
w2022-03-15 01:10:30 DEBUG JDBC3 getGeneratedKeys(): enabled
w2022-03-15 01:10:30 DEBUG JDBC result set fetch size: null
w2022-03-15 01:10:30 DEBUG Connection release mode: ON_CLOSE
w2022-03-15 01:10:30 DEBUG Generate SQL with comments: disabled
w2022-03-15 01:10:30 DEBUG JPA compliance - query : disabled
w2022-03-15 01:10:30 DEBUG JPA compliance - closed-handling : disabled
w2022-03-15 01:10:30 DEBUG JPA compliance - lists : disabled
w2022-03-15 01:10:30 DEBUG JPA compliance - transactions : disabled
w2022-03-15 01:10:30 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 01:10:30 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 01:10:30 DEBUG Session factory constructed with filter configurations : {}
w2022-03-15 01:10:30 DEBUG Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=true, java.specification.version=1.8, file.encoding.pkg=sun.io, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@744dd874, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.SQLiteDialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\charsets.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\cldrdata.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\dnsns.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\jaccess.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\localedata.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\nashorn.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunec.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunmscapi.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\zipfs.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jce.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jfr.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jsse.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\management-agent.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\resources.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\rt.jar;C:\Users\Ольга\Desktop\Java\Project\Project1\helpdeskproject\target\classes;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\2.6.4\spring-boot-starter-data-jpa-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\2.6.4\spring-boot-starter-jdbc-2.6.4.jar;C:\Users\Ольга\.m2\repository\com\zaxxer\HikariCP\4.0.3\HikariCP-4.0.3.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-jdbc\5.3.16\spring-jdbc-5.3.16.jar;C:\Users\Ольга\.m2\repository\jakarta\transaction\jakarta.transaction-api\1.3.3\jakarta.transaction-api-1.3.3.jar;C:\Users\Ольга\.m2\repository\jakarta\persistence\jakarta.persistence-api\2.2.3\jakarta.persistence-api-2.2.3.jar;C:\Users\Ольга\.m2\repository\org\hibernate\hibernate-core\5.6.5.Final\hibernate-core-5.6.5.Final.jar;C:\Users\Ольга\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy\1.11.22\byte-buddy-1.11.22.jar;C:\Users\Ольга\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ольга\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Ольга\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.6\jaxb-runtime-2.3.6.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\txw2\2.3.6\txw2-2.3.6.jar;C:\Users\Ольга\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.12\istack-commons-runtime-3.0.12.jar;C:\Users\Ольга\.m2\repository\com\sun\activation\jakarta.activation\1.2.2\jakarta.activation-1.2.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\data\spring-data-jpa\2.6.2\spring-data-jpa-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\data\spring-data-commons\2.6.2\spring-data-commons-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-orm\5.3.16\spring-orm-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-context\5.3.16\spring-context-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-tx\5.3.16\spring-tx-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-beans\5.3.16\spring-beans-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-aspects\5.3.16\spring-aspects-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-security\2.6.4\spring-boot-starter-security-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter\2.6.4\spring-boot-starter-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-logging\2.6.4\spring-boot-starter-logging-2.6.4.jar;C:\Users\Ольга\.m2\repository\ch\qos\logback\logback-classic\1.2.10\logback-classic-1.2.10.jar;C:\Users\Ольга\.m2\repository\ch\qos\logback\logback-core\1.2.10\logback-core-1.2.10.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.17.1\log4j-to-slf4j-2.17.1.jar;C:\Users\Ольга\.m2\repository\org\slf4j\jul-to-slf4j\1.7.36\jul-to-slf4j-1.7.36.jar;C:\Users\Ольга\.m2\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;C:\Users\Ольга\.m2\repository\org\yaml\snakeyaml\1.29\snakeyaml-1.29.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-aop\5.3.16\spring-aop-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-config\5.6.2\spring-security-config-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-web\5.6.2\spring-security-web-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-expression\5.3.16\spring-expression-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-web\2.6.4\spring-boot-starter-web-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-json\2.6.4\spring-boot-starter-json-2.6.4.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.13.1\jackson-datatype-jdk8-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.13.1\jackson-datatype-jsr310-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.13.1\jackson-module-parameter-names-2.13.1.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\2.6.4\spring-boot-starter-tomcat-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.58\tomcat-embed-core-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\9.0.58\tomcat-embed-el-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.58\tomcat-embed-websocket-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-web\5.3.16\spring-web-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-webmvc\5.3.16\spring-webmvc-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-devtools\2.6.4\spring-boot-devtools-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot\2.6.4\spring-boot-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\2.6.4\spring-boot-autoconfigure-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\xerial\sqlite-jdbc\3.36.0.3\sqlite-jdbc-3.36.0.3.jar;C:\Users\Ольга\.m2\repository\com\zsoltfabok\sqlite-dialect\1.0\sqlite-dialect-1.0.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-aop\2.6.2\spring-boot-starter-aop-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\aspectj\aspectjweaver\1.9.7\aspectjweaver-1.9.7.jar;C:\Users\Ольга\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.3\jakarta.xml.bind-api-2.3.3.jar;C:\Users\Ольга\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.2\jakarta.activation-api-1.2.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-core\5.3.16\spring-core-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-jcl\5.3.16\spring-jcl-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-core\5.6.2\spring-security-core-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-crypto\5.6.2\spring-security-crypto-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\projectlombok\lombok\1.18.22\lombok-1.18.22.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\2.6.4\spring-boot-starter-thymeleaf-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\thymeleaf-spring5\3.0.15.RELEASE\thymeleaf-spring5-3.0.15.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\thymeleaf\3.0.15.RELEASE\thymeleaf-3.0.15.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\attoparser\attoparser\2.0.5.RELEASE\attoparser-2.0.5.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-java8time\3.0.4.RELEASE\thymeleaf-extras-java8time-3.0.4.RELEASE.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.1\jackson-databind-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.1\jackson-annotations-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.1\jackson-core-2.13.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-api\2.4.1\log4j-api-2.4.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-core\2.4.1\log4j-core-2.4.1.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.2\lib\idea_rt.jar, java.vm.vendor=Temurin, sun.arch.data.model=64, user.variant=, java.vendor.url=https://adoptium.net/, catalina.useNaming=false, user.timezone=Europe/Moscow, jakarta.persistence.sharedCache.mode=UNSPECIFIED, os.name=Windows 10, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), user.country=RU, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\bin, sun.java.command=ru.edu.helpdesk.HelpdeskApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@7db1c289, com.sun.management.jmxremote=, javax.persistence.sharedCache.mode=UNSPECIFIED, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, user.home=C:\Users\Ольга, user.language=ru, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre, file.separator=\, spring.output.ansi.enabled=always, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, sun.boot.class.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\resources.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\rt.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\sunrsasign.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jsse.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jce.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\charsets.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jfr.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\classes, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_312-b07, user.name=Эльдорадо, spring.jmx.enabled=true, path.separator=;, os.version=10.0, java.endorsed.dirs=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\endorsed, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=default, spring.beaninfo.ignore=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=C:\Users\134E~1\AppData\Local\Temp\, catalina.home=C:\Users\Ольга\AppData\Local\Temp\tomcat.8080.7770435475129701846, java.version=1.8.0_312, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\Ольга\Desktop\Java\Project\Project1\helpdeskproject, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=10772, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\Ольга\AppData\Local\Temp\tomcat.8080.7770435475129701846, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@46362fac, java.library.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\windows\System32\OpenSSH\;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\Program Files\apache-maven-3.8.4\bin;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Ольга\AppData\Local\Microsoft\WindowsApps;C:\Users\Ольга\AppData\Local\Programs\Microsoft VS Code\bin;C:\SQLite;C:\Users\Ольга\AppData\Roaming\npm;C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.2\bin;;., java.vendor=Temurin, java.vm.info=mixed mode, java.vm.version=25.312-b07, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, java.ext.dirs=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext;C:\windows\Sun\Java\lib\ext, hibernate.connection.datasource=HikariDataSource (HikariPool-1), hibernate.hbm2ddl.import_files=data/import.sql, java.class.version=52.0}
w2022-03-15 01:10:30 DEBUG Skipping JACC integration as it was not enabled
w2022-03-15 01:10:30 DEBUG Using ORDINAL-based conversion for Enum ru.edu.helpdesk.entity.UserRole
w2022-03-15 01:10:30 DEBUG Using ORDINAL-based conversion for Enum ru.edu.helpdesk.entity.TicketStatus
w2022-03-15 01:10:30 DEBUG Instantiated session factory
w2022-03-15 01:10:30 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2ee68050] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@1b5bf3b9]
w2022-03-15 01:10:30 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.User] is safe
w2022-03-15 01:10:30 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.User
w2022-03-15 01:10:30 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:10:30 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:10:30 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:10:30 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:10:30 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Ticket] is safe
w2022-03-15 01:10:30 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Ticket
w2022-03-15 01:10:30 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:10:30 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:10:30 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:10:30 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:10:30 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:10:30 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:10:30 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:10:30 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:10:30 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Comment] is safe
w2022-03-15 01:10:30 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Comment
w2022-03-15 01:10:30 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:10:30 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:10:30 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:10:30 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:10:30 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.User
w2022-03-15 01:10:30 DEBUG  Version select: select id from user where id =?
w2022-03-15 01:10:30 DEBUG  Snapshot select: select user_.id, user_.first_name as first_na2_2_, user_.last_name as last_nam3_2_, user_.login as login4_2_, user_.password as password5_2_, user_.role as role6_2_ from user user_ where user_.id=?
w2022-03-15 01:10:30 DEBUG  Insert 0: insert into user (first_name, last_name, login, password, role, id) values (?, ?, ?, ?, ?, ?)
w2022-03-15 01:10:30 DEBUG  Update 0: update user set first_name=?, last_name=?, login=?, password=?, role=? where id=?
w2022-03-15 01:10:30 DEBUG  Delete 0: delete from user where id=?
w2022-03-15 01:10:30 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ac5a94d]
w2022-03-15 01:10:30 DEBUG Visiting attribute path : firstName
w2022-03-15 01:10:30 DEBUG Visiting attribute path : lastName
w2022-03-15 01:10:30 DEBUG Visiting attribute path : login
w2022-03-15 01:10:30 DEBUG Visiting attribute path : password
w2022-03-15 01:10:30 DEBUG Visiting attribute path : role
w2022-03-15 01:10:30 DEBUG Building LoadPlan...
w2022-03-15 01:10:30 DEBUG processing queryspace <gen:0>
w2022-03-15 01:10:30 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.User)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

w2022-03-15 01:10:30 DEBUG Static select for entity ru.edu.helpdesk.entity.User [NONE]: select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 01:10:30 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.Ticket
w2022-03-15 01:10:30 DEBUG  Version select: select id from ticket where id =?
w2022-03-15 01:10:30 DEBUG  Snapshot select: select ticket_.id, ticket_.client_id as client_i4_1_, ticket_.status as status2_1_, ticket_.support_id as support_5_1_, ticket_.title as title3_1_ from ticket ticket_ where ticket_.id=?
w2022-03-15 01:10:30 DEBUG  Insert 0: insert into ticket (client_id, status, support_id, title, id) values (?, ?, ?, ?, ?)
w2022-03-15 01:10:30 DEBUG  Update 0: update ticket set client_id=?, status=?, support_id=?, title=? where id=?
w2022-03-15 01:10:30 DEBUG  Delete 0: delete from ticket where id=?
w2022-03-15 01:10:30 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67355547]
w2022-03-15 01:10:30 DEBUG Visiting attribute path : client
w2022-03-15 01:10:30 DEBUG Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68454247]
w2022-03-15 01:10:30 DEBUG Visiting attribute path : client.firstName
w2022-03-15 01:10:30 DEBUG Visiting attribute path : client.lastName
w2022-03-15 01:10:30 DEBUG Visiting attribute path : client.login
w2022-03-15 01:10:30 DEBUG Visiting attribute path : client.password
w2022-03-15 01:10:30 DEBUG Visiting attribute path : client.role
w2022-03-15 01:10:30 DEBUG Visiting attribute path : status
w2022-03-15 01:10:30 DEBUG Visiting attribute path : support
w2022-03-15 01:10:30 DEBUG Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a624c36]
w2022-03-15 01:10:30 DEBUG Visiting attribute path : support.firstName
w2022-03-15 01:10:30 DEBUG Visiting attribute path : support.lastName
w2022-03-15 01:10:30 DEBUG Visiting attribute path : support.login
w2022-03-15 01:10:30 DEBUG Visiting attribute path : support.password
w2022-03-15 01:10:30 DEBUG Visiting attribute path : support.role
w2022-03-15 01:10:30 DEBUG Visiting attribute path : title
w2022-03-15 01:10:30 DEBUG Building LoadPlan...
w2022-03-15 01:10:30 DEBUG processing queryspace <gen:0>
w2022-03-15 01:10:30 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.Ticket)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.Ticket, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.Ticket)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:1>, path=ru.edu.helpdesk.entity.Ticket.client)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:2>, path=ru.edu.helpdesk.entity.Ticket.support)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.Ticket)
          - SQL table alias mapping - ticket0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(client)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
          - JOIN (JoinDefinedByMetadata(support)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user2_
                - alias suffix - 2_
                - suffixed key columns - {id1_2_2_}

w2022-03-15 01:10:30 DEBUG Static select for entity ru.edu.helpdesk.entity.Ticket [NONE]: select ticket0_.id as id1_1_0_, ticket0_.client_id as client_i4_1_0_, ticket0_.status as status2_1_0_, ticket0_.support_id as support_5_1_0_, ticket0_.title as title3_1_0_, user1_.id as id1_2_1_, user1_.first_name as first_na2_2_1_, user1_.last_name as last_nam3_2_1_, user1_.login as login4_2_1_, user1_.password as password5_2_1_, user1_.role as role6_2_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id left outer join user user2_ on ticket0_.support_id=user2_.id where ticket0_.id=?
w2022-03-15 01:10:30 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.Comment
w2022-03-15 01:10:30 DEBUG  Version select: select id from comment where id =?
w2022-03-15 01:10:30 DEBUG  Snapshot select: select comment_.id, comment_.message as message2_0_, comment_.ticket_id as ticket_i3_0_, comment_.user_id as user_id4_0_ from comment comment_ where comment_.id=?
w2022-03-15 01:10:30 DEBUG  Insert 0: insert into comment (message, ticket_id, user_id, id) values (?, ?, ?, ?)
w2022-03-15 01:10:30 DEBUG  Update 0: update comment set message=?, ticket_id=?, user_id=? where id=?
w2022-03-15 01:10:30 DEBUG  Delete 0: delete from comment where id=?
w2022-03-15 01:10:30 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23475989]
w2022-03-15 01:10:30 DEBUG Visiting attribute path : message
w2022-03-15 01:10:30 DEBUG Visiting attribute path : ticket
w2022-03-15 01:10:30 DEBUG Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21a73338]
w2022-03-15 01:10:30 DEBUG Visiting attribute path : ticket.client
w2022-03-15 01:10:30 DEBUG Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c56fa8c]
w2022-03-15 01:10:30 DEBUG Visiting attribute path : ticket.client.firstName
w2022-03-15 01:10:30 DEBUG Visiting attribute path : ticket.client.lastName
w2022-03-15 01:10:30 DEBUG Visiting attribute path : ticket.client.login
w2022-03-15 01:10:30 DEBUG Visiting attribute path : ticket.client.password
w2022-03-15 01:10:30 DEBUG Visiting attribute path : ticket.client.role
w2022-03-15 01:10:30 DEBUG Visiting attribute path : ticket.status
w2022-03-15 01:10:30 DEBUG Visiting attribute path : ticket.support
w2022-03-15 01:10:30 DEBUG Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a1bbfc0]
w2022-03-15 01:10:30 DEBUG Visiting attribute path : ticket.support.firstName
w2022-03-15 01:10:30 DEBUG Visiting attribute path : ticket.support.lastName
w2022-03-15 01:10:30 DEBUG Visiting attribute path : ticket.support.login
w2022-03-15 01:10:30 DEBUG Visiting attribute path : ticket.support.password
w2022-03-15 01:10:30 DEBUG Visiting attribute path : ticket.support.role
w2022-03-15 01:10:30 DEBUG Visiting attribute path : ticket.title
w2022-03-15 01:10:30 DEBUG Visiting attribute path : user
w2022-03-15 01:10:30 DEBUG Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4785322c]
w2022-03-15 01:10:30 DEBUG Visiting attribute path : user.firstName
w2022-03-15 01:10:30 DEBUG Visiting attribute path : user.lastName
w2022-03-15 01:10:30 DEBUG Visiting attribute path : user.login
w2022-03-15 01:10:30 DEBUG Visiting attribute path : user.password
w2022-03-15 01:10:30 DEBUG Visiting attribute path : user.role
w2022-03-15 01:10:30 DEBUG Building LoadPlan...
w2022-03-15 01:10:30 DEBUG processing queryspace <gen:0>
w2022-03-15 01:10:30 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.Comment)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.Comment, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.Comment)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.Ticket, querySpaceUid=<gen:1>, path=ru.edu.helpdesk.entity.Comment.ticket)
             - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:2>, path=ru.edu.helpdesk.entity.Comment.ticket.client)
             - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:3>, path=ru.edu.helpdesk.entity.Comment.ticket.support)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:4>, path=ru.edu.helpdesk.entity.Comment.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(ticket)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ru.edu.helpdesk.entity.Ticket)
                - SQL table alias mapping - ticket1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(client)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=ru.edu.helpdesk.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}
                - JOIN (JoinDefinedByMetadata(support)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=ru.edu.helpdesk.entity.User)
                      - SQL table alias mapping - user3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_2_3_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user4_
                - alias suffix - 4_
                - suffixed key columns - {id1_2_4_}

w2022-03-15 01:10:30 DEBUG Static select for entity ru.edu.helpdesk.entity.Comment [NONE]: select comment0_.id as id1_0_0_, comment0_.message as message2_0_0_, comment0_.ticket_id as ticket_i3_0_0_, comment0_.user_id as user_id4_0_0_, ticket1_.id as id1_1_1_, ticket1_.client_id as client_i4_1_1_, ticket1_.status as status2_1_1_, ticket1_.support_id as support_5_1_1_, ticket1_.title as title3_1_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_, user3_.id as id1_2_3_, user3_.first_name as first_na2_2_3_, user3_.last_name as last_nam3_2_3_, user3_.login as login4_2_3_, user3_.password as password5_2_3_, user3_.role as role6_2_3_, user4_.id as id1_2_4_, user4_.first_name as first_na2_2_4_, user4_.last_name as last_nam3_2_4_, user4_.login as login4_2_4_, user4_.password as password5_2_4_, user4_.role as role6_2_4_ from comment comment0_ left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id left outer join user user2_ on ticket1_.client_id=user2_.id left outer join user user3_ on ticket1_.support_id=user3_.id left outer join user user4_ on comment0_.user_id=user4_.id where comment0_.id=?
w2022-03-15 01:10:30 DEBUG drop table if exists comment
w2022-03-15 01:10:30 DEBUG drop table if exists hibernate_sequence
w2022-03-15 01:10:30 DEBUG drop table if exists ticket
w2022-03-15 01:10:30 DEBUG drop table if exists user
w2022-03-15 01:10:30 DEBUG create table comment (id bigint not null, message varchar(255) not null, ticket_id bigint, user_id bigint, primary key (id))
w2022-03-15 01:10:30 DEBUG create table hibernate_sequence (next_val bigint)
w2022-03-15 01:10:30 DEBUG insert into hibernate_sequence values ( 1 )
w2022-03-15 01:10:30 DEBUG create table ticket (id bigint not null, status integer, title varchar(255) not null, client_id bigint, support_id bigint, primary key (id))
w2022-03-15 01:10:30 DEBUG create table user (id bigint not null, first_name varchar(255), last_name varchar(255), login varchar(255) not null, password varchar(255) not null, role integer, primary key (id))
w2022-03-15 01:10:30 INFO  HHH000476: Executing import script 'file:/C:/Users/%d0%9e%d0%bb%d1%8c%d0%b3%d0%b0/Desktop/Java/Project/Project1/helpdeskproject/target/classes/data/import.sql'
w2022-03-15 01:10:30 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (1, 'admin', 'admin', 'admin', 'admin', 0)
w2022-03-15 01:10:30 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (2, 'support', 'support', 'support', 'support', 1)
w2022-03-15 01:10:30 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (3, 'user1', 'user1', 'user1', 'user1', 2)
w2022-03-15 01:10:30 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (4, 'user2', 'user2', 'user2', 'user2', 2)
w2022-03-15 01:10:30 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (1, 1, 'Hello user1',1, 2)
w2022-03-15 01:10:30 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (2, 0, 'Title2', 1, NULL)
w2022-03-15 01:10:30 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (3, 0, 'Message user2', 4, NULL)
w2022-03-15 01:10:30 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (1, "Hello ticket1", 1, 3)
w2022-03-15 01:10:30 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (2, "Hello ticket2", 2, 3)
w2022-03-15 01:10:30 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (3, "Hello ticket11", 1, 2)
w2022-03-15 01:10:30 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (4, "Hello ticket111", 1, 2)
w2022-03-15 01:10:30 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (5, "Hello ticket22", 2, 2)
w2022-03-15 01:10:30 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (6, "Hello ticket3", 3, 4)
w2022-03-15 01:10:30 DEBUG UPDATE hibernate_sequence SET next_val = 8 WHERE next_val = 1
w2022-03-15 01:10:30 INFO  HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
w2022-03-15 01:10:30 DEBUG Checking 0 named HQL queries
w2022-03-15 01:10:30 DEBUG Checking 0 named SQL queries
w2022-03-15 01:10:30 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 01:10:30 DEBUG Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5b877e8a
w2022-03-15 01:10:30 DEBUG Registering SessionFactory: fd53d2e2-95a0-460f-918c-6cec71ba0412 (<unnamed>)
w2022-03-15 01:10:30 DEBUG Not binding SessionFactory to JNDI, no JNDI name configured
w2022-03-15 01:10:30 DEBUG Statistics initialized [enabled=false]
w2022-03-15 01:10:30 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 01:10:30 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 01:10:30 DEBUG HHH000031: Closing
w2022-03-15 01:10:30 DEBUG Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@6df65060] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@1b5bf3b9]
w2022-03-15 01:10:30 DEBUG Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
w2022-03-15 01:10:30 DEBUG Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
w2022-03-15 01:11:01 DEBUG Logging Provider: org.jboss.logging.Log4j2LoggerProvider
w2022-03-15 01:11:01 DEBUG PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@7aa52917
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/%d0%9e%d0%bb%d1%8c%d0%b3%d0%b0/Desktop/Java/Project/Project1/helpdeskproject/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		ru.edu.helpdesk.entity.Comment
		ru.edu.helpdesk.entity.Ticket
		ru.edu.helpdesk.entity.User]
	Mapping files names []
	Properties []
w2022-03-15 01:11:01 DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
w2022-03-15 01:11:01 DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
w2022-03-15 01:11:01 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
w2022-03-15 01:11:01 INFO  HHH000412: Hibernate ORM core version 5.6.5.Final
w2022-03-15 01:11:01 DEBUG HHH000206: hibernate.properties not found
w2022-03-15 01:11:01 DEBUG Overriding existing service binding [org.hibernate.secure.spi.JaccService]
w2022-03-15 01:11:01 DEBUG Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
w2022-03-15 01:11:01 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
w2022-03-15 01:11:01 INFO  HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
w2022-03-15 01:11:01 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@737ad03b
w2022-03-15 01:11:01 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@737ad03b
w2022-03-15 01:11:01 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@737ad03b
w2022-03-15 01:11:01 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6ea1ff76
w2022-03-15 01:11:01 DEBUG Adding type registration true_false -> org.hibernate.type.TrueFalseType@3d976712
w2022-03-15 01:11:01 DEBUG Adding type registration yes_no -> org.hibernate.type.YesNoType@1b901a45
w2022-03-15 01:11:01 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@71484c0f
w2022-03-15 01:11:01 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@71484c0f
w2022-03-15 01:11:01 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@71484c0f
w2022-03-15 01:11:01 DEBUG Adding type registration character -> org.hibernate.type.CharacterType@7d7a1c3c
w2022-03-15 01:11:01 DEBUG Adding type registration char -> org.hibernate.type.CharacterType@7d7a1c3c
w2022-03-15 01:11:01 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7d7a1c3c
w2022-03-15 01:11:01 DEBUG Adding type registration short -> org.hibernate.type.ShortType@7ba7024f
w2022-03-15 01:11:01 DEBUG Adding type registration short -> org.hibernate.type.ShortType@7ba7024f
w2022-03-15 01:11:01 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7ba7024f
w2022-03-15 01:11:01 DEBUG Adding type registration integer -> org.hibernate.type.IntegerType@113c9bac
w2022-03-15 01:11:01 DEBUG Adding type registration int -> org.hibernate.type.IntegerType@113c9bac
w2022-03-15 01:11:01 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@113c9bac
w2022-03-15 01:11:01 DEBUG Adding type registration long -> org.hibernate.type.LongType@a756388
w2022-03-15 01:11:01 DEBUG Adding type registration long -> org.hibernate.type.LongType@a756388
w2022-03-15 01:11:01 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.LongType@a756388
w2022-03-15 01:11:01 DEBUG Adding type registration float -> org.hibernate.type.FloatType@39590374
w2022-03-15 01:11:01 DEBUG Adding type registration float -> org.hibernate.type.FloatType@39590374
w2022-03-15 01:11:01 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.FloatType@39590374
w2022-03-15 01:11:01 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@708ac61
w2022-03-15 01:11:01 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@708ac61
w2022-03-15 01:11:01 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@708ac61
w2022-03-15 01:11:01 DEBUG Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@56af4131
w2022-03-15 01:11:01 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@56af4131
w2022-03-15 01:11:01 DEBUG Adding type registration big_integer -> org.hibernate.type.BigIntegerType@24701d92
w2022-03-15 01:11:01 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@24701d92
w2022-03-15 01:11:01 DEBUG Adding type registration string -> org.hibernate.type.StringType@9aa79fe
w2022-03-15 01:11:01 DEBUG Adding type registration java.lang.String -> org.hibernate.type.StringType@9aa79fe
w2022-03-15 01:11:01 DEBUG Adding type registration nstring -> org.hibernate.type.StringNVarcharType@503b332a
w2022-03-15 01:11:01 DEBUG Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7f8dc6d0
w2022-03-15 01:11:01 DEBUG Adding type registration url -> org.hibernate.type.UrlType@370b0d29
w2022-03-15 01:11:01 DEBUG Adding type registration java.net.URL -> org.hibernate.type.UrlType@370b0d29
w2022-03-15 01:11:01 DEBUG Adding type registration Duration -> org.hibernate.type.DurationType@7252201e
w2022-03-15 01:11:01 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7252201e
w2022-03-15 01:11:01 DEBUG Adding type registration Instant -> org.hibernate.type.InstantType@39271169
w2022-03-15 01:11:01 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.InstantType@39271169
w2022-03-15 01:11:01 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7d525b16
w2022-03-15 01:11:01 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7d525b16
w2022-03-15 01:11:01 DEBUG Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3c92cd86
w2022-03-15 01:11:01 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3c92cd86
w2022-03-15 01:11:01 DEBUG Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@44e62bea
w2022-03-15 01:11:01 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@44e62bea
w2022-03-15 01:11:01 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@78b76c17
w2022-03-15 01:11:01 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@78b76c17
w2022-03-15 01:11:01 DEBUG Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@521faddb
w2022-03-15 01:11:01 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@521faddb
w2022-03-15 01:11:01 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7610e262
w2022-03-15 01:11:01 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7610e262
w2022-03-15 01:11:01 DEBUG Adding type registration date -> org.hibernate.type.DateType@16df90a4
w2022-03-15 01:11:01 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.DateType@16df90a4
w2022-03-15 01:11:01 DEBUG Adding type registration time -> org.hibernate.type.TimeType@346b6d44
w2022-03-15 01:11:01 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.TimeType@346b6d44
w2022-03-15 01:11:01 DEBUG Adding type registration timestamp -> org.hibernate.type.TimestampType@529ce216
w2022-03-15 01:11:01 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@529ce216
w2022-03-15 01:11:01 DEBUG Adding type registration java.util.Date -> org.hibernate.type.TimestampType@529ce216
w2022-03-15 01:11:01 DEBUG Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4815b899
w2022-03-15 01:11:01 DEBUG Adding type registration calendar -> org.hibernate.type.CalendarType@29feaf0d
w2022-03-15 01:11:01 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@29feaf0d
w2022-03-15 01:11:01 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@29feaf0d
w2022-03-15 01:11:01 DEBUG Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@669a6f6e
w2022-03-15 01:11:01 DEBUG Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@2c6c857b
w2022-03-15 01:11:01 DEBUG Adding type registration locale -> org.hibernate.type.LocaleType@7044f294
w2022-03-15 01:11:01 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7044f294
w2022-03-15 01:11:01 DEBUG Adding type registration currency -> org.hibernate.type.CurrencyType@148203a
w2022-03-15 01:11:01 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@148203a
w2022-03-15 01:11:01 DEBUG Adding type registration timezone -> org.hibernate.type.TimeZoneType@3a0ca296
w2022-03-15 01:11:01 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3a0ca296
w2022-03-15 01:11:01 DEBUG Adding type registration class -> org.hibernate.type.ClassType@e982723
w2022-03-15 01:11:01 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.ClassType@e982723
w2022-03-15 01:11:01 DEBUG Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@373c1c50
w2022-03-15 01:11:01 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@373c1c50
w2022-03-15 01:11:01 DEBUG Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@47ab6012
w2022-03-15 01:11:01 DEBUG Adding type registration binary -> org.hibernate.type.BinaryType@ff42cb4
w2022-03-15 01:11:01 DEBUG Adding type registration byte[] -> org.hibernate.type.BinaryType@ff42cb4
w2022-03-15 01:11:01 DEBUG Adding type registration [B -> org.hibernate.type.BinaryType@ff42cb4
w2022-03-15 01:11:01 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7fbeb2ee
w2022-03-15 01:11:01 DEBUG Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7fbeb2ee
w2022-03-15 01:11:01 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7fbeb2ee
w2022-03-15 01:11:01 DEBUG Adding type registration row_version -> org.hibernate.type.RowVersionType@317bf632
w2022-03-15 01:11:01 DEBUG Adding type registration image -> org.hibernate.type.ImageType@572d1ff0
w2022-03-15 01:11:01 DEBUG Adding type registration characters -> org.hibernate.type.CharArrayType@32a729ef
w2022-03-15 01:11:01 DEBUG Adding type registration char[] -> org.hibernate.type.CharArrayType@32a729ef
w2022-03-15 01:11:01 DEBUG Adding type registration [C -> org.hibernate.type.CharArrayType@32a729ef
w2022-03-15 01:11:01 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1a33f8e3
w2022-03-15 01:11:01 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1a33f8e3
w2022-03-15 01:11:01 DEBUG Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1a33f8e3
w2022-03-15 01:11:01 DEBUG Adding type registration text -> org.hibernate.type.TextType@5cce84d9
w2022-03-15 01:11:01 DEBUG Adding type registration ntext -> org.hibernate.type.NTextType@374abea7
w2022-03-15 01:11:01 DEBUG Adding type registration blob -> org.hibernate.type.BlobType@4d6b31ac
w2022-03-15 01:11:01 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4d6b31ac
w2022-03-15 01:11:01 DEBUG Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@b13da91
w2022-03-15 01:11:01 DEBUG Adding type registration clob -> org.hibernate.type.ClobType@50ed19e1
w2022-03-15 01:11:01 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@50ed19e1
w2022-03-15 01:11:01 DEBUG Adding type registration nclob -> org.hibernate.type.NClobType@2c7ca0d3
w2022-03-15 01:11:01 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2c7ca0d3
w2022-03-15 01:11:01 DEBUG Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4c4da762
w2022-03-15 01:11:01 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@46266adf
w2022-03-15 01:11:01 DEBUG Adding type registration serializable -> org.hibernate.type.SerializableType@5ac2d153
w2022-03-15 01:11:01 DEBUG Adding type registration object -> org.hibernate.type.ObjectType@2c396e8
w2022-03-15 01:11:01 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2c396e8
w2022-03-15 01:11:01 DEBUG Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4646dff0
w2022-03-15 01:11:01 DEBUG Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@582c7506
w2022-03-15 01:11:01 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@13308feb
w2022-03-15 01:11:01 DEBUG Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@65ea2d8d
w2022-03-15 01:11:01 DEBUG Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1523d79f
w2022-03-15 01:11:01 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2e9c0478
w2022-03-15 01:11:01 DEBUG Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@39c48997
w2022-03-15 01:11:01 DEBUG Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@df65d67
w2022-03-15 01:11:01 INFO  HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
w2022-03-15 01:11:01 DEBUG Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@24466069] into BootstrapContext; was [null]
w2022-03-15 01:11:01 DEBUG ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@24466069) [was null]
w2022-03-15 01:11:01 DEBUG Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@7bfee99a] into BootstrapContext; was [null]
w2022-03-15 01:11:01 DEBUG Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@17aa6d34] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@60033847]
w2022-03-15 01:11:01 DEBUG Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@24466069]
w2022-03-15 01:11:01 DEBUG ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@24466069]
w2022-03-15 01:11:01 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
w2022-03-15 01:11:01 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
w2022-03-15 01:11:01 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
w2022-03-15 01:11:01 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
w2022-03-15 01:11:01 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
w2022-03-15 01:11:01 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
w2022-03-15 01:11:01 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
w2022-03-15 01:11:01 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
w2022-03-15 01:11:01 DEBUG Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
w2022-03-15 01:11:01 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
w2022-03-15 01:11:01 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
w2022-03-15 01:11:01 DEBUG Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
w2022-03-15 01:11:01 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
w2022-03-15 01:11:01 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
w2022-03-15 01:11:01 DEBUG Database ->
       name : SQLite
    version : 3.36.0
      major : 3
      minor : 36
w2022-03-15 01:11:01 DEBUG Driver ->
       name : SQLite JDBC
    version : 3.36.0.3
      major : 3
      minor : 36
w2022-03-15 01:11:01 DEBUG JDBC version : 2.1
w2022-03-15 01:11:01 INFO  HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
w2022-03-15 01:11:01 DEBUG JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
w2022-03-15 01:11:01 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
w2022-03-15 01:11:01 DEBUG HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [2] less than 4
w2022-03-15 01:11:01 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@656791cd] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@f2f31f1]
w2022-03-15 01:11:01 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
w2022-03-15 01:11:01 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.Comment
w2022-03-15 01:11:01 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 01:11:01 DEBUG Import with entity name Comment
w2022-03-15 01:11:01 DEBUG Bind entity ru.edu.helpdesk.entity.Comment on table comment
w2022-03-15 01:11:01 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 01:11:01 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Comment] is safe
w2022-03-15 01:11:01 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Comment
w2022-03-15 01:11:01 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 01:11:01 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Comment:id]
w2022-03-15 01:11:01 DEBUG building SimpleValue for id
w2022-03-15 01:11:01 DEBUG Building property id
w2022-03-15 01:11:01 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 01:11:01 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=message, insertable=true, updatable=true, unique=false}
w2022-03-15 01:11:01 DEBUG MetadataSourceProcessor property message with lazy=false
w2022-03-15 01:11:01 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Comment:message]
w2022-03-15 01:11:01 DEBUG building SimpleValue for message
w2022-03-15 01:11:01 DEBUG Building property message
w2022-03-15 01:11:01 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 01:11:01 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=ticket, insertable=true, updatable=true, unique=false}
w2022-03-15 01:11:01 DEBUG Building property ticket
w2022-03-15 01:11:01 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 01:11:01 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=user, insertable=true, updatable=true, unique=false}
w2022-03-15 01:11:01 DEBUG Building property user
w2022-03-15 01:11:01 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 01:11:01 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 01:11:01 DEBUG Import with entity name Ticket
w2022-03-15 01:11:01 DEBUG Bind entity ru.edu.helpdesk.entity.Ticket on table ticket
w2022-03-15 01:11:01 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 01:11:01 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Ticket] is safe
w2022-03-15 01:11:01 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Ticket
w2022-03-15 01:11:01 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 01:11:01 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:id]
w2022-03-15 01:11:01 DEBUG building SimpleValue for id
w2022-03-15 01:11:01 DEBUG Building property id
w2022-03-15 01:11:01 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 01:11:01 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 01:11:01 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=client, insertable=true, updatable=true, unique=false}
w2022-03-15 01:11:01 DEBUG Building property client
w2022-03-15 01:11:01 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=status, insertable=true, updatable=true, unique=false}
w2022-03-15 01:11:01 DEBUG MetadataSourceProcessor property status with lazy=false
w2022-03-15 01:11:01 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:status]
w2022-03-15 01:11:01 DEBUG building SimpleValue for status
w2022-03-15 01:11:01 DEBUG Building property status
w2022-03-15 01:11:01 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 01:11:01 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=support, insertable=true, updatable=true, unique=false}
w2022-03-15 01:11:01 DEBUG Building property support
w2022-03-15 01:11:01 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=title, insertable=true, updatable=true, unique=false}
w2022-03-15 01:11:01 DEBUG MetadataSourceProcessor property title with lazy=false
w2022-03-15 01:11:01 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:title]
w2022-03-15 01:11:01 DEBUG building SimpleValue for title
w2022-03-15 01:11:01 DEBUG Building property title
w2022-03-15 01:11:01 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.User
w2022-03-15 01:11:01 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 01:11:01 DEBUG Import with entity name User
w2022-03-15 01:11:01 DEBUG Bind entity ru.edu.helpdesk.entity.User on table user
w2022-03-15 01:11:01 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 01:11:01 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.User] is safe
w2022-03-15 01:11:01 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.User
w2022-03-15 01:11:01 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 01:11:01 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:id]
w2022-03-15 01:11:01 DEBUG building SimpleValue for id
w2022-03-15 01:11:01 DEBUG Building property id
w2022-03-15 01:11:01 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 01:11:01 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
w2022-03-15 01:11:01 DEBUG MetadataSourceProcessor property firstName with lazy=false
w2022-03-15 01:11:01 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:firstName]
w2022-03-15 01:11:01 DEBUG building SimpleValue for firstName
w2022-03-15 01:11:01 DEBUG Building property firstName
w2022-03-15 01:11:01 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
w2022-03-15 01:11:01 DEBUG MetadataSourceProcessor property lastName with lazy=false
w2022-03-15 01:11:01 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:lastName]
w2022-03-15 01:11:01 DEBUG building SimpleValue for lastName
w2022-03-15 01:11:01 DEBUG Building property lastName
w2022-03-15 01:11:01 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=login, insertable=true, updatable=true, unique=false}
w2022-03-15 01:11:01 DEBUG MetadataSourceProcessor property login with lazy=false
w2022-03-15 01:11:01 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:login]
w2022-03-15 01:11:01 DEBUG building SimpleValue for login
w2022-03-15 01:11:01 DEBUG Building property login
w2022-03-15 01:11:01 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
w2022-03-15 01:11:01 DEBUG MetadataSourceProcessor property password with lazy=false
w2022-03-15 01:11:01 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:password]
w2022-03-15 01:11:01 DEBUG building SimpleValue for password
w2022-03-15 01:11:01 DEBUG Building property password
w2022-03-15 01:11:01 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=role, insertable=true, updatable=true, unique=false}
w2022-03-15 01:11:01 DEBUG MetadataSourceProcessor property role with lazy=false
w2022-03-15 01:11:01 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:role]
w2022-03-15 01:11:01 DEBUG building SimpleValue for role
w2022-03-15 01:11:01 DEBUG Building property role
w2022-03-15 01:11:01 DEBUG Starting fillSimpleValue for id
w2022-03-15 01:11:01 DEBUG Starting fillSimpleValue for message
w2022-03-15 01:11:01 DEBUG Starting fillSimpleValue for id
w2022-03-15 01:11:01 DEBUG Starting fillSimpleValue for status
w2022-03-15 01:11:01 DEBUG Starting fillSimpleValue for title
w2022-03-15 01:11:01 DEBUG Starting fillSimpleValue for id
w2022-03-15 01:11:01 DEBUG Starting fillSimpleValue for firstName
w2022-03-15 01:11:01 DEBUG Starting fillSimpleValue for lastName
w2022-03-15 01:11:01 DEBUG Starting fillSimpleValue for login
w2022-03-15 01:11:01 DEBUG Starting fillSimpleValue for password
w2022-03-15 01:11:01 DEBUG Starting fillSimpleValue for role
w2022-03-15 01:11:01 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [comment]
w2022-03-15 01:11:01 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [ticket]
w2022-03-15 01:11:01 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [user]
w2022-03-15 01:11:01 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 01:11:01 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 01:11:01 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 01:11:01 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 01:11:01 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 01:11:01 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 01:11:01 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 01:11:01 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 01:11:01 DEBUG Building session factory
w2022-03-15 01:11:01 DEBUG SessionFactory name : null
w2022-03-15 01:11:01 DEBUG Automatic flush during beforeCompletion(): enabled
w2022-03-15 01:11:01 DEBUG Automatic session close at end of transaction: disabled
w2022-03-15 01:11:01 DEBUG Statistics: disabled
w2022-03-15 01:11:01 DEBUG Deleted entity synthetic identifier rollback: disabled
w2022-03-15 01:11:01 DEBUG Default entity-mode: pojo
w2022-03-15 01:11:01 DEBUG Check Nullability in Core (should be disabled when Bean Validation is on): enabled
w2022-03-15 01:11:01 DEBUG Allow initialization of lazy state outside session : disabled
w2022-03-15 01:11:01 DEBUG Using BatchFetchStyle : LEGACY
w2022-03-15 01:11:01 DEBUG Default batch fetch size: -1
w2022-03-15 01:11:01 DEBUG Maximum outer join fetch depth: null
w2022-03-15 01:11:01 DEBUG Default null ordering: NONE
w2022-03-15 01:11:01 DEBUG Order SQL updates by primary key: disabled
w2022-03-15 01:11:01 DEBUG Order SQL inserts for batching: disabled
w2022-03-15 01:11:01 DEBUG multi-tenancy strategy : NONE
w2022-03-15 01:11:01 DEBUG JTA Track by Thread: enabled
w2022-03-15 01:11:01 DEBUG Query language substitutions: {}
w2022-03-15 01:11:01 DEBUG Named query checking : enabled
w2022-03-15 01:11:01 DEBUG Second-level cache: disabled
w2022-03-15 01:11:01 DEBUG Second-level query cache: disabled
w2022-03-15 01:11:01 DEBUG Second-level query cache factory: null
w2022-03-15 01:11:01 DEBUG Second-level cache region prefix: null
w2022-03-15 01:11:01 DEBUG Optimize second-level cache for minimal puts: disabled
w2022-03-15 01:11:01 DEBUG Structured second-level cache entries: disabled
w2022-03-15 01:11:01 DEBUG Second-level cache direct-reference entries: disabled
w2022-03-15 01:11:01 DEBUG Automatic eviction of collection cache: disabled
w2022-03-15 01:11:01 DEBUG JDBC batch size: 1
w2022-03-15 01:11:01 DEBUG JDBC batch updates for versioned data: enabled
w2022-03-15 01:11:01 DEBUG Scrollable result sets: disabled
w2022-03-15 01:11:01 DEBUG Wrap result sets: disabled
w2022-03-15 01:11:01 DEBUG JDBC3 getGeneratedKeys(): enabled
w2022-03-15 01:11:01 DEBUG JDBC result set fetch size: null
w2022-03-15 01:11:01 DEBUG Connection release mode: ON_CLOSE
w2022-03-15 01:11:01 DEBUG Generate SQL with comments: disabled
w2022-03-15 01:11:01 DEBUG JPA compliance - query : disabled
w2022-03-15 01:11:01 DEBUG JPA compliance - closed-handling : disabled
w2022-03-15 01:11:01 DEBUG JPA compliance - lists : disabled
w2022-03-15 01:11:01 DEBUG JPA compliance - transactions : disabled
w2022-03-15 01:11:01 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 01:11:01 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 01:11:01 DEBUG Session factory constructed with filter configurations : {}
w2022-03-15 01:11:01 DEBUG Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=true, java.specification.version=1.8, file.encoding.pkg=sun.io, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@3bf9b76b, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.SQLiteDialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\charsets.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\cldrdata.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\dnsns.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\jaccess.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\localedata.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\nashorn.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunec.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunmscapi.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\zipfs.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jce.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jfr.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jsse.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\management-agent.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\resources.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\rt.jar;C:\Users\Ольга\Desktop\Java\Project\Project1\helpdeskproject\target\classes;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\2.6.4\spring-boot-starter-data-jpa-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\2.6.4\spring-boot-starter-jdbc-2.6.4.jar;C:\Users\Ольга\.m2\repository\com\zaxxer\HikariCP\4.0.3\HikariCP-4.0.3.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-jdbc\5.3.16\spring-jdbc-5.3.16.jar;C:\Users\Ольга\.m2\repository\jakarta\transaction\jakarta.transaction-api\1.3.3\jakarta.transaction-api-1.3.3.jar;C:\Users\Ольга\.m2\repository\jakarta\persistence\jakarta.persistence-api\2.2.3\jakarta.persistence-api-2.2.3.jar;C:\Users\Ольга\.m2\repository\org\hibernate\hibernate-core\5.6.5.Final\hibernate-core-5.6.5.Final.jar;C:\Users\Ольга\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy\1.11.22\byte-buddy-1.11.22.jar;C:\Users\Ольга\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ольга\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Ольга\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.6\jaxb-runtime-2.3.6.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\txw2\2.3.6\txw2-2.3.6.jar;C:\Users\Ольга\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.12\istack-commons-runtime-3.0.12.jar;C:\Users\Ольга\.m2\repository\com\sun\activation\jakarta.activation\1.2.2\jakarta.activation-1.2.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\data\spring-data-jpa\2.6.2\spring-data-jpa-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\data\spring-data-commons\2.6.2\spring-data-commons-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-orm\5.3.16\spring-orm-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-context\5.3.16\spring-context-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-tx\5.3.16\spring-tx-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-beans\5.3.16\spring-beans-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-aspects\5.3.16\spring-aspects-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-security\2.6.4\spring-boot-starter-security-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter\2.6.4\spring-boot-starter-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-logging\2.6.4\spring-boot-starter-logging-2.6.4.jar;C:\Users\Ольга\.m2\repository\ch\qos\logback\logback-classic\1.2.10\logback-classic-1.2.10.jar;C:\Users\Ольга\.m2\repository\ch\qos\logback\logback-core\1.2.10\logback-core-1.2.10.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.17.1\log4j-to-slf4j-2.17.1.jar;C:\Users\Ольга\.m2\repository\org\slf4j\jul-to-slf4j\1.7.36\jul-to-slf4j-1.7.36.jar;C:\Users\Ольга\.m2\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;C:\Users\Ольга\.m2\repository\org\yaml\snakeyaml\1.29\snakeyaml-1.29.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-aop\5.3.16\spring-aop-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-config\5.6.2\spring-security-config-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-web\5.6.2\spring-security-web-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-expression\5.3.16\spring-expression-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-web\2.6.4\spring-boot-starter-web-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-json\2.6.4\spring-boot-starter-json-2.6.4.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.13.1\jackson-datatype-jdk8-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.13.1\jackson-datatype-jsr310-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.13.1\jackson-module-parameter-names-2.13.1.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\2.6.4\spring-boot-starter-tomcat-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.58\tomcat-embed-core-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\9.0.58\tomcat-embed-el-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.58\tomcat-embed-websocket-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-web\5.3.16\spring-web-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-webmvc\5.3.16\spring-webmvc-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-devtools\2.6.4\spring-boot-devtools-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot\2.6.4\spring-boot-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\2.6.4\spring-boot-autoconfigure-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\xerial\sqlite-jdbc\3.36.0.3\sqlite-jdbc-3.36.0.3.jar;C:\Users\Ольга\.m2\repository\com\zsoltfabok\sqlite-dialect\1.0\sqlite-dialect-1.0.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-aop\2.6.2\spring-boot-starter-aop-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\aspectj\aspectjweaver\1.9.7\aspectjweaver-1.9.7.jar;C:\Users\Ольга\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.3\jakarta.xml.bind-api-2.3.3.jar;C:\Users\Ольга\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.2\jakarta.activation-api-1.2.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-core\5.3.16\spring-core-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-jcl\5.3.16\spring-jcl-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-core\5.6.2\spring-security-core-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-crypto\5.6.2\spring-security-crypto-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\projectlombok\lombok\1.18.22\lombok-1.18.22.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\2.6.4\spring-boot-starter-thymeleaf-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\thymeleaf-spring5\3.0.15.RELEASE\thymeleaf-spring5-3.0.15.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\thymeleaf\3.0.15.RELEASE\thymeleaf-3.0.15.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\attoparser\attoparser\2.0.5.RELEASE\attoparser-2.0.5.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-java8time\3.0.4.RELEASE\thymeleaf-extras-java8time-3.0.4.RELEASE.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.1\jackson-databind-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.1\jackson-annotations-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.1\jackson-core-2.13.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-api\2.4.1\log4j-api-2.4.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-core\2.4.1\log4j-core-2.4.1.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.2\lib\idea_rt.jar, java.vm.vendor=Temurin, sun.arch.data.model=64, user.variant=, java.vendor.url=https://adoptium.net/, catalina.useNaming=false, user.timezone=Europe/Moscow, jakarta.persistence.sharedCache.mode=UNSPECIFIED, os.name=Windows 10, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), user.country=RU, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\bin, sun.java.command=ru.edu.helpdesk.HelpdeskApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@334b7ceb, com.sun.management.jmxremote=, javax.persistence.sharedCache.mode=UNSPECIFIED, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, user.home=C:\Users\Ольга, user.language=ru, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre, file.separator=\, spring.output.ansi.enabled=always, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, sun.boot.class.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\resources.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\rt.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\sunrsasign.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jsse.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jce.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\charsets.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jfr.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\classes, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_312-b07, user.name=Эльдорадо, spring.jmx.enabled=true, path.separator=;, os.version=10.0, java.endorsed.dirs=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\endorsed, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=default, spring.beaninfo.ignore=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=C:\Users\134E~1\AppData\Local\Temp\, catalina.home=C:\Users\Ольга\AppData\Local\Temp\tomcat.8080.7030658735089586055, java.version=1.8.0_312, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\Ольга\Desktop\Java\Project\Project1\helpdeskproject, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=3660, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\Ольга\AppData\Local\Temp\tomcat.8080.7030658735089586055, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@78ee624, java.library.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\windows\System32\OpenSSH\;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\Program Files\apache-maven-3.8.4\bin;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Ольга\AppData\Local\Microsoft\WindowsApps;C:\Users\Ольга\AppData\Local\Programs\Microsoft VS Code\bin;C:\SQLite;C:\Users\Ольга\AppData\Roaming\npm;C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.2\bin;;., java.vendor=Temurin, java.vm.info=mixed mode, java.vm.version=25.312-b07, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, java.ext.dirs=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext;C:\windows\Sun\Java\lib\ext, hibernate.connection.datasource=HikariDataSource (HikariPool-1), hibernate.hbm2ddl.import_files=data/import.sql, java.class.version=52.0}
w2022-03-15 01:11:01 DEBUG Skipping JACC integration as it was not enabled
w2022-03-15 01:11:01 DEBUG Using ORDINAL-based conversion for Enum ru.edu.helpdesk.entity.UserRole
w2022-03-15 01:11:01 DEBUG Using ORDINAL-based conversion for Enum ru.edu.helpdesk.entity.TicketStatus
w2022-03-15 01:11:01 DEBUG Instantiated session factory
w2022-03-15 01:11:01 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@656791cd] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6015f676]
w2022-03-15 01:11:01 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.User] is safe
w2022-03-15 01:11:01 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.User
w2022-03-15 01:11:01 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:11:01 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:11:01 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:11:01 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:11:01 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Ticket] is safe
w2022-03-15 01:11:01 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Ticket
w2022-03-15 01:11:01 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:11:01 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:11:01 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:11:01 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:11:01 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:11:01 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:11:01 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:11:01 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:11:01 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Comment] is safe
w2022-03-15 01:11:01 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Comment
w2022-03-15 01:11:01 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:11:01 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:11:01 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:11:01 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:11:01 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.User
w2022-03-15 01:11:01 DEBUG  Version select: select id from user where id =?
w2022-03-15 01:11:01 DEBUG  Snapshot select: select user_.id, user_.first_name as first_na2_2_, user_.last_name as last_nam3_2_, user_.login as login4_2_, user_.password as password5_2_, user_.role as role6_2_ from user user_ where user_.id=?
w2022-03-15 01:11:01 DEBUG  Insert 0: insert into user (first_name, last_name, login, password, role, id) values (?, ?, ?, ?, ?, ?)
w2022-03-15 01:11:01 DEBUG  Update 0: update user set first_name=?, last_name=?, login=?, password=?, role=? where id=?
w2022-03-15 01:11:01 DEBUG  Delete 0: delete from user where id=?
w2022-03-15 01:11:01 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3fa5bddc]
w2022-03-15 01:11:01 DEBUG Visiting attribute path : firstName
w2022-03-15 01:11:01 DEBUG Visiting attribute path : lastName
w2022-03-15 01:11:01 DEBUG Visiting attribute path : login
w2022-03-15 01:11:01 DEBUG Visiting attribute path : password
w2022-03-15 01:11:01 DEBUG Visiting attribute path : role
w2022-03-15 01:11:01 DEBUG Building LoadPlan...
w2022-03-15 01:11:01 DEBUG processing queryspace <gen:0>
w2022-03-15 01:11:01 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.User)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

w2022-03-15 01:11:01 DEBUG Static select for entity ru.edu.helpdesk.entity.User [NONE]: select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 01:11:01 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.Ticket
w2022-03-15 01:11:01 DEBUG  Version select: select id from ticket where id =?
w2022-03-15 01:11:01 DEBUG  Snapshot select: select ticket_.id, ticket_.client_id as client_i4_1_, ticket_.status as status2_1_, ticket_.support_id as support_5_1_, ticket_.title as title3_1_ from ticket ticket_ where ticket_.id=?
w2022-03-15 01:11:01 DEBUG  Insert 0: insert into ticket (client_id, status, support_id, title, id) values (?, ?, ?, ?, ?)
w2022-03-15 01:11:01 DEBUG  Update 0: update ticket set client_id=?, status=?, support_id=?, title=? where id=?
w2022-03-15 01:11:01 DEBUG  Delete 0: delete from ticket where id=?
w2022-03-15 01:11:01 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16ca3149]
w2022-03-15 01:11:01 DEBUG Visiting attribute path : client
w2022-03-15 01:11:01 DEBUG Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1905f2a9]
w2022-03-15 01:11:01 DEBUG Visiting attribute path : client.firstName
w2022-03-15 01:11:01 DEBUG Visiting attribute path : client.lastName
w2022-03-15 01:11:01 DEBUG Visiting attribute path : client.login
w2022-03-15 01:11:01 DEBUG Visiting attribute path : client.password
w2022-03-15 01:11:01 DEBUG Visiting attribute path : client.role
w2022-03-15 01:11:01 DEBUG Visiting attribute path : status
w2022-03-15 01:11:01 DEBUG Visiting attribute path : support
w2022-03-15 01:11:01 DEBUG Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4202d5c2]
w2022-03-15 01:11:01 DEBUG Visiting attribute path : support.firstName
w2022-03-15 01:11:01 DEBUG Visiting attribute path : support.lastName
w2022-03-15 01:11:01 DEBUG Visiting attribute path : support.login
w2022-03-15 01:11:01 DEBUG Visiting attribute path : support.password
w2022-03-15 01:11:01 DEBUG Visiting attribute path : support.role
w2022-03-15 01:11:01 DEBUG Visiting attribute path : title
w2022-03-15 01:11:01 DEBUG Building LoadPlan...
w2022-03-15 01:11:01 DEBUG processing queryspace <gen:0>
w2022-03-15 01:11:01 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.Ticket)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.Ticket, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.Ticket)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:1>, path=ru.edu.helpdesk.entity.Ticket.client)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:2>, path=ru.edu.helpdesk.entity.Ticket.support)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.Ticket)
          - SQL table alias mapping - ticket0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(client)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
          - JOIN (JoinDefinedByMetadata(support)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user2_
                - alias suffix - 2_
                - suffixed key columns - {id1_2_2_}

w2022-03-15 01:11:01 DEBUG Static select for entity ru.edu.helpdesk.entity.Ticket [NONE]: select ticket0_.id as id1_1_0_, ticket0_.client_id as client_i4_1_0_, ticket0_.status as status2_1_0_, ticket0_.support_id as support_5_1_0_, ticket0_.title as title3_1_0_, user1_.id as id1_2_1_, user1_.first_name as first_na2_2_1_, user1_.last_name as last_nam3_2_1_, user1_.login as login4_2_1_, user1_.password as password5_2_1_, user1_.role as role6_2_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id left outer join user user2_ on ticket0_.support_id=user2_.id where ticket0_.id=?
w2022-03-15 01:11:01 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.Comment
w2022-03-15 01:11:01 DEBUG  Version select: select id from comment where id =?
w2022-03-15 01:11:01 DEBUG  Snapshot select: select comment_.id, comment_.message as message2_0_, comment_.ticket_id as ticket_i3_0_, comment_.user_id as user_id4_0_ from comment comment_ where comment_.id=?
w2022-03-15 01:11:01 DEBUG  Insert 0: insert into comment (message, ticket_id, user_id, id) values (?, ?, ?, ?)
w2022-03-15 01:11:01 DEBUG  Update 0: update comment set message=?, ticket_id=?, user_id=? where id=?
w2022-03-15 01:11:01 DEBUG  Delete 0: delete from comment where id=?
w2022-03-15 01:11:01 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f9a0740]
w2022-03-15 01:11:01 DEBUG Visiting attribute path : message
w2022-03-15 01:11:01 DEBUG Visiting attribute path : ticket
w2022-03-15 01:11:01 DEBUG Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20fa09a3]
w2022-03-15 01:11:01 DEBUG Visiting attribute path : ticket.client
w2022-03-15 01:11:01 DEBUG Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71b1d240]
w2022-03-15 01:11:01 DEBUG Visiting attribute path : ticket.client.firstName
w2022-03-15 01:11:01 DEBUG Visiting attribute path : ticket.client.lastName
w2022-03-15 01:11:01 DEBUG Visiting attribute path : ticket.client.login
w2022-03-15 01:11:01 DEBUG Visiting attribute path : ticket.client.password
w2022-03-15 01:11:01 DEBUG Visiting attribute path : ticket.client.role
w2022-03-15 01:11:01 DEBUG Visiting attribute path : ticket.status
w2022-03-15 01:11:01 DEBUG Visiting attribute path : ticket.support
w2022-03-15 01:11:01 DEBUG Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2687b76f]
w2022-03-15 01:11:01 DEBUG Visiting attribute path : ticket.support.firstName
w2022-03-15 01:11:01 DEBUG Visiting attribute path : ticket.support.lastName
w2022-03-15 01:11:01 DEBUG Visiting attribute path : ticket.support.login
w2022-03-15 01:11:01 DEBUG Visiting attribute path : ticket.support.password
w2022-03-15 01:11:01 DEBUG Visiting attribute path : ticket.support.role
w2022-03-15 01:11:01 DEBUG Visiting attribute path : ticket.title
w2022-03-15 01:11:01 DEBUG Visiting attribute path : user
w2022-03-15 01:11:01 DEBUG Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@448ec5c9]
w2022-03-15 01:11:01 DEBUG Visiting attribute path : user.firstName
w2022-03-15 01:11:01 DEBUG Visiting attribute path : user.lastName
w2022-03-15 01:11:01 DEBUG Visiting attribute path : user.login
w2022-03-15 01:11:01 DEBUG Visiting attribute path : user.password
w2022-03-15 01:11:01 DEBUG Visiting attribute path : user.role
w2022-03-15 01:11:01 DEBUG Building LoadPlan...
w2022-03-15 01:11:01 DEBUG processing queryspace <gen:0>
w2022-03-15 01:11:01 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.Comment)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.Comment, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.Comment)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.Ticket, querySpaceUid=<gen:1>, path=ru.edu.helpdesk.entity.Comment.ticket)
             - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:2>, path=ru.edu.helpdesk.entity.Comment.ticket.client)
             - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:3>, path=ru.edu.helpdesk.entity.Comment.ticket.support)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:4>, path=ru.edu.helpdesk.entity.Comment.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(ticket)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ru.edu.helpdesk.entity.Ticket)
                - SQL table alias mapping - ticket1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(client)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=ru.edu.helpdesk.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}
                - JOIN (JoinDefinedByMetadata(support)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=ru.edu.helpdesk.entity.User)
                      - SQL table alias mapping - user3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_2_3_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user4_
                - alias suffix - 4_
                - suffixed key columns - {id1_2_4_}

w2022-03-15 01:11:01 DEBUG Static select for entity ru.edu.helpdesk.entity.Comment [NONE]: select comment0_.id as id1_0_0_, comment0_.message as message2_0_0_, comment0_.ticket_id as ticket_i3_0_0_, comment0_.user_id as user_id4_0_0_, ticket1_.id as id1_1_1_, ticket1_.client_id as client_i4_1_1_, ticket1_.status as status2_1_1_, ticket1_.support_id as support_5_1_1_, ticket1_.title as title3_1_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_, user3_.id as id1_2_3_, user3_.first_name as first_na2_2_3_, user3_.last_name as last_nam3_2_3_, user3_.login as login4_2_3_, user3_.password as password5_2_3_, user3_.role as role6_2_3_, user4_.id as id1_2_4_, user4_.first_name as first_na2_2_4_, user4_.last_name as last_nam3_2_4_, user4_.login as login4_2_4_, user4_.password as password5_2_4_, user4_.role as role6_2_4_ from comment comment0_ left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id left outer join user user2_ on ticket1_.client_id=user2_.id left outer join user user3_ on ticket1_.support_id=user3_.id left outer join user user4_ on comment0_.user_id=user4_.id where comment0_.id=?
w2022-03-15 01:11:01 DEBUG drop table if exists comment
w2022-03-15 01:11:01 DEBUG drop table if exists hibernate_sequence
w2022-03-15 01:11:01 DEBUG drop table if exists ticket
w2022-03-15 01:11:01 DEBUG drop table if exists user
w2022-03-15 01:11:01 DEBUG create table comment (id bigint not null, message varchar(255) not null, ticket_id bigint, user_id bigint, primary key (id))
w2022-03-15 01:11:01 DEBUG create table hibernate_sequence (next_val bigint)
w2022-03-15 01:11:01 DEBUG insert into hibernate_sequence values ( 1 )
w2022-03-15 01:11:01 DEBUG create table ticket (id bigint not null, status integer, title varchar(255) not null, client_id bigint, support_id bigint, primary key (id))
w2022-03-15 01:11:01 DEBUG create table user (id bigint not null, first_name varchar(255), last_name varchar(255), login varchar(255) not null, password varchar(255) not null, role integer, primary key (id))
w2022-03-15 01:11:01 INFO  HHH000476: Executing import script 'file:/C:/Users/%d0%9e%d0%bb%d1%8c%d0%b3%d0%b0/Desktop/Java/Project/Project1/helpdeskproject/target/classes/data/import.sql'
w2022-03-15 01:11:01 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (1, 'admin', 'admin', 'admin', 'admin', 0)
w2022-03-15 01:11:01 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (2, 'support', 'support', 'support', 'support', 1)
w2022-03-15 01:11:01 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (3, 'user1', 'user1', 'user1', 'user1', 2)
w2022-03-15 01:11:01 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (4, 'user2', 'user2', 'user2', 'user2', 2)
w2022-03-15 01:11:01 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (1, 1, 'Hello user1',1, 2)
w2022-03-15 01:11:01 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (2, 0, 'Title2', 1, NULL)
w2022-03-15 01:11:01 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (3, 0, 'Message user2', 4, NULL)
w2022-03-15 01:11:01 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (1, "Hello ticket1", 1, 3)
w2022-03-15 01:11:01 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (2, "Hello ticket2", 2, 3)
w2022-03-15 01:11:01 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (3, "Hello ticket11", 1, 2)
w2022-03-15 01:11:01 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (4, "Hello ticket111", 1, 2)
w2022-03-15 01:11:01 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (5, "Hello ticket22", 2, 2)
w2022-03-15 01:11:01 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (6, "Hello ticket3", 3, 4)
w2022-03-15 01:11:01 DEBUG UPDATE hibernate_sequence SET next_val = 8 WHERE next_val = 1
w2022-03-15 01:11:01 INFO  HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
w2022-03-15 01:11:01 DEBUG Checking 0 named HQL queries
w2022-03-15 01:11:01 DEBUG Checking 0 named SQL queries
w2022-03-15 01:11:01 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 01:11:01 DEBUG Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@b45d75a
w2022-03-15 01:11:01 DEBUG Registering SessionFactory: d3513a13-ef99-4ca2-b603-02e5fe5b96b4 (<unnamed>)
w2022-03-15 01:11:01 DEBUG Not binding SessionFactory to JNDI, no JNDI name configured
w2022-03-15 01:11:02 DEBUG Statistics initialized [enabled=false]
w2022-03-15 01:11:02 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 01:11:02 DEBUG HHH000031: Closing
w2022-03-15 01:11:02 DEBUG Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@362098da] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@6015f676]
w2022-03-15 01:11:02 DEBUG Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
w2022-03-15 01:11:02 DEBUG Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
w2022-03-15 01:13:34 DEBUG Logging Provider: org.jboss.logging.Log4j2LoggerProvider
w2022-03-15 01:13:34 DEBUG PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@6b8e2342
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/%d0%9e%d0%bb%d1%8c%d0%b3%d0%b0/Desktop/Java/Project/Project1/helpdeskproject/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		ru.edu.helpdesk.entity.Comment
		ru.edu.helpdesk.entity.Ticket
		ru.edu.helpdesk.entity.User]
	Mapping files names []
	Properties []
w2022-03-15 01:13:34 DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
w2022-03-15 01:13:34 DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
w2022-03-15 01:13:34 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
w2022-03-15 01:13:34 INFO  HHH000412: Hibernate ORM core version 5.6.5.Final
w2022-03-15 01:13:34 DEBUG HHH000206: hibernate.properties not found
w2022-03-15 01:13:34 DEBUG Overriding existing service binding [org.hibernate.secure.spi.JaccService]
w2022-03-15 01:13:34 DEBUG Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
w2022-03-15 01:13:34 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
w2022-03-15 01:13:34 INFO  HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
w2022-03-15 01:13:34 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@278d147e
w2022-03-15 01:13:34 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@278d147e
w2022-03-15 01:13:34 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@278d147e
w2022-03-15 01:13:34 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7ea56a6c
w2022-03-15 01:13:34 DEBUG Adding type registration true_false -> org.hibernate.type.TrueFalseType@3d3e580b
w2022-03-15 01:13:34 DEBUG Adding type registration yes_no -> org.hibernate.type.YesNoType@689a247c
w2022-03-15 01:13:34 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@3cb724fa
w2022-03-15 01:13:34 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@3cb724fa
w2022-03-15 01:13:34 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3cb724fa
w2022-03-15 01:13:34 DEBUG Adding type registration character -> org.hibernate.type.CharacterType@759f9066
w2022-03-15 01:13:34 DEBUG Adding type registration char -> org.hibernate.type.CharacterType@759f9066
w2022-03-15 01:13:34 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@759f9066
w2022-03-15 01:13:34 DEBUG Adding type registration short -> org.hibernate.type.ShortType@c6d7a09
w2022-03-15 01:13:34 DEBUG Adding type registration short -> org.hibernate.type.ShortType@c6d7a09
w2022-03-15 01:13:34 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.ShortType@c6d7a09
w2022-03-15 01:13:34 DEBUG Adding type registration integer -> org.hibernate.type.IntegerType@18c411d6
w2022-03-15 01:13:34 DEBUG Adding type registration int -> org.hibernate.type.IntegerType@18c411d6
w2022-03-15 01:13:34 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@18c411d6
w2022-03-15 01:13:34 DEBUG Adding type registration long -> org.hibernate.type.LongType@4c48ed21
w2022-03-15 01:13:34 DEBUG Adding type registration long -> org.hibernate.type.LongType@4c48ed21
w2022-03-15 01:13:34 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.LongType@4c48ed21
w2022-03-15 01:13:34 DEBUG Adding type registration float -> org.hibernate.type.FloatType@34c71bb4
w2022-03-15 01:13:34 DEBUG Adding type registration float -> org.hibernate.type.FloatType@34c71bb4
w2022-03-15 01:13:34 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.FloatType@34c71bb4
w2022-03-15 01:13:34 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@21abccd5
w2022-03-15 01:13:34 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@21abccd5
w2022-03-15 01:13:34 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@21abccd5
w2022-03-15 01:13:34 DEBUG Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@f6195dd
w2022-03-15 01:13:34 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@f6195dd
w2022-03-15 01:13:34 DEBUG Adding type registration big_integer -> org.hibernate.type.BigIntegerType@309ed252
w2022-03-15 01:13:34 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@309ed252
w2022-03-15 01:13:34 DEBUG Adding type registration string -> org.hibernate.type.StringType@68bf3538
w2022-03-15 01:13:34 DEBUG Adding type registration java.lang.String -> org.hibernate.type.StringType@68bf3538
w2022-03-15 01:13:34 DEBUG Adding type registration nstring -> org.hibernate.type.StringNVarcharType@551821f0
w2022-03-15 01:13:34 DEBUG Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6eee19a
w2022-03-15 01:13:34 DEBUG Adding type registration url -> org.hibernate.type.UrlType@7c440fe7
w2022-03-15 01:13:34 DEBUG Adding type registration java.net.URL -> org.hibernate.type.UrlType@7c440fe7
w2022-03-15 01:13:34 DEBUG Adding type registration Duration -> org.hibernate.type.DurationType@24fbe96b
w2022-03-15 01:13:34 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.DurationType@24fbe96b
w2022-03-15 01:13:34 DEBUG Adding type registration Instant -> org.hibernate.type.InstantType@715299cf
w2022-03-15 01:13:34 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.InstantType@715299cf
w2022-03-15 01:13:34 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4199079e
w2022-03-15 01:13:34 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4199079e
w2022-03-15 01:13:34 DEBUG Adding type registration LocalDate -> org.hibernate.type.LocalDateType@690ec026
w2022-03-15 01:13:34 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@690ec026
w2022-03-15 01:13:34 DEBUG Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2a2e0e9c
w2022-03-15 01:13:34 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2a2e0e9c
w2022-03-15 01:13:34 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7e081d8b
w2022-03-15 01:13:34 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7e081d8b
w2022-03-15 01:13:34 DEBUG Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@41031b48
w2022-03-15 01:13:34 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@41031b48
w2022-03-15 01:13:34 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@33b0ca3
w2022-03-15 01:13:34 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@33b0ca3
w2022-03-15 01:13:34 DEBUG Adding type registration date -> org.hibernate.type.DateType@71eea053
w2022-03-15 01:13:34 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.DateType@71eea053
w2022-03-15 01:13:34 DEBUG Adding type registration time -> org.hibernate.type.TimeType@3b85ff76
w2022-03-15 01:13:34 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3b85ff76
w2022-03-15 01:13:34 DEBUG Adding type registration timestamp -> org.hibernate.type.TimestampType@1e4c5ae6
w2022-03-15 01:13:34 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1e4c5ae6
w2022-03-15 01:13:34 DEBUG Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1e4c5ae6
w2022-03-15 01:13:34 DEBUG Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1acd3f8e
w2022-03-15 01:13:34 DEBUG Adding type registration calendar -> org.hibernate.type.CalendarType@13fb7f67
w2022-03-15 01:13:34 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@13fb7f67
w2022-03-15 01:13:34 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@13fb7f67
w2022-03-15 01:13:34 DEBUG Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@74a96663
w2022-03-15 01:13:34 DEBUG Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@7ab6b9ce
w2022-03-15 01:13:34 DEBUG Adding type registration locale -> org.hibernate.type.LocaleType@2751ad41
w2022-03-15 01:13:34 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2751ad41
w2022-03-15 01:13:34 DEBUG Adding type registration currency -> org.hibernate.type.CurrencyType@70536788
w2022-03-15 01:13:34 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@70536788
w2022-03-15 01:13:34 DEBUG Adding type registration timezone -> org.hibernate.type.TimeZoneType@172179c5
w2022-03-15 01:13:34 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@172179c5
w2022-03-15 01:13:34 DEBUG Adding type registration class -> org.hibernate.type.ClassType@61935d73
w2022-03-15 01:13:34 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.ClassType@61935d73
w2022-03-15 01:13:34 DEBUG Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@663862d7
w2022-03-15 01:13:34 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@663862d7
w2022-03-15 01:13:34 DEBUG Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@737de763
w2022-03-15 01:13:34 DEBUG Adding type registration binary -> org.hibernate.type.BinaryType@1124b8d5
w2022-03-15 01:13:34 DEBUG Adding type registration byte[] -> org.hibernate.type.BinaryType@1124b8d5
w2022-03-15 01:13:34 DEBUG Adding type registration [B -> org.hibernate.type.BinaryType@1124b8d5
w2022-03-15 01:13:34 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@75ca0ced
w2022-03-15 01:13:34 DEBUG Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@75ca0ced
w2022-03-15 01:13:34 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@75ca0ced
w2022-03-15 01:13:34 DEBUG Adding type registration row_version -> org.hibernate.type.RowVersionType@27e86087
w2022-03-15 01:13:34 DEBUG Adding type registration image -> org.hibernate.type.ImageType@6f45b909
w2022-03-15 01:13:34 DEBUG Adding type registration characters -> org.hibernate.type.CharArrayType@63ab9ef4
w2022-03-15 01:13:34 DEBUG Adding type registration char[] -> org.hibernate.type.CharArrayType@63ab9ef4
w2022-03-15 01:13:34 DEBUG Adding type registration [C -> org.hibernate.type.CharArrayType@63ab9ef4
w2022-03-15 01:13:34 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@49930051
w2022-03-15 01:13:34 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@49930051
w2022-03-15 01:13:34 DEBUG Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@49930051
w2022-03-15 01:13:34 DEBUG Adding type registration text -> org.hibernate.type.TextType@1ccd8643
w2022-03-15 01:13:34 DEBUG Adding type registration ntext -> org.hibernate.type.NTextType@29a512f7
w2022-03-15 01:13:34 DEBUG Adding type registration blob -> org.hibernate.type.BlobType@5ec3de75
w2022-03-15 01:13:34 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5ec3de75
w2022-03-15 01:13:34 DEBUG Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@26ece321
w2022-03-15 01:13:34 DEBUG Adding type registration clob -> org.hibernate.type.ClobType@2468e4f0
w2022-03-15 01:13:34 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2468e4f0
w2022-03-15 01:13:34 DEBUG Adding type registration nclob -> org.hibernate.type.NClobType@186921f3
w2022-03-15 01:13:34 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@186921f3
w2022-03-15 01:13:34 DEBUG Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@46d420d6
w2022-03-15 01:13:34 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@82db56a
w2022-03-15 01:13:34 DEBUG Adding type registration serializable -> org.hibernate.type.SerializableType@56044614
w2022-03-15 01:13:34 DEBUG Adding type registration object -> org.hibernate.type.ObjectType@51c62dca
w2022-03-15 01:13:34 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@51c62dca
w2022-03-15 01:13:34 DEBUG Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@594e25f6
w2022-03-15 01:13:34 DEBUG Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3906eb68
w2022-03-15 01:13:34 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@73847d67
w2022-03-15 01:13:34 DEBUG Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@589c6328
w2022-03-15 01:13:34 DEBUG Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@70558c58
w2022-03-15 01:13:34 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7e067491
w2022-03-15 01:13:34 DEBUG Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2e395173
w2022-03-15 01:13:34 DEBUG Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1587f2bf
w2022-03-15 01:13:34 INFO  HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
w2022-03-15 01:13:34 DEBUG Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@25216d1c] into BootstrapContext; was [null]
w2022-03-15 01:13:34 DEBUG ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@25216d1c) [was null]
w2022-03-15 01:13:34 DEBUG Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@7919b024] into BootstrapContext; was [null]
w2022-03-15 01:13:34 DEBUG Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@22b8e5b6] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@74c7ccd]
w2022-03-15 01:13:34 DEBUG Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@25216d1c]
w2022-03-15 01:13:34 DEBUG ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@25216d1c]
w2022-03-15 01:13:34 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
w2022-03-15 01:13:34 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
w2022-03-15 01:13:34 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
w2022-03-15 01:13:34 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
w2022-03-15 01:13:34 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
w2022-03-15 01:13:34 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
w2022-03-15 01:13:34 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
w2022-03-15 01:13:34 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
w2022-03-15 01:13:34 DEBUG Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
w2022-03-15 01:13:34 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
w2022-03-15 01:13:34 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
w2022-03-15 01:13:34 DEBUG Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
w2022-03-15 01:13:34 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
w2022-03-15 01:13:34 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
w2022-03-15 01:13:34 DEBUG Database ->
       name : SQLite
    version : 3.36.0
      major : 3
      minor : 36
w2022-03-15 01:13:34 DEBUG Driver ->
       name : SQLite JDBC
    version : 3.36.0.3
      major : 3
      minor : 36
w2022-03-15 01:13:34 DEBUG JDBC version : 2.1
w2022-03-15 01:13:34 INFO  HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
w2022-03-15 01:13:34 DEBUG JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
w2022-03-15 01:13:34 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
w2022-03-15 01:13:34 DEBUG HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [2] less than 4
w2022-03-15 01:13:34 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7e506c9f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@10ee4955]
w2022-03-15 01:13:34 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
w2022-03-15 01:13:34 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.Comment
w2022-03-15 01:13:34 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 01:13:34 DEBUG Import with entity name Comment
w2022-03-15 01:13:34 DEBUG Bind entity ru.edu.helpdesk.entity.Comment on table comment
w2022-03-15 01:13:34 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 01:13:34 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Comment] is safe
w2022-03-15 01:13:34 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Comment
w2022-03-15 01:13:34 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 01:13:34 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Comment:id]
w2022-03-15 01:13:34 DEBUG building SimpleValue for id
w2022-03-15 01:13:34 DEBUG Building property id
w2022-03-15 01:13:34 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 01:13:34 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=message, insertable=true, updatable=true, unique=false}
w2022-03-15 01:13:34 DEBUG MetadataSourceProcessor property message with lazy=false
w2022-03-15 01:13:34 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Comment:message]
w2022-03-15 01:13:34 DEBUG building SimpleValue for message
w2022-03-15 01:13:34 DEBUG Building property message
w2022-03-15 01:13:34 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 01:13:34 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=ticket, insertable=true, updatable=true, unique=false}
w2022-03-15 01:13:34 DEBUG Building property ticket
w2022-03-15 01:13:34 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 01:13:34 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=user, insertable=true, updatable=true, unique=false}
w2022-03-15 01:13:34 DEBUG Building property user
w2022-03-15 01:13:34 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 01:13:34 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 01:13:34 DEBUG Import with entity name Ticket
w2022-03-15 01:13:34 DEBUG Bind entity ru.edu.helpdesk.entity.Ticket on table ticket
w2022-03-15 01:13:34 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 01:13:34 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Ticket] is safe
w2022-03-15 01:13:34 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Ticket
w2022-03-15 01:13:34 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 01:13:34 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:id]
w2022-03-15 01:13:34 DEBUG building SimpleValue for id
w2022-03-15 01:13:34 DEBUG Building property id
w2022-03-15 01:13:34 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 01:13:34 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 01:13:34 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=client, insertable=true, updatable=true, unique=false}
w2022-03-15 01:13:34 DEBUG Building property client
w2022-03-15 01:13:34 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=status, insertable=true, updatable=true, unique=false}
w2022-03-15 01:13:34 DEBUG MetadataSourceProcessor property status with lazy=false
w2022-03-15 01:13:34 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:status]
w2022-03-15 01:13:34 DEBUG building SimpleValue for status
w2022-03-15 01:13:34 DEBUG Building property status
w2022-03-15 01:13:34 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 01:13:34 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=support, insertable=true, updatable=true, unique=false}
w2022-03-15 01:13:34 DEBUG Building property support
w2022-03-15 01:13:34 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=title, insertable=true, updatable=true, unique=false}
w2022-03-15 01:13:34 DEBUG MetadataSourceProcessor property title with lazy=false
w2022-03-15 01:13:34 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:title]
w2022-03-15 01:13:34 DEBUG building SimpleValue for title
w2022-03-15 01:13:34 DEBUG Building property title
w2022-03-15 01:13:34 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.User
w2022-03-15 01:13:34 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 01:13:34 DEBUG Import with entity name User
w2022-03-15 01:13:34 DEBUG Bind entity ru.edu.helpdesk.entity.User on table user
w2022-03-15 01:13:34 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 01:13:34 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.User] is safe
w2022-03-15 01:13:34 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.User
w2022-03-15 01:13:34 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 01:13:34 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:id]
w2022-03-15 01:13:34 DEBUG building SimpleValue for id
w2022-03-15 01:13:34 DEBUG Building property id
w2022-03-15 01:13:34 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 01:13:34 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
w2022-03-15 01:13:34 DEBUG MetadataSourceProcessor property firstName with lazy=false
w2022-03-15 01:13:34 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:firstName]
w2022-03-15 01:13:34 DEBUG building SimpleValue for firstName
w2022-03-15 01:13:34 DEBUG Building property firstName
w2022-03-15 01:13:34 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
w2022-03-15 01:13:34 DEBUG MetadataSourceProcessor property lastName with lazy=false
w2022-03-15 01:13:34 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:lastName]
w2022-03-15 01:13:34 DEBUG building SimpleValue for lastName
w2022-03-15 01:13:34 DEBUG Building property lastName
w2022-03-15 01:13:34 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=login, insertable=true, updatable=true, unique=false}
w2022-03-15 01:13:34 DEBUG MetadataSourceProcessor property login with lazy=false
w2022-03-15 01:13:34 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:login]
w2022-03-15 01:13:34 DEBUG building SimpleValue for login
w2022-03-15 01:13:34 DEBUG Building property login
w2022-03-15 01:13:34 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
w2022-03-15 01:13:34 DEBUG MetadataSourceProcessor property password with lazy=false
w2022-03-15 01:13:34 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:password]
w2022-03-15 01:13:34 DEBUG building SimpleValue for password
w2022-03-15 01:13:34 DEBUG Building property password
w2022-03-15 01:13:34 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=role, insertable=true, updatable=true, unique=false}
w2022-03-15 01:13:34 DEBUG MetadataSourceProcessor property role with lazy=false
w2022-03-15 01:13:34 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:role]
w2022-03-15 01:13:34 DEBUG building SimpleValue for role
w2022-03-15 01:13:34 DEBUG Building property role
w2022-03-15 01:13:34 DEBUG Starting fillSimpleValue for id
w2022-03-15 01:13:34 DEBUG Starting fillSimpleValue for message
w2022-03-15 01:13:34 DEBUG Starting fillSimpleValue for id
w2022-03-15 01:13:34 DEBUG Starting fillSimpleValue for status
w2022-03-15 01:13:34 DEBUG Starting fillSimpleValue for title
w2022-03-15 01:13:34 DEBUG Starting fillSimpleValue for id
w2022-03-15 01:13:34 DEBUG Starting fillSimpleValue for firstName
w2022-03-15 01:13:34 DEBUG Starting fillSimpleValue for lastName
w2022-03-15 01:13:34 DEBUG Starting fillSimpleValue for login
w2022-03-15 01:13:34 DEBUG Starting fillSimpleValue for password
w2022-03-15 01:13:34 DEBUG Starting fillSimpleValue for role
w2022-03-15 01:13:34 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [comment]
w2022-03-15 01:13:34 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [ticket]
w2022-03-15 01:13:34 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [user]
w2022-03-15 01:13:34 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 01:13:34 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 01:13:34 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 01:13:34 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 01:13:34 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 01:13:34 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 01:13:34 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 01:13:34 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 01:13:34 DEBUG Building session factory
w2022-03-15 01:13:34 DEBUG SessionFactory name : null
w2022-03-15 01:13:34 DEBUG Automatic flush during beforeCompletion(): enabled
w2022-03-15 01:13:34 DEBUG Automatic session close at end of transaction: disabled
w2022-03-15 01:13:34 DEBUG Statistics: disabled
w2022-03-15 01:13:34 DEBUG Deleted entity synthetic identifier rollback: disabled
w2022-03-15 01:13:34 DEBUG Default entity-mode: pojo
w2022-03-15 01:13:34 DEBUG Check Nullability in Core (should be disabled when Bean Validation is on): enabled
w2022-03-15 01:13:34 DEBUG Allow initialization of lazy state outside session : disabled
w2022-03-15 01:13:34 DEBUG Using BatchFetchStyle : LEGACY
w2022-03-15 01:13:34 DEBUG Default batch fetch size: -1
w2022-03-15 01:13:34 DEBUG Maximum outer join fetch depth: null
w2022-03-15 01:13:34 DEBUG Default null ordering: NONE
w2022-03-15 01:13:34 DEBUG Order SQL updates by primary key: disabled
w2022-03-15 01:13:34 DEBUG Order SQL inserts for batching: disabled
w2022-03-15 01:13:34 DEBUG multi-tenancy strategy : NONE
w2022-03-15 01:13:34 DEBUG JTA Track by Thread: enabled
w2022-03-15 01:13:34 DEBUG Query language substitutions: {}
w2022-03-15 01:13:34 DEBUG Named query checking : enabled
w2022-03-15 01:13:34 DEBUG Second-level cache: disabled
w2022-03-15 01:13:34 DEBUG Second-level query cache: disabled
w2022-03-15 01:13:34 DEBUG Second-level query cache factory: null
w2022-03-15 01:13:34 DEBUG Second-level cache region prefix: null
w2022-03-15 01:13:34 DEBUG Optimize second-level cache for minimal puts: disabled
w2022-03-15 01:13:34 DEBUG Structured second-level cache entries: disabled
w2022-03-15 01:13:34 DEBUG Second-level cache direct-reference entries: disabled
w2022-03-15 01:13:34 DEBUG Automatic eviction of collection cache: disabled
w2022-03-15 01:13:34 DEBUG JDBC batch size: 1
w2022-03-15 01:13:34 DEBUG JDBC batch updates for versioned data: enabled
w2022-03-15 01:13:34 DEBUG Scrollable result sets: disabled
w2022-03-15 01:13:34 DEBUG Wrap result sets: disabled
w2022-03-15 01:13:34 DEBUG JDBC3 getGeneratedKeys(): enabled
w2022-03-15 01:13:34 DEBUG JDBC result set fetch size: null
w2022-03-15 01:13:34 DEBUG Connection release mode: ON_CLOSE
w2022-03-15 01:13:34 DEBUG Generate SQL with comments: disabled
w2022-03-15 01:13:34 DEBUG JPA compliance - query : disabled
w2022-03-15 01:13:34 DEBUG JPA compliance - closed-handling : disabled
w2022-03-15 01:13:34 DEBUG JPA compliance - lists : disabled
w2022-03-15 01:13:34 DEBUG JPA compliance - transactions : disabled
w2022-03-15 01:13:34 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 01:13:34 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 01:13:34 DEBUG Session factory constructed with filter configurations : {}
w2022-03-15 01:13:34 DEBUG Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=true, java.specification.version=1.8, file.encoding.pkg=sun.io, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@22d26ec9, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.SQLiteDialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\charsets.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\cldrdata.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\dnsns.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\jaccess.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\localedata.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\nashorn.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunec.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunmscapi.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\zipfs.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jce.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jfr.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jsse.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\management-agent.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\resources.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\rt.jar;C:\Users\Ольга\Desktop\Java\Project\Project1\helpdeskproject\target\classes;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\2.6.4\spring-boot-starter-data-jpa-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\2.6.4\spring-boot-starter-jdbc-2.6.4.jar;C:\Users\Ольга\.m2\repository\com\zaxxer\HikariCP\4.0.3\HikariCP-4.0.3.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-jdbc\5.3.16\spring-jdbc-5.3.16.jar;C:\Users\Ольга\.m2\repository\jakarta\transaction\jakarta.transaction-api\1.3.3\jakarta.transaction-api-1.3.3.jar;C:\Users\Ольга\.m2\repository\jakarta\persistence\jakarta.persistence-api\2.2.3\jakarta.persistence-api-2.2.3.jar;C:\Users\Ольга\.m2\repository\org\hibernate\hibernate-core\5.6.5.Final\hibernate-core-5.6.5.Final.jar;C:\Users\Ольга\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy\1.11.22\byte-buddy-1.11.22.jar;C:\Users\Ольга\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ольга\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Ольга\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.6\jaxb-runtime-2.3.6.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\txw2\2.3.6\txw2-2.3.6.jar;C:\Users\Ольга\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.12\istack-commons-runtime-3.0.12.jar;C:\Users\Ольга\.m2\repository\com\sun\activation\jakarta.activation\1.2.2\jakarta.activation-1.2.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\data\spring-data-jpa\2.6.2\spring-data-jpa-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\data\spring-data-commons\2.6.2\spring-data-commons-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-orm\5.3.16\spring-orm-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-context\5.3.16\spring-context-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-tx\5.3.16\spring-tx-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-beans\5.3.16\spring-beans-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-aspects\5.3.16\spring-aspects-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-security\2.6.4\spring-boot-starter-security-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter\2.6.4\spring-boot-starter-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-logging\2.6.4\spring-boot-starter-logging-2.6.4.jar;C:\Users\Ольга\.m2\repository\ch\qos\logback\logback-classic\1.2.10\logback-classic-1.2.10.jar;C:\Users\Ольга\.m2\repository\ch\qos\logback\logback-core\1.2.10\logback-core-1.2.10.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.17.1\log4j-to-slf4j-2.17.1.jar;C:\Users\Ольга\.m2\repository\org\slf4j\jul-to-slf4j\1.7.36\jul-to-slf4j-1.7.36.jar;C:\Users\Ольга\.m2\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;C:\Users\Ольга\.m2\repository\org\yaml\snakeyaml\1.29\snakeyaml-1.29.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-aop\5.3.16\spring-aop-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-config\5.6.2\spring-security-config-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-web\5.6.2\spring-security-web-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-expression\5.3.16\spring-expression-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-web\2.6.4\spring-boot-starter-web-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-json\2.6.4\spring-boot-starter-json-2.6.4.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.13.1\jackson-datatype-jdk8-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.13.1\jackson-datatype-jsr310-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.13.1\jackson-module-parameter-names-2.13.1.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\2.6.4\spring-boot-starter-tomcat-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.58\tomcat-embed-core-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\9.0.58\tomcat-embed-el-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.58\tomcat-embed-websocket-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-web\5.3.16\spring-web-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-webmvc\5.3.16\spring-webmvc-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-devtools\2.6.4\spring-boot-devtools-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot\2.6.4\spring-boot-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\2.6.4\spring-boot-autoconfigure-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\xerial\sqlite-jdbc\3.36.0.3\sqlite-jdbc-3.36.0.3.jar;C:\Users\Ольга\.m2\repository\com\zsoltfabok\sqlite-dialect\1.0\sqlite-dialect-1.0.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-aop\2.6.2\spring-boot-starter-aop-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\aspectj\aspectjweaver\1.9.7\aspectjweaver-1.9.7.jar;C:\Users\Ольга\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.3\jakarta.xml.bind-api-2.3.3.jar;C:\Users\Ольга\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.2\jakarta.activation-api-1.2.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-core\5.3.16\spring-core-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-jcl\5.3.16\spring-jcl-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-core\5.6.2\spring-security-core-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-crypto\5.6.2\spring-security-crypto-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\projectlombok\lombok\1.18.22\lombok-1.18.22.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\2.6.4\spring-boot-starter-thymeleaf-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\thymeleaf-spring5\3.0.15.RELEASE\thymeleaf-spring5-3.0.15.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\thymeleaf\3.0.15.RELEASE\thymeleaf-3.0.15.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\attoparser\attoparser\2.0.5.RELEASE\attoparser-2.0.5.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-java8time\3.0.4.RELEASE\thymeleaf-extras-java8time-3.0.4.RELEASE.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.1\jackson-databind-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.1\jackson-annotations-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.1\jackson-core-2.13.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-api\2.4.1\log4j-api-2.4.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-core\2.4.1\log4j-core-2.4.1.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.2\lib\idea_rt.jar, java.vm.vendor=Temurin, sun.arch.data.model=64, user.variant=, java.vendor.url=https://adoptium.net/, catalina.useNaming=false, user.timezone=Europe/Moscow, jakarta.persistence.sharedCache.mode=UNSPECIFIED, os.name=Windows 10, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), user.country=RU, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\bin, sun.java.command=ru.edu.helpdesk.HelpdeskApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@629b06c6, com.sun.management.jmxremote=, javax.persistence.sharedCache.mode=UNSPECIFIED, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, user.home=C:\Users\Ольга, user.language=ru, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre, file.separator=\, spring.output.ansi.enabled=always, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, sun.boot.class.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\resources.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\rt.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\sunrsasign.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jsse.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jce.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\charsets.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jfr.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\classes, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_312-b07, user.name=Эльдорадо, spring.jmx.enabled=true, path.separator=;, os.version=10.0, java.endorsed.dirs=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\endorsed, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=default, spring.beaninfo.ignore=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=C:\Users\134E~1\AppData\Local\Temp\, catalina.home=C:\Users\Ольга\AppData\Local\Temp\tomcat.8080.616015180595320310, java.version=1.8.0_312, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\Ольга\Desktop\Java\Project\Project1\helpdeskproject, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=3408, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\Ольга\AppData\Local\Temp\tomcat.8080.616015180595320310, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@9c17235, java.library.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\windows\System32\OpenSSH\;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\Program Files\apache-maven-3.8.4\bin;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Ольга\AppData\Local\Microsoft\WindowsApps;C:\Users\Ольга\AppData\Local\Programs\Microsoft VS Code\bin;C:\SQLite;C:\Users\Ольга\AppData\Roaming\npm;C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.2\bin;;., java.vendor=Temurin, java.vm.info=mixed mode, java.vm.version=25.312-b07, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, java.ext.dirs=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext;C:\windows\Sun\Java\lib\ext, hibernate.connection.datasource=HikariDataSource (HikariPool-1), hibernate.hbm2ddl.import_files=data/import.sql, java.class.version=52.0}
w2022-03-15 01:13:34 DEBUG Skipping JACC integration as it was not enabled
w2022-03-15 01:13:34 DEBUG Using ORDINAL-based conversion for Enum ru.edu.helpdesk.entity.UserRole
w2022-03-15 01:13:34 DEBUG Using ORDINAL-based conversion for Enum ru.edu.helpdesk.entity.TicketStatus
w2022-03-15 01:13:34 DEBUG Instantiated session factory
w2022-03-15 01:13:34 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7e506c9f] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@7bff44ad]
w2022-03-15 01:13:34 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.User] is safe
w2022-03-15 01:13:34 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.User
w2022-03-15 01:13:35 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:13:35 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:13:35 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:13:35 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:13:35 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Ticket] is safe
w2022-03-15 01:13:35 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Ticket
w2022-03-15 01:13:35 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:13:35 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:13:35 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:13:35 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:13:35 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:13:35 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:13:35 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:13:35 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:13:35 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Comment] is safe
w2022-03-15 01:13:35 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Comment
w2022-03-15 01:13:35 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:13:35 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:13:35 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:13:35 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:13:35 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.User
w2022-03-15 01:13:35 DEBUG  Version select: select id from user where id =?
w2022-03-15 01:13:35 DEBUG  Snapshot select: select user_.id, user_.first_name as first_na2_2_, user_.last_name as last_nam3_2_, user_.login as login4_2_, user_.password as password5_2_, user_.role as role6_2_ from user user_ where user_.id=?
w2022-03-15 01:13:35 DEBUG  Insert 0: insert into user (first_name, last_name, login, password, role, id) values (?, ?, ?, ?, ?, ?)
w2022-03-15 01:13:35 DEBUG  Update 0: update user set first_name=?, last_name=?, login=?, password=?, role=? where id=?
w2022-03-15 01:13:35 DEBUG  Delete 0: delete from user where id=?
w2022-03-15 01:13:35 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7113b333]
w2022-03-15 01:13:35 DEBUG Visiting attribute path : firstName
w2022-03-15 01:13:35 DEBUG Visiting attribute path : lastName
w2022-03-15 01:13:35 DEBUG Visiting attribute path : login
w2022-03-15 01:13:35 DEBUG Visiting attribute path : password
w2022-03-15 01:13:35 DEBUG Visiting attribute path : role
w2022-03-15 01:13:35 DEBUG Building LoadPlan...
w2022-03-15 01:13:35 DEBUG processing queryspace <gen:0>
w2022-03-15 01:13:35 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.User)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

w2022-03-15 01:13:35 DEBUG Static select for entity ru.edu.helpdesk.entity.User [NONE]: select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 01:13:35 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.Ticket
w2022-03-15 01:13:35 DEBUG  Version select: select id from ticket where id =?
w2022-03-15 01:13:35 DEBUG  Snapshot select: select ticket_.id, ticket_.client_id as client_i4_1_, ticket_.status as status2_1_, ticket_.support_id as support_5_1_, ticket_.title as title3_1_ from ticket ticket_ where ticket_.id=?
w2022-03-15 01:13:35 DEBUG  Insert 0: insert into ticket (client_id, status, support_id, title, id) values (?, ?, ?, ?, ?)
w2022-03-15 01:13:35 DEBUG  Update 0: update ticket set client_id=?, status=?, support_id=?, title=? where id=?
w2022-03-15 01:13:35 DEBUG  Delete 0: delete from ticket where id=?
w2022-03-15 01:13:35 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@170c9183]
w2022-03-15 01:13:35 DEBUG Visiting attribute path : client
w2022-03-15 01:13:35 DEBUG Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@523890b2]
w2022-03-15 01:13:35 DEBUG Visiting attribute path : client.firstName
w2022-03-15 01:13:35 DEBUG Visiting attribute path : client.lastName
w2022-03-15 01:13:35 DEBUG Visiting attribute path : client.login
w2022-03-15 01:13:35 DEBUG Visiting attribute path : client.password
w2022-03-15 01:13:35 DEBUG Visiting attribute path : client.role
w2022-03-15 01:13:35 DEBUG Visiting attribute path : status
w2022-03-15 01:13:35 DEBUG Visiting attribute path : support
w2022-03-15 01:13:35 DEBUG Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11459612]
w2022-03-15 01:13:35 DEBUG Visiting attribute path : support.firstName
w2022-03-15 01:13:35 DEBUG Visiting attribute path : support.lastName
w2022-03-15 01:13:35 DEBUG Visiting attribute path : support.login
w2022-03-15 01:13:35 DEBUG Visiting attribute path : support.password
w2022-03-15 01:13:35 DEBUG Visiting attribute path : support.role
w2022-03-15 01:13:35 DEBUG Visiting attribute path : title
w2022-03-15 01:13:35 DEBUG Building LoadPlan...
w2022-03-15 01:13:35 DEBUG processing queryspace <gen:0>
w2022-03-15 01:13:35 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.Ticket)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.Ticket, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.Ticket)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:1>, path=ru.edu.helpdesk.entity.Ticket.client)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:2>, path=ru.edu.helpdesk.entity.Ticket.support)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.Ticket)
          - SQL table alias mapping - ticket0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(client)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
          - JOIN (JoinDefinedByMetadata(support)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user2_
                - alias suffix - 2_
                - suffixed key columns - {id1_2_2_}

w2022-03-15 01:13:35 DEBUG Static select for entity ru.edu.helpdesk.entity.Ticket [NONE]: select ticket0_.id as id1_1_0_, ticket0_.client_id as client_i4_1_0_, ticket0_.status as status2_1_0_, ticket0_.support_id as support_5_1_0_, ticket0_.title as title3_1_0_, user1_.id as id1_2_1_, user1_.first_name as first_na2_2_1_, user1_.last_name as last_nam3_2_1_, user1_.login as login4_2_1_, user1_.password as password5_2_1_, user1_.role as role6_2_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id left outer join user user2_ on ticket0_.support_id=user2_.id where ticket0_.id=?
w2022-03-15 01:13:35 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.Comment
w2022-03-15 01:13:35 DEBUG  Version select: select id from comment where id =?
w2022-03-15 01:13:35 DEBUG  Snapshot select: select comment_.id, comment_.message as message2_0_, comment_.ticket_id as ticket_i3_0_, comment_.user_id as user_id4_0_ from comment comment_ where comment_.id=?
w2022-03-15 01:13:35 DEBUG  Insert 0: insert into comment (message, ticket_id, user_id, id) values (?, ?, ?, ?)
w2022-03-15 01:13:35 DEBUG  Update 0: update comment set message=?, ticket_id=?, user_id=? where id=?
w2022-03-15 01:13:35 DEBUG  Delete 0: delete from comment where id=?
w2022-03-15 01:13:35 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27340725]
w2022-03-15 01:13:35 DEBUG Visiting attribute path : message
w2022-03-15 01:13:35 DEBUG Visiting attribute path : ticket
w2022-03-15 01:13:35 DEBUG Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bd4d797]
w2022-03-15 01:13:35 DEBUG Visiting attribute path : ticket.client
w2022-03-15 01:13:35 DEBUG Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@730286f4]
w2022-03-15 01:13:35 DEBUG Visiting attribute path : ticket.client.firstName
w2022-03-15 01:13:35 DEBUG Visiting attribute path : ticket.client.lastName
w2022-03-15 01:13:35 DEBUG Visiting attribute path : ticket.client.login
w2022-03-15 01:13:35 DEBUG Visiting attribute path : ticket.client.password
w2022-03-15 01:13:35 DEBUG Visiting attribute path : ticket.client.role
w2022-03-15 01:13:35 DEBUG Visiting attribute path : ticket.status
w2022-03-15 01:13:35 DEBUG Visiting attribute path : ticket.support
w2022-03-15 01:13:35 DEBUG Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57aceb9b]
w2022-03-15 01:13:35 DEBUG Visiting attribute path : ticket.support.firstName
w2022-03-15 01:13:35 DEBUG Visiting attribute path : ticket.support.lastName
w2022-03-15 01:13:35 DEBUG Visiting attribute path : ticket.support.login
w2022-03-15 01:13:35 DEBUG Visiting attribute path : ticket.support.password
w2022-03-15 01:13:35 DEBUG Visiting attribute path : ticket.support.role
w2022-03-15 01:13:35 DEBUG Visiting attribute path : ticket.title
w2022-03-15 01:13:35 DEBUG Visiting attribute path : user
w2022-03-15 01:13:35 DEBUG Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11477d9]
w2022-03-15 01:13:35 DEBUG Visiting attribute path : user.firstName
w2022-03-15 01:13:35 DEBUG Visiting attribute path : user.lastName
w2022-03-15 01:13:35 DEBUG Visiting attribute path : user.login
w2022-03-15 01:13:35 DEBUG Visiting attribute path : user.password
w2022-03-15 01:13:35 DEBUG Visiting attribute path : user.role
w2022-03-15 01:13:35 DEBUG Building LoadPlan...
w2022-03-15 01:13:35 DEBUG processing queryspace <gen:0>
w2022-03-15 01:13:35 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.Comment)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.Comment, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.Comment)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.Ticket, querySpaceUid=<gen:1>, path=ru.edu.helpdesk.entity.Comment.ticket)
             - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:2>, path=ru.edu.helpdesk.entity.Comment.ticket.client)
             - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:3>, path=ru.edu.helpdesk.entity.Comment.ticket.support)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:4>, path=ru.edu.helpdesk.entity.Comment.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(ticket)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ru.edu.helpdesk.entity.Ticket)
                - SQL table alias mapping - ticket1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(client)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=ru.edu.helpdesk.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}
                - JOIN (JoinDefinedByMetadata(support)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=ru.edu.helpdesk.entity.User)
                      - SQL table alias mapping - user3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_2_3_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user4_
                - alias suffix - 4_
                - suffixed key columns - {id1_2_4_}

w2022-03-15 01:13:35 DEBUG Static select for entity ru.edu.helpdesk.entity.Comment [NONE]: select comment0_.id as id1_0_0_, comment0_.message as message2_0_0_, comment0_.ticket_id as ticket_i3_0_0_, comment0_.user_id as user_id4_0_0_, ticket1_.id as id1_1_1_, ticket1_.client_id as client_i4_1_1_, ticket1_.status as status2_1_1_, ticket1_.support_id as support_5_1_1_, ticket1_.title as title3_1_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_, user3_.id as id1_2_3_, user3_.first_name as first_na2_2_3_, user3_.last_name as last_nam3_2_3_, user3_.login as login4_2_3_, user3_.password as password5_2_3_, user3_.role as role6_2_3_, user4_.id as id1_2_4_, user4_.first_name as first_na2_2_4_, user4_.last_name as last_nam3_2_4_, user4_.login as login4_2_4_, user4_.password as password5_2_4_, user4_.role as role6_2_4_ from comment comment0_ left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id left outer join user user2_ on ticket1_.client_id=user2_.id left outer join user user3_ on ticket1_.support_id=user3_.id left outer join user user4_ on comment0_.user_id=user4_.id where comment0_.id=?
w2022-03-15 01:13:35 DEBUG drop table if exists comment
w2022-03-15 01:13:35 DEBUG drop table if exists hibernate_sequence
w2022-03-15 01:13:35 DEBUG drop table if exists ticket
w2022-03-15 01:13:35 DEBUG drop table if exists user
w2022-03-15 01:13:35 DEBUG create table comment (id bigint not null, message varchar(255) not null, ticket_id bigint, user_id bigint, primary key (id))
w2022-03-15 01:13:35 DEBUG create table hibernate_sequence (next_val bigint)
w2022-03-15 01:13:35 DEBUG insert into hibernate_sequence values ( 1 )
w2022-03-15 01:13:35 DEBUG create table ticket (id bigint not null, status integer, title varchar(255) not null, client_id bigint, support_id bigint, primary key (id))
w2022-03-15 01:13:35 DEBUG create table user (id bigint not null, first_name varchar(255), last_name varchar(255), login varchar(255) not null, password varchar(255) not null, role integer, primary key (id))
w2022-03-15 01:13:35 INFO  HHH000476: Executing import script 'file:/C:/Users/%d0%9e%d0%bb%d1%8c%d0%b3%d0%b0/Desktop/Java/Project/Project1/helpdeskproject/target/classes/data/import.sql'
w2022-03-15 01:13:35 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (1, 'admin', 'admin', 'admin', 'admin', 0)
w2022-03-15 01:13:35 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (2, 'support', 'support', 'support', 'support', 1)
w2022-03-15 01:13:35 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (3, 'user1', 'user1', 'user1', 'user1', 2)
w2022-03-15 01:13:35 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (4, 'user2', 'user2', 'user2', 'user2', 2)
w2022-03-15 01:13:35 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (1, 1, 'Hello user1',1, 2)
w2022-03-15 01:13:35 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (2, 0, 'Title2', 1, NULL)
w2022-03-15 01:13:35 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (3, 0, 'Message user2', 4, NULL)
w2022-03-15 01:13:35 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (1, "Hello ticket1", 1, 3)
w2022-03-15 01:13:35 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (2, "Hello ticket2", 2, 3)
w2022-03-15 01:13:35 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (3, "Hello ticket11", 1, 2)
w2022-03-15 01:13:35 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (4, "Hello ticket111", 1, 2)
w2022-03-15 01:13:35 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (5, "Hello ticket22", 2, 2)
w2022-03-15 01:13:35 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (6, "Hello ticket3", 3, 4)
w2022-03-15 01:13:35 DEBUG UPDATE hibernate_sequence SET next_val = 8 WHERE next_val = 1
w2022-03-15 01:13:35 INFO  HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
w2022-03-15 01:13:35 DEBUG Checking 0 named HQL queries
w2022-03-15 01:13:35 DEBUG Checking 0 named SQL queries
w2022-03-15 01:13:35 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 01:13:35 DEBUG Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3248b4a3
w2022-03-15 01:13:35 DEBUG Registering SessionFactory: 6d8acdb0-9e3c-4545-bb45-4306da4bc28b (<unnamed>)
w2022-03-15 01:13:35 DEBUG Not binding SessionFactory to JNDI, no JNDI name configured
w2022-03-15 01:13:35 DEBUG Statistics initialized [enabled=false]
w2022-03-15 01:13:35 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 01:13:35 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 01:13:35 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 01:13:45 DEBUG Rendered criteria query -> select generatedAlias0 from Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 01:13:45 DEBUG QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@d9c16c0
w2022-03-15 01:13:45 DEBUG parse() - HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 01:13:45 DEBUG throwQueryException() : no errors
w2022-03-15 01:13:45 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[IDENT] Node: 'ru'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'edu'
    |  |  |  |  |  |  \-[IDENT] Node: 'helpdesk'
    |  |  |  |  |  \-[IDENT] Node: 'entity'
    |  |  |  |  \-[IDENT] Node: 'Ticket'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'client'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias1'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

w2022-03-15 01:13:45 DEBUG select << begin [level=1, statement=select]
w2022-03-15 01:13:45 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.Ticket (generatedAlias0) -> ticket0_
w2022-03-15 01:13:45 DEBUG Resolved : generatedAlias0 -> ticket0_.id
w2022-03-15 01:13:45 DEBUG getDataType() : client -> org.hibernate.type.ManyToOneType(ru.edu.helpdesk.entity.User)
w2022-03-15 01:13:45 DEBUG dereferenceEntityJoin() : generating join for client in ru.edu.helpdesk.entity.Ticket (generatedAlias1) parent = [ {null} ]
w2022-03-15 01:13:45 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.User (generatedAlias1) -> user1_
w2022-03-15 01:13:45 DEBUG addJoinByPathMap() : generatedAlias0.client -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}
w2022-03-15 01:13:45 DEBUG Resolved : generatedAlias0.client -> ticket0_.client_id
w2022-03-15 01:13:45 DEBUG createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'user user1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Ticket.client,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}

w2022-03-15 01:13:45 DEBUG Resolved : generatedAlias0 -> ticket0_.id
w2022-03-15 01:13:45 DEBUG Resolved : generatedAlias1 -> user1_.id
w2022-03-15 01:13:45 DEBUG getDataType() : id -> org.hibernate.type.LongType@4c48ed21
w2022-03-15 01:13:45 DEBUG Resolved : generatedAlias1.id -> user1_.id
w2022-03-15 01:13:45 DEBUG select : finishing up [level=1, statement=select]
w2022-03-15 01:13:45 DEBUG processQuery() :  ( SELECT ( {select clause} ticket0_.id ) ( FromClause{level=1} ( ticket ticket0_ user user1_ ) ) ( where ( = ( user1_.id user1_.id id ) ? ) ) )
w2022-03-15 01:13:45 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Ticket): [ticket]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.Ticket)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.User)
          | path: generatedAlias1.id
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.User)
          |  | originalText: generatedAlias1
          |  \-IdentNode
          |    persister: null
          |    originalText: id
          \-ParameterNode

w2022-03-15 01:13:45 DEBUG Using FROM fragment [ticket ticket0_]
w2022-03-15 01:13:45 DEBUG Using FROM fragment [left outer join user user1_ on ticket0_.client_id=user1_.id]
w2022-03-15 01:13:45 DEBUG select >> end [level=1, statement=select]
w2022-03-15 01:13:45 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (ticket,user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'ticket0_.id as id1_1_' {alias=generatedAlias0, className=ru.edu.helpdesk.entity.Ticket, tableAlias=ticket0_}
    |  \-[SQL_TOKEN] SqlFragment: 'ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[ticket0_, user1_], fromElementsByPath=[generatedAlias0.client], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'ticket ticket0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=ticket,tableAlias=ticket0_,origin=null,columns={,className=ru.edu.helpdesk.entity.Ticket}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join user user1_ on ticket0_.client_id=user1_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Ticket.client,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user1_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias1.id,tableAlias=user1_,className=ru.edu.helpdesk.entity.User,classAlias=generatedAlias1}
          |  +-[ALIAS_REF] IdentNode: 'user1_.id' {alias=generatedAlias1, className=ru.edu.helpdesk.entity.User, tableAlias=user1_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LongType@4c48ed21}

w2022-03-15 01:13:45 DEBUG throwQueryException() : no errors
w2022-03-15 01:13:45 DEBUG HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 01:13:45 DEBUG SQL: select ticket0_.id as id1_1_, ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id where user1_.id=?
w2022-03-15 01:13:45 DEBUG throwQueryException() : no errors
w2022-03-15 01:13:45 DEBUG select ticket0_.id as id1_1_, ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id where user1_.id=?
w2022-03-15 01:13:46 DEBUG Result set row: 0
w2022-03-15 01:13:46 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 01:13:46 DEBUG Result set row: 1
w2022-03-15 01:13:46 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 01:13:46 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 01:13:46 DEBUG Processing attribute `client` : value = 1
w2022-03-15 01:13:46 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 01:13:46 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 01:13:46 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 01:13:46 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#1]
w2022-03-15 01:13:46 DEBUG Processing attribute `firstName` : value = admin
w2022-03-15 01:13:46 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 01:13:46 DEBUG Processing attribute `lastName` : value = admin
w2022-03-15 01:13:46 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 01:13:46 DEBUG Processing attribute `login` : value = admin
w2022-03-15 01:13:46 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 01:13:46 DEBUG Processing attribute `password` : value = admin
w2022-03-15 01:13:46 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 01:13:46 DEBUG Processing attribute `role` : value = ADMIN
w2022-03-15 01:13:46 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 01:13:46 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#1]
w2022-03-15 01:13:46 DEBUG Done entity load : ru.edu.helpdesk.entity.User#1
w2022-03-15 01:13:46 DEBUG Processing attribute `status` : value = WORKING
w2022-03-15 01:13:46 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 01:13:46 DEBUG Processing attribute `support` : value = 2
w2022-03-15 01:13:46 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 01:13:46 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 01:13:46 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 01:13:46 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#2]
w2022-03-15 01:13:46 DEBUG Processing attribute `firstName` : value = support
w2022-03-15 01:13:46 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 01:13:46 DEBUG Processing attribute `lastName` : value = support
w2022-03-15 01:13:46 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 01:13:46 DEBUG Processing attribute `login` : value = support
w2022-03-15 01:13:46 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 01:13:46 DEBUG Processing attribute `password` : value = support
w2022-03-15 01:13:46 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 01:13:46 DEBUG Processing attribute `role` : value = SUPPORT
w2022-03-15 01:13:46 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 01:13:46 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#2]
w2022-03-15 01:13:46 DEBUG Done entity load : ru.edu.helpdesk.entity.User#2
w2022-03-15 01:13:46 DEBUG Processing attribute `title` : value = Hello user1
w2022-03-15 01:13:46 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 01:13:46 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 01:13:46 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 01:13:46 DEBUG Processing attribute `client` : value = 1
w2022-03-15 01:13:46 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 01:13:46 DEBUG Processing attribute `status` : value = OPEN
w2022-03-15 01:13:46 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 01:13:46 DEBUG Processing attribute `support` : value = null
w2022-03-15 01:13:46 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 01:13:46 DEBUG Processing attribute `title` : value = Title2
w2022-03-15 01:13:46 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 01:13:46 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 01:13:48 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 01:13:48 DEBUG begin
w2022-03-15 01:13:48 DEBUG committing
w2022-03-15 01:13:48 DEBUG Rendered criteria query -> select generatedAlias0 from Comment as generatedAlias0 left join generatedAlias0.ticket as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 01:13:48 DEBUG parse() - HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Comment as generatedAlias0 left join generatedAlias0.ticket as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 01:13:48 DEBUG throwQueryException() : no errors
w2022-03-15 01:13:48 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[IDENT] Node: 'ru'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'edu'
    |  |  |  |  |  |  \-[IDENT] Node: 'helpdesk'
    |  |  |  |  |  \-[IDENT] Node: 'entity'
    |  |  |  |  \-[IDENT] Node: 'Comment'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'ticket'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias1'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

w2022-03-15 01:13:48 DEBUG select << begin [level=1, statement=select]
w2022-03-15 01:13:48 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.Comment (generatedAlias0) -> comment0_
w2022-03-15 01:13:48 DEBUG Resolved : generatedAlias0 -> comment0_.id
w2022-03-15 01:13:48 DEBUG getDataType() : ticket -> org.hibernate.type.ManyToOneType(ru.edu.helpdesk.entity.Ticket)
w2022-03-15 01:13:48 DEBUG dereferenceEntityJoin() : generating join for ticket in ru.edu.helpdesk.entity.Comment (generatedAlias1) parent = [ {null} ]
w2022-03-15 01:13:48 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.Ticket (generatedAlias1) -> ticket1_
w2022-03-15 01:13:48 DEBUG addJoinByPathMap() : generatedAlias0.ticket -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=ticket,tableAlias=ticket1_,origin=comment comment0_,columns={comment0_.ticket_id,className=ru.edu.helpdesk.entity.Ticket}}
w2022-03-15 01:13:48 DEBUG Resolved : generatedAlias0.ticket -> comment0_.ticket_id
w2022-03-15 01:13:48 DEBUG createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'ticket ticket1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Comment.ticket,tableName=ticket,tableAlias=ticket1_,origin=comment comment0_,columns={comment0_.ticket_id,className=ru.edu.helpdesk.entity.Ticket}}

w2022-03-15 01:13:48 DEBUG Resolved : generatedAlias0 -> comment0_.id
w2022-03-15 01:13:48 DEBUG Resolved : generatedAlias1 -> ticket1_.id
w2022-03-15 01:13:48 DEBUG getDataType() : id -> org.hibernate.type.LongType@4c48ed21
w2022-03-15 01:13:48 DEBUG Resolved : generatedAlias1.id -> ticket1_.id
w2022-03-15 01:13:48 DEBUG select : finishing up [level=1, statement=select]
w2022-03-15 01:13:48 DEBUG processQuery() :  ( SELECT ( {select clause} comment0_.id ) ( FromClause{level=1} ( comment comment0_ ticket ticket1_ ) ) ( where ( = ( ticket1_.id ticket1_.id id ) ? ) ) )
w2022-03-15 01:13:48 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Comment): [comment]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.Comment)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.Ticket)
          | path: generatedAlias1.id
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.Ticket)
          |  | originalText: generatedAlias1
          |  \-IdentNode
          |    persister: null
          |    originalText: id
          \-ParameterNode

w2022-03-15 01:13:48 DEBUG Using FROM fragment [comment comment0_]
w2022-03-15 01:13:48 DEBUG Using FROM fragment [left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id]
w2022-03-15 01:13:48 DEBUG select >> end [level=1, statement=select]
w2022-03-15 01:13:48 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (ticket,comment)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'comment0_.id as id1_0_' {alias=generatedAlias0, className=ru.edu.helpdesk.entity.Comment, tableAlias=comment0_}
    |  \-[SQL_TOKEN] SqlFragment: 'comment0_.message as message2_0_, comment0_.ticket_id as ticket_i3_0_, comment0_.user_id as user_id4_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[ticket1_, comment0_], fromElementsByPath=[generatedAlias0.ticket], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'comment comment0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=comment,tableAlias=comment0_,origin=null,columns={,className=ru.edu.helpdesk.entity.Comment}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Comment.ticket,tableName=ticket,tableAlias=ticket1_,origin=comment comment0_,columns={comment0_.ticket_id,className=ru.edu.helpdesk.entity.Ticket}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'ticket1_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias1.id,tableAlias=ticket1_,className=ru.edu.helpdesk.entity.Ticket,classAlias=generatedAlias1}
          |  +-[ALIAS_REF] IdentNode: 'ticket1_.id' {alias=generatedAlias1, className=ru.edu.helpdesk.entity.Ticket, tableAlias=ticket1_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LongType@4c48ed21}

w2022-03-15 01:13:48 DEBUG throwQueryException() : no errors
w2022-03-15 01:13:48 DEBUG HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Comment as generatedAlias0 left join generatedAlias0.ticket as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 01:13:48 DEBUG SQL: select comment0_.id as id1_0_, comment0_.message as message2_0_, comment0_.ticket_id as ticket_i3_0_, comment0_.user_id as user_id4_0_ from comment comment0_ left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id where ticket1_.id=?
w2022-03-15 01:13:48 DEBUG throwQueryException() : no errors
w2022-03-15 01:13:48 DEBUG select comment0_.id as id1_0_, comment0_.message as message2_0_, comment0_.ticket_id as ticket_i3_0_, comment0_.user_id as user_id4_0_ from comment comment0_ left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id where ticket1_.id=?
w2022-03-15 01:13:48 DEBUG Result set row: 0
w2022-03-15 01:13:48 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Comment#1]
w2022-03-15 01:13:48 DEBUG Result set row: 1
w2022-03-15 01:13:48 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Comment#3]
w2022-03-15 01:13:48 DEBUG Result set row: 2
w2022-03-15 01:13:48 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Comment#4]
w2022-03-15 01:13:48 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Comment#1]
w2022-03-15 01:13:48 DEBUG Processing attribute `message` : value = Hello ticket1
w2022-03-15 01:13:48 DEBUG Attribute (`message`)  - enhanced for lazy-loading? - false
w2022-03-15 01:13:48 DEBUG Processing attribute `ticket` : value = 1
w2022-03-15 01:13:48 DEBUG Attribute (`ticket`)  - enhanced for lazy-loading? - false
w2022-03-15 01:13:48 DEBUG select ticket0_.id as id1_1_0_, ticket0_.client_id as client_i4_1_0_, ticket0_.status as status2_1_0_, ticket0_.support_id as support_5_1_0_, ticket0_.title as title3_1_0_, user1_.id as id1_2_1_, user1_.first_name as first_na2_2_1_, user1_.last_name as last_nam3_2_1_, user1_.login as login4_2_1_, user1_.password as password5_2_1_, user1_.role as role6_2_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id left outer join user user2_ on ticket0_.support_id=user2_.id where ticket0_.id=?
w2022-03-15 01:13:48 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 01:13:48 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 01:13:48 DEBUG Processing attribute `client` : value = 1
w2022-03-15 01:13:48 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 01:13:48 DEBUG Processing attribute `status` : value = WORKING
w2022-03-15 01:13:48 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 01:13:48 DEBUG Processing attribute `support` : value = 2
w2022-03-15 01:13:48 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 01:13:48 DEBUG Processing attribute `title` : value = Hello user1
w2022-03-15 01:13:48 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 01:13:48 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 01:13:48 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#1]
w2022-03-15 01:13:48 DEBUG Processing attribute `firstName` : value = admin
w2022-03-15 01:13:48 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 01:13:48 DEBUG Processing attribute `lastName` : value = admin
w2022-03-15 01:13:48 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 01:13:48 DEBUG Processing attribute `login` : value = admin
w2022-03-15 01:13:48 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 01:13:48 DEBUG Processing attribute `password` : value = admin
w2022-03-15 01:13:48 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 01:13:48 DEBUG Processing attribute `role` : value = ADMIN
w2022-03-15 01:13:48 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 01:13:48 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#1]
w2022-03-15 01:13:48 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#2]
w2022-03-15 01:13:48 DEBUG Processing attribute `firstName` : value = support
w2022-03-15 01:13:48 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 01:13:48 DEBUG Processing attribute `lastName` : value = support
w2022-03-15 01:13:48 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 01:13:48 DEBUG Processing attribute `login` : value = support
w2022-03-15 01:13:48 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 01:13:48 DEBUG Processing attribute `password` : value = support
w2022-03-15 01:13:48 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 01:13:48 DEBUG Processing attribute `role` : value = SUPPORT
w2022-03-15 01:13:48 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 01:13:48 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#2]
w2022-03-15 01:13:48 DEBUG Done entity load : ru.edu.helpdesk.entity.Ticket#1
w2022-03-15 01:13:48 DEBUG Processing attribute `user` : value = 3
w2022-03-15 01:13:48 DEBUG Attribute (`user`)  - enhanced for lazy-loading? - false
w2022-03-15 01:13:48 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 01:13:48 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 01:13:48 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#3]
w2022-03-15 01:13:48 DEBUG Processing attribute `firstName` : value = user1
w2022-03-15 01:13:48 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 01:13:48 DEBUG Processing attribute `lastName` : value = user1
w2022-03-15 01:13:48 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 01:13:48 DEBUG Processing attribute `login` : value = user1
w2022-03-15 01:13:48 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 01:13:48 DEBUG Processing attribute `password` : value = user1
w2022-03-15 01:13:48 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 01:13:48 DEBUG Processing attribute `role` : value = USER
w2022-03-15 01:13:48 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 01:13:48 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#3]
w2022-03-15 01:13:48 DEBUG Done entity load : ru.edu.helpdesk.entity.User#3
w2022-03-15 01:13:48 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Comment#1]
w2022-03-15 01:13:48 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Comment#3]
w2022-03-15 01:13:48 DEBUG Processing attribute `message` : value = Hello ticket11
w2022-03-15 01:13:48 DEBUG Attribute (`message`)  - enhanced for lazy-loading? - false
w2022-03-15 01:13:48 DEBUG Processing attribute `ticket` : value = 1
w2022-03-15 01:13:48 DEBUG Attribute (`ticket`)  - enhanced for lazy-loading? - false
w2022-03-15 01:13:48 DEBUG Processing attribute `user` : value = 2
w2022-03-15 01:13:48 DEBUG Attribute (`user`)  - enhanced for lazy-loading? - false
w2022-03-15 01:13:48 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Comment#3]
w2022-03-15 01:13:48 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Comment#4]
w2022-03-15 01:13:48 DEBUG Processing attribute `message` : value = Hello ticket111
w2022-03-15 01:13:48 DEBUG Attribute (`message`)  - enhanced for lazy-loading? - false
w2022-03-15 01:13:48 DEBUG Processing attribute `ticket` : value = 1
w2022-03-15 01:13:48 DEBUG Attribute (`ticket`)  - enhanced for lazy-loading? - false
w2022-03-15 01:13:48 DEBUG Processing attribute `user` : value = 2
w2022-03-15 01:13:48 DEBUG Attribute (`user`)  - enhanced for lazy-loading? - false
w2022-03-15 01:13:48 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Comment#4]
w2022-03-15 01:16:14 DEBUG Logging Provider: org.jboss.logging.Log4j2LoggerProvider
w2022-03-15 01:16:14 DEBUG PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@82953d9
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/%d0%9e%d0%bb%d1%8c%d0%b3%d0%b0/Desktop/Java/Project/Project1/helpdeskproject/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		ru.edu.helpdesk.entity.Comment
		ru.edu.helpdesk.entity.Ticket
		ru.edu.helpdesk.entity.User]
	Mapping files names []
	Properties []
w2022-03-15 01:16:14 DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
w2022-03-15 01:16:14 DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
w2022-03-15 01:16:14 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
w2022-03-15 01:16:14 INFO  HHH000412: Hibernate ORM core version 5.6.5.Final
w2022-03-15 01:16:14 DEBUG HHH000206: hibernate.properties not found
w2022-03-15 01:16:14 DEBUG Overriding existing service binding [org.hibernate.secure.spi.JaccService]
w2022-03-15 01:16:14 DEBUG Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
w2022-03-15 01:16:14 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
w2022-03-15 01:16:14 INFO  HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
w2022-03-15 01:16:14 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@b6fd3d9
w2022-03-15 01:16:14 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@b6fd3d9
w2022-03-15 01:16:14 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@b6fd3d9
w2022-03-15 01:16:14 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@41527477
w2022-03-15 01:16:14 DEBUG Adding type registration true_false -> org.hibernate.type.TrueFalseType@62845234
w2022-03-15 01:16:14 DEBUG Adding type registration yes_no -> org.hibernate.type.YesNoType@6183a6d2
w2022-03-15 01:16:14 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@5881cd90
w2022-03-15 01:16:14 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@5881cd90
w2022-03-15 01:16:14 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5881cd90
w2022-03-15 01:16:14 DEBUG Adding type registration character -> org.hibernate.type.CharacterType@56f9ba15
w2022-03-15 01:16:14 DEBUG Adding type registration char -> org.hibernate.type.CharacterType@56f9ba15
w2022-03-15 01:16:14 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@56f9ba15
w2022-03-15 01:16:14 DEBUG Adding type registration short -> org.hibernate.type.ShortType@4622f990
w2022-03-15 01:16:14 DEBUG Adding type registration short -> org.hibernate.type.ShortType@4622f990
w2022-03-15 01:16:14 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4622f990
w2022-03-15 01:16:14 DEBUG Adding type registration integer -> org.hibernate.type.IntegerType@47d1f394
w2022-03-15 01:16:14 DEBUG Adding type registration int -> org.hibernate.type.IntegerType@47d1f394
w2022-03-15 01:16:14 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@47d1f394
w2022-03-15 01:16:14 DEBUG Adding type registration long -> org.hibernate.type.LongType@25ed009c
w2022-03-15 01:16:14 DEBUG Adding type registration long -> org.hibernate.type.LongType@25ed009c
w2022-03-15 01:16:14 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.LongType@25ed009c
w2022-03-15 01:16:14 DEBUG Adding type registration float -> org.hibernate.type.FloatType@695bff51
w2022-03-15 01:16:14 DEBUG Adding type registration float -> org.hibernate.type.FloatType@695bff51
w2022-03-15 01:16:14 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.FloatType@695bff51
w2022-03-15 01:16:14 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@1f22602f
w2022-03-15 01:16:14 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@1f22602f
w2022-03-15 01:16:14 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1f22602f
w2022-03-15 01:16:14 DEBUG Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@e5bad3d
w2022-03-15 01:16:14 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@e5bad3d
w2022-03-15 01:16:14 DEBUG Adding type registration big_integer -> org.hibernate.type.BigIntegerType@690d59a2
w2022-03-15 01:16:14 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@690d59a2
w2022-03-15 01:16:14 DEBUG Adding type registration string -> org.hibernate.type.StringType@40abeb25
w2022-03-15 01:16:14 DEBUG Adding type registration java.lang.String -> org.hibernate.type.StringType@40abeb25
w2022-03-15 01:16:14 DEBUG Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5b8326c4
w2022-03-15 01:16:14 DEBUG Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2deac443
w2022-03-15 01:16:14 DEBUG Adding type registration url -> org.hibernate.type.UrlType@56017e7d
w2022-03-15 01:16:14 DEBUG Adding type registration java.net.URL -> org.hibernate.type.UrlType@56017e7d
w2022-03-15 01:16:14 DEBUG Adding type registration Duration -> org.hibernate.type.DurationType@7ce01d72
w2022-03-15 01:16:14 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7ce01d72
w2022-03-15 01:16:14 DEBUG Adding type registration Instant -> org.hibernate.type.InstantType@54f28c68
w2022-03-15 01:16:14 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.InstantType@54f28c68
w2022-03-15 01:16:14 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@240c5ba7
w2022-03-15 01:16:14 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@240c5ba7
w2022-03-15 01:16:14 DEBUG Adding type registration LocalDate -> org.hibernate.type.LocalDateType@515714f0
w2022-03-15 01:16:14 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@515714f0
w2022-03-15 01:16:14 DEBUG Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@348a2d1e
w2022-03-15 01:16:14 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@348a2d1e
w2022-03-15 01:16:14 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@770d62d
w2022-03-15 01:16:14 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@770d62d
w2022-03-15 01:16:14 DEBUG Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@55359e1
w2022-03-15 01:16:14 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@55359e1
w2022-03-15 01:16:14 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@385f6ef4
w2022-03-15 01:16:14 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@385f6ef4
w2022-03-15 01:16:14 DEBUG Adding type registration date -> org.hibernate.type.DateType@14e5c2de
w2022-03-15 01:16:14 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.DateType@14e5c2de
w2022-03-15 01:16:14 DEBUG Adding type registration time -> org.hibernate.type.TimeType@4321f1d3
w2022-03-15 01:16:14 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4321f1d3
w2022-03-15 01:16:14 DEBUG Adding type registration timestamp -> org.hibernate.type.TimestampType@610e4839
w2022-03-15 01:16:14 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@610e4839
w2022-03-15 01:16:14 DEBUG Adding type registration java.util.Date -> org.hibernate.type.TimestampType@610e4839
w2022-03-15 01:16:14 DEBUG Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@690b0412
w2022-03-15 01:16:14 DEBUG Adding type registration calendar -> org.hibernate.type.CalendarType@6df30ed3
w2022-03-15 01:16:14 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6df30ed3
w2022-03-15 01:16:14 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6df30ed3
w2022-03-15 01:16:14 DEBUG Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@22570fc1
w2022-03-15 01:16:14 DEBUG Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@56fbf06e
w2022-03-15 01:16:14 DEBUG Adding type registration locale -> org.hibernate.type.LocaleType@6174b86e
w2022-03-15 01:16:14 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6174b86e
w2022-03-15 01:16:14 DEBUG Adding type registration currency -> org.hibernate.type.CurrencyType@bcf5189
w2022-03-15 01:16:14 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@bcf5189
w2022-03-15 01:16:14 DEBUG Adding type registration timezone -> org.hibernate.type.TimeZoneType@196766
w2022-03-15 01:16:14 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@196766
w2022-03-15 01:16:14 DEBUG Adding type registration class -> org.hibernate.type.ClassType@41f4e15a
w2022-03-15 01:16:14 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.ClassType@41f4e15a
w2022-03-15 01:16:14 DEBUG Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@98c9f3c
w2022-03-15 01:16:14 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@98c9f3c
w2022-03-15 01:16:14 DEBUG Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@61822c66
w2022-03-15 01:16:14 DEBUG Adding type registration binary -> org.hibernate.type.BinaryType@228d53da
w2022-03-15 01:16:14 DEBUG Adding type registration byte[] -> org.hibernate.type.BinaryType@228d53da
w2022-03-15 01:16:14 DEBUG Adding type registration [B -> org.hibernate.type.BinaryType@228d53da
w2022-03-15 01:16:14 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5a5c9e9e
w2022-03-15 01:16:14 DEBUG Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5a5c9e9e
w2022-03-15 01:16:14 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5a5c9e9e
w2022-03-15 01:16:14 DEBUG Adding type registration row_version -> org.hibernate.type.RowVersionType@1d659f62
w2022-03-15 01:16:14 DEBUG Adding type registration image -> org.hibernate.type.ImageType@1da57075
w2022-03-15 01:16:14 DEBUG Adding type registration characters -> org.hibernate.type.CharArrayType@1e065e76
w2022-03-15 01:16:14 DEBUG Adding type registration char[] -> org.hibernate.type.CharArrayType@1e065e76
w2022-03-15 01:16:14 DEBUG Adding type registration [C -> org.hibernate.type.CharArrayType@1e065e76
w2022-03-15 01:16:14 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@31a4bd46
w2022-03-15 01:16:14 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@31a4bd46
w2022-03-15 01:16:14 DEBUG Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@31a4bd46
w2022-03-15 01:16:14 DEBUG Adding type registration text -> org.hibernate.type.TextType@599d89b3
w2022-03-15 01:16:14 DEBUG Adding type registration ntext -> org.hibernate.type.NTextType@6143a24c
w2022-03-15 01:16:14 DEBUG Adding type registration blob -> org.hibernate.type.BlobType@19babb68
w2022-03-15 01:16:14 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@19babb68
w2022-03-15 01:16:14 DEBUG Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@690ea773
w2022-03-15 01:16:14 DEBUG Adding type registration clob -> org.hibernate.type.ClobType@20b75840
w2022-03-15 01:16:14 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@20b75840
w2022-03-15 01:16:14 DEBUG Adding type registration nclob -> org.hibernate.type.NClobType@40f471ca
w2022-03-15 01:16:14 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@40f471ca
w2022-03-15 01:16:14 DEBUG Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@407a45fe
w2022-03-15 01:16:14 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@109250ab
w2022-03-15 01:16:14 DEBUG Adding type registration serializable -> org.hibernate.type.SerializableType@335e3077
w2022-03-15 01:16:14 DEBUG Adding type registration object -> org.hibernate.type.ObjectType@20f00d61
w2022-03-15 01:16:14 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@20f00d61
w2022-03-15 01:16:14 DEBUG Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1e90101c
w2022-03-15 01:16:14 DEBUG Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3e2b8daa
w2022-03-15 01:16:14 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@18a93530
w2022-03-15 01:16:14 DEBUG Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@49055dbe
w2022-03-15 01:16:14 DEBUG Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@578ba472
w2022-03-15 01:16:14 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@35af35f4
w2022-03-15 01:16:14 DEBUG Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@64fe86c4
w2022-03-15 01:16:14 DEBUG Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7f5cf48
w2022-03-15 01:16:14 INFO  HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
w2022-03-15 01:16:14 DEBUG Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@108d5b8] into BootstrapContext; was [null]
w2022-03-15 01:16:14 DEBUG ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@108d5b8) [was null]
w2022-03-15 01:16:14 DEBUG Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@2e21578e] into BootstrapContext; was [null]
w2022-03-15 01:16:14 DEBUG Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@3b06a33b] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@74196b3d]
w2022-03-15 01:16:14 DEBUG Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@108d5b8]
w2022-03-15 01:16:14 DEBUG ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@108d5b8]
w2022-03-15 01:16:14 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
w2022-03-15 01:16:14 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
w2022-03-15 01:16:14 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
w2022-03-15 01:16:14 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
w2022-03-15 01:16:14 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
w2022-03-15 01:16:14 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
w2022-03-15 01:16:14 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
w2022-03-15 01:16:14 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
w2022-03-15 01:16:14 DEBUG Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
w2022-03-15 01:16:14 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
w2022-03-15 01:16:14 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
w2022-03-15 01:16:14 DEBUG Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
w2022-03-15 01:16:14 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
w2022-03-15 01:16:14 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
w2022-03-15 01:16:14 DEBUG Database ->
       name : SQLite
    version : 3.36.0
      major : 3
      minor : 36
w2022-03-15 01:16:14 DEBUG Driver ->
       name : SQLite JDBC
    version : 3.36.0.3
      major : 3
      minor : 36
w2022-03-15 01:16:14 DEBUG JDBC version : 2.1
w2022-03-15 01:16:14 INFO  HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
w2022-03-15 01:16:14 DEBUG JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
w2022-03-15 01:16:14 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
w2022-03-15 01:16:14 DEBUG HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [2] less than 4
w2022-03-15 01:16:14 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@37332705] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4e590691]
w2022-03-15 01:16:14 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
w2022-03-15 01:16:14 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.Comment
w2022-03-15 01:16:14 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 01:16:14 DEBUG Import with entity name Comment
w2022-03-15 01:16:14 DEBUG Bind entity ru.edu.helpdesk.entity.Comment on table comment
w2022-03-15 01:16:14 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 01:16:14 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Comment] is safe
w2022-03-15 01:16:14 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Comment
w2022-03-15 01:16:14 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 01:16:14 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Comment:id]
w2022-03-15 01:16:14 DEBUG building SimpleValue for id
w2022-03-15 01:16:14 DEBUG Building property id
w2022-03-15 01:16:14 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 01:16:14 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=message, insertable=true, updatable=true, unique=false}
w2022-03-15 01:16:14 DEBUG MetadataSourceProcessor property message with lazy=false
w2022-03-15 01:16:14 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Comment:message]
w2022-03-15 01:16:14 DEBUG building SimpleValue for message
w2022-03-15 01:16:14 DEBUG Building property message
w2022-03-15 01:16:14 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 01:16:14 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=ticket, insertable=true, updatable=true, unique=false}
w2022-03-15 01:16:14 DEBUG Building property ticket
w2022-03-15 01:16:14 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 01:16:14 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=user, insertable=true, updatable=true, unique=false}
w2022-03-15 01:16:14 DEBUG Building property user
w2022-03-15 01:16:15 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 01:16:15 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 01:16:15 DEBUG Import with entity name Ticket
w2022-03-15 01:16:15 DEBUG Bind entity ru.edu.helpdesk.entity.Ticket on table ticket
w2022-03-15 01:16:15 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 01:16:15 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Ticket] is safe
w2022-03-15 01:16:15 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Ticket
w2022-03-15 01:16:15 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 01:16:15 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:id]
w2022-03-15 01:16:15 DEBUG building SimpleValue for id
w2022-03-15 01:16:15 DEBUG Building property id
w2022-03-15 01:16:15 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 01:16:15 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 01:16:15 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=client, insertable=true, updatable=true, unique=false}
w2022-03-15 01:16:15 DEBUG Building property client
w2022-03-15 01:16:15 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=status, insertable=true, updatable=true, unique=false}
w2022-03-15 01:16:15 DEBUG MetadataSourceProcessor property status with lazy=false
w2022-03-15 01:16:15 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:status]
w2022-03-15 01:16:15 DEBUG building SimpleValue for status
w2022-03-15 01:16:15 DEBUG Building property status
w2022-03-15 01:16:15 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 01:16:15 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=support, insertable=true, updatable=true, unique=false}
w2022-03-15 01:16:15 DEBUG Building property support
w2022-03-15 01:16:15 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=title, insertable=true, updatable=true, unique=false}
w2022-03-15 01:16:15 DEBUG MetadataSourceProcessor property title with lazy=false
w2022-03-15 01:16:15 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:title]
w2022-03-15 01:16:15 DEBUG building SimpleValue for title
w2022-03-15 01:16:15 DEBUG Building property title
w2022-03-15 01:16:15 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.User
w2022-03-15 01:16:15 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 01:16:15 DEBUG Import with entity name User
w2022-03-15 01:16:15 DEBUG Bind entity ru.edu.helpdesk.entity.User on table user
w2022-03-15 01:16:15 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 01:16:15 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.User] is safe
w2022-03-15 01:16:15 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.User
w2022-03-15 01:16:15 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 01:16:15 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:id]
w2022-03-15 01:16:15 DEBUG building SimpleValue for id
w2022-03-15 01:16:15 DEBUG Building property id
w2022-03-15 01:16:15 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 01:16:15 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
w2022-03-15 01:16:15 DEBUG MetadataSourceProcessor property firstName with lazy=false
w2022-03-15 01:16:15 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:firstName]
w2022-03-15 01:16:15 DEBUG building SimpleValue for firstName
w2022-03-15 01:16:15 DEBUG Building property firstName
w2022-03-15 01:16:15 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
w2022-03-15 01:16:15 DEBUG MetadataSourceProcessor property lastName with lazy=false
w2022-03-15 01:16:15 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:lastName]
w2022-03-15 01:16:15 DEBUG building SimpleValue for lastName
w2022-03-15 01:16:15 DEBUG Building property lastName
w2022-03-15 01:16:15 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=login, insertable=true, updatable=true, unique=false}
w2022-03-15 01:16:15 DEBUG MetadataSourceProcessor property login with lazy=false
w2022-03-15 01:16:15 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:login]
w2022-03-15 01:16:15 DEBUG building SimpleValue for login
w2022-03-15 01:16:15 DEBUG Building property login
w2022-03-15 01:16:15 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
w2022-03-15 01:16:15 DEBUG MetadataSourceProcessor property password with lazy=false
w2022-03-15 01:16:15 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:password]
w2022-03-15 01:16:15 DEBUG building SimpleValue for password
w2022-03-15 01:16:15 DEBUG Building property password
w2022-03-15 01:16:15 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=role, insertable=true, updatable=true, unique=false}
w2022-03-15 01:16:15 DEBUG MetadataSourceProcessor property role with lazy=false
w2022-03-15 01:16:15 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:role]
w2022-03-15 01:16:15 DEBUG building SimpleValue for role
w2022-03-15 01:16:15 DEBUG Building property role
w2022-03-15 01:16:15 DEBUG Starting fillSimpleValue for id
w2022-03-15 01:16:15 DEBUG Starting fillSimpleValue for message
w2022-03-15 01:16:15 DEBUG Starting fillSimpleValue for id
w2022-03-15 01:16:15 DEBUG Starting fillSimpleValue for status
w2022-03-15 01:16:15 DEBUG Starting fillSimpleValue for title
w2022-03-15 01:16:15 DEBUG Starting fillSimpleValue for id
w2022-03-15 01:16:15 DEBUG Starting fillSimpleValue for firstName
w2022-03-15 01:16:15 DEBUG Starting fillSimpleValue for lastName
w2022-03-15 01:16:15 DEBUG Starting fillSimpleValue for login
w2022-03-15 01:16:15 DEBUG Starting fillSimpleValue for password
w2022-03-15 01:16:15 DEBUG Starting fillSimpleValue for role
w2022-03-15 01:16:15 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [comment]
w2022-03-15 01:16:15 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [ticket]
w2022-03-15 01:16:15 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [user]
w2022-03-15 01:16:15 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 01:16:15 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 01:16:15 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 01:16:15 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 01:16:15 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 01:16:15 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 01:16:15 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 01:16:15 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 01:16:15 DEBUG Building session factory
w2022-03-15 01:16:15 DEBUG SessionFactory name : null
w2022-03-15 01:16:15 DEBUG Automatic flush during beforeCompletion(): enabled
w2022-03-15 01:16:15 DEBUG Automatic session close at end of transaction: disabled
w2022-03-15 01:16:15 DEBUG Statistics: disabled
w2022-03-15 01:16:15 DEBUG Deleted entity synthetic identifier rollback: disabled
w2022-03-15 01:16:15 DEBUG Default entity-mode: pojo
w2022-03-15 01:16:15 DEBUG Check Nullability in Core (should be disabled when Bean Validation is on): enabled
w2022-03-15 01:16:15 DEBUG Allow initialization of lazy state outside session : disabled
w2022-03-15 01:16:15 DEBUG Using BatchFetchStyle : LEGACY
w2022-03-15 01:16:15 DEBUG Default batch fetch size: -1
w2022-03-15 01:16:15 DEBUG Maximum outer join fetch depth: null
w2022-03-15 01:16:15 DEBUG Default null ordering: NONE
w2022-03-15 01:16:15 DEBUG Order SQL updates by primary key: disabled
w2022-03-15 01:16:15 DEBUG Order SQL inserts for batching: disabled
w2022-03-15 01:16:15 DEBUG multi-tenancy strategy : NONE
w2022-03-15 01:16:15 DEBUG JTA Track by Thread: enabled
w2022-03-15 01:16:15 DEBUG Query language substitutions: {}
w2022-03-15 01:16:15 DEBUG Named query checking : enabled
w2022-03-15 01:16:15 DEBUG Second-level cache: disabled
w2022-03-15 01:16:15 DEBUG Second-level query cache: disabled
w2022-03-15 01:16:15 DEBUG Second-level query cache factory: null
w2022-03-15 01:16:15 DEBUG Second-level cache region prefix: null
w2022-03-15 01:16:15 DEBUG Optimize second-level cache for minimal puts: disabled
w2022-03-15 01:16:15 DEBUG Structured second-level cache entries: disabled
w2022-03-15 01:16:15 DEBUG Second-level cache direct-reference entries: disabled
w2022-03-15 01:16:15 DEBUG Automatic eviction of collection cache: disabled
w2022-03-15 01:16:15 DEBUG JDBC batch size: 1
w2022-03-15 01:16:15 DEBUG JDBC batch updates for versioned data: enabled
w2022-03-15 01:16:15 DEBUG Scrollable result sets: disabled
w2022-03-15 01:16:15 DEBUG Wrap result sets: disabled
w2022-03-15 01:16:15 DEBUG JDBC3 getGeneratedKeys(): enabled
w2022-03-15 01:16:15 DEBUG JDBC result set fetch size: null
w2022-03-15 01:16:15 DEBUG Connection release mode: ON_CLOSE
w2022-03-15 01:16:15 DEBUG Generate SQL with comments: disabled
w2022-03-15 01:16:15 DEBUG JPA compliance - query : disabled
w2022-03-15 01:16:15 DEBUG JPA compliance - closed-handling : disabled
w2022-03-15 01:16:15 DEBUG JPA compliance - lists : disabled
w2022-03-15 01:16:15 DEBUG JPA compliance - transactions : disabled
w2022-03-15 01:16:15 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 01:16:15 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 01:16:15 DEBUG Session factory constructed with filter configurations : {}
w2022-03-15 01:16:15 DEBUG Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=true, java.specification.version=1.8, file.encoding.pkg=sun.io, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@2cd431ca, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.SQLiteDialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\charsets.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\cldrdata.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\dnsns.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\jaccess.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\localedata.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\nashorn.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunec.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunmscapi.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\zipfs.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jce.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jfr.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jsse.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\management-agent.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\resources.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\rt.jar;C:\Users\Ольга\Desktop\Java\Project\Project1\helpdeskproject\target\classes;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\2.6.4\spring-boot-starter-data-jpa-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\2.6.4\spring-boot-starter-jdbc-2.6.4.jar;C:\Users\Ольга\.m2\repository\com\zaxxer\HikariCP\4.0.3\HikariCP-4.0.3.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-jdbc\5.3.16\spring-jdbc-5.3.16.jar;C:\Users\Ольга\.m2\repository\jakarta\transaction\jakarta.transaction-api\1.3.3\jakarta.transaction-api-1.3.3.jar;C:\Users\Ольга\.m2\repository\jakarta\persistence\jakarta.persistence-api\2.2.3\jakarta.persistence-api-2.2.3.jar;C:\Users\Ольга\.m2\repository\org\hibernate\hibernate-core\5.6.5.Final\hibernate-core-5.6.5.Final.jar;C:\Users\Ольга\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy\1.11.22\byte-buddy-1.11.22.jar;C:\Users\Ольга\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ольга\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Ольга\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.6\jaxb-runtime-2.3.6.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\txw2\2.3.6\txw2-2.3.6.jar;C:\Users\Ольга\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.12\istack-commons-runtime-3.0.12.jar;C:\Users\Ольга\.m2\repository\com\sun\activation\jakarta.activation\1.2.2\jakarta.activation-1.2.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\data\spring-data-jpa\2.6.2\spring-data-jpa-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\data\spring-data-commons\2.6.2\spring-data-commons-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-orm\5.3.16\spring-orm-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-context\5.3.16\spring-context-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-tx\5.3.16\spring-tx-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-beans\5.3.16\spring-beans-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-aspects\5.3.16\spring-aspects-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-security\2.6.4\spring-boot-starter-security-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter\2.6.4\spring-boot-starter-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-logging\2.6.4\spring-boot-starter-logging-2.6.4.jar;C:\Users\Ольга\.m2\repository\ch\qos\logback\logback-classic\1.2.10\logback-classic-1.2.10.jar;C:\Users\Ольга\.m2\repository\ch\qos\logback\logback-core\1.2.10\logback-core-1.2.10.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.17.1\log4j-to-slf4j-2.17.1.jar;C:\Users\Ольга\.m2\repository\org\slf4j\jul-to-slf4j\1.7.36\jul-to-slf4j-1.7.36.jar;C:\Users\Ольга\.m2\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;C:\Users\Ольга\.m2\repository\org\yaml\snakeyaml\1.29\snakeyaml-1.29.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-aop\5.3.16\spring-aop-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-config\5.6.2\spring-security-config-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-web\5.6.2\spring-security-web-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-expression\5.3.16\spring-expression-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-web\2.6.4\spring-boot-starter-web-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-json\2.6.4\spring-boot-starter-json-2.6.4.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.13.1\jackson-datatype-jdk8-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.13.1\jackson-datatype-jsr310-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.13.1\jackson-module-parameter-names-2.13.1.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\2.6.4\spring-boot-starter-tomcat-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.58\tomcat-embed-core-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\9.0.58\tomcat-embed-el-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.58\tomcat-embed-websocket-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-web\5.3.16\spring-web-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-webmvc\5.3.16\spring-webmvc-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-devtools\2.6.4\spring-boot-devtools-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot\2.6.4\spring-boot-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\2.6.4\spring-boot-autoconfigure-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\xerial\sqlite-jdbc\3.36.0.3\sqlite-jdbc-3.36.0.3.jar;C:\Users\Ольга\.m2\repository\com\zsoltfabok\sqlite-dialect\1.0\sqlite-dialect-1.0.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-aop\2.6.2\spring-boot-starter-aop-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\aspectj\aspectjweaver\1.9.7\aspectjweaver-1.9.7.jar;C:\Users\Ольга\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.3\jakarta.xml.bind-api-2.3.3.jar;C:\Users\Ольга\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.2\jakarta.activation-api-1.2.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-core\5.3.16\spring-core-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-jcl\5.3.16\spring-jcl-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-core\5.6.2\spring-security-core-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-crypto\5.6.2\spring-security-crypto-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\projectlombok\lombok\1.18.22\lombok-1.18.22.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\2.6.4\spring-boot-starter-thymeleaf-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\thymeleaf-spring5\3.0.15.RELEASE\thymeleaf-spring5-3.0.15.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\thymeleaf\3.0.15.RELEASE\thymeleaf-3.0.15.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\attoparser\attoparser\2.0.5.RELEASE\attoparser-2.0.5.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-java8time\3.0.4.RELEASE\thymeleaf-extras-java8time-3.0.4.RELEASE.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.1\jackson-databind-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.1\jackson-annotations-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.1\jackson-core-2.13.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-api\2.4.1\log4j-api-2.4.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-core\2.4.1\log4j-core-2.4.1.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.2\lib\idea_rt.jar, java.vm.vendor=Temurin, sun.arch.data.model=64, user.variant=, java.vendor.url=https://adoptium.net/, catalina.useNaming=false, user.timezone=Europe/Moscow, jakarta.persistence.sharedCache.mode=UNSPECIFIED, os.name=Windows 10, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), user.country=RU, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\bin, sun.java.command=ru.edu.helpdesk.HelpdeskApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@61fbef95, com.sun.management.jmxremote=, javax.persistence.sharedCache.mode=UNSPECIFIED, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, user.home=C:\Users\Ольга, user.language=ru, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre, file.separator=\, spring.output.ansi.enabled=always, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, sun.boot.class.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\resources.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\rt.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\sunrsasign.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jsse.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jce.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\charsets.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jfr.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\classes, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_312-b07, user.name=Эльдорадо, spring.jmx.enabled=true, path.separator=;, os.version=10.0, java.endorsed.dirs=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\endorsed, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=default, spring.beaninfo.ignore=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=C:\Users\134E~1\AppData\Local\Temp\, catalina.home=C:\Users\Ольга\AppData\Local\Temp\tomcat.8080.545423937880157607, java.version=1.8.0_312, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\Ольга\Desktop\Java\Project\Project1\helpdeskproject, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=6736, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\Ольга\AppData\Local\Temp\tomcat.8080.545423937880157607, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@4f8e869, java.library.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\windows\System32\OpenSSH\;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\Program Files\apache-maven-3.8.4\bin;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Ольга\AppData\Local\Microsoft\WindowsApps;C:\Users\Ольга\AppData\Local\Programs\Microsoft VS Code\bin;C:\SQLite;C:\Users\Ольга\AppData\Roaming\npm;C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.2\bin;;., java.vendor=Temurin, java.vm.info=mixed mode, java.vm.version=25.312-b07, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, java.ext.dirs=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext;C:\windows\Sun\Java\lib\ext, hibernate.connection.datasource=HikariDataSource (HikariPool-1), hibernate.hbm2ddl.import_files=data/import.sql, java.class.version=52.0}
w2022-03-15 01:16:15 DEBUG Skipping JACC integration as it was not enabled
w2022-03-15 01:16:15 DEBUG Using ORDINAL-based conversion for Enum ru.edu.helpdesk.entity.UserRole
w2022-03-15 01:16:15 DEBUG Using ORDINAL-based conversion for Enum ru.edu.helpdesk.entity.TicketStatus
w2022-03-15 01:16:15 DEBUG Instantiated session factory
w2022-03-15 01:16:15 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@37332705] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@304cc622]
w2022-03-15 01:16:15 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.User] is safe
w2022-03-15 01:16:15 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.User
w2022-03-15 01:16:15 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:16:15 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:16:15 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:16:15 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:16:15 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Ticket] is safe
w2022-03-15 01:16:15 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Ticket
w2022-03-15 01:16:15 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:16:15 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:16:15 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:16:15 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:16:15 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:16:15 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:16:15 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:16:15 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:16:15 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Comment] is safe
w2022-03-15 01:16:15 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Comment
w2022-03-15 01:16:15 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:16:15 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:16:15 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:16:15 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:16:15 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.User
w2022-03-15 01:16:15 DEBUG  Version select: select id from user where id =?
w2022-03-15 01:16:15 DEBUG  Snapshot select: select user_.id, user_.first_name as first_na2_2_, user_.last_name as last_nam3_2_, user_.login as login4_2_, user_.password as password5_2_, user_.role as role6_2_ from user user_ where user_.id=?
w2022-03-15 01:16:15 DEBUG  Insert 0: insert into user (first_name, last_name, login, password, role, id) values (?, ?, ?, ?, ?, ?)
w2022-03-15 01:16:15 DEBUG  Update 0: update user set first_name=?, last_name=?, login=?, password=?, role=? where id=?
w2022-03-15 01:16:15 DEBUG  Delete 0: delete from user where id=?
w2022-03-15 01:16:15 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3cac0f97]
w2022-03-15 01:16:15 DEBUG Visiting attribute path : firstName
w2022-03-15 01:16:15 DEBUG Visiting attribute path : lastName
w2022-03-15 01:16:15 DEBUG Visiting attribute path : login
w2022-03-15 01:16:15 DEBUG Visiting attribute path : password
w2022-03-15 01:16:15 DEBUG Visiting attribute path : role
w2022-03-15 01:16:15 DEBUG Building LoadPlan...
w2022-03-15 01:16:15 DEBUG processing queryspace <gen:0>
w2022-03-15 01:16:15 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.User)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

w2022-03-15 01:16:15 DEBUG Static select for entity ru.edu.helpdesk.entity.User [NONE]: select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 01:16:15 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.Ticket
w2022-03-15 01:16:15 DEBUG  Version select: select id from ticket where id =?
w2022-03-15 01:16:15 DEBUG  Snapshot select: select ticket_.id, ticket_.client_id as client_i4_1_, ticket_.status as status2_1_, ticket_.support_id as support_5_1_, ticket_.title as title3_1_ from ticket ticket_ where ticket_.id=?
w2022-03-15 01:16:15 DEBUG  Insert 0: insert into ticket (client_id, status, support_id, title, id) values (?, ?, ?, ?, ?)
w2022-03-15 01:16:15 DEBUG  Update 0: update ticket set client_id=?, status=?, support_id=?, title=? where id=?
w2022-03-15 01:16:15 DEBUG  Delete 0: delete from ticket where id=?
w2022-03-15 01:16:15 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76c5473e]
w2022-03-15 01:16:15 DEBUG Visiting attribute path : client
w2022-03-15 01:16:15 DEBUG Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26dc58f3]
w2022-03-15 01:16:15 DEBUG Visiting attribute path : client.firstName
w2022-03-15 01:16:15 DEBUG Visiting attribute path : client.lastName
w2022-03-15 01:16:15 DEBUG Visiting attribute path : client.login
w2022-03-15 01:16:15 DEBUG Visiting attribute path : client.password
w2022-03-15 01:16:15 DEBUG Visiting attribute path : client.role
w2022-03-15 01:16:15 DEBUG Visiting attribute path : status
w2022-03-15 01:16:15 DEBUG Visiting attribute path : support
w2022-03-15 01:16:15 DEBUG Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bcab337]
w2022-03-15 01:16:15 DEBUG Visiting attribute path : support.firstName
w2022-03-15 01:16:15 DEBUG Visiting attribute path : support.lastName
w2022-03-15 01:16:15 DEBUG Visiting attribute path : support.login
w2022-03-15 01:16:15 DEBUG Visiting attribute path : support.password
w2022-03-15 01:16:15 DEBUG Visiting attribute path : support.role
w2022-03-15 01:16:15 DEBUG Visiting attribute path : title
w2022-03-15 01:16:15 DEBUG Building LoadPlan...
w2022-03-15 01:16:15 DEBUG processing queryspace <gen:0>
w2022-03-15 01:16:15 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.Ticket)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.Ticket, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.Ticket)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:1>, path=ru.edu.helpdesk.entity.Ticket.client)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:2>, path=ru.edu.helpdesk.entity.Ticket.support)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.Ticket)
          - SQL table alias mapping - ticket0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(client)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
          - JOIN (JoinDefinedByMetadata(support)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user2_
                - alias suffix - 2_
                - suffixed key columns - {id1_2_2_}

w2022-03-15 01:16:15 DEBUG Static select for entity ru.edu.helpdesk.entity.Ticket [NONE]: select ticket0_.id as id1_1_0_, ticket0_.client_id as client_i4_1_0_, ticket0_.status as status2_1_0_, ticket0_.support_id as support_5_1_0_, ticket0_.title as title3_1_0_, user1_.id as id1_2_1_, user1_.first_name as first_na2_2_1_, user1_.last_name as last_nam3_2_1_, user1_.login as login4_2_1_, user1_.password as password5_2_1_, user1_.role as role6_2_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id left outer join user user2_ on ticket0_.support_id=user2_.id where ticket0_.id=?
w2022-03-15 01:16:15 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.Comment
w2022-03-15 01:16:15 DEBUG  Version select: select id from comment where id =?
w2022-03-15 01:16:15 DEBUG  Snapshot select: select comment_.id, comment_.message as message2_0_, comment_.ticket_id as ticket_i3_0_, comment_.user_id as user_id4_0_ from comment comment_ where comment_.id=?
w2022-03-15 01:16:15 DEBUG  Insert 0: insert into comment (message, ticket_id, user_id, id) values (?, ?, ?, ?)
w2022-03-15 01:16:15 DEBUG  Update 0: update comment set message=?, ticket_id=?, user_id=? where id=?
w2022-03-15 01:16:15 DEBUG  Delete 0: delete from comment where id=?
w2022-03-15 01:16:15 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c69ed6f]
w2022-03-15 01:16:15 DEBUG Visiting attribute path : message
w2022-03-15 01:16:15 DEBUG Visiting attribute path : ticket
w2022-03-15 01:16:15 DEBUG Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1db0c62f]
w2022-03-15 01:16:15 DEBUG Visiting attribute path : ticket.client
w2022-03-15 01:16:15 DEBUG Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50f4228]
w2022-03-15 01:16:15 DEBUG Visiting attribute path : ticket.client.firstName
w2022-03-15 01:16:15 DEBUG Visiting attribute path : ticket.client.lastName
w2022-03-15 01:16:15 DEBUG Visiting attribute path : ticket.client.login
w2022-03-15 01:16:15 DEBUG Visiting attribute path : ticket.client.password
w2022-03-15 01:16:15 DEBUG Visiting attribute path : ticket.client.role
w2022-03-15 01:16:15 DEBUG Visiting attribute path : ticket.status
w2022-03-15 01:16:15 DEBUG Visiting attribute path : ticket.support
w2022-03-15 01:16:15 DEBUG Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ac7bbd5]
w2022-03-15 01:16:15 DEBUG Visiting attribute path : ticket.support.firstName
w2022-03-15 01:16:15 DEBUG Visiting attribute path : ticket.support.lastName
w2022-03-15 01:16:15 DEBUG Visiting attribute path : ticket.support.login
w2022-03-15 01:16:15 DEBUG Visiting attribute path : ticket.support.password
w2022-03-15 01:16:15 DEBUG Visiting attribute path : ticket.support.role
w2022-03-15 01:16:15 DEBUG Visiting attribute path : ticket.title
w2022-03-15 01:16:15 DEBUG Visiting attribute path : user
w2022-03-15 01:16:15 DEBUG Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35802255]
w2022-03-15 01:16:15 DEBUG Visiting attribute path : user.firstName
w2022-03-15 01:16:15 DEBUG Visiting attribute path : user.lastName
w2022-03-15 01:16:15 DEBUG Visiting attribute path : user.login
w2022-03-15 01:16:15 DEBUG Visiting attribute path : user.password
w2022-03-15 01:16:15 DEBUG Visiting attribute path : user.role
w2022-03-15 01:16:15 DEBUG Building LoadPlan...
w2022-03-15 01:16:15 DEBUG processing queryspace <gen:0>
w2022-03-15 01:16:15 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.Comment)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.Comment, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.Comment)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.Ticket, querySpaceUid=<gen:1>, path=ru.edu.helpdesk.entity.Comment.ticket)
             - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:2>, path=ru.edu.helpdesk.entity.Comment.ticket.client)
             - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:3>, path=ru.edu.helpdesk.entity.Comment.ticket.support)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:4>, path=ru.edu.helpdesk.entity.Comment.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(ticket)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ru.edu.helpdesk.entity.Ticket)
                - SQL table alias mapping - ticket1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(client)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=ru.edu.helpdesk.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}
                - JOIN (JoinDefinedByMetadata(support)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=ru.edu.helpdesk.entity.User)
                      - SQL table alias mapping - user3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_2_3_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user4_
                - alias suffix - 4_
                - suffixed key columns - {id1_2_4_}

w2022-03-15 01:16:15 DEBUG Static select for entity ru.edu.helpdesk.entity.Comment [NONE]: select comment0_.id as id1_0_0_, comment0_.message as message2_0_0_, comment0_.ticket_id as ticket_i3_0_0_, comment0_.user_id as user_id4_0_0_, ticket1_.id as id1_1_1_, ticket1_.client_id as client_i4_1_1_, ticket1_.status as status2_1_1_, ticket1_.support_id as support_5_1_1_, ticket1_.title as title3_1_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_, user3_.id as id1_2_3_, user3_.first_name as first_na2_2_3_, user3_.last_name as last_nam3_2_3_, user3_.login as login4_2_3_, user3_.password as password5_2_3_, user3_.role as role6_2_3_, user4_.id as id1_2_4_, user4_.first_name as first_na2_2_4_, user4_.last_name as last_nam3_2_4_, user4_.login as login4_2_4_, user4_.password as password5_2_4_, user4_.role as role6_2_4_ from comment comment0_ left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id left outer join user user2_ on ticket1_.client_id=user2_.id left outer join user user3_ on ticket1_.support_id=user3_.id left outer join user user4_ on comment0_.user_id=user4_.id where comment0_.id=?
w2022-03-15 01:16:15 DEBUG drop table if exists comment
w2022-03-15 01:16:15 DEBUG drop table if exists hibernate_sequence
w2022-03-15 01:16:15 DEBUG drop table if exists ticket
w2022-03-15 01:16:15 DEBUG drop table if exists user
w2022-03-15 01:16:15 DEBUG create table comment (id bigint not null, message varchar(255) not null, ticket_id bigint, user_id bigint, primary key (id))
w2022-03-15 01:16:15 DEBUG create table hibernate_sequence (next_val bigint)
w2022-03-15 01:16:15 DEBUG insert into hibernate_sequence values ( 1 )
w2022-03-15 01:16:15 DEBUG create table ticket (id bigint not null, status integer, title varchar(255) not null, client_id bigint, support_id bigint, primary key (id))
w2022-03-15 01:16:15 DEBUG create table user (id bigint not null, first_name varchar(255), last_name varchar(255), login varchar(255) not null, password varchar(255) not null, role integer, primary key (id))
w2022-03-15 01:16:15 INFO  HHH000476: Executing import script 'file:/C:/Users/%d0%9e%d0%bb%d1%8c%d0%b3%d0%b0/Desktop/Java/Project/Project1/helpdeskproject/target/classes/data/import.sql'
w2022-03-15 01:16:15 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (1, 'admin', 'admin', 'admin', 'admin', 0)
w2022-03-15 01:16:15 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (2, 'support', 'support', 'support', 'support', 1)
w2022-03-15 01:16:15 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (3, 'user1', 'user1', 'user1', 'user1', 2)
w2022-03-15 01:16:15 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (4, 'user2', 'user2', 'user2', 'user2', 2)
w2022-03-15 01:16:15 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (1, 1, 'Hello user1',1, 2)
w2022-03-15 01:16:15 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (2, 0, 'Title2', 1, NULL)
w2022-03-15 01:16:15 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (3, 0, 'Message user2', 4, NULL)
w2022-03-15 01:16:15 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (1, "Hello ticket1", 1, 3)
w2022-03-15 01:16:15 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (2, "Hello ticket2", 2, 3)
w2022-03-15 01:16:15 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (3, "Hello ticket11", 1, 2)
w2022-03-15 01:16:15 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (4, "Hello ticket111", 1, 2)
w2022-03-15 01:16:15 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (5, "Hello ticket22", 2, 2)
w2022-03-15 01:16:15 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (6, "Hello ticket3", 3, 4)
w2022-03-15 01:16:15 DEBUG UPDATE hibernate_sequence SET next_val = 8 WHERE next_val = 1
w2022-03-15 01:16:15 INFO  HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
w2022-03-15 01:16:15 DEBUG Checking 0 named HQL queries
w2022-03-15 01:16:15 DEBUG Checking 0 named SQL queries
w2022-03-15 01:16:15 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 01:16:15 DEBUG Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2465dfb7
w2022-03-15 01:16:15 DEBUG Registering SessionFactory: 2cc58c32-5e58-45d4-a81b-20ff5841307b (<unnamed>)
w2022-03-15 01:16:15 DEBUG Not binding SessionFactory to JNDI, no JNDI name configured
w2022-03-15 01:16:15 DEBUG Statistics initialized [enabled=false]
w2022-03-15 01:16:15 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 01:16:15 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 01:16:15 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 01:16:25 DEBUG Rendered criteria query -> select generatedAlias0 from Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 01:16:25 DEBUG QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@d25532
w2022-03-15 01:16:25 DEBUG parse() - HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 01:16:25 DEBUG throwQueryException() : no errors
w2022-03-15 01:16:25 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[IDENT] Node: 'ru'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'edu'
    |  |  |  |  |  |  \-[IDENT] Node: 'helpdesk'
    |  |  |  |  |  \-[IDENT] Node: 'entity'
    |  |  |  |  \-[IDENT] Node: 'Ticket'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'client'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias1'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

w2022-03-15 01:16:25 DEBUG select << begin [level=1, statement=select]
w2022-03-15 01:16:25 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.Ticket (generatedAlias0) -> ticket0_
w2022-03-15 01:16:25 DEBUG Resolved : generatedAlias0 -> ticket0_.id
w2022-03-15 01:16:25 DEBUG getDataType() : client -> org.hibernate.type.ManyToOneType(ru.edu.helpdesk.entity.User)
w2022-03-15 01:16:25 DEBUG dereferenceEntityJoin() : generating join for client in ru.edu.helpdesk.entity.Ticket (generatedAlias1) parent = [ {null} ]
w2022-03-15 01:16:25 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.User (generatedAlias1) -> user1_
w2022-03-15 01:16:25 DEBUG addJoinByPathMap() : generatedAlias0.client -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}
w2022-03-15 01:16:25 DEBUG Resolved : generatedAlias0.client -> ticket0_.client_id
w2022-03-15 01:16:25 DEBUG createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'user user1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Ticket.client,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}

w2022-03-15 01:16:25 DEBUG Resolved : generatedAlias0 -> ticket0_.id
w2022-03-15 01:16:25 DEBUG Resolved : generatedAlias1 -> user1_.id
w2022-03-15 01:16:25 DEBUG getDataType() : id -> org.hibernate.type.LongType@25ed009c
w2022-03-15 01:16:25 DEBUG Resolved : generatedAlias1.id -> user1_.id
w2022-03-15 01:16:25 DEBUG select : finishing up [level=1, statement=select]
w2022-03-15 01:16:25 DEBUG processQuery() :  ( SELECT ( {select clause} ticket0_.id ) ( FromClause{level=1} ( ticket ticket0_ user user1_ ) ) ( where ( = ( user1_.id user1_.id id ) ? ) ) )
w2022-03-15 01:16:25 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Ticket): [ticket]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.Ticket)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.User)
          | path: generatedAlias1.id
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.User)
          |  | originalText: generatedAlias1
          |  \-IdentNode
          |    persister: null
          |    originalText: id
          \-ParameterNode

w2022-03-15 01:16:25 DEBUG Using FROM fragment [ticket ticket0_]
w2022-03-15 01:16:25 DEBUG Using FROM fragment [left outer join user user1_ on ticket0_.client_id=user1_.id]
w2022-03-15 01:16:25 DEBUG select >> end [level=1, statement=select]
w2022-03-15 01:16:25 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (ticket,user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'ticket0_.id as id1_1_' {alias=generatedAlias0, className=ru.edu.helpdesk.entity.Ticket, tableAlias=ticket0_}
    |  \-[SQL_TOKEN] SqlFragment: 'ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[ticket0_, user1_], fromElementsByPath=[generatedAlias0.client], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'ticket ticket0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=ticket,tableAlias=ticket0_,origin=null,columns={,className=ru.edu.helpdesk.entity.Ticket}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join user user1_ on ticket0_.client_id=user1_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Ticket.client,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user1_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias1.id,tableAlias=user1_,className=ru.edu.helpdesk.entity.User,classAlias=generatedAlias1}
          |  +-[ALIAS_REF] IdentNode: 'user1_.id' {alias=generatedAlias1, className=ru.edu.helpdesk.entity.User, tableAlias=user1_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LongType@25ed009c}

w2022-03-15 01:16:25 DEBUG throwQueryException() : no errors
w2022-03-15 01:16:25 DEBUG HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 01:16:25 DEBUG SQL: select ticket0_.id as id1_1_, ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id where user1_.id=?
w2022-03-15 01:16:25 DEBUG throwQueryException() : no errors
w2022-03-15 01:16:25 DEBUG select ticket0_.id as id1_1_, ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id where user1_.id=?
w2022-03-15 01:16:25 DEBUG Result set row: 0
w2022-03-15 01:16:25 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 01:16:25 DEBUG Result set row: 1
w2022-03-15 01:16:25 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 01:16:25 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 01:16:25 DEBUG Processing attribute `client` : value = 1
w2022-03-15 01:16:25 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 01:16:25 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 01:16:25 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 01:16:25 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#1]
w2022-03-15 01:16:25 DEBUG Processing attribute `firstName` : value = admin
w2022-03-15 01:16:25 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 01:16:25 DEBUG Processing attribute `lastName` : value = admin
w2022-03-15 01:16:25 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 01:16:25 DEBUG Processing attribute `login` : value = admin
w2022-03-15 01:16:25 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 01:16:25 DEBUG Processing attribute `password` : value = admin
w2022-03-15 01:16:25 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 01:16:25 DEBUG Processing attribute `role` : value = ADMIN
w2022-03-15 01:16:25 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 01:16:25 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#1]
w2022-03-15 01:16:25 DEBUG Done entity load : ru.edu.helpdesk.entity.User#1
w2022-03-15 01:16:25 DEBUG Processing attribute `status` : value = WORKING
w2022-03-15 01:16:25 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 01:16:25 DEBUG Processing attribute `support` : value = 2
w2022-03-15 01:16:25 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 01:16:25 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 01:16:25 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 01:16:25 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#2]
w2022-03-15 01:16:25 DEBUG Processing attribute `firstName` : value = support
w2022-03-15 01:16:25 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 01:16:25 DEBUG Processing attribute `lastName` : value = support
w2022-03-15 01:16:25 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 01:16:25 DEBUG Processing attribute `login` : value = support
w2022-03-15 01:16:25 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 01:16:25 DEBUG Processing attribute `password` : value = support
w2022-03-15 01:16:25 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 01:16:25 DEBUG Processing attribute `role` : value = SUPPORT
w2022-03-15 01:16:25 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 01:16:25 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#2]
w2022-03-15 01:16:25 DEBUG Done entity load : ru.edu.helpdesk.entity.User#2
w2022-03-15 01:16:25 DEBUG Processing attribute `title` : value = Hello user1
w2022-03-15 01:16:25 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 01:16:25 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 01:16:25 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 01:16:25 DEBUG Processing attribute `client` : value = 1
w2022-03-15 01:16:25 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 01:16:25 DEBUG Processing attribute `status` : value = OPEN
w2022-03-15 01:16:25 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 01:16:25 DEBUG Processing attribute `support` : value = null
w2022-03-15 01:16:25 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 01:16:25 DEBUG Processing attribute `title` : value = Title2
w2022-03-15 01:16:25 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 01:16:25 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 01:16:27 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 01:16:27 DEBUG begin
w2022-03-15 01:16:27 DEBUG committing
w2022-03-15 01:16:27 DEBUG Rendered criteria query -> select generatedAlias0 from Comment as generatedAlias0 left join generatedAlias0.ticket as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 01:16:27 DEBUG parse() - HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Comment as generatedAlias0 left join generatedAlias0.ticket as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 01:16:27 DEBUG throwQueryException() : no errors
w2022-03-15 01:16:27 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[IDENT] Node: 'ru'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'edu'
    |  |  |  |  |  |  \-[IDENT] Node: 'helpdesk'
    |  |  |  |  |  \-[IDENT] Node: 'entity'
    |  |  |  |  \-[IDENT] Node: 'Comment'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'ticket'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias1'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

w2022-03-15 01:16:27 DEBUG select << begin [level=1, statement=select]
w2022-03-15 01:16:27 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.Comment (generatedAlias0) -> comment0_
w2022-03-15 01:16:27 DEBUG Resolved : generatedAlias0 -> comment0_.id
w2022-03-15 01:16:27 DEBUG getDataType() : ticket -> org.hibernate.type.ManyToOneType(ru.edu.helpdesk.entity.Ticket)
w2022-03-15 01:16:27 DEBUG dereferenceEntityJoin() : generating join for ticket in ru.edu.helpdesk.entity.Comment (generatedAlias1) parent = [ {null} ]
w2022-03-15 01:16:27 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.Ticket (generatedAlias1) -> ticket1_
w2022-03-15 01:16:27 DEBUG addJoinByPathMap() : generatedAlias0.ticket -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=ticket,tableAlias=ticket1_,origin=comment comment0_,columns={comment0_.ticket_id,className=ru.edu.helpdesk.entity.Ticket}}
w2022-03-15 01:16:27 DEBUG Resolved : generatedAlias0.ticket -> comment0_.ticket_id
w2022-03-15 01:16:27 DEBUG createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'ticket ticket1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Comment.ticket,tableName=ticket,tableAlias=ticket1_,origin=comment comment0_,columns={comment0_.ticket_id,className=ru.edu.helpdesk.entity.Ticket}}

w2022-03-15 01:16:27 DEBUG Resolved : generatedAlias0 -> comment0_.id
w2022-03-15 01:16:27 DEBUG Resolved : generatedAlias1 -> ticket1_.id
w2022-03-15 01:16:27 DEBUG getDataType() : id -> org.hibernate.type.LongType@25ed009c
w2022-03-15 01:16:27 DEBUG Resolved : generatedAlias1.id -> ticket1_.id
w2022-03-15 01:16:27 DEBUG select : finishing up [level=1, statement=select]
w2022-03-15 01:16:27 DEBUG processQuery() :  ( SELECT ( {select clause} comment0_.id ) ( FromClause{level=1} ( comment comment0_ ticket ticket1_ ) ) ( where ( = ( ticket1_.id ticket1_.id id ) ? ) ) )
w2022-03-15 01:16:27 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Comment): [comment]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.Comment)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.Ticket)
          | path: generatedAlias1.id
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.Ticket)
          |  | originalText: generatedAlias1
          |  \-IdentNode
          |    persister: null
          |    originalText: id
          \-ParameterNode

w2022-03-15 01:16:27 DEBUG Using FROM fragment [comment comment0_]
w2022-03-15 01:16:27 DEBUG Using FROM fragment [left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id]
w2022-03-15 01:16:27 DEBUG select >> end [level=1, statement=select]
w2022-03-15 01:16:27 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (ticket,comment)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'comment0_.id as id1_0_' {alias=generatedAlias0, className=ru.edu.helpdesk.entity.Comment, tableAlias=comment0_}
    |  \-[SQL_TOKEN] SqlFragment: 'comment0_.message as message2_0_, comment0_.ticket_id as ticket_i3_0_, comment0_.user_id as user_id4_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[ticket1_, comment0_], fromElementsByPath=[generatedAlias0.ticket], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'comment comment0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=comment,tableAlias=comment0_,origin=null,columns={,className=ru.edu.helpdesk.entity.Comment}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Comment.ticket,tableName=ticket,tableAlias=ticket1_,origin=comment comment0_,columns={comment0_.ticket_id,className=ru.edu.helpdesk.entity.Ticket}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'ticket1_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias1.id,tableAlias=ticket1_,className=ru.edu.helpdesk.entity.Ticket,classAlias=generatedAlias1}
          |  +-[ALIAS_REF] IdentNode: 'ticket1_.id' {alias=generatedAlias1, className=ru.edu.helpdesk.entity.Ticket, tableAlias=ticket1_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LongType@25ed009c}

w2022-03-15 01:16:27 DEBUG throwQueryException() : no errors
w2022-03-15 01:16:27 DEBUG HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Comment as generatedAlias0 left join generatedAlias0.ticket as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 01:16:27 DEBUG SQL: select comment0_.id as id1_0_, comment0_.message as message2_0_, comment0_.ticket_id as ticket_i3_0_, comment0_.user_id as user_id4_0_ from comment comment0_ left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id where ticket1_.id=?
w2022-03-15 01:16:27 DEBUG throwQueryException() : no errors
w2022-03-15 01:16:27 DEBUG select comment0_.id as id1_0_, comment0_.message as message2_0_, comment0_.ticket_id as ticket_i3_0_, comment0_.user_id as user_id4_0_ from comment comment0_ left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id where ticket1_.id=?
w2022-03-15 01:16:27 DEBUG Result set row: 0
w2022-03-15 01:16:27 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Comment#1]
w2022-03-15 01:16:27 DEBUG Result set row: 1
w2022-03-15 01:16:27 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Comment#3]
w2022-03-15 01:16:27 DEBUG Result set row: 2
w2022-03-15 01:16:27 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Comment#4]
w2022-03-15 01:16:27 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Comment#1]
w2022-03-15 01:16:27 DEBUG Processing attribute `message` : value = Hello ticket1
w2022-03-15 01:16:27 DEBUG Attribute (`message`)  - enhanced for lazy-loading? - false
w2022-03-15 01:16:27 DEBUG Processing attribute `ticket` : value = 1
w2022-03-15 01:16:27 DEBUG Attribute (`ticket`)  - enhanced for lazy-loading? - false
w2022-03-15 01:16:27 DEBUG select ticket0_.id as id1_1_0_, ticket0_.client_id as client_i4_1_0_, ticket0_.status as status2_1_0_, ticket0_.support_id as support_5_1_0_, ticket0_.title as title3_1_0_, user1_.id as id1_2_1_, user1_.first_name as first_na2_2_1_, user1_.last_name as last_nam3_2_1_, user1_.login as login4_2_1_, user1_.password as password5_2_1_, user1_.role as role6_2_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id left outer join user user2_ on ticket0_.support_id=user2_.id where ticket0_.id=?
w2022-03-15 01:16:27 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 01:16:27 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 01:16:27 DEBUG Processing attribute `client` : value = 1
w2022-03-15 01:16:27 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 01:16:27 DEBUG Processing attribute `status` : value = WORKING
w2022-03-15 01:16:27 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 01:16:27 DEBUG Processing attribute `support` : value = 2
w2022-03-15 01:16:27 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 01:16:27 DEBUG Processing attribute `title` : value = Hello user1
w2022-03-15 01:16:27 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 01:16:27 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 01:16:27 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#1]
w2022-03-15 01:16:27 DEBUG Processing attribute `firstName` : value = admin
w2022-03-15 01:16:27 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 01:16:27 DEBUG Processing attribute `lastName` : value = admin
w2022-03-15 01:16:27 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 01:16:27 DEBUG Processing attribute `login` : value = admin
w2022-03-15 01:16:27 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 01:16:27 DEBUG Processing attribute `password` : value = admin
w2022-03-15 01:16:27 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 01:16:27 DEBUG Processing attribute `role` : value = ADMIN
w2022-03-15 01:16:27 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 01:16:27 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#1]
w2022-03-15 01:16:27 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#2]
w2022-03-15 01:16:27 DEBUG Processing attribute `firstName` : value = support
w2022-03-15 01:16:27 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 01:16:27 DEBUG Processing attribute `lastName` : value = support
w2022-03-15 01:16:27 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 01:16:27 DEBUG Processing attribute `login` : value = support
w2022-03-15 01:16:27 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 01:16:27 DEBUG Processing attribute `password` : value = support
w2022-03-15 01:16:27 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 01:16:27 DEBUG Processing attribute `role` : value = SUPPORT
w2022-03-15 01:16:27 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 01:16:27 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#2]
w2022-03-15 01:16:27 DEBUG Done entity load : ru.edu.helpdesk.entity.Ticket#1
w2022-03-15 01:16:27 DEBUG Processing attribute `user` : value = 3
w2022-03-15 01:16:27 DEBUG Attribute (`user`)  - enhanced for lazy-loading? - false
w2022-03-15 01:16:27 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 01:16:27 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 01:16:27 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#3]
w2022-03-15 01:16:27 DEBUG Processing attribute `firstName` : value = user1
w2022-03-15 01:16:27 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 01:16:27 DEBUG Processing attribute `lastName` : value = user1
w2022-03-15 01:16:27 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 01:16:27 DEBUG Processing attribute `login` : value = user1
w2022-03-15 01:16:27 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 01:16:27 DEBUG Processing attribute `password` : value = user1
w2022-03-15 01:16:27 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 01:16:27 DEBUG Processing attribute `role` : value = USER
w2022-03-15 01:16:27 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 01:16:27 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#3]
w2022-03-15 01:16:27 DEBUG Done entity load : ru.edu.helpdesk.entity.User#3
w2022-03-15 01:16:27 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Comment#1]
w2022-03-15 01:16:27 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Comment#3]
w2022-03-15 01:16:27 DEBUG Processing attribute `message` : value = Hello ticket11
w2022-03-15 01:16:27 DEBUG Attribute (`message`)  - enhanced for lazy-loading? - false
w2022-03-15 01:16:27 DEBUG Processing attribute `ticket` : value = 1
w2022-03-15 01:16:27 DEBUG Attribute (`ticket`)  - enhanced for lazy-loading? - false
w2022-03-15 01:16:27 DEBUG Processing attribute `user` : value = 2
w2022-03-15 01:16:27 DEBUG Attribute (`user`)  - enhanced for lazy-loading? - false
w2022-03-15 01:16:27 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Comment#3]
w2022-03-15 01:16:27 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Comment#4]
w2022-03-15 01:16:27 DEBUG Processing attribute `message` : value = Hello ticket111
w2022-03-15 01:16:27 DEBUG Attribute (`message`)  - enhanced for lazy-loading? - false
w2022-03-15 01:16:27 DEBUG Processing attribute `ticket` : value = 1
w2022-03-15 01:16:27 DEBUG Attribute (`ticket`)  - enhanced for lazy-loading? - false
w2022-03-15 01:16:27 DEBUG Processing attribute `user` : value = 2
w2022-03-15 01:16:27 DEBUG Attribute (`user`)  - enhanced for lazy-loading? - false
w2022-03-15 01:16:27 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Comment#4]
w2022-03-15 01:17:02 DEBUG Logging Provider: org.jboss.logging.Log4j2LoggerProvider
w2022-03-15 01:17:02 DEBUG PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@5fab7e2c
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/%d0%9e%d0%bb%d1%8c%d0%b3%d0%b0/Desktop/Java/Project/Project1/helpdeskproject/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		ru.edu.helpdesk.entity.Comment
		ru.edu.helpdesk.entity.Ticket
		ru.edu.helpdesk.entity.User]
	Mapping files names []
	Properties []
w2022-03-15 01:17:02 DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
w2022-03-15 01:17:02 DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
w2022-03-15 01:17:02 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
w2022-03-15 01:17:02 INFO  HHH000412: Hibernate ORM core version 5.6.5.Final
w2022-03-15 01:17:02 DEBUG HHH000206: hibernate.properties not found
w2022-03-15 01:17:02 DEBUG Overriding existing service binding [org.hibernate.secure.spi.JaccService]
w2022-03-15 01:17:02 DEBUG Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
w2022-03-15 01:17:02 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
w2022-03-15 01:17:02 INFO  HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
w2022-03-15 01:17:02 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@8e3d9ba
w2022-03-15 01:17:02 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@8e3d9ba
w2022-03-15 01:17:02 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@8e3d9ba
w2022-03-15 01:17:02 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2c8e2c79
w2022-03-15 01:17:02 DEBUG Adding type registration true_false -> org.hibernate.type.TrueFalseType@54565b0a
w2022-03-15 01:17:02 DEBUG Adding type registration yes_no -> org.hibernate.type.YesNoType@3a5006a9
w2022-03-15 01:17:02 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@678d883c
w2022-03-15 01:17:02 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@678d883c
w2022-03-15 01:17:02 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@678d883c
w2022-03-15 01:17:02 DEBUG Adding type registration character -> org.hibernate.type.CharacterType@26808c68
w2022-03-15 01:17:02 DEBUG Adding type registration char -> org.hibernate.type.CharacterType@26808c68
w2022-03-15 01:17:02 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@26808c68
w2022-03-15 01:17:02 DEBUG Adding type registration short -> org.hibernate.type.ShortType@7f01350d
w2022-03-15 01:17:02 DEBUG Adding type registration short -> org.hibernate.type.ShortType@7f01350d
w2022-03-15 01:17:02 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7f01350d
w2022-03-15 01:17:02 DEBUG Adding type registration integer -> org.hibernate.type.IntegerType@1eba11a0
w2022-03-15 01:17:02 DEBUG Adding type registration int -> org.hibernate.type.IntegerType@1eba11a0
w2022-03-15 01:17:02 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1eba11a0
w2022-03-15 01:17:02 DEBUG Adding type registration long -> org.hibernate.type.LongType@26fe1106
w2022-03-15 01:17:02 DEBUG Adding type registration long -> org.hibernate.type.LongType@26fe1106
w2022-03-15 01:17:02 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.LongType@26fe1106
w2022-03-15 01:17:02 DEBUG Adding type registration float -> org.hibernate.type.FloatType@7a3fabbd
w2022-03-15 01:17:02 DEBUG Adding type registration float -> org.hibernate.type.FloatType@7a3fabbd
w2022-03-15 01:17:02 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7a3fabbd
w2022-03-15 01:17:02 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@3b372320
w2022-03-15 01:17:02 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@3b372320
w2022-03-15 01:17:02 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3b372320
w2022-03-15 01:17:02 DEBUG Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@474d359
w2022-03-15 01:17:02 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@474d359
w2022-03-15 01:17:02 DEBUG Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5efcffdf
w2022-03-15 01:17:02 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5efcffdf
w2022-03-15 01:17:02 DEBUG Adding type registration string -> org.hibernate.type.StringType@2d5f4342
w2022-03-15 01:17:02 DEBUG Adding type registration java.lang.String -> org.hibernate.type.StringType@2d5f4342
w2022-03-15 01:17:02 DEBUG Adding type registration nstring -> org.hibernate.type.StringNVarcharType@8c557a4
w2022-03-15 01:17:02 DEBUG Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@25837d91
w2022-03-15 01:17:02 DEBUG Adding type registration url -> org.hibernate.type.UrlType@31f90517
w2022-03-15 01:17:02 DEBUG Adding type registration java.net.URL -> org.hibernate.type.UrlType@31f90517
w2022-03-15 01:17:02 DEBUG Adding type registration Duration -> org.hibernate.type.DurationType@44d995e6
w2022-03-15 01:17:02 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.DurationType@44d995e6
w2022-03-15 01:17:02 DEBUG Adding type registration Instant -> org.hibernate.type.InstantType@48928399
w2022-03-15 01:17:02 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.InstantType@48928399
w2022-03-15 01:17:02 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@371379f1
w2022-03-15 01:17:02 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@371379f1
w2022-03-15 01:17:02 DEBUG Adding type registration LocalDate -> org.hibernate.type.LocalDateType@144bd327
w2022-03-15 01:17:02 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@144bd327
w2022-03-15 01:17:02 DEBUG Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1ece99a7
w2022-03-15 01:17:02 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1ece99a7
w2022-03-15 01:17:02 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2f0005bf
w2022-03-15 01:17:02 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2f0005bf
w2022-03-15 01:17:02 DEBUG Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1c259cdf
w2022-03-15 01:17:02 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1c259cdf
w2022-03-15 01:17:02 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@35c331cd
w2022-03-15 01:17:02 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@35c331cd
w2022-03-15 01:17:02 DEBUG Adding type registration date -> org.hibernate.type.DateType@4853544e
w2022-03-15 01:17:02 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.DateType@4853544e
w2022-03-15 01:17:02 DEBUG Adding type registration time -> org.hibernate.type.TimeType@9425653
w2022-03-15 01:17:02 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.TimeType@9425653
w2022-03-15 01:17:02 DEBUG Adding type registration timestamp -> org.hibernate.type.TimestampType@6d626f4b
w2022-03-15 01:17:02 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6d626f4b
w2022-03-15 01:17:02 DEBUG Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6d626f4b
w2022-03-15 01:17:02 DEBUG Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2fa08a18
w2022-03-15 01:17:02 DEBUG Adding type registration calendar -> org.hibernate.type.CalendarType@673d71fd
w2022-03-15 01:17:02 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@673d71fd
w2022-03-15 01:17:02 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@673d71fd
w2022-03-15 01:17:02 DEBUG Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@f07e03b
w2022-03-15 01:17:02 DEBUG Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@78b5d523
w2022-03-15 01:17:02 DEBUG Adding type registration locale -> org.hibernate.type.LocaleType@2de50e24
w2022-03-15 01:17:02 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2de50e24
w2022-03-15 01:17:02 DEBUG Adding type registration currency -> org.hibernate.type.CurrencyType@9883a37
w2022-03-15 01:17:02 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@9883a37
w2022-03-15 01:17:02 DEBUG Adding type registration timezone -> org.hibernate.type.TimeZoneType@7af5ef57
w2022-03-15 01:17:02 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7af5ef57
w2022-03-15 01:17:02 DEBUG Adding type registration class -> org.hibernate.type.ClassType@692c2d
w2022-03-15 01:17:02 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.ClassType@692c2d
w2022-03-15 01:17:02 DEBUG Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@217a3a94
w2022-03-15 01:17:02 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@217a3a94
w2022-03-15 01:17:02 DEBUG Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@21aec5d3
w2022-03-15 01:17:02 DEBUG Adding type registration binary -> org.hibernate.type.BinaryType@1357c9ec
w2022-03-15 01:17:02 DEBUG Adding type registration byte[] -> org.hibernate.type.BinaryType@1357c9ec
w2022-03-15 01:17:02 DEBUG Adding type registration [B -> org.hibernate.type.BinaryType@1357c9ec
w2022-03-15 01:17:02 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@65d35217
w2022-03-15 01:17:02 DEBUG Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@65d35217
w2022-03-15 01:17:02 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@65d35217
w2022-03-15 01:17:02 DEBUG Adding type registration row_version -> org.hibernate.type.RowVersionType@6497c178
w2022-03-15 01:17:02 DEBUG Adding type registration image -> org.hibernate.type.ImageType@740bb777
w2022-03-15 01:17:02 DEBUG Adding type registration characters -> org.hibernate.type.CharArrayType@2137f47b
w2022-03-15 01:17:02 DEBUG Adding type registration char[] -> org.hibernate.type.CharArrayType@2137f47b
w2022-03-15 01:17:02 DEBUG Adding type registration [C -> org.hibernate.type.CharArrayType@2137f47b
w2022-03-15 01:17:02 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@30c6623c
w2022-03-15 01:17:02 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@30c6623c
w2022-03-15 01:17:02 DEBUG Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@30c6623c
w2022-03-15 01:17:02 DEBUG Adding type registration text -> org.hibernate.type.TextType@192f09ad
w2022-03-15 01:17:02 DEBUG Adding type registration ntext -> org.hibernate.type.NTextType@42a70f80
w2022-03-15 01:17:02 DEBUG Adding type registration blob -> org.hibernate.type.BlobType@2cd2f090
w2022-03-15 01:17:02 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2cd2f090
w2022-03-15 01:17:02 DEBUG Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5a877fa2
w2022-03-15 01:17:02 DEBUG Adding type registration clob -> org.hibernate.type.ClobType@236f475e
w2022-03-15 01:17:02 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@236f475e
w2022-03-15 01:17:02 DEBUG Adding type registration nclob -> org.hibernate.type.NClobType@5411634a
w2022-03-15 01:17:02 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5411634a
w2022-03-15 01:17:02 DEBUG Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@32da8ff9
w2022-03-15 01:17:02 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3e30dbd9
w2022-03-15 01:17:02 DEBUG Adding type registration serializable -> org.hibernate.type.SerializableType@62ba914
w2022-03-15 01:17:02 DEBUG Adding type registration object -> org.hibernate.type.ObjectType@dbf4f4a
w2022-03-15 01:17:02 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@dbf4f4a
w2022-03-15 01:17:02 DEBUG Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5c081b81
w2022-03-15 01:17:02 DEBUG Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2bbada55
w2022-03-15 01:17:02 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@33831c79
w2022-03-15 01:17:02 DEBUG Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@53a5090e
w2022-03-15 01:17:02 DEBUG Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4fedd4e8
w2022-03-15 01:17:02 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@32f8c732
w2022-03-15 01:17:02 DEBUG Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@193375c0
w2022-03-15 01:17:02 DEBUG Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6225f291
w2022-03-15 01:17:02 INFO  HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
w2022-03-15 01:17:02 DEBUG Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@258624a6] into BootstrapContext; was [null]
w2022-03-15 01:17:02 DEBUG ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@258624a6) [was null]
w2022-03-15 01:17:02 DEBUG Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@5fc87275] into BootstrapContext; was [null]
w2022-03-15 01:17:02 DEBUG Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@2610b0d3] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@5646d151]
w2022-03-15 01:17:02 DEBUG Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@258624a6]
w2022-03-15 01:17:02 DEBUG ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@258624a6]
w2022-03-15 01:17:02 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
w2022-03-15 01:17:02 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
w2022-03-15 01:17:02 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
w2022-03-15 01:17:02 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
w2022-03-15 01:17:02 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
w2022-03-15 01:17:02 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
w2022-03-15 01:17:02 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
w2022-03-15 01:17:02 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
w2022-03-15 01:17:02 DEBUG Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
w2022-03-15 01:17:02 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
w2022-03-15 01:17:02 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
w2022-03-15 01:17:02 DEBUG Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
w2022-03-15 01:17:02 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
w2022-03-15 01:17:02 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
w2022-03-15 01:17:02 DEBUG Database ->
       name : SQLite
    version : 3.36.0
      major : 3
      minor : 36
w2022-03-15 01:17:02 DEBUG Driver ->
       name : SQLite JDBC
    version : 3.36.0.3
      major : 3
      minor : 36
w2022-03-15 01:17:02 DEBUG JDBC version : 2.1
w2022-03-15 01:17:02 INFO  HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
w2022-03-15 01:17:02 DEBUG JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
w2022-03-15 01:17:02 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
w2022-03-15 01:17:02 DEBUG HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [2] less than 4
w2022-03-15 01:17:02 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5b423a62] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@b5ed7a8]
w2022-03-15 01:17:02 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
w2022-03-15 01:17:02 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.Comment
w2022-03-15 01:17:02 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 01:17:02 DEBUG Import with entity name Comment
w2022-03-15 01:17:02 DEBUG Bind entity ru.edu.helpdesk.entity.Comment on table comment
w2022-03-15 01:17:02 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 01:17:02 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Comment] is safe
w2022-03-15 01:17:02 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Comment
w2022-03-15 01:17:02 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 01:17:02 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Comment:id]
w2022-03-15 01:17:02 DEBUG building SimpleValue for id
w2022-03-15 01:17:02 DEBUG Building property id
w2022-03-15 01:17:02 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 01:17:02 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=message, insertable=true, updatable=true, unique=false}
w2022-03-15 01:17:02 DEBUG MetadataSourceProcessor property message with lazy=false
w2022-03-15 01:17:02 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Comment:message]
w2022-03-15 01:17:02 DEBUG building SimpleValue for message
w2022-03-15 01:17:02 DEBUG Building property message
w2022-03-15 01:17:02 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 01:17:02 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=ticket, insertable=true, updatable=true, unique=false}
w2022-03-15 01:17:02 DEBUG Building property ticket
w2022-03-15 01:17:02 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 01:17:02 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=user, insertable=true, updatable=true, unique=false}
w2022-03-15 01:17:02 DEBUG Building property user
w2022-03-15 01:17:02 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 01:17:02 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 01:17:02 DEBUG Import with entity name Ticket
w2022-03-15 01:17:02 DEBUG Bind entity ru.edu.helpdesk.entity.Ticket on table ticket
w2022-03-15 01:17:02 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 01:17:02 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Ticket] is safe
w2022-03-15 01:17:02 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Ticket
w2022-03-15 01:17:02 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 01:17:02 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:id]
w2022-03-15 01:17:02 DEBUG building SimpleValue for id
w2022-03-15 01:17:02 DEBUG Building property id
w2022-03-15 01:17:02 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 01:17:02 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 01:17:02 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=client, insertable=true, updatable=true, unique=false}
w2022-03-15 01:17:02 DEBUG Building property client
w2022-03-15 01:17:02 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=status, insertable=true, updatable=true, unique=false}
w2022-03-15 01:17:02 DEBUG MetadataSourceProcessor property status with lazy=false
w2022-03-15 01:17:02 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:status]
w2022-03-15 01:17:02 DEBUG building SimpleValue for status
w2022-03-15 01:17:02 DEBUG Building property status
w2022-03-15 01:17:02 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 01:17:02 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=support, insertable=true, updatable=true, unique=false}
w2022-03-15 01:17:02 DEBUG Building property support
w2022-03-15 01:17:02 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=title, insertable=true, updatable=true, unique=false}
w2022-03-15 01:17:02 DEBUG MetadataSourceProcessor property title with lazy=false
w2022-03-15 01:17:02 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:title]
w2022-03-15 01:17:02 DEBUG building SimpleValue for title
w2022-03-15 01:17:02 DEBUG Building property title
w2022-03-15 01:17:02 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.User
w2022-03-15 01:17:02 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 01:17:02 DEBUG Import with entity name User
w2022-03-15 01:17:02 DEBUG Bind entity ru.edu.helpdesk.entity.User on table user
w2022-03-15 01:17:02 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 01:17:02 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.User] is safe
w2022-03-15 01:17:02 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.User
w2022-03-15 01:17:02 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 01:17:02 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:id]
w2022-03-15 01:17:02 DEBUG building SimpleValue for id
w2022-03-15 01:17:02 DEBUG Building property id
w2022-03-15 01:17:02 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 01:17:02 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
w2022-03-15 01:17:02 DEBUG MetadataSourceProcessor property firstName with lazy=false
w2022-03-15 01:17:02 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:firstName]
w2022-03-15 01:17:02 DEBUG building SimpleValue for firstName
w2022-03-15 01:17:02 DEBUG Building property firstName
w2022-03-15 01:17:02 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
w2022-03-15 01:17:02 DEBUG MetadataSourceProcessor property lastName with lazy=false
w2022-03-15 01:17:02 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:lastName]
w2022-03-15 01:17:02 DEBUG building SimpleValue for lastName
w2022-03-15 01:17:02 DEBUG Building property lastName
w2022-03-15 01:17:02 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=login, insertable=true, updatable=true, unique=false}
w2022-03-15 01:17:03 DEBUG MetadataSourceProcessor property login with lazy=false
w2022-03-15 01:17:03 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:login]
w2022-03-15 01:17:03 DEBUG building SimpleValue for login
w2022-03-15 01:17:03 DEBUG Building property login
w2022-03-15 01:17:03 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
w2022-03-15 01:17:03 DEBUG MetadataSourceProcessor property password with lazy=false
w2022-03-15 01:17:03 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:password]
w2022-03-15 01:17:03 DEBUG building SimpleValue for password
w2022-03-15 01:17:03 DEBUG Building property password
w2022-03-15 01:17:03 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=role, insertable=true, updatable=true, unique=false}
w2022-03-15 01:17:03 DEBUG MetadataSourceProcessor property role with lazy=false
w2022-03-15 01:17:03 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:role]
w2022-03-15 01:17:03 DEBUG building SimpleValue for role
w2022-03-15 01:17:03 DEBUG Building property role
w2022-03-15 01:17:03 DEBUG Starting fillSimpleValue for id
w2022-03-15 01:17:03 DEBUG Starting fillSimpleValue for message
w2022-03-15 01:17:03 DEBUG Starting fillSimpleValue for id
w2022-03-15 01:17:03 DEBUG Starting fillSimpleValue for status
w2022-03-15 01:17:03 DEBUG Starting fillSimpleValue for title
w2022-03-15 01:17:03 DEBUG Starting fillSimpleValue for id
w2022-03-15 01:17:03 DEBUG Starting fillSimpleValue for firstName
w2022-03-15 01:17:03 DEBUG Starting fillSimpleValue for lastName
w2022-03-15 01:17:03 DEBUG Starting fillSimpleValue for login
w2022-03-15 01:17:03 DEBUG Starting fillSimpleValue for password
w2022-03-15 01:17:03 DEBUG Starting fillSimpleValue for role
w2022-03-15 01:17:03 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [comment]
w2022-03-15 01:17:03 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [ticket]
w2022-03-15 01:17:03 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [user]
w2022-03-15 01:17:03 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 01:17:03 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 01:17:03 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 01:17:03 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 01:17:03 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 01:17:03 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 01:17:03 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 01:17:03 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 01:17:03 DEBUG Building session factory
w2022-03-15 01:17:03 DEBUG SessionFactory name : null
w2022-03-15 01:17:03 DEBUG Automatic flush during beforeCompletion(): enabled
w2022-03-15 01:17:03 DEBUG Automatic session close at end of transaction: disabled
w2022-03-15 01:17:03 DEBUG Statistics: disabled
w2022-03-15 01:17:03 DEBUG Deleted entity synthetic identifier rollback: disabled
w2022-03-15 01:17:03 DEBUG Default entity-mode: pojo
w2022-03-15 01:17:03 DEBUG Check Nullability in Core (should be disabled when Bean Validation is on): enabled
w2022-03-15 01:17:03 DEBUG Allow initialization of lazy state outside session : disabled
w2022-03-15 01:17:03 DEBUG Using BatchFetchStyle : LEGACY
w2022-03-15 01:17:03 DEBUG Default batch fetch size: -1
w2022-03-15 01:17:03 DEBUG Maximum outer join fetch depth: null
w2022-03-15 01:17:03 DEBUG Default null ordering: NONE
w2022-03-15 01:17:03 DEBUG Order SQL updates by primary key: disabled
w2022-03-15 01:17:03 DEBUG Order SQL inserts for batching: disabled
w2022-03-15 01:17:03 DEBUG multi-tenancy strategy : NONE
w2022-03-15 01:17:03 DEBUG JTA Track by Thread: enabled
w2022-03-15 01:17:03 DEBUG Query language substitutions: {}
w2022-03-15 01:17:03 DEBUG Named query checking : enabled
w2022-03-15 01:17:03 DEBUG Second-level cache: disabled
w2022-03-15 01:17:03 DEBUG Second-level query cache: disabled
w2022-03-15 01:17:03 DEBUG Second-level query cache factory: null
w2022-03-15 01:17:03 DEBUG Second-level cache region prefix: null
w2022-03-15 01:17:03 DEBUG Optimize second-level cache for minimal puts: disabled
w2022-03-15 01:17:03 DEBUG Structured second-level cache entries: disabled
w2022-03-15 01:17:03 DEBUG Second-level cache direct-reference entries: disabled
w2022-03-15 01:17:03 DEBUG Automatic eviction of collection cache: disabled
w2022-03-15 01:17:03 DEBUG JDBC batch size: 1
w2022-03-15 01:17:03 DEBUG JDBC batch updates for versioned data: enabled
w2022-03-15 01:17:03 DEBUG Scrollable result sets: disabled
w2022-03-15 01:17:03 DEBUG Wrap result sets: disabled
w2022-03-15 01:17:03 DEBUG JDBC3 getGeneratedKeys(): enabled
w2022-03-15 01:17:03 DEBUG JDBC result set fetch size: null
w2022-03-15 01:17:03 DEBUG Connection release mode: ON_CLOSE
w2022-03-15 01:17:03 DEBUG Generate SQL with comments: disabled
w2022-03-15 01:17:03 DEBUG JPA compliance - query : disabled
w2022-03-15 01:17:03 DEBUG JPA compliance - closed-handling : disabled
w2022-03-15 01:17:03 DEBUG JPA compliance - lists : disabled
w2022-03-15 01:17:03 DEBUG JPA compliance - transactions : disabled
w2022-03-15 01:17:03 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 01:17:03 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 01:17:03 DEBUG Session factory constructed with filter configurations : {}
w2022-03-15 01:17:03 DEBUG Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=true, java.specification.version=1.8, file.encoding.pkg=sun.io, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@7e8402cf, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.SQLiteDialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\charsets.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\cldrdata.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\dnsns.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\jaccess.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\localedata.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\nashorn.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunec.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunmscapi.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\zipfs.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jce.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jfr.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jsse.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\management-agent.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\resources.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\rt.jar;C:\Users\Ольга\Desktop\Java\Project\Project1\helpdeskproject\target\classes;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\2.6.4\spring-boot-starter-data-jpa-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\2.6.4\spring-boot-starter-jdbc-2.6.4.jar;C:\Users\Ольга\.m2\repository\com\zaxxer\HikariCP\4.0.3\HikariCP-4.0.3.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-jdbc\5.3.16\spring-jdbc-5.3.16.jar;C:\Users\Ольга\.m2\repository\jakarta\transaction\jakarta.transaction-api\1.3.3\jakarta.transaction-api-1.3.3.jar;C:\Users\Ольга\.m2\repository\jakarta\persistence\jakarta.persistence-api\2.2.3\jakarta.persistence-api-2.2.3.jar;C:\Users\Ольга\.m2\repository\org\hibernate\hibernate-core\5.6.5.Final\hibernate-core-5.6.5.Final.jar;C:\Users\Ольга\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy\1.11.22\byte-buddy-1.11.22.jar;C:\Users\Ольга\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ольга\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Ольга\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.6\jaxb-runtime-2.3.6.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\txw2\2.3.6\txw2-2.3.6.jar;C:\Users\Ольга\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.12\istack-commons-runtime-3.0.12.jar;C:\Users\Ольга\.m2\repository\com\sun\activation\jakarta.activation\1.2.2\jakarta.activation-1.2.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\data\spring-data-jpa\2.6.2\spring-data-jpa-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\data\spring-data-commons\2.6.2\spring-data-commons-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-orm\5.3.16\spring-orm-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-context\5.3.16\spring-context-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-tx\5.3.16\spring-tx-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-beans\5.3.16\spring-beans-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-aspects\5.3.16\spring-aspects-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-security\2.6.4\spring-boot-starter-security-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter\2.6.4\spring-boot-starter-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-logging\2.6.4\spring-boot-starter-logging-2.6.4.jar;C:\Users\Ольга\.m2\repository\ch\qos\logback\logback-classic\1.2.10\logback-classic-1.2.10.jar;C:\Users\Ольга\.m2\repository\ch\qos\logback\logback-core\1.2.10\logback-core-1.2.10.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.17.1\log4j-to-slf4j-2.17.1.jar;C:\Users\Ольга\.m2\repository\org\slf4j\jul-to-slf4j\1.7.36\jul-to-slf4j-1.7.36.jar;C:\Users\Ольга\.m2\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;C:\Users\Ольга\.m2\repository\org\yaml\snakeyaml\1.29\snakeyaml-1.29.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-aop\5.3.16\spring-aop-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-config\5.6.2\spring-security-config-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-web\5.6.2\spring-security-web-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-expression\5.3.16\spring-expression-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-web\2.6.4\spring-boot-starter-web-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-json\2.6.4\spring-boot-starter-json-2.6.4.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.13.1\jackson-datatype-jdk8-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.13.1\jackson-datatype-jsr310-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.13.1\jackson-module-parameter-names-2.13.1.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\2.6.4\spring-boot-starter-tomcat-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.58\tomcat-embed-core-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\9.0.58\tomcat-embed-el-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.58\tomcat-embed-websocket-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-web\5.3.16\spring-web-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-webmvc\5.3.16\spring-webmvc-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-devtools\2.6.4\spring-boot-devtools-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot\2.6.4\spring-boot-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\2.6.4\spring-boot-autoconfigure-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\xerial\sqlite-jdbc\3.36.0.3\sqlite-jdbc-3.36.0.3.jar;C:\Users\Ольга\.m2\repository\com\zsoltfabok\sqlite-dialect\1.0\sqlite-dialect-1.0.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-aop\2.6.2\spring-boot-starter-aop-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\aspectj\aspectjweaver\1.9.7\aspectjweaver-1.9.7.jar;C:\Users\Ольга\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.3\jakarta.xml.bind-api-2.3.3.jar;C:\Users\Ольга\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.2\jakarta.activation-api-1.2.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-core\5.3.16\spring-core-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-jcl\5.3.16\spring-jcl-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-core\5.6.2\spring-security-core-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-crypto\5.6.2\spring-security-crypto-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\projectlombok\lombok\1.18.22\lombok-1.18.22.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\2.6.4\spring-boot-starter-thymeleaf-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\thymeleaf-spring5\3.0.15.RELEASE\thymeleaf-spring5-3.0.15.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\thymeleaf\3.0.15.RELEASE\thymeleaf-3.0.15.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\attoparser\attoparser\2.0.5.RELEASE\attoparser-2.0.5.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-java8time\3.0.4.RELEASE\thymeleaf-extras-java8time-3.0.4.RELEASE.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.1\jackson-databind-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.1\jackson-annotations-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.1\jackson-core-2.13.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-api\2.4.1\log4j-api-2.4.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-core\2.4.1\log4j-core-2.4.1.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.2\lib\idea_rt.jar, java.vm.vendor=Temurin, sun.arch.data.model=64, user.variant=, java.vendor.url=https://adoptium.net/, catalina.useNaming=false, user.timezone=Europe/Moscow, jakarta.persistence.sharedCache.mode=UNSPECIFIED, os.name=Windows 10, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), user.country=RU, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\bin, sun.java.command=ru.edu.helpdesk.HelpdeskApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@6f10133c, com.sun.management.jmxremote=, javax.persistence.sharedCache.mode=UNSPECIFIED, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, user.home=C:\Users\Ольга, user.language=ru, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre, file.separator=\, spring.output.ansi.enabled=always, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, sun.boot.class.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\resources.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\rt.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\sunrsasign.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jsse.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jce.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\charsets.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jfr.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\classes, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_312-b07, user.name=Эльдорадо, spring.jmx.enabled=true, path.separator=;, os.version=10.0, java.endorsed.dirs=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\endorsed, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=default, spring.beaninfo.ignore=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=C:\Users\134E~1\AppData\Local\Temp\, catalina.home=C:\Users\Ольга\AppData\Local\Temp\tomcat.8080.6421856266874279710, java.version=1.8.0_312, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\Ольга\Desktop\Java\Project\Project1\helpdeskproject, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=3492, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\Ольга\AppData\Local\Temp\tomcat.8080.6421856266874279710, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@755cc55a, java.library.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\windows\System32\OpenSSH\;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\Program Files\apache-maven-3.8.4\bin;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Ольга\AppData\Local\Microsoft\WindowsApps;C:\Users\Ольга\AppData\Local\Programs\Microsoft VS Code\bin;C:\SQLite;C:\Users\Ольга\AppData\Roaming\npm;C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.2\bin;;., java.vendor=Temurin, java.vm.info=mixed mode, java.vm.version=25.312-b07, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, java.ext.dirs=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext;C:\windows\Sun\Java\lib\ext, hibernate.connection.datasource=HikariDataSource (HikariPool-1), hibernate.hbm2ddl.import_files=data/import.sql, java.class.version=52.0}
w2022-03-15 01:17:03 DEBUG Skipping JACC integration as it was not enabled
w2022-03-15 01:17:03 DEBUG Using ORDINAL-based conversion for Enum ru.edu.helpdesk.entity.UserRole
w2022-03-15 01:17:03 DEBUG Using ORDINAL-based conversion for Enum ru.edu.helpdesk.entity.TicketStatus
w2022-03-15 01:17:03 DEBUG Instantiated session factory
w2022-03-15 01:17:03 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5b423a62] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@40870613]
w2022-03-15 01:17:03 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.User] is safe
w2022-03-15 01:17:03 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.User
w2022-03-15 01:17:03 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:17:03 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:17:03 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:17:03 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:17:03 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Ticket] is safe
w2022-03-15 01:17:03 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Ticket
w2022-03-15 01:17:03 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:17:03 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:17:03 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:17:03 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:17:03 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:17:03 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:17:03 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:17:03 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:17:03 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Comment] is safe
w2022-03-15 01:17:03 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Comment
w2022-03-15 01:17:03 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:17:03 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:17:03 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:17:03 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:17:03 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.User
w2022-03-15 01:17:03 DEBUG  Version select: select id from user where id =?
w2022-03-15 01:17:03 DEBUG  Snapshot select: select user_.id, user_.first_name as first_na2_2_, user_.last_name as last_nam3_2_, user_.login as login4_2_, user_.password as password5_2_, user_.role as role6_2_ from user user_ where user_.id=?
w2022-03-15 01:17:03 DEBUG  Insert 0: insert into user (first_name, last_name, login, password, role, id) values (?, ?, ?, ?, ?, ?)
w2022-03-15 01:17:03 DEBUG  Update 0: update user set first_name=?, last_name=?, login=?, password=?, role=? where id=?
w2022-03-15 01:17:03 DEBUG  Delete 0: delete from user where id=?
w2022-03-15 01:17:03 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a5f6f01]
w2022-03-15 01:17:03 DEBUG Visiting attribute path : firstName
w2022-03-15 01:17:03 DEBUG Visiting attribute path : lastName
w2022-03-15 01:17:03 DEBUG Visiting attribute path : login
w2022-03-15 01:17:03 DEBUG Visiting attribute path : password
w2022-03-15 01:17:03 DEBUG Visiting attribute path : role
w2022-03-15 01:17:03 DEBUG Building LoadPlan...
w2022-03-15 01:17:03 DEBUG processing queryspace <gen:0>
w2022-03-15 01:17:03 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.User)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

w2022-03-15 01:17:03 DEBUG Static select for entity ru.edu.helpdesk.entity.User [NONE]: select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 01:17:03 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.Ticket
w2022-03-15 01:17:03 DEBUG  Version select: select id from ticket where id =?
w2022-03-15 01:17:03 DEBUG  Snapshot select: select ticket_.id, ticket_.client_id as client_i4_1_, ticket_.status as status2_1_, ticket_.support_id as support_5_1_, ticket_.title as title3_1_ from ticket ticket_ where ticket_.id=?
w2022-03-15 01:17:03 DEBUG  Insert 0: insert into ticket (client_id, status, support_id, title, id) values (?, ?, ?, ?, ?)
w2022-03-15 01:17:03 DEBUG  Update 0: update ticket set client_id=?, status=?, support_id=?, title=? where id=?
w2022-03-15 01:17:03 DEBUG  Delete 0: delete from ticket where id=?
w2022-03-15 01:17:03 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44e45624]
w2022-03-15 01:17:03 DEBUG Visiting attribute path : client
w2022-03-15 01:17:03 DEBUG Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@778e8cd9]
w2022-03-15 01:17:03 DEBUG Visiting attribute path : client.firstName
w2022-03-15 01:17:03 DEBUG Visiting attribute path : client.lastName
w2022-03-15 01:17:03 DEBUG Visiting attribute path : client.login
w2022-03-15 01:17:03 DEBUG Visiting attribute path : client.password
w2022-03-15 01:17:03 DEBUG Visiting attribute path : client.role
w2022-03-15 01:17:03 DEBUG Visiting attribute path : status
w2022-03-15 01:17:03 DEBUG Visiting attribute path : support
w2022-03-15 01:17:03 DEBUG Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d5a09b6]
w2022-03-15 01:17:03 DEBUG Visiting attribute path : support.firstName
w2022-03-15 01:17:03 DEBUG Visiting attribute path : support.lastName
w2022-03-15 01:17:03 DEBUG Visiting attribute path : support.login
w2022-03-15 01:17:03 DEBUG Visiting attribute path : support.password
w2022-03-15 01:17:03 DEBUG Visiting attribute path : support.role
w2022-03-15 01:17:03 DEBUG Visiting attribute path : title
w2022-03-15 01:17:03 DEBUG Building LoadPlan...
w2022-03-15 01:17:03 DEBUG processing queryspace <gen:0>
w2022-03-15 01:17:03 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.Ticket)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.Ticket, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.Ticket)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:1>, path=ru.edu.helpdesk.entity.Ticket.client)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:2>, path=ru.edu.helpdesk.entity.Ticket.support)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.Ticket)
          - SQL table alias mapping - ticket0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(client)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
          - JOIN (JoinDefinedByMetadata(support)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user2_
                - alias suffix - 2_
                - suffixed key columns - {id1_2_2_}

w2022-03-15 01:17:03 DEBUG Static select for entity ru.edu.helpdesk.entity.Ticket [NONE]: select ticket0_.id as id1_1_0_, ticket0_.client_id as client_i4_1_0_, ticket0_.status as status2_1_0_, ticket0_.support_id as support_5_1_0_, ticket0_.title as title3_1_0_, user1_.id as id1_2_1_, user1_.first_name as first_na2_2_1_, user1_.last_name as last_nam3_2_1_, user1_.login as login4_2_1_, user1_.password as password5_2_1_, user1_.role as role6_2_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id left outer join user user2_ on ticket0_.support_id=user2_.id where ticket0_.id=?
w2022-03-15 01:17:03 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.Comment
w2022-03-15 01:17:03 DEBUG  Version select: select id from comment where id =?
w2022-03-15 01:17:03 DEBUG  Snapshot select: select comment_.id, comment_.message as message2_0_, comment_.ticket_id as ticket_i3_0_, comment_.user_id as user_id4_0_ from comment comment_ where comment_.id=?
w2022-03-15 01:17:03 DEBUG  Insert 0: insert into comment (message, ticket_id, user_id, id) values (?, ?, ?, ?)
w2022-03-15 01:17:03 DEBUG  Update 0: update comment set message=?, ticket_id=?, user_id=? where id=?
w2022-03-15 01:17:03 DEBUG  Delete 0: delete from comment where id=?
w2022-03-15 01:17:03 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22838e53]
w2022-03-15 01:17:03 DEBUG Visiting attribute path : message
w2022-03-15 01:17:03 DEBUG Visiting attribute path : ticket
w2022-03-15 01:17:03 DEBUG Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7dbb1f30]
w2022-03-15 01:17:03 DEBUG Visiting attribute path : ticket.client
w2022-03-15 01:17:03 DEBUG Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@925dcbf]
w2022-03-15 01:17:03 DEBUG Visiting attribute path : ticket.client.firstName
w2022-03-15 01:17:03 DEBUG Visiting attribute path : ticket.client.lastName
w2022-03-15 01:17:03 DEBUG Visiting attribute path : ticket.client.login
w2022-03-15 01:17:03 DEBUG Visiting attribute path : ticket.client.password
w2022-03-15 01:17:03 DEBUG Visiting attribute path : ticket.client.role
w2022-03-15 01:17:03 DEBUG Visiting attribute path : ticket.status
w2022-03-15 01:17:03 DEBUG Visiting attribute path : ticket.support
w2022-03-15 01:17:03 DEBUG Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5437e0f8]
w2022-03-15 01:17:03 DEBUG Visiting attribute path : ticket.support.firstName
w2022-03-15 01:17:03 DEBUG Visiting attribute path : ticket.support.lastName
w2022-03-15 01:17:03 DEBUG Visiting attribute path : ticket.support.login
w2022-03-15 01:17:03 DEBUG Visiting attribute path : ticket.support.password
w2022-03-15 01:17:03 DEBUG Visiting attribute path : ticket.support.role
w2022-03-15 01:17:03 DEBUG Visiting attribute path : ticket.title
w2022-03-15 01:17:03 DEBUG Visiting attribute path : user
w2022-03-15 01:17:03 DEBUG Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15b40fad]
w2022-03-15 01:17:03 DEBUG Visiting attribute path : user.firstName
w2022-03-15 01:17:03 DEBUG Visiting attribute path : user.lastName
w2022-03-15 01:17:03 DEBUG Visiting attribute path : user.login
w2022-03-15 01:17:03 DEBUG Visiting attribute path : user.password
w2022-03-15 01:17:03 DEBUG Visiting attribute path : user.role
w2022-03-15 01:17:03 DEBUG Building LoadPlan...
w2022-03-15 01:17:03 DEBUG processing queryspace <gen:0>
w2022-03-15 01:17:03 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.Comment)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.Comment, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.Comment)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.Ticket, querySpaceUid=<gen:1>, path=ru.edu.helpdesk.entity.Comment.ticket)
             - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:2>, path=ru.edu.helpdesk.entity.Comment.ticket.client)
             - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:3>, path=ru.edu.helpdesk.entity.Comment.ticket.support)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:4>, path=ru.edu.helpdesk.entity.Comment.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(ticket)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ru.edu.helpdesk.entity.Ticket)
                - SQL table alias mapping - ticket1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(client)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=ru.edu.helpdesk.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}
                - JOIN (JoinDefinedByMetadata(support)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=ru.edu.helpdesk.entity.User)
                      - SQL table alias mapping - user3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_2_3_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user4_
                - alias suffix - 4_
                - suffixed key columns - {id1_2_4_}

w2022-03-15 01:17:03 DEBUG Static select for entity ru.edu.helpdesk.entity.Comment [NONE]: select comment0_.id as id1_0_0_, comment0_.message as message2_0_0_, comment0_.ticket_id as ticket_i3_0_0_, comment0_.user_id as user_id4_0_0_, ticket1_.id as id1_1_1_, ticket1_.client_id as client_i4_1_1_, ticket1_.status as status2_1_1_, ticket1_.support_id as support_5_1_1_, ticket1_.title as title3_1_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_, user3_.id as id1_2_3_, user3_.first_name as first_na2_2_3_, user3_.last_name as last_nam3_2_3_, user3_.login as login4_2_3_, user3_.password as password5_2_3_, user3_.role as role6_2_3_, user4_.id as id1_2_4_, user4_.first_name as first_na2_2_4_, user4_.last_name as last_nam3_2_4_, user4_.login as login4_2_4_, user4_.password as password5_2_4_, user4_.role as role6_2_4_ from comment comment0_ left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id left outer join user user2_ on ticket1_.client_id=user2_.id left outer join user user3_ on ticket1_.support_id=user3_.id left outer join user user4_ on comment0_.user_id=user4_.id where comment0_.id=?
w2022-03-15 01:17:03 DEBUG drop table if exists comment
w2022-03-15 01:17:03 DEBUG drop table if exists hibernate_sequence
w2022-03-15 01:17:03 DEBUG drop table if exists ticket
w2022-03-15 01:17:03 DEBUG drop table if exists user
w2022-03-15 01:17:03 DEBUG create table comment (id bigint not null, message varchar(255) not null, ticket_id bigint, user_id bigint, primary key (id))
w2022-03-15 01:17:03 DEBUG create table hibernate_sequence (next_val bigint)
w2022-03-15 01:17:03 DEBUG insert into hibernate_sequence values ( 1 )
w2022-03-15 01:17:03 DEBUG create table ticket (id bigint not null, status integer, title varchar(255) not null, client_id bigint, support_id bigint, primary key (id))
w2022-03-15 01:17:03 DEBUG create table user (id bigint not null, first_name varchar(255), last_name varchar(255), login varchar(255) not null, password varchar(255) not null, role integer, primary key (id))
w2022-03-15 01:17:03 INFO  HHH000476: Executing import script 'file:/C:/Users/%d0%9e%d0%bb%d1%8c%d0%b3%d0%b0/Desktop/Java/Project/Project1/helpdeskproject/target/classes/data/import.sql'
w2022-03-15 01:17:03 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (1, 'admin', 'admin', 'admin', 'admin', 0)
w2022-03-15 01:17:03 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (2, 'support', 'support', 'support', 'support', 1)
w2022-03-15 01:17:03 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (3, 'user1', 'user1', 'user1', 'user1', 2)
w2022-03-15 01:17:03 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (4, 'user2', 'user2', 'user2', 'user2', 2)
w2022-03-15 01:17:03 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (1, 1, 'Hello user1',1, 2)
w2022-03-15 01:17:03 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (2, 0, 'Title2', 1, NULL)
w2022-03-15 01:17:03 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (3, 0, 'Message user2', 4, NULL)
w2022-03-15 01:17:03 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (1, "Hello ticket1", 1, 3)
w2022-03-15 01:17:03 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (2, "Hello ticket2", 2, 3)
w2022-03-15 01:17:03 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (3, "Hello ticket11", 1, 2)
w2022-03-15 01:17:03 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (4, "Hello ticket111", 1, 2)
w2022-03-15 01:17:03 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (5, "Hello ticket22", 2, 2)
w2022-03-15 01:17:03 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (6, "Hello ticket3", 3, 4)
w2022-03-15 01:17:03 DEBUG UPDATE hibernate_sequence SET next_val = 8 WHERE next_val = 1
w2022-03-15 01:17:03 INFO  HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
w2022-03-15 01:17:03 DEBUG Checking 0 named HQL queries
w2022-03-15 01:17:03 DEBUG Checking 0 named SQL queries
w2022-03-15 01:17:03 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 01:17:03 DEBUG Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2c9e5b37
w2022-03-15 01:17:03 DEBUG Registering SessionFactory: 6f5ea6d4-dd04-4c9d-862c-11b8b913b49c (<unnamed>)
w2022-03-15 01:17:03 DEBUG Not binding SessionFactory to JNDI, no JNDI name configured
w2022-03-15 01:17:03 DEBUG Statistics initialized [enabled=false]
w2022-03-15 01:17:03 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 01:17:03 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 01:17:03 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 01:17:13 DEBUG Rendered criteria query -> select generatedAlias0 from Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 01:17:13 DEBUG QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@125320a
w2022-03-15 01:17:13 DEBUG parse() - HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 01:17:13 DEBUG throwQueryException() : no errors
w2022-03-15 01:17:13 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[IDENT] Node: 'ru'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'edu'
    |  |  |  |  |  |  \-[IDENT] Node: 'helpdesk'
    |  |  |  |  |  \-[IDENT] Node: 'entity'
    |  |  |  |  \-[IDENT] Node: 'Ticket'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'client'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias1'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

w2022-03-15 01:17:14 DEBUG select << begin [level=1, statement=select]
w2022-03-15 01:17:14 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.Ticket (generatedAlias0) -> ticket0_
w2022-03-15 01:17:14 DEBUG Resolved : generatedAlias0 -> ticket0_.id
w2022-03-15 01:17:14 DEBUG getDataType() : client -> org.hibernate.type.ManyToOneType(ru.edu.helpdesk.entity.User)
w2022-03-15 01:17:14 DEBUG dereferenceEntityJoin() : generating join for client in ru.edu.helpdesk.entity.Ticket (generatedAlias1) parent = [ {null} ]
w2022-03-15 01:17:14 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.User (generatedAlias1) -> user1_
w2022-03-15 01:17:14 DEBUG addJoinByPathMap() : generatedAlias0.client -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}
w2022-03-15 01:17:14 DEBUG Resolved : generatedAlias0.client -> ticket0_.client_id
w2022-03-15 01:17:14 DEBUG createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'user user1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Ticket.client,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}

w2022-03-15 01:17:14 DEBUG Resolved : generatedAlias0 -> ticket0_.id
w2022-03-15 01:17:14 DEBUG Resolved : generatedAlias1 -> user1_.id
w2022-03-15 01:17:14 DEBUG getDataType() : id -> org.hibernate.type.LongType@26fe1106
w2022-03-15 01:17:14 DEBUG Resolved : generatedAlias1.id -> user1_.id
w2022-03-15 01:17:14 DEBUG select : finishing up [level=1, statement=select]
w2022-03-15 01:17:14 DEBUG processQuery() :  ( SELECT ( {select clause} ticket0_.id ) ( FromClause{level=1} ( ticket ticket0_ user user1_ ) ) ( where ( = ( user1_.id user1_.id id ) ? ) ) )
w2022-03-15 01:17:14 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Ticket): [ticket]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.Ticket)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.User)
          | path: generatedAlias1.id
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.User)
          |  | originalText: generatedAlias1
          |  \-IdentNode
          |    persister: null
          |    originalText: id
          \-ParameterNode

w2022-03-15 01:17:14 DEBUG Using FROM fragment [ticket ticket0_]
w2022-03-15 01:17:14 DEBUG Using FROM fragment [left outer join user user1_ on ticket0_.client_id=user1_.id]
w2022-03-15 01:17:14 DEBUG select >> end [level=1, statement=select]
w2022-03-15 01:17:14 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (ticket,user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'ticket0_.id as id1_1_' {alias=generatedAlias0, className=ru.edu.helpdesk.entity.Ticket, tableAlias=ticket0_}
    |  \-[SQL_TOKEN] SqlFragment: 'ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[ticket0_, user1_], fromElementsByPath=[generatedAlias0.client], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'ticket ticket0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=ticket,tableAlias=ticket0_,origin=null,columns={,className=ru.edu.helpdesk.entity.Ticket}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join user user1_ on ticket0_.client_id=user1_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Ticket.client,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user1_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias1.id,tableAlias=user1_,className=ru.edu.helpdesk.entity.User,classAlias=generatedAlias1}
          |  +-[ALIAS_REF] IdentNode: 'user1_.id' {alias=generatedAlias1, className=ru.edu.helpdesk.entity.User, tableAlias=user1_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LongType@26fe1106}

w2022-03-15 01:17:14 DEBUG throwQueryException() : no errors
w2022-03-15 01:17:14 DEBUG HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 01:17:14 DEBUG SQL: select ticket0_.id as id1_1_, ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id where user1_.id=?
w2022-03-15 01:17:14 DEBUG throwQueryException() : no errors
w2022-03-15 01:17:14 DEBUG select ticket0_.id as id1_1_, ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id where user1_.id=?
w2022-03-15 01:17:14 DEBUG Result set row: 0
w2022-03-15 01:17:14 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 01:17:14 DEBUG Result set row: 1
w2022-03-15 01:17:14 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 01:17:14 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 01:17:14 DEBUG Processing attribute `client` : value = 1
w2022-03-15 01:17:14 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:14 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 01:17:14 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 01:17:14 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#1]
w2022-03-15 01:17:14 DEBUG Processing attribute `firstName` : value = admin
w2022-03-15 01:17:14 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:14 DEBUG Processing attribute `lastName` : value = admin
w2022-03-15 01:17:14 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:14 DEBUG Processing attribute `login` : value = admin
w2022-03-15 01:17:14 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:14 DEBUG Processing attribute `password` : value = admin
w2022-03-15 01:17:14 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:14 DEBUG Processing attribute `role` : value = ADMIN
w2022-03-15 01:17:14 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:14 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#1]
w2022-03-15 01:17:14 DEBUG Done entity load : ru.edu.helpdesk.entity.User#1
w2022-03-15 01:17:14 DEBUG Processing attribute `status` : value = WORKING
w2022-03-15 01:17:14 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:14 DEBUG Processing attribute `support` : value = 2
w2022-03-15 01:17:14 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:14 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 01:17:14 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 01:17:14 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#2]
w2022-03-15 01:17:14 DEBUG Processing attribute `firstName` : value = support
w2022-03-15 01:17:14 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:14 DEBUG Processing attribute `lastName` : value = support
w2022-03-15 01:17:14 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:14 DEBUG Processing attribute `login` : value = support
w2022-03-15 01:17:14 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:14 DEBUG Processing attribute `password` : value = support
w2022-03-15 01:17:14 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:14 DEBUG Processing attribute `role` : value = SUPPORT
w2022-03-15 01:17:14 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:14 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#2]
w2022-03-15 01:17:14 DEBUG Done entity load : ru.edu.helpdesk.entity.User#2
w2022-03-15 01:17:14 DEBUG Processing attribute `title` : value = Hello user1
w2022-03-15 01:17:14 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:14 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 01:17:14 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 01:17:14 DEBUG Processing attribute `client` : value = 1
w2022-03-15 01:17:14 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:14 DEBUG Processing attribute `status` : value = OPEN
w2022-03-15 01:17:14 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:14 DEBUG Processing attribute `support` : value = null
w2022-03-15 01:17:14 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:14 DEBUG Processing attribute `title` : value = Title2
w2022-03-15 01:17:14 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:14 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 01:17:16 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 01:17:16 DEBUG begin
w2022-03-15 01:17:16 DEBUG committing
w2022-03-15 01:17:16 DEBUG Rendered criteria query -> select generatedAlias0 from Comment as generatedAlias0 left join generatedAlias0.ticket as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 01:17:16 DEBUG parse() - HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Comment as generatedAlias0 left join generatedAlias0.ticket as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 01:17:16 DEBUG throwQueryException() : no errors
w2022-03-15 01:17:16 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[IDENT] Node: 'ru'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'edu'
    |  |  |  |  |  |  \-[IDENT] Node: 'helpdesk'
    |  |  |  |  |  \-[IDENT] Node: 'entity'
    |  |  |  |  \-[IDENT] Node: 'Comment'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'ticket'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias1'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

w2022-03-15 01:17:16 DEBUG select << begin [level=1, statement=select]
w2022-03-15 01:17:16 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.Comment (generatedAlias0) -> comment0_
w2022-03-15 01:17:16 DEBUG Resolved : generatedAlias0 -> comment0_.id
w2022-03-15 01:17:16 DEBUG getDataType() : ticket -> org.hibernate.type.ManyToOneType(ru.edu.helpdesk.entity.Ticket)
w2022-03-15 01:17:16 DEBUG dereferenceEntityJoin() : generating join for ticket in ru.edu.helpdesk.entity.Comment (generatedAlias1) parent = [ {null} ]
w2022-03-15 01:17:16 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.Ticket (generatedAlias1) -> ticket1_
w2022-03-15 01:17:16 DEBUG addJoinByPathMap() : generatedAlias0.ticket -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=ticket,tableAlias=ticket1_,origin=comment comment0_,columns={comment0_.ticket_id,className=ru.edu.helpdesk.entity.Ticket}}
w2022-03-15 01:17:16 DEBUG Resolved : generatedAlias0.ticket -> comment0_.ticket_id
w2022-03-15 01:17:16 DEBUG createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'ticket ticket1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Comment.ticket,tableName=ticket,tableAlias=ticket1_,origin=comment comment0_,columns={comment0_.ticket_id,className=ru.edu.helpdesk.entity.Ticket}}

w2022-03-15 01:17:16 DEBUG Resolved : generatedAlias0 -> comment0_.id
w2022-03-15 01:17:16 DEBUG Resolved : generatedAlias1 -> ticket1_.id
w2022-03-15 01:17:16 DEBUG getDataType() : id -> org.hibernate.type.LongType@26fe1106
w2022-03-15 01:17:16 DEBUG Resolved : generatedAlias1.id -> ticket1_.id
w2022-03-15 01:17:16 DEBUG select : finishing up [level=1, statement=select]
w2022-03-15 01:17:16 DEBUG processQuery() :  ( SELECT ( {select clause} comment0_.id ) ( FromClause{level=1} ( comment comment0_ ticket ticket1_ ) ) ( where ( = ( ticket1_.id ticket1_.id id ) ? ) ) )
w2022-03-15 01:17:16 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Comment): [comment]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.Comment)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.Ticket)
          | path: generatedAlias1.id
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.Ticket)
          |  | originalText: generatedAlias1
          |  \-IdentNode
          |    persister: null
          |    originalText: id
          \-ParameterNode

w2022-03-15 01:17:16 DEBUG Using FROM fragment [comment comment0_]
w2022-03-15 01:17:16 DEBUG Using FROM fragment [left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id]
w2022-03-15 01:17:16 DEBUG select >> end [level=1, statement=select]
w2022-03-15 01:17:16 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (ticket,comment)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'comment0_.id as id1_0_' {alias=generatedAlias0, className=ru.edu.helpdesk.entity.Comment, tableAlias=comment0_}
    |  \-[SQL_TOKEN] SqlFragment: 'comment0_.message as message2_0_, comment0_.ticket_id as ticket_i3_0_, comment0_.user_id as user_id4_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[ticket1_, comment0_], fromElementsByPath=[generatedAlias0.ticket], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'comment comment0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=comment,tableAlias=comment0_,origin=null,columns={,className=ru.edu.helpdesk.entity.Comment}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Comment.ticket,tableName=ticket,tableAlias=ticket1_,origin=comment comment0_,columns={comment0_.ticket_id,className=ru.edu.helpdesk.entity.Ticket}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'ticket1_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias1.id,tableAlias=ticket1_,className=ru.edu.helpdesk.entity.Ticket,classAlias=generatedAlias1}
          |  +-[ALIAS_REF] IdentNode: 'ticket1_.id' {alias=generatedAlias1, className=ru.edu.helpdesk.entity.Ticket, tableAlias=ticket1_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LongType@26fe1106}

w2022-03-15 01:17:16 DEBUG throwQueryException() : no errors
w2022-03-15 01:17:16 DEBUG HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Comment as generatedAlias0 left join generatedAlias0.ticket as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 01:17:16 DEBUG SQL: select comment0_.id as id1_0_, comment0_.message as message2_0_, comment0_.ticket_id as ticket_i3_0_, comment0_.user_id as user_id4_0_ from comment comment0_ left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id where ticket1_.id=?
w2022-03-15 01:17:16 DEBUG throwQueryException() : no errors
w2022-03-15 01:17:16 DEBUG select comment0_.id as id1_0_, comment0_.message as message2_0_, comment0_.ticket_id as ticket_i3_0_, comment0_.user_id as user_id4_0_ from comment comment0_ left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id where ticket1_.id=?
w2022-03-15 01:17:16 DEBUG Result set row: 0
w2022-03-15 01:17:16 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Comment#1]
w2022-03-15 01:17:16 DEBUG Result set row: 1
w2022-03-15 01:17:16 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Comment#3]
w2022-03-15 01:17:16 DEBUG Result set row: 2
w2022-03-15 01:17:16 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Comment#4]
w2022-03-15 01:17:16 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Comment#1]
w2022-03-15 01:17:16 DEBUG Processing attribute `message` : value = Hello ticket1
w2022-03-15 01:17:16 DEBUG Attribute (`message`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:16 DEBUG Processing attribute `ticket` : value = 1
w2022-03-15 01:17:16 DEBUG Attribute (`ticket`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:16 DEBUG select ticket0_.id as id1_1_0_, ticket0_.client_id as client_i4_1_0_, ticket0_.status as status2_1_0_, ticket0_.support_id as support_5_1_0_, ticket0_.title as title3_1_0_, user1_.id as id1_2_1_, user1_.first_name as first_na2_2_1_, user1_.last_name as last_nam3_2_1_, user1_.login as login4_2_1_, user1_.password as password5_2_1_, user1_.role as role6_2_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id left outer join user user2_ on ticket0_.support_id=user2_.id where ticket0_.id=?
w2022-03-15 01:17:16 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 01:17:16 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 01:17:16 DEBUG Processing attribute `client` : value = 1
w2022-03-15 01:17:16 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:16 DEBUG Processing attribute `status` : value = WORKING
w2022-03-15 01:17:16 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:16 DEBUG Processing attribute `support` : value = 2
w2022-03-15 01:17:16 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:16 DEBUG Processing attribute `title` : value = Hello user1
w2022-03-15 01:17:16 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:16 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 01:17:16 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#1]
w2022-03-15 01:17:16 DEBUG Processing attribute `firstName` : value = admin
w2022-03-15 01:17:16 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:16 DEBUG Processing attribute `lastName` : value = admin
w2022-03-15 01:17:16 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:16 DEBUG Processing attribute `login` : value = admin
w2022-03-15 01:17:16 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:16 DEBUG Processing attribute `password` : value = admin
w2022-03-15 01:17:16 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:16 DEBUG Processing attribute `role` : value = ADMIN
w2022-03-15 01:17:16 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:16 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#1]
w2022-03-15 01:17:16 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#2]
w2022-03-15 01:17:16 DEBUG Processing attribute `firstName` : value = support
w2022-03-15 01:17:16 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:16 DEBUG Processing attribute `lastName` : value = support
w2022-03-15 01:17:16 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:16 DEBUG Processing attribute `login` : value = support
w2022-03-15 01:17:16 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:16 DEBUG Processing attribute `password` : value = support
w2022-03-15 01:17:16 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:16 DEBUG Processing attribute `role` : value = SUPPORT
w2022-03-15 01:17:16 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:16 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#2]
w2022-03-15 01:17:16 DEBUG Done entity load : ru.edu.helpdesk.entity.Ticket#1
w2022-03-15 01:17:16 DEBUG Processing attribute `user` : value = 3
w2022-03-15 01:17:16 DEBUG Attribute (`user`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:16 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 01:17:16 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 01:17:16 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#3]
w2022-03-15 01:17:16 DEBUG Processing attribute `firstName` : value = user1
w2022-03-15 01:17:16 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:16 DEBUG Processing attribute `lastName` : value = user1
w2022-03-15 01:17:16 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:16 DEBUG Processing attribute `login` : value = user1
w2022-03-15 01:17:16 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:16 DEBUG Processing attribute `password` : value = user1
w2022-03-15 01:17:16 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:16 DEBUG Processing attribute `role` : value = USER
w2022-03-15 01:17:16 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:16 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#3]
w2022-03-15 01:17:16 DEBUG Done entity load : ru.edu.helpdesk.entity.User#3
w2022-03-15 01:17:16 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Comment#1]
w2022-03-15 01:17:16 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Comment#3]
w2022-03-15 01:17:16 DEBUG Processing attribute `message` : value = Hello ticket11
w2022-03-15 01:17:16 DEBUG Attribute (`message`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:16 DEBUG Processing attribute `ticket` : value = 1
w2022-03-15 01:17:16 DEBUG Attribute (`ticket`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:16 DEBUG Processing attribute `user` : value = 2
w2022-03-15 01:17:16 DEBUG Attribute (`user`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:16 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Comment#3]
w2022-03-15 01:17:16 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Comment#4]
w2022-03-15 01:17:16 DEBUG Processing attribute `message` : value = Hello ticket111
w2022-03-15 01:17:16 DEBUG Attribute (`message`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:16 DEBUG Processing attribute `ticket` : value = 1
w2022-03-15 01:17:16 DEBUG Attribute (`ticket`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:16 DEBUG Processing attribute `user` : value = 2
w2022-03-15 01:17:16 DEBUG Attribute (`user`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:16 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Comment#4]
w2022-03-15 01:17:27 DEBUG Rendered criteria query -> select generatedAlias0 from Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 01:17:27 DEBUG select ticket0_.id as id1_1_, ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id where user1_.id=?
w2022-03-15 01:17:27 DEBUG Result set row: 0
w2022-03-15 01:17:27 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 01:17:27 DEBUG Result set row: 1
w2022-03-15 01:17:27 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 01:17:27 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 01:17:27 DEBUG Processing attribute `client` : value = 1
w2022-03-15 01:17:27 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:27 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 01:17:27 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 01:17:27 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#1]
w2022-03-15 01:17:27 DEBUG Processing attribute `firstName` : value = admin
w2022-03-15 01:17:27 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:27 DEBUG Processing attribute `lastName` : value = admin
w2022-03-15 01:17:27 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:27 DEBUG Processing attribute `login` : value = admin
w2022-03-15 01:17:27 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:27 DEBUG Processing attribute `password` : value = admin
w2022-03-15 01:17:27 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:27 DEBUG Processing attribute `role` : value = ADMIN
w2022-03-15 01:17:27 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:27 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#1]
w2022-03-15 01:17:27 DEBUG Done entity load : ru.edu.helpdesk.entity.User#1
w2022-03-15 01:17:27 DEBUG Processing attribute `status` : value = WORKING
w2022-03-15 01:17:27 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:27 DEBUG Processing attribute `support` : value = 2
w2022-03-15 01:17:27 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:27 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 01:17:27 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 01:17:27 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#2]
w2022-03-15 01:17:27 DEBUG Processing attribute `firstName` : value = support
w2022-03-15 01:17:27 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:27 DEBUG Processing attribute `lastName` : value = support
w2022-03-15 01:17:27 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:27 DEBUG Processing attribute `login` : value = support
w2022-03-15 01:17:27 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:27 DEBUG Processing attribute `password` : value = support
w2022-03-15 01:17:27 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:27 DEBUG Processing attribute `role` : value = SUPPORT
w2022-03-15 01:17:27 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:27 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#2]
w2022-03-15 01:17:27 DEBUG Done entity load : ru.edu.helpdesk.entity.User#2
w2022-03-15 01:17:27 DEBUG Processing attribute `title` : value = Hello user1
w2022-03-15 01:17:27 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:27 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 01:17:27 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 01:17:27 DEBUG Processing attribute `client` : value = 1
w2022-03-15 01:17:27 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:27 DEBUG Processing attribute `status` : value = OPEN
w2022-03-15 01:17:27 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:27 DEBUG Processing attribute `support` : value = null
w2022-03-15 01:17:27 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:27 DEBUG Processing attribute `title` : value = Title2
w2022-03-15 01:17:27 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:27 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 01:17:28 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 01:17:28 DEBUG begin
w2022-03-15 01:17:28 DEBUG committing
w2022-03-15 01:17:28 DEBUG Rendered criteria query -> select generatedAlias0 from Comment as generatedAlias0 left join generatedAlias0.ticket as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 01:17:28 DEBUG select comment0_.id as id1_0_, comment0_.message as message2_0_, comment0_.ticket_id as ticket_i3_0_, comment0_.user_id as user_id4_0_ from comment comment0_ left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id where ticket1_.id=?
w2022-03-15 01:17:28 DEBUG Result set row: 0
w2022-03-15 01:17:28 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Comment#2]
w2022-03-15 01:17:28 DEBUG Result set row: 1
w2022-03-15 01:17:28 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Comment#5]
w2022-03-15 01:17:28 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Comment#2]
w2022-03-15 01:17:28 DEBUG Processing attribute `message` : value = Hello ticket2
w2022-03-15 01:17:28 DEBUG Attribute (`message`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:28 DEBUG Processing attribute `ticket` : value = 2
w2022-03-15 01:17:28 DEBUG Attribute (`ticket`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:28 DEBUG select ticket0_.id as id1_1_0_, ticket0_.client_id as client_i4_1_0_, ticket0_.status as status2_1_0_, ticket0_.support_id as support_5_1_0_, ticket0_.title as title3_1_0_, user1_.id as id1_2_1_, user1_.first_name as first_na2_2_1_, user1_.last_name as last_nam3_2_1_, user1_.login as login4_2_1_, user1_.password as password5_2_1_, user1_.role as role6_2_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id left outer join user user2_ on ticket0_.support_id=user2_.id where ticket0_.id=?
w2022-03-15 01:17:28 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 01:17:28 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 01:17:28 DEBUG Processing attribute `client` : value = 1
w2022-03-15 01:17:28 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:28 DEBUG Processing attribute `status` : value = OPEN
w2022-03-15 01:17:28 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:28 DEBUG Processing attribute `support` : value = null
w2022-03-15 01:17:28 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:28 DEBUG Processing attribute `title` : value = Title2
w2022-03-15 01:17:28 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:28 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 01:17:28 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#1]
w2022-03-15 01:17:28 DEBUG Processing attribute `firstName` : value = admin
w2022-03-15 01:17:28 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:28 DEBUG Processing attribute `lastName` : value = admin
w2022-03-15 01:17:28 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:28 DEBUG Processing attribute `login` : value = admin
w2022-03-15 01:17:28 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:28 DEBUG Processing attribute `password` : value = admin
w2022-03-15 01:17:28 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:28 DEBUG Processing attribute `role` : value = ADMIN
w2022-03-15 01:17:28 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:28 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#1]
w2022-03-15 01:17:28 DEBUG Done entity load : ru.edu.helpdesk.entity.Ticket#2
w2022-03-15 01:17:28 DEBUG Processing attribute `user` : value = 3
w2022-03-15 01:17:28 DEBUG Attribute (`user`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:28 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 01:17:28 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 01:17:28 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#3]
w2022-03-15 01:17:28 DEBUG Processing attribute `firstName` : value = user1
w2022-03-15 01:17:28 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:28 DEBUG Processing attribute `lastName` : value = user1
w2022-03-15 01:17:28 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:28 DEBUG Processing attribute `login` : value = user1
w2022-03-15 01:17:28 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:28 DEBUG Processing attribute `password` : value = user1
w2022-03-15 01:17:28 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:28 DEBUG Processing attribute `role` : value = USER
w2022-03-15 01:17:28 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:28 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#3]
w2022-03-15 01:17:28 DEBUG Done entity load : ru.edu.helpdesk.entity.User#3
w2022-03-15 01:17:28 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Comment#2]
w2022-03-15 01:17:28 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Comment#5]
w2022-03-15 01:17:28 DEBUG Processing attribute `message` : value = Hello ticket22
w2022-03-15 01:17:28 DEBUG Attribute (`message`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:28 DEBUG Processing attribute `ticket` : value = 2
w2022-03-15 01:17:28 DEBUG Attribute (`ticket`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:28 DEBUG Processing attribute `user` : value = 2
w2022-03-15 01:17:28 DEBUG Attribute (`user`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:28 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 01:17:28 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 01:17:28 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#2]
w2022-03-15 01:17:28 DEBUG Processing attribute `firstName` : value = support
w2022-03-15 01:17:28 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:28 DEBUG Processing attribute `lastName` : value = support
w2022-03-15 01:17:28 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:28 DEBUG Processing attribute `login` : value = support
w2022-03-15 01:17:28 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:28 DEBUG Processing attribute `password` : value = support
w2022-03-15 01:17:28 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:28 DEBUG Processing attribute `role` : value = SUPPORT
w2022-03-15 01:17:28 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 01:17:28 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#2]
w2022-03-15 01:17:28 DEBUG Done entity load : ru.edu.helpdesk.entity.User#2
w2022-03-15 01:17:28 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Comment#5]
w2022-03-15 01:18:32 DEBUG Logging Provider: org.jboss.logging.Log4j2LoggerProvider
w2022-03-15 01:18:32 DEBUG PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@641916a2
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/%d0%9e%d0%bb%d1%8c%d0%b3%d0%b0/Desktop/Java/Project/Project1/helpdeskproject/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		ru.edu.helpdesk.entity.Comment
		ru.edu.helpdesk.entity.Ticket
		ru.edu.helpdesk.entity.User]
	Mapping files names []
	Properties []
w2022-03-15 01:18:32 DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
w2022-03-15 01:18:32 DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
w2022-03-15 01:18:32 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
w2022-03-15 01:18:32 INFO  HHH000412: Hibernate ORM core version 5.6.5.Final
w2022-03-15 01:18:32 DEBUG HHH000206: hibernate.properties not found
w2022-03-15 01:18:32 DEBUG Overriding existing service binding [org.hibernate.secure.spi.JaccService]
w2022-03-15 01:18:32 DEBUG Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
w2022-03-15 01:18:32 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
w2022-03-15 01:18:32 INFO  HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
w2022-03-15 01:18:32 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@424c761d
w2022-03-15 01:18:32 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@424c761d
w2022-03-15 01:18:32 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@424c761d
w2022-03-15 01:18:32 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6af3c80b
w2022-03-15 01:18:32 DEBUG Adding type registration true_false -> org.hibernate.type.TrueFalseType@35e8ef77
w2022-03-15 01:18:32 DEBUG Adding type registration yes_no -> org.hibernate.type.YesNoType@220c6b5f
w2022-03-15 01:18:32 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@794feef6
w2022-03-15 01:18:32 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@794feef6
w2022-03-15 01:18:32 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@794feef6
w2022-03-15 01:18:32 DEBUG Adding type registration character -> org.hibernate.type.CharacterType@35cce4d9
w2022-03-15 01:18:32 DEBUG Adding type registration char -> org.hibernate.type.CharacterType@35cce4d9
w2022-03-15 01:18:32 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@35cce4d9
w2022-03-15 01:18:32 DEBUG Adding type registration short -> org.hibernate.type.ShortType@6a758dca
w2022-03-15 01:18:32 DEBUG Adding type registration short -> org.hibernate.type.ShortType@6a758dca
w2022-03-15 01:18:32 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6a758dca
w2022-03-15 01:18:32 DEBUG Adding type registration integer -> org.hibernate.type.IntegerType@2abd541
w2022-03-15 01:18:32 DEBUG Adding type registration int -> org.hibernate.type.IntegerType@2abd541
w2022-03-15 01:18:32 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2abd541
w2022-03-15 01:18:32 DEBUG Adding type registration long -> org.hibernate.type.LongType@591ed415
w2022-03-15 01:18:32 DEBUG Adding type registration long -> org.hibernate.type.LongType@591ed415
w2022-03-15 01:18:32 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.LongType@591ed415
w2022-03-15 01:18:32 DEBUG Adding type registration float -> org.hibernate.type.FloatType@77985777
w2022-03-15 01:18:32 DEBUG Adding type registration float -> org.hibernate.type.FloatType@77985777
w2022-03-15 01:18:32 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.FloatType@77985777
w2022-03-15 01:18:32 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@6282307d
w2022-03-15 01:18:32 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@6282307d
w2022-03-15 01:18:32 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6282307d
w2022-03-15 01:18:32 DEBUG Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1ab21a14
w2022-03-15 01:18:32 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1ab21a14
w2022-03-15 01:18:32 DEBUG Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2d318bfa
w2022-03-15 01:18:32 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2d318bfa
w2022-03-15 01:18:32 DEBUG Adding type registration string -> org.hibernate.type.StringType@2c17fe6b
w2022-03-15 01:18:32 DEBUG Adding type registration java.lang.String -> org.hibernate.type.StringType@2c17fe6b
w2022-03-15 01:18:32 DEBUG Adding type registration nstring -> org.hibernate.type.StringNVarcharType@71b4de56
w2022-03-15 01:18:32 DEBUG Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@30721b4c
w2022-03-15 01:18:32 DEBUG Adding type registration url -> org.hibernate.type.UrlType@2e5ce454
w2022-03-15 01:18:32 DEBUG Adding type registration java.net.URL -> org.hibernate.type.UrlType@2e5ce454
w2022-03-15 01:18:32 DEBUG Adding type registration Duration -> org.hibernate.type.DurationType@4f71e587
w2022-03-15 01:18:32 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4f71e587
w2022-03-15 01:18:32 DEBUG Adding type registration Instant -> org.hibernate.type.InstantType@381c2eea
w2022-03-15 01:18:32 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.InstantType@381c2eea
w2022-03-15 01:18:32 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@58bc0685
w2022-03-15 01:18:32 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@58bc0685
w2022-03-15 01:18:32 DEBUG Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3c853ca6
w2022-03-15 01:18:32 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3c853ca6
w2022-03-15 01:18:32 DEBUG Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5e15658
w2022-03-15 01:18:32 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5e15658
w2022-03-15 01:18:32 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4f725a71
w2022-03-15 01:18:32 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4f725a71
w2022-03-15 01:18:32 DEBUG Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4da44818
w2022-03-15 01:18:32 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4da44818
w2022-03-15 01:18:32 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3d60f94a
w2022-03-15 01:18:32 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3d60f94a
w2022-03-15 01:18:32 DEBUG Adding type registration date -> org.hibernate.type.DateType@1d0e57ce
w2022-03-15 01:18:32 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.DateType@1d0e57ce
w2022-03-15 01:18:32 DEBUG Adding type registration time -> org.hibernate.type.TimeType@597ea094
w2022-03-15 01:18:32 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.TimeType@597ea094
w2022-03-15 01:18:32 DEBUG Adding type registration timestamp -> org.hibernate.type.TimestampType@30d84563
w2022-03-15 01:18:32 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@30d84563
w2022-03-15 01:18:32 DEBUG Adding type registration java.util.Date -> org.hibernate.type.TimestampType@30d84563
w2022-03-15 01:18:32 DEBUG Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4faa101d
w2022-03-15 01:18:32 DEBUG Adding type registration calendar -> org.hibernate.type.CalendarType@1e7c8998
w2022-03-15 01:18:32 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1e7c8998
w2022-03-15 01:18:32 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1e7c8998
w2022-03-15 01:18:32 DEBUG Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2decc425
w2022-03-15 01:18:32 DEBUG Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@55794e1f
w2022-03-15 01:18:32 DEBUG Adding type registration locale -> org.hibernate.type.LocaleType@c16a20
w2022-03-15 01:18:32 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@c16a20
w2022-03-15 01:18:32 DEBUG Adding type registration currency -> org.hibernate.type.CurrencyType@41bbc065
w2022-03-15 01:18:32 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@41bbc065
w2022-03-15 01:18:32 DEBUG Adding type registration timezone -> org.hibernate.type.TimeZoneType@38afd257
w2022-03-15 01:18:32 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@38afd257
w2022-03-15 01:18:32 DEBUG Adding type registration class -> org.hibernate.type.ClassType@9ec6477
w2022-03-15 01:18:32 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.ClassType@9ec6477
w2022-03-15 01:18:32 DEBUG Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@29a2cbdb
w2022-03-15 01:18:32 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@29a2cbdb
w2022-03-15 01:18:32 DEBUG Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@71edb3f2
w2022-03-15 01:18:32 DEBUG Adding type registration binary -> org.hibernate.type.BinaryType@43fb592
w2022-03-15 01:18:32 DEBUG Adding type registration byte[] -> org.hibernate.type.BinaryType@43fb592
w2022-03-15 01:18:32 DEBUG Adding type registration [B -> org.hibernate.type.BinaryType@43fb592
w2022-03-15 01:18:32 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3b0057e7
w2022-03-15 01:18:32 DEBUG Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3b0057e7
w2022-03-15 01:18:32 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3b0057e7
w2022-03-15 01:18:32 DEBUG Adding type registration row_version -> org.hibernate.type.RowVersionType@31e56af
w2022-03-15 01:18:32 DEBUG Adding type registration image -> org.hibernate.type.ImageType@5beef8be
w2022-03-15 01:18:32 DEBUG Adding type registration characters -> org.hibernate.type.CharArrayType@93969b7
w2022-03-15 01:18:32 DEBUG Adding type registration char[] -> org.hibernate.type.CharArrayType@93969b7
w2022-03-15 01:18:32 DEBUG Adding type registration [C -> org.hibernate.type.CharArrayType@93969b7
w2022-03-15 01:18:32 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1e55dab7
w2022-03-15 01:18:32 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1e55dab7
w2022-03-15 01:18:32 DEBUG Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1e55dab7
w2022-03-15 01:18:32 DEBUG Adding type registration text -> org.hibernate.type.TextType@64f8c37e
w2022-03-15 01:18:32 DEBUG Adding type registration ntext -> org.hibernate.type.NTextType@f4a99d6
w2022-03-15 01:18:32 DEBUG Adding type registration blob -> org.hibernate.type.BlobType@3255cab6
w2022-03-15 01:18:32 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3255cab6
w2022-03-15 01:18:32 DEBUG Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@43042c70
w2022-03-15 01:18:32 DEBUG Adding type registration clob -> org.hibernate.type.ClobType@4f3d66b0
w2022-03-15 01:18:32 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4f3d66b0
w2022-03-15 01:18:32 DEBUG Adding type registration nclob -> org.hibernate.type.NClobType@10683d19
w2022-03-15 01:18:32 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@10683d19
w2022-03-15 01:18:32 DEBUG Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3c02ed02
w2022-03-15 01:18:32 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5e4de23b
w2022-03-15 01:18:32 DEBUG Adding type registration serializable -> org.hibernate.type.SerializableType@21aaed13
w2022-03-15 01:18:32 DEBUG Adding type registration object -> org.hibernate.type.ObjectType@591d8b22
w2022-03-15 01:18:32 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@591d8b22
w2022-03-15 01:18:32 DEBUG Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@582a3dbc
w2022-03-15 01:18:32 DEBUG Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6d5be900
w2022-03-15 01:18:32 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@490ee41a
w2022-03-15 01:18:32 DEBUG Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3c13d7c8
w2022-03-15 01:18:32 DEBUG Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@35ddda2b
w2022-03-15 01:18:32 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@77c3679
w2022-03-15 01:18:32 DEBUG Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@396c2cb8
w2022-03-15 01:18:32 DEBUG Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1be311ca
w2022-03-15 01:18:32 INFO  HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
w2022-03-15 01:18:32 DEBUG Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@21abdb88] into BootstrapContext; was [null]
w2022-03-15 01:18:32 DEBUG ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@21abdb88) [was null]
w2022-03-15 01:18:32 DEBUG Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@2fc2bafd] into BootstrapContext; was [null]
w2022-03-15 01:18:32 DEBUG Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@693ff48e] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@4d00729b]
w2022-03-15 01:18:32 DEBUG Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@21abdb88]
w2022-03-15 01:18:32 DEBUG ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@21abdb88]
w2022-03-15 01:18:32 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
w2022-03-15 01:18:32 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
w2022-03-15 01:18:32 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
w2022-03-15 01:18:32 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
w2022-03-15 01:18:32 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
w2022-03-15 01:18:32 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
w2022-03-15 01:18:32 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
w2022-03-15 01:18:32 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
w2022-03-15 01:18:32 DEBUG Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
w2022-03-15 01:18:32 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
w2022-03-15 01:18:32 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
w2022-03-15 01:18:32 DEBUG Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
w2022-03-15 01:18:32 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
w2022-03-15 01:18:32 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
w2022-03-15 01:18:32 DEBUG Database ->
       name : SQLite
    version : 3.36.0
      major : 3
      minor : 36
w2022-03-15 01:18:32 DEBUG Driver ->
       name : SQLite JDBC
    version : 3.36.0.3
      major : 3
      minor : 36
w2022-03-15 01:18:32 DEBUG JDBC version : 2.1
w2022-03-15 01:18:32 INFO  HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
w2022-03-15 01:18:32 DEBUG JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
w2022-03-15 01:18:32 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
w2022-03-15 01:18:32 DEBUG HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [2] less than 4
w2022-03-15 01:18:32 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@50dda6d3] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5ceff6a0]
w2022-03-15 01:18:32 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
w2022-03-15 01:18:32 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.Comment
w2022-03-15 01:18:32 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 01:18:32 DEBUG Import with entity name Comment
w2022-03-15 01:18:32 DEBUG Bind entity ru.edu.helpdesk.entity.Comment on table comment
w2022-03-15 01:18:33 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 01:18:33 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Comment] is safe
w2022-03-15 01:18:33 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Comment
w2022-03-15 01:18:33 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 01:18:33 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Comment:id]
w2022-03-15 01:18:33 DEBUG building SimpleValue for id
w2022-03-15 01:18:33 DEBUG Building property id
w2022-03-15 01:18:33 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 01:18:33 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=message, insertable=true, updatable=true, unique=false}
w2022-03-15 01:18:33 DEBUG MetadataSourceProcessor property message with lazy=false
w2022-03-15 01:18:33 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Comment:message]
w2022-03-15 01:18:33 DEBUG building SimpleValue for message
w2022-03-15 01:18:33 DEBUG Building property message
w2022-03-15 01:18:33 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 01:18:33 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=ticket, insertable=true, updatable=true, unique=false}
w2022-03-15 01:18:33 DEBUG Building property ticket
w2022-03-15 01:18:33 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 01:18:33 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=user, insertable=true, updatable=true, unique=false}
w2022-03-15 01:18:33 DEBUG Building property user
w2022-03-15 01:18:33 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 01:18:33 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 01:18:33 DEBUG Import with entity name Ticket
w2022-03-15 01:18:33 DEBUG Bind entity ru.edu.helpdesk.entity.Ticket on table ticket
w2022-03-15 01:18:33 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 01:18:33 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Ticket] is safe
w2022-03-15 01:18:33 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Ticket
w2022-03-15 01:18:33 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 01:18:33 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:id]
w2022-03-15 01:18:33 DEBUG building SimpleValue for id
w2022-03-15 01:18:33 DEBUG Building property id
w2022-03-15 01:18:33 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 01:18:33 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 01:18:33 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=client, insertable=true, updatable=true, unique=false}
w2022-03-15 01:18:33 DEBUG Building property client
w2022-03-15 01:18:33 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=status, insertable=true, updatable=true, unique=false}
w2022-03-15 01:18:33 DEBUG MetadataSourceProcessor property status with lazy=false
w2022-03-15 01:18:33 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:status]
w2022-03-15 01:18:33 DEBUG building SimpleValue for status
w2022-03-15 01:18:33 DEBUG Building property status
w2022-03-15 01:18:33 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 01:18:33 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=support, insertable=true, updatable=true, unique=false}
w2022-03-15 01:18:33 DEBUG Building property support
w2022-03-15 01:18:33 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=title, insertable=true, updatable=true, unique=false}
w2022-03-15 01:18:33 DEBUG MetadataSourceProcessor property title with lazy=false
w2022-03-15 01:18:33 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:title]
w2022-03-15 01:18:33 DEBUG building SimpleValue for title
w2022-03-15 01:18:33 DEBUG Building property title
w2022-03-15 01:18:33 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.User
w2022-03-15 01:18:33 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 01:18:33 DEBUG Import with entity name User
w2022-03-15 01:18:33 DEBUG Bind entity ru.edu.helpdesk.entity.User on table user
w2022-03-15 01:18:33 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 01:18:33 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.User] is safe
w2022-03-15 01:18:33 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.User
w2022-03-15 01:18:33 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 01:18:33 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:id]
w2022-03-15 01:18:33 DEBUG building SimpleValue for id
w2022-03-15 01:18:33 DEBUG Building property id
w2022-03-15 01:18:33 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 01:18:33 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
w2022-03-15 01:18:33 DEBUG MetadataSourceProcessor property firstName with lazy=false
w2022-03-15 01:18:33 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:firstName]
w2022-03-15 01:18:33 DEBUG building SimpleValue for firstName
w2022-03-15 01:18:33 DEBUG Building property firstName
w2022-03-15 01:18:33 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
w2022-03-15 01:18:33 DEBUG MetadataSourceProcessor property lastName with lazy=false
w2022-03-15 01:18:33 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:lastName]
w2022-03-15 01:18:33 DEBUG building SimpleValue for lastName
w2022-03-15 01:18:33 DEBUG Building property lastName
w2022-03-15 01:18:33 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=login, insertable=true, updatable=true, unique=false}
w2022-03-15 01:18:33 DEBUG MetadataSourceProcessor property login with lazy=false
w2022-03-15 01:18:33 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:login]
w2022-03-15 01:18:33 DEBUG building SimpleValue for login
w2022-03-15 01:18:33 DEBUG Building property login
w2022-03-15 01:18:33 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
w2022-03-15 01:18:33 DEBUG MetadataSourceProcessor property password with lazy=false
w2022-03-15 01:18:33 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:password]
w2022-03-15 01:18:33 DEBUG building SimpleValue for password
w2022-03-15 01:18:33 DEBUG Building property password
w2022-03-15 01:18:33 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=role, insertable=true, updatable=true, unique=false}
w2022-03-15 01:18:33 DEBUG MetadataSourceProcessor property role with lazy=false
w2022-03-15 01:18:33 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:role]
w2022-03-15 01:18:33 DEBUG building SimpleValue for role
w2022-03-15 01:18:33 DEBUG Building property role
w2022-03-15 01:18:33 DEBUG Starting fillSimpleValue for id
w2022-03-15 01:18:33 DEBUG Starting fillSimpleValue for message
w2022-03-15 01:18:33 DEBUG Starting fillSimpleValue for id
w2022-03-15 01:18:33 DEBUG Starting fillSimpleValue for status
w2022-03-15 01:18:33 DEBUG Starting fillSimpleValue for title
w2022-03-15 01:18:33 DEBUG Starting fillSimpleValue for id
w2022-03-15 01:18:33 DEBUG Starting fillSimpleValue for firstName
w2022-03-15 01:18:33 DEBUG Starting fillSimpleValue for lastName
w2022-03-15 01:18:33 DEBUG Starting fillSimpleValue for login
w2022-03-15 01:18:33 DEBUG Starting fillSimpleValue for password
w2022-03-15 01:18:33 DEBUG Starting fillSimpleValue for role
w2022-03-15 01:18:33 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [comment]
w2022-03-15 01:18:33 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [ticket]
w2022-03-15 01:18:33 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [user]
w2022-03-15 01:18:33 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 01:18:33 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 01:18:33 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 01:18:33 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 01:18:33 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 01:18:33 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 01:18:33 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 01:18:33 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 01:18:33 DEBUG Building session factory
w2022-03-15 01:18:33 DEBUG SessionFactory name : null
w2022-03-15 01:18:33 DEBUG Automatic flush during beforeCompletion(): enabled
w2022-03-15 01:18:33 DEBUG Automatic session close at end of transaction: disabled
w2022-03-15 01:18:33 DEBUG Statistics: disabled
w2022-03-15 01:18:33 DEBUG Deleted entity synthetic identifier rollback: disabled
w2022-03-15 01:18:33 DEBUG Default entity-mode: pojo
w2022-03-15 01:18:33 DEBUG Check Nullability in Core (should be disabled when Bean Validation is on): enabled
w2022-03-15 01:18:33 DEBUG Allow initialization of lazy state outside session : disabled
w2022-03-15 01:18:33 DEBUG Using BatchFetchStyle : LEGACY
w2022-03-15 01:18:33 DEBUG Default batch fetch size: -1
w2022-03-15 01:18:33 DEBUG Maximum outer join fetch depth: null
w2022-03-15 01:18:33 DEBUG Default null ordering: NONE
w2022-03-15 01:18:33 DEBUG Order SQL updates by primary key: disabled
w2022-03-15 01:18:33 DEBUG Order SQL inserts for batching: disabled
w2022-03-15 01:18:33 DEBUG multi-tenancy strategy : NONE
w2022-03-15 01:18:33 DEBUG JTA Track by Thread: enabled
w2022-03-15 01:18:33 DEBUG Query language substitutions: {}
w2022-03-15 01:18:33 DEBUG Named query checking : enabled
w2022-03-15 01:18:33 DEBUG Second-level cache: disabled
w2022-03-15 01:18:33 DEBUG Second-level query cache: disabled
w2022-03-15 01:18:33 DEBUG Second-level query cache factory: null
w2022-03-15 01:18:33 DEBUG Second-level cache region prefix: null
w2022-03-15 01:18:33 DEBUG Optimize second-level cache for minimal puts: disabled
w2022-03-15 01:18:33 DEBUG Structured second-level cache entries: disabled
w2022-03-15 01:18:33 DEBUG Second-level cache direct-reference entries: disabled
w2022-03-15 01:18:33 DEBUG Automatic eviction of collection cache: disabled
w2022-03-15 01:18:33 DEBUG JDBC batch size: 1
w2022-03-15 01:18:33 DEBUG JDBC batch updates for versioned data: enabled
w2022-03-15 01:18:33 DEBUG Scrollable result sets: disabled
w2022-03-15 01:18:33 DEBUG Wrap result sets: disabled
w2022-03-15 01:18:33 DEBUG JDBC3 getGeneratedKeys(): enabled
w2022-03-15 01:18:33 DEBUG JDBC result set fetch size: null
w2022-03-15 01:18:33 DEBUG Connection release mode: ON_CLOSE
w2022-03-15 01:18:33 DEBUG Generate SQL with comments: disabled
w2022-03-15 01:18:33 DEBUG JPA compliance - query : disabled
w2022-03-15 01:18:33 DEBUG JPA compliance - closed-handling : disabled
w2022-03-15 01:18:33 DEBUG JPA compliance - lists : disabled
w2022-03-15 01:18:33 DEBUG JPA compliance - transactions : disabled
w2022-03-15 01:18:33 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 01:18:33 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 01:18:33 DEBUG Session factory constructed with filter configurations : {}
w2022-03-15 01:18:33 DEBUG Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=true, java.specification.version=1.8, file.encoding.pkg=sun.io, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@3cc9567c, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.SQLiteDialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\charsets.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\cldrdata.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\dnsns.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\jaccess.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\localedata.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\nashorn.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunec.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunmscapi.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\zipfs.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jce.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jfr.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jsse.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\management-agent.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\resources.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\rt.jar;C:\Users\Ольга\Desktop\Java\Project\Project1\helpdeskproject\target\classes;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\2.6.4\spring-boot-starter-data-jpa-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\2.6.4\spring-boot-starter-jdbc-2.6.4.jar;C:\Users\Ольга\.m2\repository\com\zaxxer\HikariCP\4.0.3\HikariCP-4.0.3.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-jdbc\5.3.16\spring-jdbc-5.3.16.jar;C:\Users\Ольга\.m2\repository\jakarta\transaction\jakarta.transaction-api\1.3.3\jakarta.transaction-api-1.3.3.jar;C:\Users\Ольга\.m2\repository\jakarta\persistence\jakarta.persistence-api\2.2.3\jakarta.persistence-api-2.2.3.jar;C:\Users\Ольга\.m2\repository\org\hibernate\hibernate-core\5.6.5.Final\hibernate-core-5.6.5.Final.jar;C:\Users\Ольга\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy\1.11.22\byte-buddy-1.11.22.jar;C:\Users\Ольга\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ольга\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Ольга\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.6\jaxb-runtime-2.3.6.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\txw2\2.3.6\txw2-2.3.6.jar;C:\Users\Ольга\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.12\istack-commons-runtime-3.0.12.jar;C:\Users\Ольга\.m2\repository\com\sun\activation\jakarta.activation\1.2.2\jakarta.activation-1.2.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\data\spring-data-jpa\2.6.2\spring-data-jpa-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\data\spring-data-commons\2.6.2\spring-data-commons-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-orm\5.3.16\spring-orm-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-context\5.3.16\spring-context-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-tx\5.3.16\spring-tx-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-beans\5.3.16\spring-beans-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-aspects\5.3.16\spring-aspects-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-security\2.6.4\spring-boot-starter-security-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter\2.6.4\spring-boot-starter-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-logging\2.6.4\spring-boot-starter-logging-2.6.4.jar;C:\Users\Ольга\.m2\repository\ch\qos\logback\logback-classic\1.2.10\logback-classic-1.2.10.jar;C:\Users\Ольга\.m2\repository\ch\qos\logback\logback-core\1.2.10\logback-core-1.2.10.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.17.1\log4j-to-slf4j-2.17.1.jar;C:\Users\Ольга\.m2\repository\org\slf4j\jul-to-slf4j\1.7.36\jul-to-slf4j-1.7.36.jar;C:\Users\Ольга\.m2\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;C:\Users\Ольга\.m2\repository\org\yaml\snakeyaml\1.29\snakeyaml-1.29.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-aop\5.3.16\spring-aop-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-config\5.6.2\spring-security-config-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-web\5.6.2\spring-security-web-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-expression\5.3.16\spring-expression-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-web\2.6.4\spring-boot-starter-web-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-json\2.6.4\spring-boot-starter-json-2.6.4.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.13.1\jackson-datatype-jdk8-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.13.1\jackson-datatype-jsr310-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.13.1\jackson-module-parameter-names-2.13.1.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\2.6.4\spring-boot-starter-tomcat-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.58\tomcat-embed-core-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\9.0.58\tomcat-embed-el-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.58\tomcat-embed-websocket-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-web\5.3.16\spring-web-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-webmvc\5.3.16\spring-webmvc-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-devtools\2.6.4\spring-boot-devtools-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot\2.6.4\spring-boot-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\2.6.4\spring-boot-autoconfigure-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\xerial\sqlite-jdbc\3.36.0.3\sqlite-jdbc-3.36.0.3.jar;C:\Users\Ольга\.m2\repository\com\zsoltfabok\sqlite-dialect\1.0\sqlite-dialect-1.0.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-aop\2.6.2\spring-boot-starter-aop-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\aspectj\aspectjweaver\1.9.7\aspectjweaver-1.9.7.jar;C:\Users\Ольга\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.3\jakarta.xml.bind-api-2.3.3.jar;C:\Users\Ольга\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.2\jakarta.activation-api-1.2.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-core\5.3.16\spring-core-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-jcl\5.3.16\spring-jcl-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-core\5.6.2\spring-security-core-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-crypto\5.6.2\spring-security-crypto-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\projectlombok\lombok\1.18.22\lombok-1.18.22.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\2.6.4\spring-boot-starter-thymeleaf-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\thymeleaf-spring5\3.0.15.RELEASE\thymeleaf-spring5-3.0.15.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\thymeleaf\3.0.15.RELEASE\thymeleaf-3.0.15.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\attoparser\attoparser\2.0.5.RELEASE\attoparser-2.0.5.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-java8time\3.0.4.RELEASE\thymeleaf-extras-java8time-3.0.4.RELEASE.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.1\jackson-databind-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.1\jackson-annotations-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.1\jackson-core-2.13.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-api\2.4.1\log4j-api-2.4.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-core\2.4.1\log4j-core-2.4.1.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.2\lib\idea_rt.jar, java.vm.vendor=Temurin, sun.arch.data.model=64, user.variant=, java.vendor.url=https://adoptium.net/, catalina.useNaming=false, user.timezone=Europe/Moscow, jakarta.persistence.sharedCache.mode=UNSPECIFIED, os.name=Windows 10, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), user.country=RU, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\bin, sun.java.command=ru.edu.helpdesk.HelpdeskApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@6c23beef, com.sun.management.jmxremote=, javax.persistence.sharedCache.mode=UNSPECIFIED, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, user.home=C:\Users\Ольга, user.language=ru, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre, file.separator=\, spring.output.ansi.enabled=always, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, sun.boot.class.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\resources.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\rt.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\sunrsasign.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jsse.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jce.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\charsets.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jfr.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\classes, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_312-b07, user.name=Эльдорадо, spring.jmx.enabled=true, path.separator=;, os.version=10.0, java.endorsed.dirs=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\endorsed, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=default, spring.beaninfo.ignore=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=C:\Users\134E~1\AppData\Local\Temp\, catalina.home=C:\Users\Ольга\AppData\Local\Temp\tomcat.8080.3498560214257794354, java.version=1.8.0_312, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\Ольга\Desktop\Java\Project\Project1\helpdeskproject, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=8504, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\Ольга\AppData\Local\Temp\tomcat.8080.3498560214257794354, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@7a167866, java.library.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\windows\System32\OpenSSH\;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\Program Files\apache-maven-3.8.4\bin;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Ольга\AppData\Local\Microsoft\WindowsApps;C:\Users\Ольга\AppData\Local\Programs\Microsoft VS Code\bin;C:\SQLite;C:\Users\Ольга\AppData\Roaming\npm;C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.2\bin;;., java.vendor=Temurin, java.vm.info=mixed mode, java.vm.version=25.312-b07, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, java.ext.dirs=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext;C:\windows\Sun\Java\lib\ext, hibernate.connection.datasource=HikariDataSource (HikariPool-1), hibernate.hbm2ddl.import_files=data/import.sql, java.class.version=52.0}
w2022-03-15 01:18:33 DEBUG Skipping JACC integration as it was not enabled
w2022-03-15 01:18:33 DEBUG Using ORDINAL-based conversion for Enum ru.edu.helpdesk.entity.UserRole
w2022-03-15 01:18:33 DEBUG Using ORDINAL-based conversion for Enum ru.edu.helpdesk.entity.TicketStatus
w2022-03-15 01:18:33 DEBUG Instantiated session factory
w2022-03-15 01:18:33 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@50dda6d3] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@4073dee4]
w2022-03-15 01:18:33 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.User] is safe
w2022-03-15 01:18:33 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.User
w2022-03-15 01:18:33 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:18:33 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:18:33 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:18:33 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:18:33 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Ticket] is safe
w2022-03-15 01:18:33 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Ticket
w2022-03-15 01:18:33 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:18:33 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:18:33 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:18:33 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:18:33 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:18:33 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:18:33 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:18:33 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:18:33 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Comment] is safe
w2022-03-15 01:18:33 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Comment
w2022-03-15 01:18:33 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:18:33 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:18:33 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:18:33 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 01:18:33 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.User
w2022-03-15 01:18:33 DEBUG  Version select: select id from user where id =?
w2022-03-15 01:18:33 DEBUG  Snapshot select: select user_.id, user_.first_name as first_na2_2_, user_.last_name as last_nam3_2_, user_.login as login4_2_, user_.password as password5_2_, user_.role as role6_2_ from user user_ where user_.id=?
w2022-03-15 01:18:33 DEBUG  Insert 0: insert into user (first_name, last_name, login, password, role, id) values (?, ?, ?, ?, ?, ?)
w2022-03-15 01:18:33 DEBUG  Update 0: update user set first_name=?, last_name=?, login=?, password=?, role=? where id=?
w2022-03-15 01:18:33 DEBUG  Delete 0: delete from user where id=?
w2022-03-15 01:18:33 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c525314]
w2022-03-15 01:18:33 DEBUG Visiting attribute path : firstName
w2022-03-15 01:18:33 DEBUG Visiting attribute path : lastName
w2022-03-15 01:18:33 DEBUG Visiting attribute path : login
w2022-03-15 01:18:33 DEBUG Visiting attribute path : password
w2022-03-15 01:18:33 DEBUG Visiting attribute path : role
w2022-03-15 01:18:33 DEBUG Building LoadPlan...
w2022-03-15 01:18:33 DEBUG processing queryspace <gen:0>
w2022-03-15 01:18:33 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.User)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

w2022-03-15 01:18:33 DEBUG Static select for entity ru.edu.helpdesk.entity.User [NONE]: select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 01:18:33 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.Ticket
w2022-03-15 01:18:33 DEBUG  Version select: select id from ticket where id =?
w2022-03-15 01:18:33 DEBUG  Snapshot select: select ticket_.id, ticket_.client_id as client_i4_1_, ticket_.status as status2_1_, ticket_.support_id as support_5_1_, ticket_.title as title3_1_ from ticket ticket_ where ticket_.id=?
w2022-03-15 01:18:33 DEBUG  Insert 0: insert into ticket (client_id, status, support_id, title, id) values (?, ?, ?, ?, ?)
w2022-03-15 01:18:33 DEBUG  Update 0: update ticket set client_id=?, status=?, support_id=?, title=? where id=?
w2022-03-15 01:18:33 DEBUG  Delete 0: delete from ticket where id=?
w2022-03-15 01:18:33 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4478628e]
w2022-03-15 01:18:33 DEBUG Visiting attribute path : client
w2022-03-15 01:18:33 DEBUG Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58cca903]
w2022-03-15 01:18:33 DEBUG Visiting attribute path : client.firstName
w2022-03-15 01:18:33 DEBUG Visiting attribute path : client.lastName
w2022-03-15 01:18:33 DEBUG Visiting attribute path : client.login
w2022-03-15 01:18:33 DEBUG Visiting attribute path : client.password
w2022-03-15 01:18:33 DEBUG Visiting attribute path : client.role
w2022-03-15 01:18:33 DEBUG Visiting attribute path : status
w2022-03-15 01:18:33 DEBUG Visiting attribute path : support
w2022-03-15 01:18:33 DEBUG Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67cb4dd]
w2022-03-15 01:18:33 DEBUG Visiting attribute path : support.firstName
w2022-03-15 01:18:33 DEBUG Visiting attribute path : support.lastName
w2022-03-15 01:18:33 DEBUG Visiting attribute path : support.login
w2022-03-15 01:18:33 DEBUG Visiting attribute path : support.password
w2022-03-15 01:18:33 DEBUG Visiting attribute path : support.role
w2022-03-15 01:18:33 DEBUG Visiting attribute path : title
w2022-03-15 01:18:33 DEBUG Building LoadPlan...
w2022-03-15 01:18:33 DEBUG processing queryspace <gen:0>
w2022-03-15 01:18:33 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.Ticket)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.Ticket, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.Ticket)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:1>, path=ru.edu.helpdesk.entity.Ticket.client)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:2>, path=ru.edu.helpdesk.entity.Ticket.support)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.Ticket)
          - SQL table alias mapping - ticket0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(client)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
          - JOIN (JoinDefinedByMetadata(support)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user2_
                - alias suffix - 2_
                - suffixed key columns - {id1_2_2_}

w2022-03-15 01:18:33 DEBUG Static select for entity ru.edu.helpdesk.entity.Ticket [NONE]: select ticket0_.id as id1_1_0_, ticket0_.client_id as client_i4_1_0_, ticket0_.status as status2_1_0_, ticket0_.support_id as support_5_1_0_, ticket0_.title as title3_1_0_, user1_.id as id1_2_1_, user1_.first_name as first_na2_2_1_, user1_.last_name as last_nam3_2_1_, user1_.login as login4_2_1_, user1_.password as password5_2_1_, user1_.role as role6_2_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id left outer join user user2_ on ticket0_.support_id=user2_.id where ticket0_.id=?
w2022-03-15 01:18:33 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.Comment
w2022-03-15 01:18:33 DEBUG  Version select: select id from comment where id =?
w2022-03-15 01:18:33 DEBUG  Snapshot select: select comment_.id, comment_.message as message2_0_, comment_.ticket_id as ticket_i3_0_, comment_.user_id as user_id4_0_ from comment comment_ where comment_.id=?
w2022-03-15 01:18:33 DEBUG  Insert 0: insert into comment (message, ticket_id, user_id, id) values (?, ?, ?, ?)
w2022-03-15 01:18:33 DEBUG  Update 0: update comment set message=?, ticket_id=?, user_id=? where id=?
w2022-03-15 01:18:33 DEBUG  Delete 0: delete from comment where id=?
w2022-03-15 01:18:33 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@596bf0d4]
w2022-03-15 01:18:33 DEBUG Visiting attribute path : message
w2022-03-15 01:18:33 DEBUG Visiting attribute path : ticket
w2022-03-15 01:18:33 DEBUG Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3524e9e8]
w2022-03-15 01:18:33 DEBUG Visiting attribute path : ticket.client
w2022-03-15 01:18:33 DEBUG Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65331ea6]
w2022-03-15 01:18:33 DEBUG Visiting attribute path : ticket.client.firstName
w2022-03-15 01:18:33 DEBUG Visiting attribute path : ticket.client.lastName
w2022-03-15 01:18:33 DEBUG Visiting attribute path : ticket.client.login
w2022-03-15 01:18:33 DEBUG Visiting attribute path : ticket.client.password
w2022-03-15 01:18:33 DEBUG Visiting attribute path : ticket.client.role
w2022-03-15 01:18:33 DEBUG Visiting attribute path : ticket.status
w2022-03-15 01:18:33 DEBUG Visiting attribute path : ticket.support
w2022-03-15 01:18:33 DEBUG Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58b230bc]
w2022-03-15 01:18:33 DEBUG Visiting attribute path : ticket.support.firstName
w2022-03-15 01:18:33 DEBUG Visiting attribute path : ticket.support.lastName
w2022-03-15 01:18:33 DEBUG Visiting attribute path : ticket.support.login
w2022-03-15 01:18:33 DEBUG Visiting attribute path : ticket.support.password
w2022-03-15 01:18:33 DEBUG Visiting attribute path : ticket.support.role
w2022-03-15 01:18:33 DEBUG Visiting attribute path : ticket.title
w2022-03-15 01:18:33 DEBUG Visiting attribute path : user
w2022-03-15 01:18:33 DEBUG Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30d895a]
w2022-03-15 01:18:33 DEBUG Visiting attribute path : user.firstName
w2022-03-15 01:18:33 DEBUG Visiting attribute path : user.lastName
w2022-03-15 01:18:33 DEBUG Visiting attribute path : user.login
w2022-03-15 01:18:33 DEBUG Visiting attribute path : user.password
w2022-03-15 01:18:33 DEBUG Visiting attribute path : user.role
w2022-03-15 01:18:33 DEBUG Building LoadPlan...
w2022-03-15 01:18:33 DEBUG processing queryspace <gen:0>
w2022-03-15 01:18:33 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.Comment)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.Comment, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.Comment)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.Ticket, querySpaceUid=<gen:1>, path=ru.edu.helpdesk.entity.Comment.ticket)
             - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:2>, path=ru.edu.helpdesk.entity.Comment.ticket.client)
             - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:3>, path=ru.edu.helpdesk.entity.Comment.ticket.support)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:4>, path=ru.edu.helpdesk.entity.Comment.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(ticket)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ru.edu.helpdesk.entity.Ticket)
                - SQL table alias mapping - ticket1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(client)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=ru.edu.helpdesk.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}
                - JOIN (JoinDefinedByMetadata(support)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=ru.edu.helpdesk.entity.User)
                      - SQL table alias mapping - user3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_2_3_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user4_
                - alias suffix - 4_
                - suffixed key columns - {id1_2_4_}

w2022-03-15 01:18:33 DEBUG Static select for entity ru.edu.helpdesk.entity.Comment [NONE]: select comment0_.id as id1_0_0_, comment0_.message as message2_0_0_, comment0_.ticket_id as ticket_i3_0_0_, comment0_.user_id as user_id4_0_0_, ticket1_.id as id1_1_1_, ticket1_.client_id as client_i4_1_1_, ticket1_.status as status2_1_1_, ticket1_.support_id as support_5_1_1_, ticket1_.title as title3_1_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_, user3_.id as id1_2_3_, user3_.first_name as first_na2_2_3_, user3_.last_name as last_nam3_2_3_, user3_.login as login4_2_3_, user3_.password as password5_2_3_, user3_.role as role6_2_3_, user4_.id as id1_2_4_, user4_.first_name as first_na2_2_4_, user4_.last_name as last_nam3_2_4_, user4_.login as login4_2_4_, user4_.password as password5_2_4_, user4_.role as role6_2_4_ from comment comment0_ left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id left outer join user user2_ on ticket1_.client_id=user2_.id left outer join user user3_ on ticket1_.support_id=user3_.id left outer join user user4_ on comment0_.user_id=user4_.id where comment0_.id=?
w2022-03-15 01:18:33 DEBUG drop table if exists comment
w2022-03-15 01:18:33 DEBUG drop table if exists hibernate_sequence
w2022-03-15 01:18:33 DEBUG drop table if exists ticket
w2022-03-15 01:18:33 DEBUG drop table if exists user
w2022-03-15 01:18:33 DEBUG create table comment (id bigint not null, message varchar(255) not null, ticket_id bigint, user_id bigint, primary key (id))
w2022-03-15 01:18:33 DEBUG create table hibernate_sequence (next_val bigint)
w2022-03-15 01:18:33 DEBUG insert into hibernate_sequence values ( 1 )
w2022-03-15 01:18:33 DEBUG create table ticket (id bigint not null, status integer, title varchar(255) not null, client_id bigint, support_id bigint, primary key (id))
w2022-03-15 01:18:33 DEBUG create table user (id bigint not null, first_name varchar(255), last_name varchar(255), login varchar(255) not null, password varchar(255) not null, role integer, primary key (id))
w2022-03-15 01:18:33 INFO  HHH000476: Executing import script 'file:/C:/Users/%d0%9e%d0%bb%d1%8c%d0%b3%d0%b0/Desktop/Java/Project/Project1/helpdeskproject/target/classes/data/import.sql'
w2022-03-15 01:18:33 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (1, 'admin', 'admin', 'admin', 'admin', 0)
w2022-03-15 01:18:33 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (2, 'support', 'support', 'support', 'support', 1)
w2022-03-15 01:18:33 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (3, 'user1', 'user1', 'user1', 'user1', 2)
w2022-03-15 01:18:33 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (4, 'user2', 'user2', 'user2', 'user2', 2)
w2022-03-15 01:18:33 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (1, 1, 'Hello user1',1, 2)
w2022-03-15 01:18:33 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (2, 0, 'Title2', 1, NULL)
w2022-03-15 01:18:33 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (3, 0, 'Message user2', 4, NULL)
w2022-03-15 01:18:33 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (1, "comment ticket1", 1, 3)
w2022-03-15 01:18:33 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (2, "comment ticket2", 2, 3)
w2022-03-15 01:18:33 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (3, "comment ticket11", 1, 2)
w2022-03-15 01:18:33 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (4, "comment ticket111", 1, 2)
w2022-03-15 01:18:33 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (5, "comment ticket22", 2, 2)
w2022-03-15 01:18:33 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (6, "comment ticket3", 3, 4)
w2022-03-15 01:18:33 DEBUG UPDATE hibernate_sequence SET next_val = 8 WHERE next_val = 1
w2022-03-15 01:18:33 INFO  HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
w2022-03-15 01:18:33 DEBUG Checking 0 named HQL queries
w2022-03-15 01:18:33 DEBUG Checking 0 named SQL queries
w2022-03-15 01:18:33 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 01:18:33 DEBUG Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5b1905e6
w2022-03-15 01:18:33 DEBUG Registering SessionFactory: 4bef3911-2bbb-44e5-9518-2069a411c7fa (<unnamed>)
w2022-03-15 01:18:33 DEBUG Not binding SessionFactory to JNDI, no JNDI name configured
w2022-03-15 01:18:33 DEBUG Statistics initialized [enabled=false]
w2022-03-15 01:18:33 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 01:18:33 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 01:18:33 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 01:18:41 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 01:18:41 DEBUG begin
w2022-03-15 01:18:41 DEBUG committing
w2022-03-15 01:18:41 DEBUG Rendered criteria query -> select generatedAlias0 from Comment as generatedAlias0 left join generatedAlias0.ticket as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 01:18:41 DEBUG QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@7b80c36d
w2022-03-15 01:18:41 DEBUG parse() - HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Comment as generatedAlias0 left join generatedAlias0.ticket as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 01:18:41 DEBUG throwQueryException() : no errors
w2022-03-15 01:18:41 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[IDENT] Node: 'ru'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'edu'
    |  |  |  |  |  |  \-[IDENT] Node: 'helpdesk'
    |  |  |  |  |  \-[IDENT] Node: 'entity'
    |  |  |  |  \-[IDENT] Node: 'Comment'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'ticket'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias1'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

w2022-03-15 01:18:41 DEBUG select << begin [level=1, statement=select]
w2022-03-15 01:18:41 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.Comment (generatedAlias0) -> comment0_
w2022-03-15 01:18:41 DEBUG Resolved : generatedAlias0 -> comment0_.id
w2022-03-15 01:18:41 DEBUG getDataType() : ticket -> org.hibernate.type.ManyToOneType(ru.edu.helpdesk.entity.Ticket)
w2022-03-15 01:18:41 DEBUG dereferenceEntityJoin() : generating join for ticket in ru.edu.helpdesk.entity.Comment (generatedAlias1) parent = [ {null} ]
w2022-03-15 01:18:41 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.Ticket (generatedAlias1) -> ticket1_
w2022-03-15 01:18:41 DEBUG addJoinByPathMap() : generatedAlias0.ticket -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=ticket,tableAlias=ticket1_,origin=comment comment0_,columns={comment0_.ticket_id,className=ru.edu.helpdesk.entity.Ticket}}
w2022-03-15 01:18:41 DEBUG Resolved : generatedAlias0.ticket -> comment0_.ticket_id
w2022-03-15 01:18:41 DEBUG createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'ticket ticket1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Comment.ticket,tableName=ticket,tableAlias=ticket1_,origin=comment comment0_,columns={comment0_.ticket_id,className=ru.edu.helpdesk.entity.Ticket}}

w2022-03-15 01:18:41 DEBUG Resolved : generatedAlias0 -> comment0_.id
w2022-03-15 01:18:41 DEBUG Resolved : generatedAlias1 -> ticket1_.id
w2022-03-15 01:18:41 DEBUG getDataType() : id -> org.hibernate.type.LongType@591ed415
w2022-03-15 01:18:41 DEBUG Resolved : generatedAlias1.id -> ticket1_.id
w2022-03-15 01:18:41 DEBUG select : finishing up [level=1, statement=select]
w2022-03-15 01:18:41 DEBUG processQuery() :  ( SELECT ( {select clause} comment0_.id ) ( FromClause{level=1} ( comment comment0_ ticket ticket1_ ) ) ( where ( = ( ticket1_.id ticket1_.id id ) ? ) ) )
w2022-03-15 01:18:41 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Comment): [comment]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.Comment)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.Ticket)
          | path: generatedAlias1.id
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.Ticket)
          |  | originalText: generatedAlias1
          |  \-IdentNode
          |    persister: null
          |    originalText: id
          \-ParameterNode

w2022-03-15 01:18:41 DEBUG Using FROM fragment [comment comment0_]
w2022-03-15 01:18:41 DEBUG Using FROM fragment [left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id]
w2022-03-15 01:18:41 DEBUG select >> end [level=1, statement=select]
w2022-03-15 01:18:41 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (ticket,comment)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'comment0_.id as id1_0_' {alias=generatedAlias0, className=ru.edu.helpdesk.entity.Comment, tableAlias=comment0_}
    |  \-[SQL_TOKEN] SqlFragment: 'comment0_.message as message2_0_, comment0_.ticket_id as ticket_i3_0_, comment0_.user_id as user_id4_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[ticket1_, comment0_], fromElementsByPath=[generatedAlias0.ticket], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'comment comment0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=comment,tableAlias=comment0_,origin=null,columns={,className=ru.edu.helpdesk.entity.Comment}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Comment.ticket,tableName=ticket,tableAlias=ticket1_,origin=comment comment0_,columns={comment0_.ticket_id,className=ru.edu.helpdesk.entity.Ticket}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'ticket1_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias1.id,tableAlias=ticket1_,className=ru.edu.helpdesk.entity.Ticket,classAlias=generatedAlias1}
          |  +-[ALIAS_REF] IdentNode: 'ticket1_.id' {alias=generatedAlias1, className=ru.edu.helpdesk.entity.Ticket, tableAlias=ticket1_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LongType@591ed415}

w2022-03-15 01:18:41 DEBUG throwQueryException() : no errors
w2022-03-15 01:18:41 DEBUG HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Comment as generatedAlias0 left join generatedAlias0.ticket as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 01:18:41 DEBUG SQL: select comment0_.id as id1_0_, comment0_.message as message2_0_, comment0_.ticket_id as ticket_i3_0_, comment0_.user_id as user_id4_0_ from comment comment0_ left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id where ticket1_.id=?
w2022-03-15 01:18:41 DEBUG throwQueryException() : no errors
w2022-03-15 01:18:41 DEBUG select comment0_.id as id1_0_, comment0_.message as message2_0_, comment0_.ticket_id as ticket_i3_0_, comment0_.user_id as user_id4_0_ from comment comment0_ left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id where ticket1_.id=?
w2022-03-15 01:18:41 DEBUG Result set row: 0
w2022-03-15 01:18:41 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Comment#2]
w2022-03-15 01:18:41 DEBUG Result set row: 1
w2022-03-15 01:18:41 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Comment#5]
w2022-03-15 01:18:41 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Comment#2]
w2022-03-15 01:18:41 DEBUG Processing attribute `message` : value = comment ticket2
w2022-03-15 01:18:41 DEBUG Attribute (`message`)  - enhanced for lazy-loading? - false
w2022-03-15 01:18:41 DEBUG Processing attribute `ticket` : value = 2
w2022-03-15 01:18:41 DEBUG Attribute (`ticket`)  - enhanced for lazy-loading? - false
w2022-03-15 01:18:41 DEBUG select ticket0_.id as id1_1_0_, ticket0_.client_id as client_i4_1_0_, ticket0_.status as status2_1_0_, ticket0_.support_id as support_5_1_0_, ticket0_.title as title3_1_0_, user1_.id as id1_2_1_, user1_.first_name as first_na2_2_1_, user1_.last_name as last_nam3_2_1_, user1_.login as login4_2_1_, user1_.password as password5_2_1_, user1_.role as role6_2_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id left outer join user user2_ on ticket0_.support_id=user2_.id where ticket0_.id=?
w2022-03-15 01:18:41 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 01:18:41 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 01:18:41 DEBUG Processing attribute `client` : value = 1
w2022-03-15 01:18:41 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 01:18:41 DEBUG Processing attribute `status` : value = OPEN
w2022-03-15 01:18:41 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 01:18:41 DEBUG Processing attribute `support` : value = null
w2022-03-15 01:18:41 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 01:18:41 DEBUG Processing attribute `title` : value = Title2
w2022-03-15 01:18:41 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 01:18:41 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 01:18:41 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#1]
w2022-03-15 01:18:41 DEBUG Processing attribute `firstName` : value = admin
w2022-03-15 01:18:41 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 01:18:41 DEBUG Processing attribute `lastName` : value = admin
w2022-03-15 01:18:41 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 01:18:41 DEBUG Processing attribute `login` : value = admin
w2022-03-15 01:18:41 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 01:18:41 DEBUG Processing attribute `password` : value = admin
w2022-03-15 01:18:41 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 01:18:41 DEBUG Processing attribute `role` : value = ADMIN
w2022-03-15 01:18:41 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 01:18:41 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#1]
w2022-03-15 01:18:41 DEBUG Done entity load : ru.edu.helpdesk.entity.Ticket#2
w2022-03-15 01:18:41 DEBUG Processing attribute `user` : value = 3
w2022-03-15 01:18:41 DEBUG Attribute (`user`)  - enhanced for lazy-loading? - false
w2022-03-15 01:18:41 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 01:18:41 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 01:18:41 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#3]
w2022-03-15 01:18:41 DEBUG Processing attribute `firstName` : value = user1
w2022-03-15 01:18:41 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 01:18:41 DEBUG Processing attribute `lastName` : value = user1
w2022-03-15 01:18:41 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 01:18:41 DEBUG Processing attribute `login` : value = user1
w2022-03-15 01:18:41 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 01:18:41 DEBUG Processing attribute `password` : value = user1
w2022-03-15 01:18:41 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 01:18:41 DEBUG Processing attribute `role` : value = USER
w2022-03-15 01:18:41 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 01:18:41 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#3]
w2022-03-15 01:18:41 DEBUG Done entity load : ru.edu.helpdesk.entity.User#3
w2022-03-15 01:18:41 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Comment#2]
w2022-03-15 01:18:41 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Comment#5]
w2022-03-15 01:18:41 DEBUG Processing attribute `message` : value = comment ticket22
w2022-03-15 01:18:41 DEBUG Attribute (`message`)  - enhanced for lazy-loading? - false
w2022-03-15 01:18:41 DEBUG Processing attribute `ticket` : value = 2
w2022-03-15 01:18:41 DEBUG Attribute (`ticket`)  - enhanced for lazy-loading? - false
w2022-03-15 01:18:41 DEBUG Processing attribute `user` : value = 2
w2022-03-15 01:18:41 DEBUG Attribute (`user`)  - enhanced for lazy-loading? - false
w2022-03-15 01:18:41 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 01:18:41 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 01:18:41 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#2]
w2022-03-15 01:18:41 DEBUG Processing attribute `firstName` : value = support
w2022-03-15 01:18:41 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 01:18:41 DEBUG Processing attribute `lastName` : value = support
w2022-03-15 01:18:41 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 01:18:41 DEBUG Processing attribute `login` : value = support
w2022-03-15 01:18:41 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 01:18:41 DEBUG Processing attribute `password` : value = support
w2022-03-15 01:18:41 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 01:18:41 DEBUG Processing attribute `role` : value = SUPPORT
w2022-03-15 01:18:41 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 01:18:41 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#2]
w2022-03-15 01:18:41 DEBUG Done entity load : ru.edu.helpdesk.entity.User#2
w2022-03-15 01:18:41 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Comment#5]
w2022-03-15 17:58:20 DEBUG Logging Provider: org.jboss.logging.Log4j2LoggerProvider
w2022-03-15 17:58:20 DEBUG PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@35ae5467
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/%d0%9e%d0%bb%d1%8c%d0%b3%d0%b0/Desktop/Java/Project/Project1/helpdeskproject/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		ru.edu.helpdesk.entity.Comment
		ru.edu.helpdesk.entity.Ticket
		ru.edu.helpdesk.entity.User]
	Mapping files names []
	Properties []
w2022-03-15 17:58:20 DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
w2022-03-15 17:58:20 DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
w2022-03-15 17:58:20 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
w2022-03-15 17:58:20 INFO  HHH000412: Hibernate ORM core version 5.6.5.Final
w2022-03-15 17:58:20 DEBUG HHH000206: hibernate.properties not found
w2022-03-15 17:58:21 DEBUG Overriding existing service binding [org.hibernate.secure.spi.JaccService]
w2022-03-15 17:58:21 DEBUG Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
w2022-03-15 17:58:21 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
w2022-03-15 17:58:21 INFO  HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
w2022-03-15 17:58:21 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@76b8b625
w2022-03-15 17:58:21 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@76b8b625
w2022-03-15 17:58:21 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@76b8b625
w2022-03-15 17:58:21 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2a0c0f80
w2022-03-15 17:58:21 DEBUG Adding type registration true_false -> org.hibernate.type.TrueFalseType@340f8180
w2022-03-15 17:58:21 DEBUG Adding type registration yes_no -> org.hibernate.type.YesNoType@c225db1
w2022-03-15 17:58:21 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@365f1fed
w2022-03-15 17:58:21 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@365f1fed
w2022-03-15 17:58:21 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@365f1fed
w2022-03-15 17:58:21 DEBUG Adding type registration character -> org.hibernate.type.CharacterType@3fca7206
w2022-03-15 17:58:21 DEBUG Adding type registration char -> org.hibernate.type.CharacterType@3fca7206
w2022-03-15 17:58:21 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3fca7206
w2022-03-15 17:58:21 DEBUG Adding type registration short -> org.hibernate.type.ShortType@1c56dc6d
w2022-03-15 17:58:21 DEBUG Adding type registration short -> org.hibernate.type.ShortType@1c56dc6d
w2022-03-15 17:58:21 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1c56dc6d
w2022-03-15 17:58:21 DEBUG Adding type registration integer -> org.hibernate.type.IntegerType@4b9f473c
w2022-03-15 17:58:21 DEBUG Adding type registration int -> org.hibernate.type.IntegerType@4b9f473c
w2022-03-15 17:58:21 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4b9f473c
w2022-03-15 17:58:21 DEBUG Adding type registration long -> org.hibernate.type.LongType@2addfa3d
w2022-03-15 17:58:21 DEBUG Adding type registration long -> org.hibernate.type.LongType@2addfa3d
w2022-03-15 17:58:21 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.LongType@2addfa3d
w2022-03-15 17:58:21 DEBUG Adding type registration float -> org.hibernate.type.FloatType@1f29f81
w2022-03-15 17:58:21 DEBUG Adding type registration float -> org.hibernate.type.FloatType@1f29f81
w2022-03-15 17:58:21 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1f29f81
w2022-03-15 17:58:21 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@3c33f97c
w2022-03-15 17:58:21 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@3c33f97c
w2022-03-15 17:58:21 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3c33f97c
w2022-03-15 17:58:21 DEBUG Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@390c39ab
w2022-03-15 17:58:21 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@390c39ab
w2022-03-15 17:58:21 DEBUG Adding type registration big_integer -> org.hibernate.type.BigIntegerType@375e83aa
w2022-03-15 17:58:21 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@375e83aa
w2022-03-15 17:58:21 DEBUG Adding type registration string -> org.hibernate.type.StringType@2844d463
w2022-03-15 17:58:21 DEBUG Adding type registration java.lang.String -> org.hibernate.type.StringType@2844d463
w2022-03-15 17:58:21 DEBUG Adding type registration nstring -> org.hibernate.type.StringNVarcharType@653f4728
w2022-03-15 17:58:21 DEBUG Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2af6ad67
w2022-03-15 17:58:21 DEBUG Adding type registration url -> org.hibernate.type.UrlType@6e1a8b90
w2022-03-15 17:58:21 DEBUG Adding type registration java.net.URL -> org.hibernate.type.UrlType@6e1a8b90
w2022-03-15 17:58:21 DEBUG Adding type registration Duration -> org.hibernate.type.DurationType@3684d256
w2022-03-15 17:58:21 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.DurationType@3684d256
w2022-03-15 17:58:21 DEBUG Adding type registration Instant -> org.hibernate.type.InstantType@12dd562e
w2022-03-15 17:58:21 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.InstantType@12dd562e
w2022-03-15 17:58:21 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@61e420a
w2022-03-15 17:58:21 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@61e420a
w2022-03-15 17:58:21 DEBUG Adding type registration LocalDate -> org.hibernate.type.LocalDateType@523d2607
w2022-03-15 17:58:21 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@523d2607
w2022-03-15 17:58:21 DEBUG Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@57676e91
w2022-03-15 17:58:21 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@57676e91
w2022-03-15 17:58:21 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@57183045
w2022-03-15 17:58:21 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@57183045
w2022-03-15 17:58:21 DEBUG Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@14e66496
w2022-03-15 17:58:21 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@14e66496
w2022-03-15 17:58:21 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@71ec47b1
w2022-03-15 17:58:21 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@71ec47b1
w2022-03-15 17:58:21 DEBUG Adding type registration date -> org.hibernate.type.DateType@375daf98
w2022-03-15 17:58:21 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.DateType@375daf98
w2022-03-15 17:58:21 DEBUG Adding type registration time -> org.hibernate.type.TimeType@4ff37494
w2022-03-15 17:58:21 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4ff37494
w2022-03-15 17:58:21 DEBUG Adding type registration timestamp -> org.hibernate.type.TimestampType@3fd05e37
w2022-03-15 17:58:21 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3fd05e37
w2022-03-15 17:58:21 DEBUG Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3fd05e37
w2022-03-15 17:58:21 DEBUG Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@28031bea
w2022-03-15 17:58:21 DEBUG Adding type registration calendar -> org.hibernate.type.CalendarType@49f028aa
w2022-03-15 17:58:21 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@49f028aa
w2022-03-15 17:58:21 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@49f028aa
w2022-03-15 17:58:21 DEBUG Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4a0971a0
w2022-03-15 17:58:21 DEBUG Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@4f59169b
w2022-03-15 17:58:21 DEBUG Adding type registration locale -> org.hibernate.type.LocaleType@5afa1747
w2022-03-15 17:58:21 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5afa1747
w2022-03-15 17:58:21 DEBUG Adding type registration currency -> org.hibernate.type.CurrencyType@32c1690c
w2022-03-15 17:58:21 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@32c1690c
w2022-03-15 17:58:21 DEBUG Adding type registration timezone -> org.hibernate.type.TimeZoneType@8e28c02
w2022-03-15 17:58:21 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@8e28c02
w2022-03-15 17:58:21 DEBUG Adding type registration class -> org.hibernate.type.ClassType@2c23b14e
w2022-03-15 17:58:21 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2c23b14e
w2022-03-15 17:58:21 DEBUG Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@54836af5
w2022-03-15 17:58:21 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@54836af5
w2022-03-15 17:58:21 DEBUG Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4282b9b2
w2022-03-15 17:58:21 DEBUG Adding type registration binary -> org.hibernate.type.BinaryType@5a06f8a4
w2022-03-15 17:58:21 DEBUG Adding type registration byte[] -> org.hibernate.type.BinaryType@5a06f8a4
w2022-03-15 17:58:21 DEBUG Adding type registration [B -> org.hibernate.type.BinaryType@5a06f8a4
w2022-03-15 17:58:21 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3d756b66
w2022-03-15 17:58:21 DEBUG Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3d756b66
w2022-03-15 17:58:21 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3d756b66
w2022-03-15 17:58:21 DEBUG Adding type registration row_version -> org.hibernate.type.RowVersionType@4f26eed3
w2022-03-15 17:58:21 DEBUG Adding type registration image -> org.hibernate.type.ImageType@3786e14b
w2022-03-15 17:58:21 DEBUG Adding type registration characters -> org.hibernate.type.CharArrayType@4214cc75
w2022-03-15 17:58:21 DEBUG Adding type registration char[] -> org.hibernate.type.CharArrayType@4214cc75
w2022-03-15 17:58:21 DEBUG Adding type registration [C -> org.hibernate.type.CharArrayType@4214cc75
w2022-03-15 17:58:21 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@290354c4
w2022-03-15 17:58:21 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@290354c4
w2022-03-15 17:58:21 DEBUG Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@290354c4
w2022-03-15 17:58:21 DEBUG Adding type registration text -> org.hibernate.type.TextType@60d1b5f
w2022-03-15 17:58:21 DEBUG Adding type registration ntext -> org.hibernate.type.NTextType@6834ec3f
w2022-03-15 17:58:21 DEBUG Adding type registration blob -> org.hibernate.type.BlobType@548b2fbe
w2022-03-15 17:58:21 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@548b2fbe
w2022-03-15 17:58:21 DEBUG Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@10c71219
w2022-03-15 17:58:21 DEBUG Adding type registration clob -> org.hibernate.type.ClobType@450183fe
w2022-03-15 17:58:21 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@450183fe
w2022-03-15 17:58:21 DEBUG Adding type registration nclob -> org.hibernate.type.NClobType@1a5a6573
w2022-03-15 17:58:21 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1a5a6573
w2022-03-15 17:58:21 DEBUG Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7b323e85
w2022-03-15 17:58:21 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@76154454
w2022-03-15 17:58:21 DEBUG Adding type registration serializable -> org.hibernate.type.SerializableType@40912c40
w2022-03-15 17:58:21 DEBUG Adding type registration object -> org.hibernate.type.ObjectType@614daf8c
w2022-03-15 17:58:21 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@614daf8c
w2022-03-15 17:58:21 DEBUG Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6262876d
w2022-03-15 17:58:21 DEBUG Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6edf7562
w2022-03-15 17:58:21 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2e1f472f
w2022-03-15 17:58:21 DEBUG Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@858ef1
w2022-03-15 17:58:21 DEBUG Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@76aa3863
w2022-03-15 17:58:21 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@63cb27b1
w2022-03-15 17:58:21 DEBUG Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@373932d8
w2022-03-15 17:58:21 DEBUG Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1be7d0c8
w2022-03-15 17:58:21 INFO  HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
w2022-03-15 17:58:21 DEBUG Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@23769ca9] into BootstrapContext; was [null]
w2022-03-15 17:58:21 DEBUG ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@23769ca9) [was null]
w2022-03-15 17:58:21 DEBUG Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@53b15886] into BootstrapContext; was [null]
w2022-03-15 17:58:21 DEBUG Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@6c3b1009] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@158642f3]
w2022-03-15 17:58:21 DEBUG Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@23769ca9]
w2022-03-15 17:58:21 DEBUG ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@23769ca9]
w2022-03-15 17:58:21 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
w2022-03-15 17:58:21 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
w2022-03-15 17:58:21 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
w2022-03-15 17:58:21 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
w2022-03-15 17:58:21 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
w2022-03-15 17:58:21 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
w2022-03-15 17:58:21 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
w2022-03-15 17:58:21 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
w2022-03-15 17:58:21 DEBUG Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
w2022-03-15 17:58:21 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
w2022-03-15 17:58:21 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
w2022-03-15 17:58:21 DEBUG Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
w2022-03-15 17:58:21 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
w2022-03-15 17:58:21 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
w2022-03-15 17:58:21 DEBUG Database ->
       name : SQLite
    version : 3.36.0
      major : 3
      minor : 36
w2022-03-15 17:58:21 DEBUG Driver ->
       name : SQLite JDBC
    version : 3.36.0.3
      major : 3
      minor : 36
w2022-03-15 17:58:21 DEBUG JDBC version : 2.1
w2022-03-15 17:58:21 INFO  HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
w2022-03-15 17:58:21 DEBUG JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
w2022-03-15 17:58:21 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
w2022-03-15 17:58:21 DEBUG HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [2] less than 4
w2022-03-15 17:58:21 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@533d4aac] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@277f3f05]
w2022-03-15 17:58:21 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
w2022-03-15 17:58:21 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.Comment
w2022-03-15 17:58:21 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 17:58:21 DEBUG Import with entity name Comment
w2022-03-15 17:58:21 DEBUG Bind entity ru.edu.helpdesk.entity.Comment on table comment
w2022-03-15 17:58:21 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 17:58:21 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Comment] is safe
w2022-03-15 17:58:21 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Comment
w2022-03-15 17:58:21 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 17:58:21 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Comment:id]
w2022-03-15 17:58:21 DEBUG building SimpleValue for id
w2022-03-15 17:58:21 DEBUG Building property id
w2022-03-15 17:58:21 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 17:58:21 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=message, insertable=true, updatable=true, unique=false}
w2022-03-15 17:58:21 DEBUG MetadataSourceProcessor property message with lazy=false
w2022-03-15 17:58:21 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Comment:message]
w2022-03-15 17:58:21 DEBUG building SimpleValue for message
w2022-03-15 17:58:21 DEBUG Building property message
w2022-03-15 17:58:21 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 17:58:21 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=ticket, insertable=true, updatable=true, unique=false}
w2022-03-15 17:58:21 DEBUG Building property ticket
w2022-03-15 17:58:21 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 17:58:21 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=user, insertable=true, updatable=true, unique=false}
w2022-03-15 17:58:21 DEBUG Building property user
w2022-03-15 17:58:21 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 17:58:21 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 17:58:21 DEBUG Import with entity name Ticket
w2022-03-15 17:58:21 DEBUG Bind entity ru.edu.helpdesk.entity.Ticket on table ticket
w2022-03-15 17:58:21 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 17:58:21 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Ticket] is safe
w2022-03-15 17:58:21 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Ticket
w2022-03-15 17:58:21 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 17:58:21 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:id]
w2022-03-15 17:58:21 DEBUG building SimpleValue for id
w2022-03-15 17:58:21 DEBUG Building property id
w2022-03-15 17:58:21 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 17:58:21 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 17:58:21 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=client, insertable=true, updatable=true, unique=false}
w2022-03-15 17:58:21 DEBUG Building property client
w2022-03-15 17:58:21 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=status, insertable=true, updatable=true, unique=false}
w2022-03-15 17:58:21 DEBUG MetadataSourceProcessor property status with lazy=false
w2022-03-15 17:58:21 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:status]
w2022-03-15 17:58:21 DEBUG building SimpleValue for status
w2022-03-15 17:58:21 DEBUG Building property status
w2022-03-15 17:58:21 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 17:58:21 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=support, insertable=true, updatable=true, unique=false}
w2022-03-15 17:58:21 DEBUG Building property support
w2022-03-15 17:58:21 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=title, insertable=true, updatable=true, unique=false}
w2022-03-15 17:58:21 DEBUG MetadataSourceProcessor property title with lazy=false
w2022-03-15 17:58:21 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:title]
w2022-03-15 17:58:21 DEBUG building SimpleValue for title
w2022-03-15 17:58:21 DEBUG Building property title
w2022-03-15 17:58:21 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.User
w2022-03-15 17:58:21 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 17:58:21 DEBUG Import with entity name User
w2022-03-15 17:58:21 DEBUG Bind entity ru.edu.helpdesk.entity.User on table user
w2022-03-15 17:58:21 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 17:58:21 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.User] is safe
w2022-03-15 17:58:21 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.User
w2022-03-15 17:58:21 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 17:58:21 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:id]
w2022-03-15 17:58:21 DEBUG building SimpleValue for id
w2022-03-15 17:58:21 DEBUG Building property id
w2022-03-15 17:58:21 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 17:58:21 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
w2022-03-15 17:58:21 DEBUG MetadataSourceProcessor property firstName with lazy=false
w2022-03-15 17:58:21 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:firstName]
w2022-03-15 17:58:21 DEBUG building SimpleValue for firstName
w2022-03-15 17:58:21 DEBUG Building property firstName
w2022-03-15 17:58:21 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
w2022-03-15 17:58:21 DEBUG MetadataSourceProcessor property lastName with lazy=false
w2022-03-15 17:58:21 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:lastName]
w2022-03-15 17:58:21 DEBUG building SimpleValue for lastName
w2022-03-15 17:58:21 DEBUG Building property lastName
w2022-03-15 17:58:21 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=login, insertable=true, updatable=true, unique=false}
w2022-03-15 17:58:21 DEBUG MetadataSourceProcessor property login with lazy=false
w2022-03-15 17:58:21 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:login]
w2022-03-15 17:58:21 DEBUG building SimpleValue for login
w2022-03-15 17:58:21 DEBUG Building property login
w2022-03-15 17:58:21 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
w2022-03-15 17:58:21 DEBUG MetadataSourceProcessor property password with lazy=false
w2022-03-15 17:58:21 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:password]
w2022-03-15 17:58:21 DEBUG building SimpleValue for password
w2022-03-15 17:58:21 DEBUG Building property password
w2022-03-15 17:58:21 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=role, insertable=true, updatable=true, unique=false}
w2022-03-15 17:58:21 DEBUG MetadataSourceProcessor property role with lazy=false
w2022-03-15 17:58:21 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:role]
w2022-03-15 17:58:21 DEBUG building SimpleValue for role
w2022-03-15 17:58:21 DEBUG Building property role
w2022-03-15 17:58:21 DEBUG Starting fillSimpleValue for id
w2022-03-15 17:58:21 DEBUG Starting fillSimpleValue for message
w2022-03-15 17:58:21 DEBUG Starting fillSimpleValue for id
w2022-03-15 17:58:21 DEBUG Starting fillSimpleValue for status
w2022-03-15 17:58:21 DEBUG Starting fillSimpleValue for title
w2022-03-15 17:58:21 DEBUG Starting fillSimpleValue for id
w2022-03-15 17:58:21 DEBUG Starting fillSimpleValue for firstName
w2022-03-15 17:58:21 DEBUG Starting fillSimpleValue for lastName
w2022-03-15 17:58:21 DEBUG Starting fillSimpleValue for login
w2022-03-15 17:58:21 DEBUG Starting fillSimpleValue for password
w2022-03-15 17:58:21 DEBUG Starting fillSimpleValue for role
w2022-03-15 17:58:21 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [comment]
w2022-03-15 17:58:21 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [ticket]
w2022-03-15 17:58:21 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [user]
w2022-03-15 17:58:21 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 17:58:21 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 17:58:21 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 17:58:21 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 17:58:21 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 17:58:21 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 17:58:21 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 17:58:21 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 17:58:21 DEBUG Building session factory
w2022-03-15 17:58:21 DEBUG SessionFactory name : null
w2022-03-15 17:58:21 DEBUG Automatic flush during beforeCompletion(): enabled
w2022-03-15 17:58:21 DEBUG Automatic session close at end of transaction: disabled
w2022-03-15 17:58:21 DEBUG Statistics: disabled
w2022-03-15 17:58:21 DEBUG Deleted entity synthetic identifier rollback: disabled
w2022-03-15 17:58:21 DEBUG Default entity-mode: pojo
w2022-03-15 17:58:21 DEBUG Check Nullability in Core (should be disabled when Bean Validation is on): enabled
w2022-03-15 17:58:21 DEBUG Allow initialization of lazy state outside session : disabled
w2022-03-15 17:58:21 DEBUG Using BatchFetchStyle : LEGACY
w2022-03-15 17:58:21 DEBUG Default batch fetch size: -1
w2022-03-15 17:58:21 DEBUG Maximum outer join fetch depth: null
w2022-03-15 17:58:21 DEBUG Default null ordering: NONE
w2022-03-15 17:58:21 DEBUG Order SQL updates by primary key: disabled
w2022-03-15 17:58:21 DEBUG Order SQL inserts for batching: disabled
w2022-03-15 17:58:21 DEBUG multi-tenancy strategy : NONE
w2022-03-15 17:58:21 DEBUG JTA Track by Thread: enabled
w2022-03-15 17:58:21 DEBUG Query language substitutions: {}
w2022-03-15 17:58:21 DEBUG Named query checking : enabled
w2022-03-15 17:58:21 DEBUG Second-level cache: disabled
w2022-03-15 17:58:21 DEBUG Second-level query cache: disabled
w2022-03-15 17:58:21 DEBUG Second-level query cache factory: null
w2022-03-15 17:58:21 DEBUG Second-level cache region prefix: null
w2022-03-15 17:58:21 DEBUG Optimize second-level cache for minimal puts: disabled
w2022-03-15 17:58:21 DEBUG Structured second-level cache entries: disabled
w2022-03-15 17:58:21 DEBUG Second-level cache direct-reference entries: disabled
w2022-03-15 17:58:21 DEBUG Automatic eviction of collection cache: disabled
w2022-03-15 17:58:21 DEBUG JDBC batch size: 1
w2022-03-15 17:58:21 DEBUG JDBC batch updates for versioned data: enabled
w2022-03-15 17:58:21 DEBUG Scrollable result sets: disabled
w2022-03-15 17:58:21 DEBUG Wrap result sets: disabled
w2022-03-15 17:58:21 DEBUG JDBC3 getGeneratedKeys(): enabled
w2022-03-15 17:58:21 DEBUG JDBC result set fetch size: null
w2022-03-15 17:58:21 DEBUG Connection release mode: ON_CLOSE
w2022-03-15 17:58:21 DEBUG Generate SQL with comments: disabled
w2022-03-15 17:58:21 DEBUG JPA compliance - query : disabled
w2022-03-15 17:58:21 DEBUG JPA compliance - closed-handling : disabled
w2022-03-15 17:58:21 DEBUG JPA compliance - lists : disabled
w2022-03-15 17:58:21 DEBUG JPA compliance - transactions : disabled
w2022-03-15 17:58:21 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 17:58:21 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 17:58:21 DEBUG Session factory constructed with filter configurations : {}
w2022-03-15 17:58:21 DEBUG Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=true, java.specification.version=1.8, file.encoding.pkg=sun.io, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@56ab7e8e, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.SQLiteDialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\charsets.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\cldrdata.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\dnsns.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\jaccess.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\localedata.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\nashorn.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunec.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunmscapi.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\zipfs.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jce.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jfr.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jsse.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\management-agent.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\resources.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\rt.jar;C:\Users\Ольга\Desktop\Java\Project\Project1\helpdeskproject\target\classes;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\2.6.4\spring-boot-starter-data-jpa-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\2.6.4\spring-boot-starter-jdbc-2.6.4.jar;C:\Users\Ольга\.m2\repository\com\zaxxer\HikariCP\4.0.3\HikariCP-4.0.3.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-jdbc\5.3.16\spring-jdbc-5.3.16.jar;C:\Users\Ольга\.m2\repository\jakarta\transaction\jakarta.transaction-api\1.3.3\jakarta.transaction-api-1.3.3.jar;C:\Users\Ольга\.m2\repository\jakarta\persistence\jakarta.persistence-api\2.2.3\jakarta.persistence-api-2.2.3.jar;C:\Users\Ольга\.m2\repository\org\hibernate\hibernate-core\5.6.5.Final\hibernate-core-5.6.5.Final.jar;C:\Users\Ольга\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy\1.11.22\byte-buddy-1.11.22.jar;C:\Users\Ольга\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ольга\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Ольга\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.6\jaxb-runtime-2.3.6.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\txw2\2.3.6\txw2-2.3.6.jar;C:\Users\Ольга\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.12\istack-commons-runtime-3.0.12.jar;C:\Users\Ольга\.m2\repository\com\sun\activation\jakarta.activation\1.2.2\jakarta.activation-1.2.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\data\spring-data-jpa\2.6.2\spring-data-jpa-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\data\spring-data-commons\2.6.2\spring-data-commons-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-orm\5.3.16\spring-orm-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-context\5.3.16\spring-context-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-tx\5.3.16\spring-tx-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-beans\5.3.16\spring-beans-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-aspects\5.3.16\spring-aspects-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-security\2.6.4\spring-boot-starter-security-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter\2.6.4\spring-boot-starter-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-logging\2.6.4\spring-boot-starter-logging-2.6.4.jar;C:\Users\Ольга\.m2\repository\ch\qos\logback\logback-classic\1.2.10\logback-classic-1.2.10.jar;C:\Users\Ольга\.m2\repository\ch\qos\logback\logback-core\1.2.10\logback-core-1.2.10.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.17.1\log4j-to-slf4j-2.17.1.jar;C:\Users\Ольга\.m2\repository\org\slf4j\jul-to-slf4j\1.7.36\jul-to-slf4j-1.7.36.jar;C:\Users\Ольга\.m2\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;C:\Users\Ольга\.m2\repository\org\yaml\snakeyaml\1.29\snakeyaml-1.29.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-aop\5.3.16\spring-aop-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-config\5.6.2\spring-security-config-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-web\5.6.2\spring-security-web-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-expression\5.3.16\spring-expression-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-web\2.6.4\spring-boot-starter-web-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-json\2.6.4\spring-boot-starter-json-2.6.4.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.13.1\jackson-datatype-jdk8-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.13.1\jackson-datatype-jsr310-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.13.1\jackson-module-parameter-names-2.13.1.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\2.6.4\spring-boot-starter-tomcat-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.58\tomcat-embed-core-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\9.0.58\tomcat-embed-el-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.58\tomcat-embed-websocket-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-web\5.3.16\spring-web-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-webmvc\5.3.16\spring-webmvc-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-devtools\2.6.4\spring-boot-devtools-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot\2.6.4\spring-boot-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\2.6.4\spring-boot-autoconfigure-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\xerial\sqlite-jdbc\3.36.0.3\sqlite-jdbc-3.36.0.3.jar;C:\Users\Ольга\.m2\repository\com\zsoltfabok\sqlite-dialect\1.0\sqlite-dialect-1.0.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-aop\2.6.2\spring-boot-starter-aop-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\aspectj\aspectjweaver\1.9.7\aspectjweaver-1.9.7.jar;C:\Users\Ольга\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.3\jakarta.xml.bind-api-2.3.3.jar;C:\Users\Ольга\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.2\jakarta.activation-api-1.2.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-core\5.3.16\spring-core-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-jcl\5.3.16\spring-jcl-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-core\5.6.2\spring-security-core-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-crypto\5.6.2\spring-security-crypto-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\projectlombok\lombok\1.18.22\lombok-1.18.22.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\2.6.4\spring-boot-starter-thymeleaf-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\thymeleaf-spring5\3.0.15.RELEASE\thymeleaf-spring5-3.0.15.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\thymeleaf\3.0.15.RELEASE\thymeleaf-3.0.15.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\attoparser\attoparser\2.0.5.RELEASE\attoparser-2.0.5.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-java8time\3.0.4.RELEASE\thymeleaf-extras-java8time-3.0.4.RELEASE.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.1\jackson-databind-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.1\jackson-annotations-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.1\jackson-core-2.13.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-api\2.4.1\log4j-api-2.4.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-core\2.4.1\log4j-core-2.4.1.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.2\lib\idea_rt.jar, java.vm.vendor=Temurin, sun.arch.data.model=64, user.variant=, java.vendor.url=https://adoptium.net/, catalina.useNaming=false, user.timezone=Europe/Moscow, jakarta.persistence.sharedCache.mode=UNSPECIFIED, os.name=Windows 10, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), user.country=RU, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\bin, sun.java.command=ru.edu.helpdesk.HelpdeskApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@12962bb, com.sun.management.jmxremote=, javax.persistence.sharedCache.mode=UNSPECIFIED, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, user.home=C:\Users\Ольга, user.language=ru, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre, file.separator=\, spring.output.ansi.enabled=always, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, sun.boot.class.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\resources.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\rt.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\sunrsasign.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jsse.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jce.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\charsets.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jfr.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\classes, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_312-b07, user.name=Эльдорадо, spring.jmx.enabled=true, path.separator=;, os.version=10.0, java.endorsed.dirs=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\endorsed, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=default, spring.beaninfo.ignore=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=C:\Users\134E~1\AppData\Local\Temp\, catalina.home=C:\Users\Ольга\AppData\Local\Temp\tomcat.8080.8915998218138874839, java.version=1.8.0_312, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\Ольга\Desktop\Java\Project\Project1\helpdeskproject, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=3252, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\Ольга\AppData\Local\Temp\tomcat.8080.8915998218138874839, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@34e9a93a, java.library.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\windows\System32\OpenSSH\;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\Program Files\apache-maven-3.8.4\bin;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Ольга\AppData\Local\Microsoft\WindowsApps;C:\Users\Ольга\AppData\Local\Programs\Microsoft VS Code\bin;C:\SQLite;C:\Users\Ольга\AppData\Roaming\npm;C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.2\bin;;., java.vendor=Temurin, java.vm.info=mixed mode, java.vm.version=25.312-b07, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, java.ext.dirs=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext;C:\windows\Sun\Java\lib\ext, hibernate.connection.datasource=HikariDataSource (HikariPool-1), hibernate.hbm2ddl.import_files=data/import.sql, java.class.version=52.0}
w2022-03-15 17:58:21 DEBUG Skipping JACC integration as it was not enabled
w2022-03-15 17:58:21 DEBUG Using ORDINAL-based conversion for Enum ru.edu.helpdesk.entity.UserRole
w2022-03-15 17:58:21 DEBUG Using ORDINAL-based conversion for Enum ru.edu.helpdesk.entity.TicketStatus
w2022-03-15 17:58:21 DEBUG Instantiated session factory
w2022-03-15 17:58:21 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@533d4aac] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@58be6e77]
w2022-03-15 17:58:21 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.User] is safe
w2022-03-15 17:58:21 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.User
w2022-03-15 17:58:22 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 17:58:22 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 17:58:22 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 17:58:22 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 17:58:22 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Ticket] is safe
w2022-03-15 17:58:22 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Ticket
w2022-03-15 17:58:22 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 17:58:22 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 17:58:22 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 17:58:22 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 17:58:22 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 17:58:22 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 17:58:22 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 17:58:22 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 17:58:22 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Comment] is safe
w2022-03-15 17:58:22 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Comment
w2022-03-15 17:58:22 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 17:58:22 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 17:58:22 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 17:58:22 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 17:58:22 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.User
w2022-03-15 17:58:22 DEBUG  Version select: select id from user where id =?
w2022-03-15 17:58:22 DEBUG  Snapshot select: select user_.id, user_.first_name as first_na2_2_, user_.last_name as last_nam3_2_, user_.login as login4_2_, user_.password as password5_2_, user_.role as role6_2_ from user user_ where user_.id=?
w2022-03-15 17:58:22 DEBUG  Insert 0: insert into user (first_name, last_name, login, password, role, id) values (?, ?, ?, ?, ?, ?)
w2022-03-15 17:58:22 DEBUG  Update 0: update user set first_name=?, last_name=?, login=?, password=?, role=? where id=?
w2022-03-15 17:58:22 DEBUG  Delete 0: delete from user where id=?
w2022-03-15 17:58:22 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e7bdf4d]
w2022-03-15 17:58:22 DEBUG Visiting attribute path : firstName
w2022-03-15 17:58:22 DEBUG Visiting attribute path : lastName
w2022-03-15 17:58:22 DEBUG Visiting attribute path : login
w2022-03-15 17:58:22 DEBUG Visiting attribute path : password
w2022-03-15 17:58:22 DEBUG Visiting attribute path : role
w2022-03-15 17:58:22 DEBUG Building LoadPlan...
w2022-03-15 17:58:22 DEBUG processing queryspace <gen:0>
w2022-03-15 17:58:22 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.User)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

w2022-03-15 17:58:22 DEBUG Static select for entity ru.edu.helpdesk.entity.User [NONE]: select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 17:58:22 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.Ticket
w2022-03-15 17:58:22 DEBUG  Version select: select id from ticket where id =?
w2022-03-15 17:58:22 DEBUG  Snapshot select: select ticket_.id, ticket_.client_id as client_i4_1_, ticket_.status as status2_1_, ticket_.support_id as support_5_1_, ticket_.title as title3_1_ from ticket ticket_ where ticket_.id=?
w2022-03-15 17:58:22 DEBUG  Insert 0: insert into ticket (client_id, status, support_id, title, id) values (?, ?, ?, ?, ?)
w2022-03-15 17:58:22 DEBUG  Update 0: update ticket set client_id=?, status=?, support_id=?, title=? where id=?
w2022-03-15 17:58:22 DEBUG  Delete 0: delete from ticket where id=?
w2022-03-15 17:58:22 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20408c01]
w2022-03-15 17:58:22 DEBUG Visiting attribute path : client
w2022-03-15 17:58:22 DEBUG Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7609f43c]
w2022-03-15 17:58:22 DEBUG Visiting attribute path : client.firstName
w2022-03-15 17:58:22 DEBUG Visiting attribute path : client.lastName
w2022-03-15 17:58:22 DEBUG Visiting attribute path : client.login
w2022-03-15 17:58:22 DEBUG Visiting attribute path : client.password
w2022-03-15 17:58:22 DEBUG Visiting attribute path : client.role
w2022-03-15 17:58:22 DEBUG Visiting attribute path : status
w2022-03-15 17:58:22 DEBUG Visiting attribute path : support
w2022-03-15 17:58:22 DEBUG Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c16e7d0]
w2022-03-15 17:58:22 DEBUG Visiting attribute path : support.firstName
w2022-03-15 17:58:22 DEBUG Visiting attribute path : support.lastName
w2022-03-15 17:58:22 DEBUG Visiting attribute path : support.login
w2022-03-15 17:58:22 DEBUG Visiting attribute path : support.password
w2022-03-15 17:58:22 DEBUG Visiting attribute path : support.role
w2022-03-15 17:58:22 DEBUG Visiting attribute path : title
w2022-03-15 17:58:22 DEBUG Building LoadPlan...
w2022-03-15 17:58:22 DEBUG processing queryspace <gen:0>
w2022-03-15 17:58:22 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.Ticket)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.Ticket, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.Ticket)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:1>, path=ru.edu.helpdesk.entity.Ticket.client)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:2>, path=ru.edu.helpdesk.entity.Ticket.support)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.Ticket)
          - SQL table alias mapping - ticket0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(client)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
          - JOIN (JoinDefinedByMetadata(support)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user2_
                - alias suffix - 2_
                - suffixed key columns - {id1_2_2_}

w2022-03-15 17:58:22 DEBUG Static select for entity ru.edu.helpdesk.entity.Ticket [NONE]: select ticket0_.id as id1_1_0_, ticket0_.client_id as client_i4_1_0_, ticket0_.status as status2_1_0_, ticket0_.support_id as support_5_1_0_, ticket0_.title as title3_1_0_, user1_.id as id1_2_1_, user1_.first_name as first_na2_2_1_, user1_.last_name as last_nam3_2_1_, user1_.login as login4_2_1_, user1_.password as password5_2_1_, user1_.role as role6_2_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id left outer join user user2_ on ticket0_.support_id=user2_.id where ticket0_.id=?
w2022-03-15 17:58:22 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.Comment
w2022-03-15 17:58:22 DEBUG  Version select: select id from comment where id =?
w2022-03-15 17:58:22 DEBUG  Snapshot select: select comment_.id, comment_.message as message2_0_, comment_.ticket_id as ticket_i3_0_, comment_.user_id as user_id4_0_ from comment comment_ where comment_.id=?
w2022-03-15 17:58:22 DEBUG  Insert 0: insert into comment (message, ticket_id, user_id, id) values (?, ?, ?, ?)
w2022-03-15 17:58:22 DEBUG  Update 0: update comment set message=?, ticket_id=?, user_id=? where id=?
w2022-03-15 17:58:22 DEBUG  Delete 0: delete from comment where id=?
w2022-03-15 17:58:22 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f6cb9a]
w2022-03-15 17:58:22 DEBUG Visiting attribute path : message
w2022-03-15 17:58:22 DEBUG Visiting attribute path : ticket
w2022-03-15 17:58:22 DEBUG Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25fd7800]
w2022-03-15 17:58:22 DEBUG Visiting attribute path : ticket.client
w2022-03-15 17:58:22 DEBUG Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32a62b28]
w2022-03-15 17:58:22 DEBUG Visiting attribute path : ticket.client.firstName
w2022-03-15 17:58:22 DEBUG Visiting attribute path : ticket.client.lastName
w2022-03-15 17:58:22 DEBUG Visiting attribute path : ticket.client.login
w2022-03-15 17:58:22 DEBUG Visiting attribute path : ticket.client.password
w2022-03-15 17:58:22 DEBUG Visiting attribute path : ticket.client.role
w2022-03-15 17:58:22 DEBUG Visiting attribute path : ticket.status
w2022-03-15 17:58:22 DEBUG Visiting attribute path : ticket.support
w2022-03-15 17:58:22 DEBUG Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74d026da]
w2022-03-15 17:58:22 DEBUG Visiting attribute path : ticket.support.firstName
w2022-03-15 17:58:22 DEBUG Visiting attribute path : ticket.support.lastName
w2022-03-15 17:58:22 DEBUG Visiting attribute path : ticket.support.login
w2022-03-15 17:58:22 DEBUG Visiting attribute path : ticket.support.password
w2022-03-15 17:58:22 DEBUG Visiting attribute path : ticket.support.role
w2022-03-15 17:58:22 DEBUG Visiting attribute path : ticket.title
w2022-03-15 17:58:22 DEBUG Visiting attribute path : user
w2022-03-15 17:58:22 DEBUG Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@aba2c4f]
w2022-03-15 17:58:22 DEBUG Visiting attribute path : user.firstName
w2022-03-15 17:58:22 DEBUG Visiting attribute path : user.lastName
w2022-03-15 17:58:22 DEBUG Visiting attribute path : user.login
w2022-03-15 17:58:22 DEBUG Visiting attribute path : user.password
w2022-03-15 17:58:22 DEBUG Visiting attribute path : user.role
w2022-03-15 17:58:22 DEBUG Building LoadPlan...
w2022-03-15 17:58:22 DEBUG processing queryspace <gen:0>
w2022-03-15 17:58:22 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.Comment)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.Comment, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.Comment)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.Ticket, querySpaceUid=<gen:1>, path=ru.edu.helpdesk.entity.Comment.ticket)
             - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:2>, path=ru.edu.helpdesk.entity.Comment.ticket.client)
             - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:3>, path=ru.edu.helpdesk.entity.Comment.ticket.support)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:4>, path=ru.edu.helpdesk.entity.Comment.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(ticket)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ru.edu.helpdesk.entity.Ticket)
                - SQL table alias mapping - ticket1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(client)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=ru.edu.helpdesk.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}
                - JOIN (JoinDefinedByMetadata(support)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=ru.edu.helpdesk.entity.User)
                      - SQL table alias mapping - user3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_2_3_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user4_
                - alias suffix - 4_
                - suffixed key columns - {id1_2_4_}

w2022-03-15 17:58:22 DEBUG Static select for entity ru.edu.helpdesk.entity.Comment [NONE]: select comment0_.id as id1_0_0_, comment0_.message as message2_0_0_, comment0_.ticket_id as ticket_i3_0_0_, comment0_.user_id as user_id4_0_0_, ticket1_.id as id1_1_1_, ticket1_.client_id as client_i4_1_1_, ticket1_.status as status2_1_1_, ticket1_.support_id as support_5_1_1_, ticket1_.title as title3_1_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_, user3_.id as id1_2_3_, user3_.first_name as first_na2_2_3_, user3_.last_name as last_nam3_2_3_, user3_.login as login4_2_3_, user3_.password as password5_2_3_, user3_.role as role6_2_3_, user4_.id as id1_2_4_, user4_.first_name as first_na2_2_4_, user4_.last_name as last_nam3_2_4_, user4_.login as login4_2_4_, user4_.password as password5_2_4_, user4_.role as role6_2_4_ from comment comment0_ left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id left outer join user user2_ on ticket1_.client_id=user2_.id left outer join user user3_ on ticket1_.support_id=user3_.id left outer join user user4_ on comment0_.user_id=user4_.id where comment0_.id=?
w2022-03-15 17:58:22 DEBUG drop table if exists comment
w2022-03-15 17:58:22 DEBUG drop table if exists hibernate_sequence
w2022-03-15 17:58:22 DEBUG drop table if exists ticket
w2022-03-15 17:58:22 DEBUG drop table if exists user
w2022-03-15 17:58:22 DEBUG create table comment (id bigint not null, message varchar(255) not null, ticket_id bigint, user_id bigint, primary key (id))
w2022-03-15 17:58:22 DEBUG create table hibernate_sequence (next_val bigint)
w2022-03-15 17:58:22 DEBUG insert into hibernate_sequence values ( 1 )
w2022-03-15 17:58:22 DEBUG create table ticket (id bigint not null, status integer, title varchar(255) not null, client_id bigint, support_id bigint, primary key (id))
w2022-03-15 17:58:22 DEBUG create table user (id bigint not null, first_name varchar(255), last_name varchar(255), login varchar(255) not null, password varchar(255) not null, role integer, primary key (id))
w2022-03-15 17:58:22 INFO  HHH000476: Executing import script 'file:/C:/Users/%d0%9e%d0%bb%d1%8c%d0%b3%d0%b0/Desktop/Java/Project/Project1/helpdeskproject/target/classes/data/import.sql'
w2022-03-15 17:58:22 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (1, 'admin', 'admin', 'admin', 'admin', 0)
w2022-03-15 17:58:22 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (2, 'support', 'support', 'support', 'support', 1)
w2022-03-15 17:58:22 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (3, 'user1', 'user1', 'user1', 'user1', 2)
w2022-03-15 17:58:22 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (4, 'user2', 'user2', 'user2', 'user2', 2)
w2022-03-15 17:58:22 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (1, 1, 'Hello user1',1, 2)
w2022-03-15 17:58:22 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (2, 0, 'Title2', 1, NULL)
w2022-03-15 17:58:22 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (3, 0, 'Message user2', 4, NULL)
w2022-03-15 17:58:22 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (1, "comment ticket1", 1, 3)
w2022-03-15 17:58:22 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (2, "comment ticket2", 2, 3)
w2022-03-15 17:58:22 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (3, "comment ticket11", 1, 2)
w2022-03-15 17:58:22 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (4, "comment ticket111", 1, 2)
w2022-03-15 17:58:22 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (5, "comment ticket22", 2, 2)
w2022-03-15 17:58:22 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (6, "comment ticket3", 3, 4)
w2022-03-15 17:58:22 DEBUG UPDATE hibernate_sequence SET next_val = 8 WHERE next_val = 1
w2022-03-15 17:58:22 INFO  HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
w2022-03-15 17:58:22 DEBUG Checking 0 named HQL queries
w2022-03-15 17:58:22 DEBUG Checking 0 named SQL queries
w2022-03-15 17:58:22 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 17:58:22 DEBUG Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@69c46ef3
w2022-03-15 17:58:22 DEBUG Registering SessionFactory: 67c6659a-db59-4b31-8d0a-7334f2396777 (<unnamed>)
w2022-03-15 17:58:22 DEBUG Not binding SessionFactory to JNDI, no JNDI name configured
w2022-03-15 17:58:22 DEBUG Statistics initialized [enabled=false]
w2022-03-15 17:58:22 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 17:58:22 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 17:58:22 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 17:58:37 DEBUG Rendered criteria query -> select generatedAlias0 from Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 17:58:37 DEBUG QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@7173d0cd
w2022-03-15 17:58:37 DEBUG parse() - HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 17:58:37 DEBUG throwQueryException() : no errors
w2022-03-15 17:58:37 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[IDENT] Node: 'ru'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'edu'
    |  |  |  |  |  |  \-[IDENT] Node: 'helpdesk'
    |  |  |  |  |  \-[IDENT] Node: 'entity'
    |  |  |  |  \-[IDENT] Node: 'Ticket'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'client'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias1'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

w2022-03-15 17:58:37 DEBUG select << begin [level=1, statement=select]
w2022-03-15 17:58:37 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.Ticket (generatedAlias0) -> ticket0_
w2022-03-15 17:58:37 DEBUG Resolved : generatedAlias0 -> ticket0_.id
w2022-03-15 17:58:37 DEBUG getDataType() : client -> org.hibernate.type.ManyToOneType(ru.edu.helpdesk.entity.User)
w2022-03-15 17:58:37 DEBUG dereferenceEntityJoin() : generating join for client in ru.edu.helpdesk.entity.Ticket (generatedAlias1) parent = [ {null} ]
w2022-03-15 17:58:37 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.User (generatedAlias1) -> user1_
w2022-03-15 17:58:37 DEBUG addJoinByPathMap() : generatedAlias0.client -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}
w2022-03-15 17:58:37 DEBUG Resolved : generatedAlias0.client -> ticket0_.client_id
w2022-03-15 17:58:37 DEBUG createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'user user1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Ticket.client,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}

w2022-03-15 17:58:37 DEBUG Resolved : generatedAlias0 -> ticket0_.id
w2022-03-15 17:58:37 DEBUG Resolved : generatedAlias1 -> user1_.id
w2022-03-15 17:58:37 DEBUG getDataType() : id -> org.hibernate.type.LongType@2addfa3d
w2022-03-15 17:58:37 DEBUG Resolved : generatedAlias1.id -> user1_.id
w2022-03-15 17:58:37 DEBUG select : finishing up [level=1, statement=select]
w2022-03-15 17:58:37 DEBUG processQuery() :  ( SELECT ( {select clause} ticket0_.id ) ( FromClause{level=1} ( ticket ticket0_ user user1_ ) ) ( where ( = ( user1_.id user1_.id id ) ? ) ) )
w2022-03-15 17:58:37 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Ticket): [ticket]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.Ticket)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.User)
          | path: generatedAlias1.id
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.User)
          |  | originalText: generatedAlias1
          |  \-IdentNode
          |    persister: null
          |    originalText: id
          \-ParameterNode

w2022-03-15 17:58:37 DEBUG Using FROM fragment [ticket ticket0_]
w2022-03-15 17:58:37 DEBUG Using FROM fragment [left outer join user user1_ on ticket0_.client_id=user1_.id]
w2022-03-15 17:58:37 DEBUG select >> end [level=1, statement=select]
w2022-03-15 17:58:37 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (ticket,user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'ticket0_.id as id1_1_' {alias=generatedAlias0, className=ru.edu.helpdesk.entity.Ticket, tableAlias=ticket0_}
    |  \-[SQL_TOKEN] SqlFragment: 'ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[ticket0_, user1_], fromElementsByPath=[generatedAlias0.client], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'ticket ticket0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=ticket,tableAlias=ticket0_,origin=null,columns={,className=ru.edu.helpdesk.entity.Ticket}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join user user1_ on ticket0_.client_id=user1_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Ticket.client,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user1_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias1.id,tableAlias=user1_,className=ru.edu.helpdesk.entity.User,classAlias=generatedAlias1}
          |  +-[ALIAS_REF] IdentNode: 'user1_.id' {alias=generatedAlias1, className=ru.edu.helpdesk.entity.User, tableAlias=user1_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LongType@2addfa3d}

w2022-03-15 17:58:37 DEBUG throwQueryException() : no errors
w2022-03-15 17:58:37 DEBUG HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 17:58:37 DEBUG SQL: select ticket0_.id as id1_1_, ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id where user1_.id=?
w2022-03-15 17:58:37 DEBUG throwQueryException() : no errors
w2022-03-15 17:58:37 DEBUG select ticket0_.id as id1_1_, ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id where user1_.id=?
w2022-03-15 17:58:38 DEBUG Result set row: 0
w2022-03-15 17:58:38 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 17:58:38 DEBUG Result set row: 1
w2022-03-15 17:58:38 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 17:58:38 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 17:58:38 DEBUG Processing attribute `client` : value = 1
w2022-03-15 17:58:38 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 17:58:38 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 17:58:38 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 17:58:38 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#1]
w2022-03-15 17:58:38 DEBUG Processing attribute `firstName` : value = admin
w2022-03-15 17:58:38 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 17:58:38 DEBUG Processing attribute `lastName` : value = admin
w2022-03-15 17:58:38 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 17:58:38 DEBUG Processing attribute `login` : value = admin
w2022-03-15 17:58:38 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 17:58:38 DEBUG Processing attribute `password` : value = admin
w2022-03-15 17:58:38 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 17:58:38 DEBUG Processing attribute `role` : value = ADMIN
w2022-03-15 17:58:38 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 17:58:38 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#1]
w2022-03-15 17:58:38 DEBUG Done entity load : ru.edu.helpdesk.entity.User#1
w2022-03-15 17:58:38 DEBUG Processing attribute `status` : value = WORKING
w2022-03-15 17:58:38 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 17:58:38 DEBUG Processing attribute `support` : value = 2
w2022-03-15 17:58:38 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 17:58:38 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 17:58:38 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 17:58:38 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#2]
w2022-03-15 17:58:38 DEBUG Processing attribute `firstName` : value = support
w2022-03-15 17:58:38 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 17:58:38 DEBUG Processing attribute `lastName` : value = support
w2022-03-15 17:58:38 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 17:58:38 DEBUG Processing attribute `login` : value = support
w2022-03-15 17:58:38 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 17:58:38 DEBUG Processing attribute `password` : value = support
w2022-03-15 17:58:38 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 17:58:38 DEBUG Processing attribute `role` : value = SUPPORT
w2022-03-15 17:58:38 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 17:58:38 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#2]
w2022-03-15 17:58:38 DEBUG Done entity load : ru.edu.helpdesk.entity.User#2
w2022-03-15 17:58:38 DEBUG Processing attribute `title` : value = Hello user1
w2022-03-15 17:58:38 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 17:58:38 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 17:58:38 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 17:58:38 DEBUG Processing attribute `client` : value = 1
w2022-03-15 17:58:38 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 17:58:38 DEBUG Processing attribute `status` : value = OPEN
w2022-03-15 17:58:38 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 17:58:38 DEBUG Processing attribute `support` : value = null
w2022-03-15 17:58:38 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 17:58:38 DEBUG Processing attribute `title` : value = Title2
w2022-03-15 17:58:38 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 17:58:38 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 17:58:49 DEBUG Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.login=:param0
w2022-03-15 17:58:49 DEBUG parse() - HQL: select generatedAlias0 from ru.edu.helpdesk.entity.User as generatedAlias0 where generatedAlias0.login=:param0
w2022-03-15 17:58:49 DEBUG throwQueryException() : no errors
w2022-03-15 17:58:49 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'ru'
    |  |     |  |  |  |  \-[IDENT] Node: 'edu'
    |  |     |  |  |  \-[IDENT] Node: 'helpdesk'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'login'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

w2022-03-15 17:58:49 DEBUG select << begin [level=1, statement=select]
w2022-03-15 17:58:49 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.User (generatedAlias0) -> user0_
w2022-03-15 17:58:49 DEBUG Resolved : generatedAlias0 -> user0_.id
w2022-03-15 17:58:49 DEBUG Resolved : generatedAlias0 -> user0_.id
w2022-03-15 17:58:49 DEBUG getDataType() : login -> org.hibernate.type.StringType@2844d463
w2022-03-15 17:58:49 DEBUG Resolved : generatedAlias0.login -> user0_.login
w2022-03-15 17:58:49 DEBUG select : finishing up [level=1, statement=select]
w2022-03-15 17:58:49 DEBUG processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) ( where ( = ( user0_.login user0_.id login ) ? ) ) )
w2022-03-15 17:58:49 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity User): [user]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.User)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.User)
          | path: generatedAlias0.login
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.User)
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    originalText: login
          \-ParameterNode

w2022-03-15 17:58:49 DEBUG Using FROM fragment [user user0_]
w2022-03-15 17:58:49 DEBUG select >> end [level=1, statement=select]
w2022-03-15 17:58:49 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_2_' {alias=generatedAlias0, className=ru.edu.helpdesk.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.first_name as first_na2_2_, user0_.last_name as last_nam3_2_, user0_.login as login4_2_, user0_.password as password5_2_, user0_.role as role6_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=ru.edu.helpdesk.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.login' {propertyName=login,dereferenceType=PRIMITIVE,getPropertyPath=login,path=generatedAlias0.login,tableAlias=user0_,className=ru.edu.helpdesk.entity.User,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=generatedAlias0, className=ru.edu.helpdesk.entity.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'login' {originalText=login}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@2844d463}

w2022-03-15 17:58:49 DEBUG throwQueryException() : no errors
w2022-03-15 17:58:49 DEBUG HQL: select generatedAlias0 from ru.edu.helpdesk.entity.User as generatedAlias0 where generatedAlias0.login=:param0
w2022-03-15 17:58:49 DEBUG SQL: select user0_.id as id1_2_, user0_.first_name as first_na2_2_, user0_.last_name as last_nam3_2_, user0_.login as login4_2_, user0_.password as password5_2_, user0_.role as role6_2_ from user user0_ where user0_.login=?
w2022-03-15 17:58:49 DEBUG throwQueryException() : no errors
w2022-03-15 17:58:49 DEBUG select user0_.id as id1_2_, user0_.first_name as first_na2_2_, user0_.last_name as last_nam3_2_, user0_.login as login4_2_, user0_.password as password5_2_, user0_.role as role6_2_ from user user0_ where user0_.login=?
w2022-03-15 17:58:49 DEBUG Result set row: 0
w2022-03-15 17:58:49 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.User#1]
w2022-03-15 17:58:49 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#1]
w2022-03-15 17:58:49 DEBUG Processing attribute `firstName` : value = admin
w2022-03-15 17:58:49 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 17:58:49 DEBUG Processing attribute `lastName` : value = admin
w2022-03-15 17:58:49 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 17:58:49 DEBUG Processing attribute `login` : value = admin
w2022-03-15 17:58:49 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 17:58:49 DEBUG Processing attribute `password` : value = admin
w2022-03-15 17:58:49 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 17:58:49 DEBUG Processing attribute `role` : value = ADMIN
w2022-03-15 17:58:49 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 17:58:49 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#1]
w2022-03-15 17:58:49 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 17:58:49 DEBUG begin
w2022-03-15 17:58:49 DEBUG committing
w2022-03-15 17:58:49 DEBUG Rendered criteria query -> select generatedAlias0 from Comment as generatedAlias0 left join generatedAlias0.ticket as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 17:58:49 DEBUG parse() - HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Comment as generatedAlias0 left join generatedAlias0.ticket as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 17:58:49 DEBUG throwQueryException() : no errors
w2022-03-15 17:58:49 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[IDENT] Node: 'ru'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'edu'
    |  |  |  |  |  |  \-[IDENT] Node: 'helpdesk'
    |  |  |  |  |  \-[IDENT] Node: 'entity'
    |  |  |  |  \-[IDENT] Node: 'Comment'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'ticket'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias1'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

w2022-03-15 17:58:49 DEBUG select << begin [level=1, statement=select]
w2022-03-15 17:58:49 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.Comment (generatedAlias0) -> comment0_
w2022-03-15 17:58:49 DEBUG Resolved : generatedAlias0 -> comment0_.id
w2022-03-15 17:58:49 DEBUG getDataType() : ticket -> org.hibernate.type.ManyToOneType(ru.edu.helpdesk.entity.Ticket)
w2022-03-15 17:58:49 DEBUG dereferenceEntityJoin() : generating join for ticket in ru.edu.helpdesk.entity.Comment (generatedAlias1) parent = [ {null} ]
w2022-03-15 17:58:49 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.Ticket (generatedAlias1) -> ticket1_
w2022-03-15 17:58:49 DEBUG addJoinByPathMap() : generatedAlias0.ticket -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=ticket,tableAlias=ticket1_,origin=comment comment0_,columns={comment0_.ticket_id,className=ru.edu.helpdesk.entity.Ticket}}
w2022-03-15 17:58:49 DEBUG Resolved : generatedAlias0.ticket -> comment0_.ticket_id
w2022-03-15 17:58:49 DEBUG createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'ticket ticket1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Comment.ticket,tableName=ticket,tableAlias=ticket1_,origin=comment comment0_,columns={comment0_.ticket_id,className=ru.edu.helpdesk.entity.Ticket}}

w2022-03-15 17:58:49 DEBUG Resolved : generatedAlias0 -> comment0_.id
w2022-03-15 17:58:49 DEBUG Resolved : generatedAlias1 -> ticket1_.id
w2022-03-15 17:58:49 DEBUG getDataType() : id -> org.hibernate.type.LongType@2addfa3d
w2022-03-15 17:58:49 DEBUG Resolved : generatedAlias1.id -> ticket1_.id
w2022-03-15 17:58:49 DEBUG select : finishing up [level=1, statement=select]
w2022-03-15 17:58:49 DEBUG processQuery() :  ( SELECT ( {select clause} comment0_.id ) ( FromClause{level=1} ( comment comment0_ ticket ticket1_ ) ) ( where ( = ( ticket1_.id ticket1_.id id ) ? ) ) )
w2022-03-15 17:58:49 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Comment): [comment]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.Comment)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.Ticket)
          | path: generatedAlias1.id
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.Ticket)
          |  | originalText: generatedAlias1
          |  \-IdentNode
          |    persister: null
          |    originalText: id
          \-ParameterNode

w2022-03-15 17:58:49 DEBUG Using FROM fragment [comment comment0_]
w2022-03-15 17:58:49 DEBUG Using FROM fragment [left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id]
w2022-03-15 17:58:49 DEBUG select >> end [level=1, statement=select]
w2022-03-15 17:58:49 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (ticket,comment)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'comment0_.id as id1_0_' {alias=generatedAlias0, className=ru.edu.helpdesk.entity.Comment, tableAlias=comment0_}
    |  \-[SQL_TOKEN] SqlFragment: 'comment0_.message as message2_0_, comment0_.ticket_id as ticket_i3_0_, comment0_.user_id as user_id4_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[ticket1_, comment0_], fromElementsByPath=[generatedAlias0.ticket], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'comment comment0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=comment,tableAlias=comment0_,origin=null,columns={,className=ru.edu.helpdesk.entity.Comment}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Comment.ticket,tableName=ticket,tableAlias=ticket1_,origin=comment comment0_,columns={comment0_.ticket_id,className=ru.edu.helpdesk.entity.Ticket}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'ticket1_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias1.id,tableAlias=ticket1_,className=ru.edu.helpdesk.entity.Ticket,classAlias=generatedAlias1}
          |  +-[ALIAS_REF] IdentNode: 'ticket1_.id' {alias=generatedAlias1, className=ru.edu.helpdesk.entity.Ticket, tableAlias=ticket1_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LongType@2addfa3d}

w2022-03-15 17:58:49 DEBUG throwQueryException() : no errors
w2022-03-15 17:58:49 DEBUG HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Comment as generatedAlias0 left join generatedAlias0.ticket as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 17:58:49 DEBUG SQL: select comment0_.id as id1_0_, comment0_.message as message2_0_, comment0_.ticket_id as ticket_i3_0_, comment0_.user_id as user_id4_0_ from comment comment0_ left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id where ticket1_.id=?
w2022-03-15 17:58:49 DEBUG throwQueryException() : no errors
w2022-03-15 17:58:49 DEBUG select comment0_.id as id1_0_, comment0_.message as message2_0_, comment0_.ticket_id as ticket_i3_0_, comment0_.user_id as user_id4_0_ from comment comment0_ left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id where ticket1_.id=?
w2022-03-15 17:58:49 DEBUG Result set row: 0
w2022-03-15 17:58:49 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Comment#1]
w2022-03-15 17:58:49 DEBUG Result set row: 1
w2022-03-15 17:58:49 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Comment#3]
w2022-03-15 17:58:49 DEBUG Result set row: 2
w2022-03-15 17:58:49 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Comment#4]
w2022-03-15 17:58:49 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Comment#1]
w2022-03-15 17:58:49 DEBUG Processing attribute `message` : value = comment ticket1
w2022-03-15 17:58:49 DEBUG Attribute (`message`)  - enhanced for lazy-loading? - false
w2022-03-15 17:58:49 DEBUG Processing attribute `ticket` : value = 1
w2022-03-15 17:58:49 DEBUG Attribute (`ticket`)  - enhanced for lazy-loading? - false
w2022-03-15 17:58:49 DEBUG select ticket0_.id as id1_1_0_, ticket0_.client_id as client_i4_1_0_, ticket0_.status as status2_1_0_, ticket0_.support_id as support_5_1_0_, ticket0_.title as title3_1_0_, user1_.id as id1_2_1_, user1_.first_name as first_na2_2_1_, user1_.last_name as last_nam3_2_1_, user1_.login as login4_2_1_, user1_.password as password5_2_1_, user1_.role as role6_2_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id left outer join user user2_ on ticket0_.support_id=user2_.id where ticket0_.id=?
w2022-03-15 17:58:49 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 17:58:49 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 17:58:49 DEBUG Processing attribute `client` : value = 1
w2022-03-15 17:58:49 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 17:58:49 DEBUG Processing attribute `status` : value = WORKING
w2022-03-15 17:58:49 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 17:58:49 DEBUG Processing attribute `support` : value = 2
w2022-03-15 17:58:49 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 17:58:49 DEBUG Processing attribute `title` : value = Hello user1
w2022-03-15 17:58:49 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 17:58:49 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 17:58:49 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#1]
w2022-03-15 17:58:49 DEBUG Processing attribute `firstName` : value = admin
w2022-03-15 17:58:49 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 17:58:49 DEBUG Processing attribute `lastName` : value = admin
w2022-03-15 17:58:49 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 17:58:49 DEBUG Processing attribute `login` : value = admin
w2022-03-15 17:58:49 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 17:58:49 DEBUG Processing attribute `password` : value = admin
w2022-03-15 17:58:49 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 17:58:49 DEBUG Processing attribute `role` : value = ADMIN
w2022-03-15 17:58:49 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 17:58:49 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#1]
w2022-03-15 17:58:49 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#2]
w2022-03-15 17:58:49 DEBUG Processing attribute `firstName` : value = support
w2022-03-15 17:58:49 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 17:58:49 DEBUG Processing attribute `lastName` : value = support
w2022-03-15 17:58:49 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 17:58:49 DEBUG Processing attribute `login` : value = support
w2022-03-15 17:58:49 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 17:58:49 DEBUG Processing attribute `password` : value = support
w2022-03-15 17:58:49 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 17:58:49 DEBUG Processing attribute `role` : value = SUPPORT
w2022-03-15 17:58:49 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 17:58:49 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#2]
w2022-03-15 17:58:49 DEBUG Done entity load : ru.edu.helpdesk.entity.Ticket#1
w2022-03-15 17:58:49 DEBUG Processing attribute `user` : value = 3
w2022-03-15 17:58:49 DEBUG Attribute (`user`)  - enhanced for lazy-loading? - false
w2022-03-15 17:58:49 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 17:58:49 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 17:58:49 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#3]
w2022-03-15 17:58:49 DEBUG Processing attribute `firstName` : value = user1
w2022-03-15 17:58:49 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 17:58:49 DEBUG Processing attribute `lastName` : value = user1
w2022-03-15 17:58:49 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 17:58:49 DEBUG Processing attribute `login` : value = user1
w2022-03-15 17:58:49 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 17:58:49 DEBUG Processing attribute `password` : value = user1
w2022-03-15 17:58:49 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 17:58:49 DEBUG Processing attribute `role` : value = USER
w2022-03-15 17:58:49 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 17:58:49 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#3]
w2022-03-15 17:58:49 DEBUG Done entity load : ru.edu.helpdesk.entity.User#3
w2022-03-15 17:58:49 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Comment#1]
w2022-03-15 17:58:49 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Comment#3]
w2022-03-15 17:58:49 DEBUG Processing attribute `message` : value = comment ticket11
w2022-03-15 17:58:49 DEBUG Attribute (`message`)  - enhanced for lazy-loading? - false
w2022-03-15 17:58:49 DEBUG Processing attribute `ticket` : value = 1
w2022-03-15 17:58:49 DEBUG Attribute (`ticket`)  - enhanced for lazy-loading? - false
w2022-03-15 17:58:49 DEBUG Processing attribute `user` : value = 2
w2022-03-15 17:58:49 DEBUG Attribute (`user`)  - enhanced for lazy-loading? - false
w2022-03-15 17:58:49 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Comment#3]
w2022-03-15 17:58:49 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Comment#4]
w2022-03-15 17:58:49 DEBUG Processing attribute `message` : value = comment ticket111
w2022-03-15 17:58:49 DEBUG Attribute (`message`)  - enhanced for lazy-loading? - false
w2022-03-15 17:58:49 DEBUG Processing attribute `ticket` : value = 1
w2022-03-15 17:58:49 DEBUG Attribute (`ticket`)  - enhanced for lazy-loading? - false
w2022-03-15 17:58:49 DEBUG Processing attribute `user` : value = 2
w2022-03-15 17:58:49 DEBUG Attribute (`user`)  - enhanced for lazy-loading? - false
w2022-03-15 17:58:49 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Comment#4]
w2022-03-15 17:59:48 DEBUG Logging Provider: org.jboss.logging.Log4j2LoggerProvider
w2022-03-15 17:59:48 DEBUG PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@6c202846
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/%d0%9e%d0%bb%d1%8c%d0%b3%d0%b0/Desktop/Java/Project/Project1/helpdeskproject/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		ru.edu.helpdesk.entity.Comment
		ru.edu.helpdesk.entity.Ticket
		ru.edu.helpdesk.entity.User]
	Mapping files names []
	Properties []
w2022-03-15 17:59:48 DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
w2022-03-15 17:59:48 DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
w2022-03-15 17:59:48 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
w2022-03-15 17:59:48 INFO  HHH000412: Hibernate ORM core version 5.6.5.Final
w2022-03-15 17:59:48 DEBUG HHH000206: hibernate.properties not found
w2022-03-15 17:59:49 DEBUG Overriding existing service binding [org.hibernate.secure.spi.JaccService]
w2022-03-15 17:59:49 DEBUG Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
w2022-03-15 17:59:49 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
w2022-03-15 17:59:49 INFO  HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
w2022-03-15 17:59:49 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@13ec6689
w2022-03-15 17:59:49 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@13ec6689
w2022-03-15 17:59:49 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@13ec6689
w2022-03-15 17:59:49 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2b47f39d
w2022-03-15 17:59:49 DEBUG Adding type registration true_false -> org.hibernate.type.TrueFalseType@6f173842
w2022-03-15 17:59:49 DEBUG Adding type registration yes_no -> org.hibernate.type.YesNoType@6d2c3b3c
w2022-03-15 17:59:49 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@78dcf88e
w2022-03-15 17:59:49 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@78dcf88e
w2022-03-15 17:59:49 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@78dcf88e
w2022-03-15 17:59:49 DEBUG Adding type registration character -> org.hibernate.type.CharacterType@4ca058d0
w2022-03-15 17:59:49 DEBUG Adding type registration char -> org.hibernate.type.CharacterType@4ca058d0
w2022-03-15 17:59:49 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4ca058d0
w2022-03-15 17:59:49 DEBUG Adding type registration short -> org.hibernate.type.ShortType@13b33076
w2022-03-15 17:59:49 DEBUG Adding type registration short -> org.hibernate.type.ShortType@13b33076
w2022-03-15 17:59:49 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.ShortType@13b33076
w2022-03-15 17:59:49 DEBUG Adding type registration integer -> org.hibernate.type.IntegerType@51a5d1cc
w2022-03-15 17:59:49 DEBUG Adding type registration int -> org.hibernate.type.IntegerType@51a5d1cc
w2022-03-15 17:59:49 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@51a5d1cc
w2022-03-15 17:59:49 DEBUG Adding type registration long -> org.hibernate.type.LongType@5c343b43
w2022-03-15 17:59:49 DEBUG Adding type registration long -> org.hibernate.type.LongType@5c343b43
w2022-03-15 17:59:49 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.LongType@5c343b43
w2022-03-15 17:59:49 DEBUG Adding type registration float -> org.hibernate.type.FloatType@4c32479b
w2022-03-15 17:59:49 DEBUG Adding type registration float -> org.hibernate.type.FloatType@4c32479b
w2022-03-15 17:59:49 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4c32479b
w2022-03-15 17:59:49 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@fe1722b
w2022-03-15 17:59:49 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@fe1722b
w2022-03-15 17:59:49 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@fe1722b
w2022-03-15 17:59:49 DEBUG Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3bcf2da6
w2022-03-15 17:59:49 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3bcf2da6
w2022-03-15 17:59:49 DEBUG Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1ff35a2c
w2022-03-15 17:59:49 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1ff35a2c
w2022-03-15 17:59:49 DEBUG Adding type registration string -> org.hibernate.type.StringType@35876f1d
w2022-03-15 17:59:49 DEBUG Adding type registration java.lang.String -> org.hibernate.type.StringType@35876f1d
w2022-03-15 17:59:49 DEBUG Adding type registration nstring -> org.hibernate.type.StringNVarcharType@27427ccb
w2022-03-15 17:59:49 DEBUG Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5d3908f9
w2022-03-15 17:59:49 DEBUG Adding type registration url -> org.hibernate.type.UrlType@72ffeac2
w2022-03-15 17:59:49 DEBUG Adding type registration java.net.URL -> org.hibernate.type.UrlType@72ffeac2
w2022-03-15 17:59:49 DEBUG Adding type registration Duration -> org.hibernate.type.DurationType@d0839ba
w2022-03-15 17:59:49 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.DurationType@d0839ba
w2022-03-15 17:59:49 DEBUG Adding type registration Instant -> org.hibernate.type.InstantType@3b9ae356
w2022-03-15 17:59:49 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3b9ae356
w2022-03-15 17:59:49 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@77cda614
w2022-03-15 17:59:49 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@77cda614
w2022-03-15 17:59:49 DEBUG Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3e4f686b
w2022-03-15 17:59:49 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3e4f686b
w2022-03-15 17:59:49 DEBUG Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@21e30d9a
w2022-03-15 17:59:49 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@21e30d9a
w2022-03-15 17:59:49 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1aec8af1
w2022-03-15 17:59:49 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1aec8af1
w2022-03-15 17:59:49 DEBUG Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@6eb9a92b
w2022-03-15 17:59:49 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@6eb9a92b
w2022-03-15 17:59:49 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@21d1a6c5
w2022-03-15 17:59:49 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@21d1a6c5
w2022-03-15 17:59:49 DEBUG Adding type registration date -> org.hibernate.type.DateType@750acf6d
w2022-03-15 17:59:49 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.DateType@750acf6d
w2022-03-15 17:59:49 DEBUG Adding type registration time -> org.hibernate.type.TimeType@4db224b1
w2022-03-15 17:59:49 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4db224b1
w2022-03-15 17:59:49 DEBUG Adding type registration timestamp -> org.hibernate.type.TimestampType@7dadc5f
w2022-03-15 17:59:49 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7dadc5f
w2022-03-15 17:59:49 DEBUG Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7dadc5f
w2022-03-15 17:59:49 DEBUG Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@735849c5
w2022-03-15 17:59:49 DEBUG Adding type registration calendar -> org.hibernate.type.CalendarType@75b7d705
w2022-03-15 17:59:49 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@75b7d705
w2022-03-15 17:59:49 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@75b7d705
w2022-03-15 17:59:49 DEBUG Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@24bcb1a2
w2022-03-15 17:59:49 DEBUG Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@587213bb
w2022-03-15 17:59:49 DEBUG Adding type registration locale -> org.hibernate.type.LocaleType@31d1d62b
w2022-03-15 17:59:49 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@31d1d62b
w2022-03-15 17:59:49 DEBUG Adding type registration currency -> org.hibernate.type.CurrencyType@6f317db3
w2022-03-15 17:59:49 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6f317db3
w2022-03-15 17:59:49 DEBUG Adding type registration timezone -> org.hibernate.type.TimeZoneType@18f72d9a
w2022-03-15 17:59:49 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@18f72d9a
w2022-03-15 17:59:49 DEBUG Adding type registration class -> org.hibernate.type.ClassType@730c95b3
w2022-03-15 17:59:49 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.ClassType@730c95b3
w2022-03-15 17:59:49 DEBUG Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5ca21884
w2022-03-15 17:59:49 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5ca21884
w2022-03-15 17:59:49 DEBUG Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3b3b67dd
w2022-03-15 17:59:49 DEBUG Adding type registration binary -> org.hibernate.type.BinaryType@2a044d35
w2022-03-15 17:59:49 DEBUG Adding type registration byte[] -> org.hibernate.type.BinaryType@2a044d35
w2022-03-15 17:59:49 DEBUG Adding type registration [B -> org.hibernate.type.BinaryType@2a044d35
w2022-03-15 17:59:49 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@9da3194
w2022-03-15 17:59:49 DEBUG Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@9da3194
w2022-03-15 17:59:49 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@9da3194
w2022-03-15 17:59:49 DEBUG Adding type registration row_version -> org.hibernate.type.RowVersionType@948213a
w2022-03-15 17:59:49 DEBUG Adding type registration image -> org.hibernate.type.ImageType@469172bb
w2022-03-15 17:59:49 DEBUG Adding type registration characters -> org.hibernate.type.CharArrayType@37bb6480
w2022-03-15 17:59:49 DEBUG Adding type registration char[] -> org.hibernate.type.CharArrayType@37bb6480
w2022-03-15 17:59:49 DEBUG Adding type registration [C -> org.hibernate.type.CharArrayType@37bb6480
w2022-03-15 17:59:49 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@46b2956f
w2022-03-15 17:59:49 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@46b2956f
w2022-03-15 17:59:49 DEBUG Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@46b2956f
w2022-03-15 17:59:49 DEBUG Adding type registration text -> org.hibernate.type.TextType@37576934
w2022-03-15 17:59:49 DEBUG Adding type registration ntext -> org.hibernate.type.NTextType@b778f3c
w2022-03-15 17:59:49 DEBUG Adding type registration blob -> org.hibernate.type.BlobType@397667d6
w2022-03-15 17:59:49 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@397667d6
w2022-03-15 17:59:49 DEBUG Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3891edd5
w2022-03-15 17:59:49 DEBUG Adding type registration clob -> org.hibernate.type.ClobType@b73f26f
w2022-03-15 17:59:49 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@b73f26f
w2022-03-15 17:59:49 DEBUG Adding type registration nclob -> org.hibernate.type.NClobType@2a1d17b
w2022-03-15 17:59:49 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2a1d17b
w2022-03-15 17:59:49 DEBUG Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7bf86e05
w2022-03-15 17:59:49 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@248bc008
w2022-03-15 17:59:49 DEBUG Adding type registration serializable -> org.hibernate.type.SerializableType@32fcca61
w2022-03-15 17:59:49 DEBUG Adding type registration object -> org.hibernate.type.ObjectType@4cc3197a
w2022-03-15 17:59:49 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4cc3197a
w2022-03-15 17:59:49 DEBUG Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7ce03a84
w2022-03-15 17:59:49 DEBUG Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@283ce4ab
w2022-03-15 17:59:49 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@50c7aa2f
w2022-03-15 17:59:49 DEBUG Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@567efd13
w2022-03-15 17:59:49 DEBUG Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2bb7c942
w2022-03-15 17:59:49 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@64616923
w2022-03-15 17:59:49 DEBUG Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@99a3152
w2022-03-15 17:59:49 DEBUG Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@282dd317
w2022-03-15 17:59:49 INFO  HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
w2022-03-15 17:59:49 DEBUG Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@43faa171] into BootstrapContext; was [null]
w2022-03-15 17:59:49 DEBUG ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@43faa171) [was null]
w2022-03-15 17:59:49 DEBUG Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@17b5ac3e] into BootstrapContext; was [null]
w2022-03-15 17:59:49 DEBUG Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@2187a346] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@290466ae]
w2022-03-15 17:59:49 DEBUG Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@43faa171]
w2022-03-15 17:59:49 DEBUG ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@43faa171]
w2022-03-15 17:59:49 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
w2022-03-15 17:59:49 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
w2022-03-15 17:59:49 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
w2022-03-15 17:59:49 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
w2022-03-15 17:59:49 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
w2022-03-15 17:59:49 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
w2022-03-15 17:59:49 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
w2022-03-15 17:59:49 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
w2022-03-15 17:59:49 DEBUG Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
w2022-03-15 17:59:49 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
w2022-03-15 17:59:49 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
w2022-03-15 17:59:49 DEBUG Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
w2022-03-15 17:59:49 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
w2022-03-15 17:59:49 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
w2022-03-15 17:59:49 DEBUG Database ->
       name : SQLite
    version : 3.36.0
      major : 3
      minor : 36
w2022-03-15 17:59:49 DEBUG Driver ->
       name : SQLite JDBC
    version : 3.36.0.3
      major : 3
      minor : 36
w2022-03-15 17:59:49 DEBUG JDBC version : 2.1
w2022-03-15 17:59:49 INFO  HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
w2022-03-15 17:59:49 DEBUG JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
w2022-03-15 17:59:49 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
w2022-03-15 17:59:49 DEBUG HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [2] less than 4
w2022-03-15 17:59:49 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5520ae63] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@119c53d7]
w2022-03-15 17:59:49 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
w2022-03-15 17:59:49 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.Comment
w2022-03-15 17:59:49 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 17:59:49 DEBUG Import with entity name Comment
w2022-03-15 17:59:49 DEBUG Bind entity ru.edu.helpdesk.entity.Comment on table comment
w2022-03-15 17:59:49 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 17:59:49 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Comment] is safe
w2022-03-15 17:59:49 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Comment
w2022-03-15 17:59:49 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 17:59:49 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Comment:id]
w2022-03-15 17:59:49 DEBUG building SimpleValue for id
w2022-03-15 17:59:49 DEBUG Building property id
w2022-03-15 17:59:49 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 17:59:49 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=message, insertable=true, updatable=true, unique=false}
w2022-03-15 17:59:49 DEBUG MetadataSourceProcessor property message with lazy=false
w2022-03-15 17:59:49 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Comment:message]
w2022-03-15 17:59:49 DEBUG building SimpleValue for message
w2022-03-15 17:59:49 DEBUG Building property message
w2022-03-15 17:59:49 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 17:59:49 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=ticket, insertable=true, updatable=true, unique=false}
w2022-03-15 17:59:49 DEBUG Building property ticket
w2022-03-15 17:59:49 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 17:59:49 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=user, insertable=true, updatable=true, unique=false}
w2022-03-15 17:59:49 DEBUG Building property user
w2022-03-15 17:59:49 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 17:59:49 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 17:59:49 DEBUG Import with entity name Ticket
w2022-03-15 17:59:49 DEBUG Bind entity ru.edu.helpdesk.entity.Ticket on table ticket
w2022-03-15 17:59:49 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 17:59:49 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Ticket] is safe
w2022-03-15 17:59:49 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Ticket
w2022-03-15 17:59:49 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 17:59:49 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:id]
w2022-03-15 17:59:49 DEBUG building SimpleValue for id
w2022-03-15 17:59:49 DEBUG Building property id
w2022-03-15 17:59:49 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 17:59:49 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 17:59:49 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=client, insertable=true, updatable=true, unique=false}
w2022-03-15 17:59:49 DEBUG Building property client
w2022-03-15 17:59:49 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=status, insertable=true, updatable=true, unique=false}
w2022-03-15 17:59:49 DEBUG MetadataSourceProcessor property status with lazy=false
w2022-03-15 17:59:49 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:status]
w2022-03-15 17:59:49 DEBUG building SimpleValue for status
w2022-03-15 17:59:49 DEBUG Building property status
w2022-03-15 17:59:49 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 17:59:49 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=support, insertable=true, updatable=true, unique=false}
w2022-03-15 17:59:49 DEBUG Building property support
w2022-03-15 17:59:49 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=title, insertable=true, updatable=true, unique=false}
w2022-03-15 17:59:49 DEBUG MetadataSourceProcessor property title with lazy=false
w2022-03-15 17:59:49 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:title]
w2022-03-15 17:59:49 DEBUG building SimpleValue for title
w2022-03-15 17:59:49 DEBUG Building property title
w2022-03-15 17:59:49 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.User
w2022-03-15 17:59:49 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 17:59:49 DEBUG Import with entity name User
w2022-03-15 17:59:49 DEBUG Bind entity ru.edu.helpdesk.entity.User on table user
w2022-03-15 17:59:49 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 17:59:49 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.User] is safe
w2022-03-15 17:59:49 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.User
w2022-03-15 17:59:49 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 17:59:49 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:id]
w2022-03-15 17:59:49 DEBUG building SimpleValue for id
w2022-03-15 17:59:49 DEBUG Building property id
w2022-03-15 17:59:49 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 17:59:49 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
w2022-03-15 17:59:49 DEBUG MetadataSourceProcessor property firstName with lazy=false
w2022-03-15 17:59:49 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:firstName]
w2022-03-15 17:59:49 DEBUG building SimpleValue for firstName
w2022-03-15 17:59:49 DEBUG Building property firstName
w2022-03-15 17:59:49 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
w2022-03-15 17:59:49 DEBUG MetadataSourceProcessor property lastName with lazy=false
w2022-03-15 17:59:49 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:lastName]
w2022-03-15 17:59:49 DEBUG building SimpleValue for lastName
w2022-03-15 17:59:49 DEBUG Building property lastName
w2022-03-15 17:59:49 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=login, insertable=true, updatable=true, unique=false}
w2022-03-15 17:59:49 DEBUG MetadataSourceProcessor property login with lazy=false
w2022-03-15 17:59:49 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:login]
w2022-03-15 17:59:49 DEBUG building SimpleValue for login
w2022-03-15 17:59:49 DEBUG Building property login
w2022-03-15 17:59:49 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
w2022-03-15 17:59:49 DEBUG MetadataSourceProcessor property password with lazy=false
w2022-03-15 17:59:49 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:password]
w2022-03-15 17:59:49 DEBUG building SimpleValue for password
w2022-03-15 17:59:49 DEBUG Building property password
w2022-03-15 17:59:49 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=role, insertable=true, updatable=true, unique=false}
w2022-03-15 17:59:49 DEBUG MetadataSourceProcessor property role with lazy=false
w2022-03-15 17:59:49 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:role]
w2022-03-15 17:59:49 DEBUG building SimpleValue for role
w2022-03-15 17:59:49 DEBUG Building property role
w2022-03-15 17:59:49 DEBUG Starting fillSimpleValue for id
w2022-03-15 17:59:49 DEBUG Starting fillSimpleValue for message
w2022-03-15 17:59:49 DEBUG Starting fillSimpleValue for id
w2022-03-15 17:59:49 DEBUG Starting fillSimpleValue for status
w2022-03-15 17:59:49 DEBUG Starting fillSimpleValue for title
w2022-03-15 17:59:49 DEBUG Starting fillSimpleValue for id
w2022-03-15 17:59:49 DEBUG Starting fillSimpleValue for firstName
w2022-03-15 17:59:49 DEBUG Starting fillSimpleValue for lastName
w2022-03-15 17:59:49 DEBUG Starting fillSimpleValue for login
w2022-03-15 17:59:49 DEBUG Starting fillSimpleValue for password
w2022-03-15 17:59:49 DEBUG Starting fillSimpleValue for role
w2022-03-15 17:59:49 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [comment]
w2022-03-15 17:59:49 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [ticket]
w2022-03-15 17:59:49 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [user]
w2022-03-15 17:59:49 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 17:59:49 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 17:59:49 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 17:59:49 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 17:59:49 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 17:59:49 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 17:59:49 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 17:59:49 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 17:59:49 DEBUG Building session factory
w2022-03-15 17:59:49 DEBUG SessionFactory name : null
w2022-03-15 17:59:49 DEBUG Automatic flush during beforeCompletion(): enabled
w2022-03-15 17:59:49 DEBUG Automatic session close at end of transaction: disabled
w2022-03-15 17:59:49 DEBUG Statistics: disabled
w2022-03-15 17:59:49 DEBUG Deleted entity synthetic identifier rollback: disabled
w2022-03-15 17:59:49 DEBUG Default entity-mode: pojo
w2022-03-15 17:59:49 DEBUG Check Nullability in Core (should be disabled when Bean Validation is on): enabled
w2022-03-15 17:59:49 DEBUG Allow initialization of lazy state outside session : disabled
w2022-03-15 17:59:49 DEBUG Using BatchFetchStyle : LEGACY
w2022-03-15 17:59:49 DEBUG Default batch fetch size: -1
w2022-03-15 17:59:49 DEBUG Maximum outer join fetch depth: null
w2022-03-15 17:59:49 DEBUG Default null ordering: NONE
w2022-03-15 17:59:49 DEBUG Order SQL updates by primary key: disabled
w2022-03-15 17:59:49 DEBUG Order SQL inserts for batching: disabled
w2022-03-15 17:59:49 DEBUG multi-tenancy strategy : NONE
w2022-03-15 17:59:49 DEBUG JTA Track by Thread: enabled
w2022-03-15 17:59:49 DEBUG Query language substitutions: {}
w2022-03-15 17:59:49 DEBUG Named query checking : enabled
w2022-03-15 17:59:49 DEBUG Second-level cache: disabled
w2022-03-15 17:59:49 DEBUG Second-level query cache: disabled
w2022-03-15 17:59:49 DEBUG Second-level query cache factory: null
w2022-03-15 17:59:49 DEBUG Second-level cache region prefix: null
w2022-03-15 17:59:49 DEBUG Optimize second-level cache for minimal puts: disabled
w2022-03-15 17:59:49 DEBUG Structured second-level cache entries: disabled
w2022-03-15 17:59:49 DEBUG Second-level cache direct-reference entries: disabled
w2022-03-15 17:59:49 DEBUG Automatic eviction of collection cache: disabled
w2022-03-15 17:59:49 DEBUG JDBC batch size: 1
w2022-03-15 17:59:49 DEBUG JDBC batch updates for versioned data: enabled
w2022-03-15 17:59:49 DEBUG Scrollable result sets: disabled
w2022-03-15 17:59:49 DEBUG Wrap result sets: disabled
w2022-03-15 17:59:49 DEBUG JDBC3 getGeneratedKeys(): enabled
w2022-03-15 17:59:49 DEBUG JDBC result set fetch size: null
w2022-03-15 17:59:49 DEBUG Connection release mode: ON_CLOSE
w2022-03-15 17:59:49 DEBUG Generate SQL with comments: disabled
w2022-03-15 17:59:49 DEBUG JPA compliance - query : disabled
w2022-03-15 17:59:49 DEBUG JPA compliance - closed-handling : disabled
w2022-03-15 17:59:49 DEBUG JPA compliance - lists : disabled
w2022-03-15 17:59:49 DEBUG JPA compliance - transactions : disabled
w2022-03-15 17:59:49 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 17:59:49 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 17:59:49 DEBUG Session factory constructed with filter configurations : {}
w2022-03-15 17:59:49 DEBUG Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=true, java.specification.version=1.8, file.encoding.pkg=sun.io, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@2dca3f8d, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.SQLiteDialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\charsets.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\cldrdata.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\dnsns.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\jaccess.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\localedata.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\nashorn.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunec.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunmscapi.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\zipfs.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jce.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jfr.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jsse.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\management-agent.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\resources.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\rt.jar;C:\Users\Ольга\Desktop\Java\Project\Project1\helpdeskproject\target\classes;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\2.6.4\spring-boot-starter-data-jpa-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\2.6.4\spring-boot-starter-jdbc-2.6.4.jar;C:\Users\Ольга\.m2\repository\com\zaxxer\HikariCP\4.0.3\HikariCP-4.0.3.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-jdbc\5.3.16\spring-jdbc-5.3.16.jar;C:\Users\Ольга\.m2\repository\jakarta\transaction\jakarta.transaction-api\1.3.3\jakarta.transaction-api-1.3.3.jar;C:\Users\Ольга\.m2\repository\jakarta\persistence\jakarta.persistence-api\2.2.3\jakarta.persistence-api-2.2.3.jar;C:\Users\Ольга\.m2\repository\org\hibernate\hibernate-core\5.6.5.Final\hibernate-core-5.6.5.Final.jar;C:\Users\Ольга\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy\1.11.22\byte-buddy-1.11.22.jar;C:\Users\Ольга\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ольга\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Ольга\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.6\jaxb-runtime-2.3.6.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\txw2\2.3.6\txw2-2.3.6.jar;C:\Users\Ольга\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.12\istack-commons-runtime-3.0.12.jar;C:\Users\Ольга\.m2\repository\com\sun\activation\jakarta.activation\1.2.2\jakarta.activation-1.2.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\data\spring-data-jpa\2.6.2\spring-data-jpa-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\data\spring-data-commons\2.6.2\spring-data-commons-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-orm\5.3.16\spring-orm-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-context\5.3.16\spring-context-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-tx\5.3.16\spring-tx-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-beans\5.3.16\spring-beans-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-aspects\5.3.16\spring-aspects-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-security\2.6.4\spring-boot-starter-security-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter\2.6.4\spring-boot-starter-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-logging\2.6.4\spring-boot-starter-logging-2.6.4.jar;C:\Users\Ольга\.m2\repository\ch\qos\logback\logback-classic\1.2.10\logback-classic-1.2.10.jar;C:\Users\Ольга\.m2\repository\ch\qos\logback\logback-core\1.2.10\logback-core-1.2.10.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.17.1\log4j-to-slf4j-2.17.1.jar;C:\Users\Ольга\.m2\repository\org\slf4j\jul-to-slf4j\1.7.36\jul-to-slf4j-1.7.36.jar;C:\Users\Ольга\.m2\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;C:\Users\Ольга\.m2\repository\org\yaml\snakeyaml\1.29\snakeyaml-1.29.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-aop\5.3.16\spring-aop-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-config\5.6.2\spring-security-config-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-web\5.6.2\spring-security-web-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-expression\5.3.16\spring-expression-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-web\2.6.4\spring-boot-starter-web-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-json\2.6.4\spring-boot-starter-json-2.6.4.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.13.1\jackson-datatype-jdk8-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.13.1\jackson-datatype-jsr310-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.13.1\jackson-module-parameter-names-2.13.1.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\2.6.4\spring-boot-starter-tomcat-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.58\tomcat-embed-core-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\9.0.58\tomcat-embed-el-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.58\tomcat-embed-websocket-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-web\5.3.16\spring-web-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-webmvc\5.3.16\spring-webmvc-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-devtools\2.6.4\spring-boot-devtools-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot\2.6.4\spring-boot-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\2.6.4\spring-boot-autoconfigure-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\xerial\sqlite-jdbc\3.36.0.3\sqlite-jdbc-3.36.0.3.jar;C:\Users\Ольга\.m2\repository\com\zsoltfabok\sqlite-dialect\1.0\sqlite-dialect-1.0.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-aop\2.6.2\spring-boot-starter-aop-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\aspectj\aspectjweaver\1.9.7\aspectjweaver-1.9.7.jar;C:\Users\Ольга\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.3\jakarta.xml.bind-api-2.3.3.jar;C:\Users\Ольга\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.2\jakarta.activation-api-1.2.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-core\5.3.16\spring-core-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-jcl\5.3.16\spring-jcl-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-core\5.6.2\spring-security-core-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-crypto\5.6.2\spring-security-crypto-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\projectlombok\lombok\1.18.22\lombok-1.18.22.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\2.6.4\spring-boot-starter-thymeleaf-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\thymeleaf-spring5\3.0.15.RELEASE\thymeleaf-spring5-3.0.15.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\thymeleaf\3.0.15.RELEASE\thymeleaf-3.0.15.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\attoparser\attoparser\2.0.5.RELEASE\attoparser-2.0.5.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-java8time\3.0.4.RELEASE\thymeleaf-extras-java8time-3.0.4.RELEASE.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.1\jackson-databind-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.1\jackson-annotations-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.1\jackson-core-2.13.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-api\2.4.1\log4j-api-2.4.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-core\2.4.1\log4j-core-2.4.1.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.2\lib\idea_rt.jar, java.vm.vendor=Temurin, sun.arch.data.model=64, user.variant=, java.vendor.url=https://adoptium.net/, catalina.useNaming=false, user.timezone=Europe/Moscow, jakarta.persistence.sharedCache.mode=UNSPECIFIED, os.name=Windows 10, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), user.country=RU, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\bin, sun.java.command=ru.edu.helpdesk.HelpdeskApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@7725c9d5, com.sun.management.jmxremote=, javax.persistence.sharedCache.mode=UNSPECIFIED, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, user.home=C:\Users\Ольга, user.language=ru, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre, file.separator=\, spring.output.ansi.enabled=always, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, sun.boot.class.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\resources.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\rt.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\sunrsasign.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jsse.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jce.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\charsets.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jfr.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\classes, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_312-b07, user.name=Эльдорадо, spring.jmx.enabled=true, path.separator=;, os.version=10.0, java.endorsed.dirs=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\endorsed, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=default, spring.beaninfo.ignore=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=C:\Users\134E~1\AppData\Local\Temp\, catalina.home=C:\Users\Ольга\AppData\Local\Temp\tomcat.8080.3130023787334574287, java.version=1.8.0_312, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\Ольга\Desktop\Java\Project\Project1\helpdeskproject, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=1496, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\Ольга\AppData\Local\Temp\tomcat.8080.3130023787334574287, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@4730afa4, java.library.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\windows\System32\OpenSSH\;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\Program Files\apache-maven-3.8.4\bin;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Ольга\AppData\Local\Microsoft\WindowsApps;C:\Users\Ольга\AppData\Local\Programs\Microsoft VS Code\bin;C:\SQLite;C:\Users\Ольга\AppData\Roaming\npm;C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.2\bin;;., java.vendor=Temurin, java.vm.info=mixed mode, java.vm.version=25.312-b07, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, java.ext.dirs=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext;C:\windows\Sun\Java\lib\ext, hibernate.connection.datasource=HikariDataSource (HikariPool-1), hibernate.hbm2ddl.import_files=data/import.sql, java.class.version=52.0}
w2022-03-15 17:59:49 DEBUG Skipping JACC integration as it was not enabled
w2022-03-15 17:59:49 DEBUG Using ORDINAL-based conversion for Enum ru.edu.helpdesk.entity.UserRole
w2022-03-15 17:59:49 DEBUG Using ORDINAL-based conversion for Enum ru.edu.helpdesk.entity.TicketStatus
w2022-03-15 17:59:49 DEBUG Instantiated session factory
w2022-03-15 17:59:49 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5520ae63] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@4e33552d]
w2022-03-15 17:59:49 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.User] is safe
w2022-03-15 17:59:49 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.User
w2022-03-15 17:59:49 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 17:59:49 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 17:59:49 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 17:59:49 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 17:59:49 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Ticket] is safe
w2022-03-15 17:59:49 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Ticket
w2022-03-15 17:59:49 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 17:59:49 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 17:59:49 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 17:59:49 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 17:59:49 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 17:59:49 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 17:59:49 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 17:59:49 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 17:59:49 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Comment] is safe
w2022-03-15 17:59:49 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Comment
w2022-03-15 17:59:49 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 17:59:49 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 17:59:49 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 17:59:49 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 17:59:49 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.User
w2022-03-15 17:59:49 DEBUG  Version select: select id from user where id =?
w2022-03-15 17:59:49 DEBUG  Snapshot select: select user_.id, user_.first_name as first_na2_2_, user_.last_name as last_nam3_2_, user_.login as login4_2_, user_.password as password5_2_, user_.role as role6_2_ from user user_ where user_.id=?
w2022-03-15 17:59:49 DEBUG  Insert 0: insert into user (first_name, last_name, login, password, role, id) values (?, ?, ?, ?, ?, ?)
w2022-03-15 17:59:49 DEBUG  Update 0: update user set first_name=?, last_name=?, login=?, password=?, role=? where id=?
w2022-03-15 17:59:49 DEBUG  Delete 0: delete from user where id=?
w2022-03-15 17:59:49 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22f81140]
w2022-03-15 17:59:49 DEBUG Visiting attribute path : firstName
w2022-03-15 17:59:49 DEBUG Visiting attribute path : lastName
w2022-03-15 17:59:49 DEBUG Visiting attribute path : login
w2022-03-15 17:59:49 DEBUG Visiting attribute path : password
w2022-03-15 17:59:49 DEBUG Visiting attribute path : role
w2022-03-15 17:59:49 DEBUG Building LoadPlan...
w2022-03-15 17:59:49 DEBUG processing queryspace <gen:0>
w2022-03-15 17:59:49 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.User)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

w2022-03-15 17:59:49 DEBUG Static select for entity ru.edu.helpdesk.entity.User [NONE]: select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 17:59:49 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.Ticket
w2022-03-15 17:59:49 DEBUG  Version select: select id from ticket where id =?
w2022-03-15 17:59:49 DEBUG  Snapshot select: select ticket_.id, ticket_.client_id as client_i4_1_, ticket_.status as status2_1_, ticket_.support_id as support_5_1_, ticket_.title as title3_1_ from ticket ticket_ where ticket_.id=?
w2022-03-15 17:59:49 DEBUG  Insert 0: insert into ticket (client_id, status, support_id, title, id) values (?, ?, ?, ?, ?)
w2022-03-15 17:59:49 DEBUG  Update 0: update ticket set client_id=?, status=?, support_id=?, title=? where id=?
w2022-03-15 17:59:49 DEBUG  Delete 0: delete from ticket where id=?
w2022-03-15 17:59:49 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76558376]
w2022-03-15 17:59:49 DEBUG Visiting attribute path : client
w2022-03-15 17:59:49 DEBUG Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2505db06]
w2022-03-15 17:59:49 DEBUG Visiting attribute path : client.firstName
w2022-03-15 17:59:49 DEBUG Visiting attribute path : client.lastName
w2022-03-15 17:59:49 DEBUG Visiting attribute path : client.login
w2022-03-15 17:59:49 DEBUG Visiting attribute path : client.password
w2022-03-15 17:59:49 DEBUG Visiting attribute path : client.role
w2022-03-15 17:59:49 DEBUG Visiting attribute path : status
w2022-03-15 17:59:49 DEBUG Visiting attribute path : support
w2022-03-15 17:59:49 DEBUG Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@588d6da5]
w2022-03-15 17:59:49 DEBUG Visiting attribute path : support.firstName
w2022-03-15 17:59:49 DEBUG Visiting attribute path : support.lastName
w2022-03-15 17:59:49 DEBUG Visiting attribute path : support.login
w2022-03-15 17:59:49 DEBUG Visiting attribute path : support.password
w2022-03-15 17:59:49 DEBUG Visiting attribute path : support.role
w2022-03-15 17:59:49 DEBUG Visiting attribute path : title
w2022-03-15 17:59:49 DEBUG Building LoadPlan...
w2022-03-15 17:59:49 DEBUG processing queryspace <gen:0>
w2022-03-15 17:59:49 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.Ticket)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.Ticket, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.Ticket)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:1>, path=ru.edu.helpdesk.entity.Ticket.client)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:2>, path=ru.edu.helpdesk.entity.Ticket.support)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.Ticket)
          - SQL table alias mapping - ticket0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(client)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
          - JOIN (JoinDefinedByMetadata(support)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user2_
                - alias suffix - 2_
                - suffixed key columns - {id1_2_2_}

w2022-03-15 17:59:49 DEBUG Static select for entity ru.edu.helpdesk.entity.Ticket [NONE]: select ticket0_.id as id1_1_0_, ticket0_.client_id as client_i4_1_0_, ticket0_.status as status2_1_0_, ticket0_.support_id as support_5_1_0_, ticket0_.title as title3_1_0_, user1_.id as id1_2_1_, user1_.first_name as first_na2_2_1_, user1_.last_name as last_nam3_2_1_, user1_.login as login4_2_1_, user1_.password as password5_2_1_, user1_.role as role6_2_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id left outer join user user2_ on ticket0_.support_id=user2_.id where ticket0_.id=?
w2022-03-15 17:59:49 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.Comment
w2022-03-15 17:59:49 DEBUG  Version select: select id from comment where id =?
w2022-03-15 17:59:49 DEBUG  Snapshot select: select comment_.id, comment_.message as message2_0_, comment_.ticket_id as ticket_i3_0_, comment_.user_id as user_id4_0_ from comment comment_ where comment_.id=?
w2022-03-15 17:59:49 DEBUG  Insert 0: insert into comment (message, ticket_id, user_id, id) values (?, ?, ?, ?)
w2022-03-15 17:59:49 DEBUG  Update 0: update comment set message=?, ticket_id=?, user_id=? where id=?
w2022-03-15 17:59:49 DEBUG  Delete 0: delete from comment where id=?
w2022-03-15 17:59:49 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7fc13995]
w2022-03-15 17:59:49 DEBUG Visiting attribute path : message
w2022-03-15 17:59:49 DEBUG Visiting attribute path : ticket
w2022-03-15 17:59:49 DEBUG Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ced6f97]
w2022-03-15 17:59:49 DEBUG Visiting attribute path : ticket.client
w2022-03-15 17:59:49 DEBUG Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@229930f2]
w2022-03-15 17:59:49 DEBUG Visiting attribute path : ticket.client.firstName
w2022-03-15 17:59:49 DEBUG Visiting attribute path : ticket.client.lastName
w2022-03-15 17:59:49 DEBUG Visiting attribute path : ticket.client.login
w2022-03-15 17:59:49 DEBUG Visiting attribute path : ticket.client.password
w2022-03-15 17:59:49 DEBUG Visiting attribute path : ticket.client.role
w2022-03-15 17:59:49 DEBUG Visiting attribute path : ticket.status
w2022-03-15 17:59:49 DEBUG Visiting attribute path : ticket.support
w2022-03-15 17:59:49 DEBUG Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41a662b8]
w2022-03-15 17:59:49 DEBUG Visiting attribute path : ticket.support.firstName
w2022-03-15 17:59:49 DEBUG Visiting attribute path : ticket.support.lastName
w2022-03-15 17:59:49 DEBUG Visiting attribute path : ticket.support.login
w2022-03-15 17:59:49 DEBUG Visiting attribute path : ticket.support.password
w2022-03-15 17:59:49 DEBUG Visiting attribute path : ticket.support.role
w2022-03-15 17:59:49 DEBUG Visiting attribute path : ticket.title
w2022-03-15 17:59:49 DEBUG Visiting attribute path : user
w2022-03-15 17:59:49 DEBUG Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6bc3f3c4]
w2022-03-15 17:59:49 DEBUG Visiting attribute path : user.firstName
w2022-03-15 17:59:49 DEBUG Visiting attribute path : user.lastName
w2022-03-15 17:59:49 DEBUG Visiting attribute path : user.login
w2022-03-15 17:59:49 DEBUG Visiting attribute path : user.password
w2022-03-15 17:59:49 DEBUG Visiting attribute path : user.role
w2022-03-15 17:59:49 DEBUG Building LoadPlan...
w2022-03-15 17:59:49 DEBUG processing queryspace <gen:0>
w2022-03-15 17:59:49 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.Comment)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.Comment, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.Comment)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.Ticket, querySpaceUid=<gen:1>, path=ru.edu.helpdesk.entity.Comment.ticket)
             - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:2>, path=ru.edu.helpdesk.entity.Comment.ticket.client)
             - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:3>, path=ru.edu.helpdesk.entity.Comment.ticket.support)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:4>, path=ru.edu.helpdesk.entity.Comment.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(ticket)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ru.edu.helpdesk.entity.Ticket)
                - SQL table alias mapping - ticket1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(client)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=ru.edu.helpdesk.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}
                - JOIN (JoinDefinedByMetadata(support)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=ru.edu.helpdesk.entity.User)
                      - SQL table alias mapping - user3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_2_3_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user4_
                - alias suffix - 4_
                - suffixed key columns - {id1_2_4_}

w2022-03-15 17:59:49 DEBUG Static select for entity ru.edu.helpdesk.entity.Comment [NONE]: select comment0_.id as id1_0_0_, comment0_.message as message2_0_0_, comment0_.ticket_id as ticket_i3_0_0_, comment0_.user_id as user_id4_0_0_, ticket1_.id as id1_1_1_, ticket1_.client_id as client_i4_1_1_, ticket1_.status as status2_1_1_, ticket1_.support_id as support_5_1_1_, ticket1_.title as title3_1_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_, user3_.id as id1_2_3_, user3_.first_name as first_na2_2_3_, user3_.last_name as last_nam3_2_3_, user3_.login as login4_2_3_, user3_.password as password5_2_3_, user3_.role as role6_2_3_, user4_.id as id1_2_4_, user4_.first_name as first_na2_2_4_, user4_.last_name as last_nam3_2_4_, user4_.login as login4_2_4_, user4_.password as password5_2_4_, user4_.role as role6_2_4_ from comment comment0_ left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id left outer join user user2_ on ticket1_.client_id=user2_.id left outer join user user3_ on ticket1_.support_id=user3_.id left outer join user user4_ on comment0_.user_id=user4_.id where comment0_.id=?
w2022-03-15 17:59:49 DEBUG drop table if exists comment
w2022-03-15 17:59:49 DEBUG drop table if exists hibernate_sequence
w2022-03-15 17:59:49 DEBUG drop table if exists ticket
w2022-03-15 17:59:49 DEBUG drop table if exists user
w2022-03-15 17:59:49 DEBUG create table comment (id bigint not null, message varchar(255) not null, ticket_id bigint, user_id bigint, primary key (id))
w2022-03-15 17:59:49 DEBUG create table hibernate_sequence (next_val bigint)
w2022-03-15 17:59:49 DEBUG insert into hibernate_sequence values ( 1 )
w2022-03-15 17:59:49 DEBUG create table ticket (id bigint not null, status integer, title varchar(255) not null, client_id bigint, support_id bigint, primary key (id))
w2022-03-15 17:59:49 DEBUG create table user (id bigint not null, first_name varchar(255), last_name varchar(255), login varchar(255) not null, password varchar(255) not null, role integer, primary key (id))
w2022-03-15 17:59:49 INFO  HHH000476: Executing import script 'file:/C:/Users/%d0%9e%d0%bb%d1%8c%d0%b3%d0%b0/Desktop/Java/Project/Project1/helpdeskproject/target/classes/data/import.sql'
w2022-03-15 17:59:49 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (1, 'admin', 'admin', 'admin', 'admin', 0)
w2022-03-15 17:59:49 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (2, 'support', 'support', 'support', 'support', 1)
w2022-03-15 17:59:49 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (3, 'user1', 'user1', 'user1', 'user1', 2)
w2022-03-15 17:59:49 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (4, 'user2', 'user2', 'user2', 'user2', 2)
w2022-03-15 17:59:49 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (1, 1, 'Hello user1',1, 2)
w2022-03-15 17:59:49 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (2, 0, 'Title2', 1, NULL)
w2022-03-15 17:59:49 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (3, 0, 'Message user2', 4, NULL)
w2022-03-15 17:59:49 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (1, "comment ticket1", 1, 3)
w2022-03-15 17:59:49 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (2, "comment ticket2", 2, 3)
w2022-03-15 17:59:49 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (3, "comment ticket11", 1, 2)
w2022-03-15 17:59:49 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (4, "comment ticket111", 1, 2)
w2022-03-15 17:59:49 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (5, "comment ticket22", 2, 2)
w2022-03-15 17:59:49 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (6, "comment ticket3", 3, 4)
w2022-03-15 17:59:49 DEBUG UPDATE hibernate_sequence SET next_val = 8 WHERE next_val = 1
w2022-03-15 17:59:49 INFO  HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
w2022-03-15 17:59:49 DEBUG Checking 0 named HQL queries
w2022-03-15 17:59:49 DEBUG Checking 0 named SQL queries
w2022-03-15 17:59:49 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 17:59:49 DEBUG Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@d8a3303
w2022-03-15 17:59:49 DEBUG Registering SessionFactory: 4b90b8ce-26ea-44c6-969c-84535c190845 (<unnamed>)
w2022-03-15 17:59:49 DEBUG Not binding SessionFactory to JNDI, no JNDI name configured
w2022-03-15 17:59:49 DEBUG Statistics initialized [enabled=false]
w2022-03-15 17:59:50 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 17:59:50 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 17:59:50 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 17:59:56 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 17:59:56 DEBUG begin
w2022-03-15 17:59:56 DEBUG committing
w2022-03-15 17:59:56 DEBUG Rendered criteria query -> select generatedAlias0 from Comment as generatedAlias0 left join generatedAlias0.ticket as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 17:59:56 DEBUG QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@7b80c36d
w2022-03-15 17:59:56 DEBUG parse() - HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Comment as generatedAlias0 left join generatedAlias0.ticket as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 17:59:56 DEBUG throwQueryException() : no errors
w2022-03-15 17:59:56 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[IDENT] Node: 'ru'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'edu'
    |  |  |  |  |  |  \-[IDENT] Node: 'helpdesk'
    |  |  |  |  |  \-[IDENT] Node: 'entity'
    |  |  |  |  \-[IDENT] Node: 'Comment'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'ticket'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias1'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

w2022-03-15 17:59:56 DEBUG select << begin [level=1, statement=select]
w2022-03-15 17:59:56 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.Comment (generatedAlias0) -> comment0_
w2022-03-15 17:59:56 DEBUG Resolved : generatedAlias0 -> comment0_.id
w2022-03-15 17:59:56 DEBUG getDataType() : ticket -> org.hibernate.type.ManyToOneType(ru.edu.helpdesk.entity.Ticket)
w2022-03-15 17:59:56 DEBUG dereferenceEntityJoin() : generating join for ticket in ru.edu.helpdesk.entity.Comment (generatedAlias1) parent = [ {null} ]
w2022-03-15 17:59:56 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.Ticket (generatedAlias1) -> ticket1_
w2022-03-15 17:59:56 DEBUG addJoinByPathMap() : generatedAlias0.ticket -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=ticket,tableAlias=ticket1_,origin=comment comment0_,columns={comment0_.ticket_id,className=ru.edu.helpdesk.entity.Ticket}}
w2022-03-15 17:59:56 DEBUG Resolved : generatedAlias0.ticket -> comment0_.ticket_id
w2022-03-15 17:59:56 DEBUG createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'ticket ticket1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Comment.ticket,tableName=ticket,tableAlias=ticket1_,origin=comment comment0_,columns={comment0_.ticket_id,className=ru.edu.helpdesk.entity.Ticket}}

w2022-03-15 17:59:56 DEBUG Resolved : generatedAlias0 -> comment0_.id
w2022-03-15 17:59:56 DEBUG Resolved : generatedAlias1 -> ticket1_.id
w2022-03-15 17:59:56 DEBUG getDataType() : id -> org.hibernate.type.LongType@5c343b43
w2022-03-15 17:59:56 DEBUG Resolved : generatedAlias1.id -> ticket1_.id
w2022-03-15 17:59:56 DEBUG select : finishing up [level=1, statement=select]
w2022-03-15 17:59:56 DEBUG processQuery() :  ( SELECT ( {select clause} comment0_.id ) ( FromClause{level=1} ( comment comment0_ ticket ticket1_ ) ) ( where ( = ( ticket1_.id ticket1_.id id ) ? ) ) )
w2022-03-15 17:59:56 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Comment): [comment]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.Comment)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.Ticket)
          | path: generatedAlias1.id
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.Ticket)
          |  | originalText: generatedAlias1
          |  \-IdentNode
          |    persister: null
          |    originalText: id
          \-ParameterNode

w2022-03-15 17:59:56 DEBUG Using FROM fragment [comment comment0_]
w2022-03-15 17:59:56 DEBUG Using FROM fragment [left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id]
w2022-03-15 17:59:56 DEBUG select >> end [level=1, statement=select]
w2022-03-15 17:59:56 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (ticket,comment)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'comment0_.id as id1_0_' {alias=generatedAlias0, className=ru.edu.helpdesk.entity.Comment, tableAlias=comment0_}
    |  \-[SQL_TOKEN] SqlFragment: 'comment0_.message as message2_0_, comment0_.ticket_id as ticket_i3_0_, comment0_.user_id as user_id4_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[ticket1_, comment0_], fromElementsByPath=[generatedAlias0.ticket], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'comment comment0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=comment,tableAlias=comment0_,origin=null,columns={,className=ru.edu.helpdesk.entity.Comment}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Comment.ticket,tableName=ticket,tableAlias=ticket1_,origin=comment comment0_,columns={comment0_.ticket_id,className=ru.edu.helpdesk.entity.Ticket}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'ticket1_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias1.id,tableAlias=ticket1_,className=ru.edu.helpdesk.entity.Ticket,classAlias=generatedAlias1}
          |  +-[ALIAS_REF] IdentNode: 'ticket1_.id' {alias=generatedAlias1, className=ru.edu.helpdesk.entity.Ticket, tableAlias=ticket1_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LongType@5c343b43}

w2022-03-15 17:59:56 DEBUG throwQueryException() : no errors
w2022-03-15 17:59:56 DEBUG HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Comment as generatedAlias0 left join generatedAlias0.ticket as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 17:59:56 DEBUG SQL: select comment0_.id as id1_0_, comment0_.message as message2_0_, comment0_.ticket_id as ticket_i3_0_, comment0_.user_id as user_id4_0_ from comment comment0_ left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id where ticket1_.id=?
w2022-03-15 17:59:56 DEBUG throwQueryException() : no errors
w2022-03-15 17:59:56 DEBUG select comment0_.id as id1_0_, comment0_.message as message2_0_, comment0_.ticket_id as ticket_i3_0_, comment0_.user_id as user_id4_0_ from comment comment0_ left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id where ticket1_.id=?
w2022-03-15 17:59:56 DEBUG Result set row: 0
w2022-03-15 17:59:56 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Comment#1]
w2022-03-15 17:59:56 DEBUG Result set row: 1
w2022-03-15 17:59:56 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Comment#3]
w2022-03-15 17:59:56 DEBUG Result set row: 2
w2022-03-15 17:59:56 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Comment#4]
w2022-03-15 17:59:56 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Comment#1]
w2022-03-15 17:59:56 DEBUG Processing attribute `message` : value = comment ticket1
w2022-03-15 17:59:56 DEBUG Attribute (`message`)  - enhanced for lazy-loading? - false
w2022-03-15 17:59:56 DEBUG Processing attribute `ticket` : value = 1
w2022-03-15 17:59:56 DEBUG Attribute (`ticket`)  - enhanced for lazy-loading? - false
w2022-03-15 17:59:56 DEBUG select ticket0_.id as id1_1_0_, ticket0_.client_id as client_i4_1_0_, ticket0_.status as status2_1_0_, ticket0_.support_id as support_5_1_0_, ticket0_.title as title3_1_0_, user1_.id as id1_2_1_, user1_.first_name as first_na2_2_1_, user1_.last_name as last_nam3_2_1_, user1_.login as login4_2_1_, user1_.password as password5_2_1_, user1_.role as role6_2_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id left outer join user user2_ on ticket0_.support_id=user2_.id where ticket0_.id=?
w2022-03-15 17:59:56 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 17:59:56 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 17:59:56 DEBUG Processing attribute `client` : value = 1
w2022-03-15 17:59:56 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 17:59:56 DEBUG Processing attribute `status` : value = WORKING
w2022-03-15 17:59:56 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 17:59:56 DEBUG Processing attribute `support` : value = 2
w2022-03-15 17:59:56 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 17:59:56 DEBUG Processing attribute `title` : value = Hello user1
w2022-03-15 17:59:56 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 17:59:56 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 17:59:56 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#1]
w2022-03-15 17:59:56 DEBUG Processing attribute `firstName` : value = admin
w2022-03-15 17:59:56 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 17:59:56 DEBUG Processing attribute `lastName` : value = admin
w2022-03-15 17:59:56 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 17:59:56 DEBUG Processing attribute `login` : value = admin
w2022-03-15 17:59:56 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 17:59:56 DEBUG Processing attribute `password` : value = admin
w2022-03-15 17:59:56 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 17:59:56 DEBUG Processing attribute `role` : value = ADMIN
w2022-03-15 17:59:56 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 17:59:56 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#1]
w2022-03-15 17:59:56 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#2]
w2022-03-15 17:59:56 DEBUG Processing attribute `firstName` : value = support
w2022-03-15 17:59:56 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 17:59:56 DEBUG Processing attribute `lastName` : value = support
w2022-03-15 17:59:56 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 17:59:56 DEBUG Processing attribute `login` : value = support
w2022-03-15 17:59:56 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 17:59:56 DEBUG Processing attribute `password` : value = support
w2022-03-15 17:59:56 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 17:59:56 DEBUG Processing attribute `role` : value = SUPPORT
w2022-03-15 17:59:56 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 17:59:56 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#2]
w2022-03-15 17:59:56 DEBUG Done entity load : ru.edu.helpdesk.entity.Ticket#1
w2022-03-15 17:59:56 DEBUG Processing attribute `user` : value = 3
w2022-03-15 17:59:56 DEBUG Attribute (`user`)  - enhanced for lazy-loading? - false
w2022-03-15 17:59:56 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 17:59:56 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 17:59:56 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#3]
w2022-03-15 17:59:56 DEBUG Processing attribute `firstName` : value = user1
w2022-03-15 17:59:56 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 17:59:56 DEBUG Processing attribute `lastName` : value = user1
w2022-03-15 17:59:56 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 17:59:56 DEBUG Processing attribute `login` : value = user1
w2022-03-15 17:59:56 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 17:59:56 DEBUG Processing attribute `password` : value = user1
w2022-03-15 17:59:56 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 17:59:56 DEBUG Processing attribute `role` : value = USER
w2022-03-15 17:59:56 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 17:59:56 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#3]
w2022-03-15 17:59:56 DEBUG Done entity load : ru.edu.helpdesk.entity.User#3
w2022-03-15 17:59:56 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Comment#1]
w2022-03-15 17:59:56 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Comment#3]
w2022-03-15 17:59:56 DEBUG Processing attribute `message` : value = comment ticket11
w2022-03-15 17:59:56 DEBUG Attribute (`message`)  - enhanced for lazy-loading? - false
w2022-03-15 17:59:56 DEBUG Processing attribute `ticket` : value = 1
w2022-03-15 17:59:56 DEBUG Attribute (`ticket`)  - enhanced for lazy-loading? - false
w2022-03-15 17:59:56 DEBUG Processing attribute `user` : value = 2
w2022-03-15 17:59:56 DEBUG Attribute (`user`)  - enhanced for lazy-loading? - false
w2022-03-15 17:59:56 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Comment#3]
w2022-03-15 17:59:56 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Comment#4]
w2022-03-15 17:59:56 DEBUG Processing attribute `message` : value = comment ticket111
w2022-03-15 17:59:56 DEBUG Attribute (`message`)  - enhanced for lazy-loading? - false
w2022-03-15 17:59:56 DEBUG Processing attribute `ticket` : value = 1
w2022-03-15 17:59:56 DEBUG Attribute (`ticket`)  - enhanced for lazy-loading? - false
w2022-03-15 17:59:56 DEBUG Processing attribute `user` : value = 2
w2022-03-15 17:59:56 DEBUG Attribute (`user`)  - enhanced for lazy-loading? - false
w2022-03-15 17:59:56 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Comment#4]
w2022-03-15 18:00:26 DEBUG Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.login=:param0
w2022-03-15 18:00:26 DEBUG parse() - HQL: select generatedAlias0 from ru.edu.helpdesk.entity.User as generatedAlias0 where generatedAlias0.login=:param0
w2022-03-15 18:00:26 DEBUG throwQueryException() : no errors
w2022-03-15 18:00:26 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'ru'
    |  |     |  |  |  |  \-[IDENT] Node: 'edu'
    |  |     |  |  |  \-[IDENT] Node: 'helpdesk'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'login'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

w2022-03-15 18:00:26 DEBUG select << begin [level=1, statement=select]
w2022-03-15 18:00:26 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.User (generatedAlias0) -> user0_
w2022-03-15 18:00:26 DEBUG Resolved : generatedAlias0 -> user0_.id
w2022-03-15 18:00:26 DEBUG Resolved : generatedAlias0 -> user0_.id
w2022-03-15 18:00:26 DEBUG getDataType() : login -> org.hibernate.type.StringType@35876f1d
w2022-03-15 18:00:26 DEBUG Resolved : generatedAlias0.login -> user0_.login
w2022-03-15 18:00:26 DEBUG select : finishing up [level=1, statement=select]
w2022-03-15 18:00:26 DEBUG processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) ( where ( = ( user0_.login user0_.id login ) ? ) ) )
w2022-03-15 18:00:26 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity User): [user]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.User)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.User)
          | path: generatedAlias0.login
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.User)
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    originalText: login
          \-ParameterNode

w2022-03-15 18:00:26 DEBUG Using FROM fragment [user user0_]
w2022-03-15 18:00:26 DEBUG select >> end [level=1, statement=select]
w2022-03-15 18:00:26 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_2_' {alias=generatedAlias0, className=ru.edu.helpdesk.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.first_name as first_na2_2_, user0_.last_name as last_nam3_2_, user0_.login as login4_2_, user0_.password as password5_2_, user0_.role as role6_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=ru.edu.helpdesk.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.login' {propertyName=login,dereferenceType=PRIMITIVE,getPropertyPath=login,path=generatedAlias0.login,tableAlias=user0_,className=ru.edu.helpdesk.entity.User,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=generatedAlias0, className=ru.edu.helpdesk.entity.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'login' {originalText=login}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@35876f1d}

w2022-03-15 18:00:26 DEBUG throwQueryException() : no errors
w2022-03-15 18:00:26 DEBUG HQL: select generatedAlias0 from ru.edu.helpdesk.entity.User as generatedAlias0 where generatedAlias0.login=:param0
w2022-03-15 18:00:26 DEBUG SQL: select user0_.id as id1_2_, user0_.first_name as first_na2_2_, user0_.last_name as last_nam3_2_, user0_.login as login4_2_, user0_.password as password5_2_, user0_.role as role6_2_ from user user0_ where user0_.login=?
w2022-03-15 18:00:26 DEBUG throwQueryException() : no errors
w2022-03-15 18:00:26 DEBUG select user0_.id as id1_2_, user0_.first_name as first_na2_2_, user0_.last_name as last_nam3_2_, user0_.login as login4_2_, user0_.password as password5_2_, user0_.role as role6_2_ from user user0_ where user0_.login=?
w2022-03-15 18:00:26 DEBUG Result set row: 0
w2022-03-15 18:00:26 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.User#1]
w2022-03-15 18:00:26 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#1]
w2022-03-15 18:00:26 DEBUG Processing attribute `firstName` : value = admin
w2022-03-15 18:00:26 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:00:26 DEBUG Processing attribute `lastName` : value = admin
w2022-03-15 18:00:26 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:00:26 DEBUG Processing attribute `login` : value = admin
w2022-03-15 18:00:26 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 18:00:26 DEBUG Processing attribute `password` : value = admin
w2022-03-15 18:00:26 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 18:00:26 DEBUG Processing attribute `role` : value = ADMIN
w2022-03-15 18:00:26 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 18:00:26 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#1]
w2022-03-15 18:00:26 DEBUG Rendered criteria query -> select generatedAlias0 from Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 18:00:26 DEBUG parse() - HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 18:00:26 DEBUG throwQueryException() : no errors
w2022-03-15 18:00:26 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[IDENT] Node: 'ru'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'edu'
    |  |  |  |  |  |  \-[IDENT] Node: 'helpdesk'
    |  |  |  |  |  \-[IDENT] Node: 'entity'
    |  |  |  |  \-[IDENT] Node: 'Ticket'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'client'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias1'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

w2022-03-15 18:00:26 DEBUG select << begin [level=1, statement=select]
w2022-03-15 18:00:26 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.Ticket (generatedAlias0) -> ticket0_
w2022-03-15 18:00:26 DEBUG Resolved : generatedAlias0 -> ticket0_.id
w2022-03-15 18:00:26 DEBUG getDataType() : client -> org.hibernate.type.ManyToOneType(ru.edu.helpdesk.entity.User)
w2022-03-15 18:00:26 DEBUG dereferenceEntityJoin() : generating join for client in ru.edu.helpdesk.entity.Ticket (generatedAlias1) parent = [ {null} ]
w2022-03-15 18:00:26 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.User (generatedAlias1) -> user1_
w2022-03-15 18:00:26 DEBUG addJoinByPathMap() : generatedAlias0.client -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}
w2022-03-15 18:00:26 DEBUG Resolved : generatedAlias0.client -> ticket0_.client_id
w2022-03-15 18:00:26 DEBUG createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'user user1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Ticket.client,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}

w2022-03-15 18:00:26 DEBUG Resolved : generatedAlias0 -> ticket0_.id
w2022-03-15 18:00:26 DEBUG Resolved : generatedAlias1 -> user1_.id
w2022-03-15 18:00:26 DEBUG getDataType() : id -> org.hibernate.type.LongType@5c343b43
w2022-03-15 18:00:26 DEBUG Resolved : generatedAlias1.id -> user1_.id
w2022-03-15 18:00:26 DEBUG select : finishing up [level=1, statement=select]
w2022-03-15 18:00:26 DEBUG processQuery() :  ( SELECT ( {select clause} ticket0_.id ) ( FromClause{level=1} ( ticket ticket0_ user user1_ ) ) ( where ( = ( user1_.id user1_.id id ) ? ) ) )
w2022-03-15 18:00:26 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Ticket): [ticket]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.Ticket)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.User)
          | path: generatedAlias1.id
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.User)
          |  | originalText: generatedAlias1
          |  \-IdentNode
          |    persister: null
          |    originalText: id
          \-ParameterNode

w2022-03-15 18:00:26 DEBUG Using FROM fragment [ticket ticket0_]
w2022-03-15 18:00:26 DEBUG Using FROM fragment [left outer join user user1_ on ticket0_.client_id=user1_.id]
w2022-03-15 18:00:26 DEBUG select >> end [level=1, statement=select]
w2022-03-15 18:00:26 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (ticket,user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'ticket0_.id as id1_1_' {alias=generatedAlias0, className=ru.edu.helpdesk.entity.Ticket, tableAlias=ticket0_}
    |  \-[SQL_TOKEN] SqlFragment: 'ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[ticket0_, user1_], fromElementsByPath=[generatedAlias0.client], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'ticket ticket0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=ticket,tableAlias=ticket0_,origin=null,columns={,className=ru.edu.helpdesk.entity.Ticket}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join user user1_ on ticket0_.client_id=user1_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Ticket.client,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user1_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias1.id,tableAlias=user1_,className=ru.edu.helpdesk.entity.User,classAlias=generatedAlias1}
          |  +-[ALIAS_REF] IdentNode: 'user1_.id' {alias=generatedAlias1, className=ru.edu.helpdesk.entity.User, tableAlias=user1_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LongType@5c343b43}

w2022-03-15 18:00:26 DEBUG throwQueryException() : no errors
w2022-03-15 18:00:26 DEBUG HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 18:00:26 DEBUG SQL: select ticket0_.id as id1_1_, ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id where user1_.id=?
w2022-03-15 18:00:26 DEBUG throwQueryException() : no errors
w2022-03-15 18:00:26 DEBUG select ticket0_.id as id1_1_, ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id where user1_.id=?
w2022-03-15 18:00:26 DEBUG Result set row: 0
w2022-03-15 18:00:26 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 18:00:26 DEBUG Result set row: 1
w2022-03-15 18:00:26 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 18:00:26 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 18:00:26 DEBUG Processing attribute `client` : value = 1
w2022-03-15 18:00:26 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 18:00:26 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 18:00:26 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 18:00:26 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#1]
w2022-03-15 18:00:26 DEBUG Processing attribute `firstName` : value = admin
w2022-03-15 18:00:26 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:00:26 DEBUG Processing attribute `lastName` : value = admin
w2022-03-15 18:00:26 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:00:26 DEBUG Processing attribute `login` : value = admin
w2022-03-15 18:00:26 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 18:00:26 DEBUG Processing attribute `password` : value = admin
w2022-03-15 18:00:26 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 18:00:26 DEBUG Processing attribute `role` : value = ADMIN
w2022-03-15 18:00:26 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 18:00:26 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#1]
w2022-03-15 18:00:26 DEBUG Done entity load : ru.edu.helpdesk.entity.User#1
w2022-03-15 18:00:26 DEBUG Processing attribute `status` : value = WORKING
w2022-03-15 18:00:26 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 18:00:26 DEBUG Processing attribute `support` : value = 2
w2022-03-15 18:00:26 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 18:00:26 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 18:00:26 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 18:00:26 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#2]
w2022-03-15 18:00:26 DEBUG Processing attribute `firstName` : value = support
w2022-03-15 18:00:26 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:00:26 DEBUG Processing attribute `lastName` : value = support
w2022-03-15 18:00:26 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:00:26 DEBUG Processing attribute `login` : value = support
w2022-03-15 18:00:26 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 18:00:26 DEBUG Processing attribute `password` : value = support
w2022-03-15 18:00:26 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 18:00:26 DEBUG Processing attribute `role` : value = SUPPORT
w2022-03-15 18:00:26 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 18:00:26 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#2]
w2022-03-15 18:00:26 DEBUG Done entity load : ru.edu.helpdesk.entity.User#2
w2022-03-15 18:00:26 DEBUG Processing attribute `title` : value = Hello user1
w2022-03-15 18:00:26 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 18:00:26 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 18:00:26 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 18:00:26 DEBUG Processing attribute `client` : value = 1
w2022-03-15 18:00:26 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 18:00:26 DEBUG Processing attribute `status` : value = OPEN
w2022-03-15 18:00:26 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 18:00:26 DEBUG Processing attribute `support` : value = null
w2022-03-15 18:00:26 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 18:00:26 DEBUG Processing attribute `title` : value = Title2
w2022-03-15 18:00:26 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 18:00:26 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 18:00:32 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 18:00:32 DEBUG begin
w2022-03-15 18:00:32 DEBUG committing
w2022-03-15 18:00:32 DEBUG Rendered criteria query -> select generatedAlias0 from Comment as generatedAlias0 left join generatedAlias0.ticket as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 18:00:32 DEBUG select comment0_.id as id1_0_, comment0_.message as message2_0_, comment0_.ticket_id as ticket_i3_0_, comment0_.user_id as user_id4_0_ from comment comment0_ left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id where ticket1_.id=?
w2022-03-15 18:00:32 DEBUG Result set row: 0
w2022-03-15 18:00:32 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Comment#2]
w2022-03-15 18:00:32 DEBUG Result set row: 1
w2022-03-15 18:00:32 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Comment#5]
w2022-03-15 18:00:32 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Comment#2]
w2022-03-15 18:00:32 DEBUG Processing attribute `message` : value = comment ticket2
w2022-03-15 18:00:32 DEBUG Attribute (`message`)  - enhanced for lazy-loading? - false
w2022-03-15 18:00:32 DEBUG Processing attribute `ticket` : value = 2
w2022-03-15 18:00:32 DEBUG Attribute (`ticket`)  - enhanced for lazy-loading? - false
w2022-03-15 18:00:32 DEBUG select ticket0_.id as id1_1_0_, ticket0_.client_id as client_i4_1_0_, ticket0_.status as status2_1_0_, ticket0_.support_id as support_5_1_0_, ticket0_.title as title3_1_0_, user1_.id as id1_2_1_, user1_.first_name as first_na2_2_1_, user1_.last_name as last_nam3_2_1_, user1_.login as login4_2_1_, user1_.password as password5_2_1_, user1_.role as role6_2_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id left outer join user user2_ on ticket0_.support_id=user2_.id where ticket0_.id=?
w2022-03-15 18:00:32 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 18:00:32 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 18:00:32 DEBUG Processing attribute `client` : value = 1
w2022-03-15 18:00:32 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 18:00:32 DEBUG Processing attribute `status` : value = OPEN
w2022-03-15 18:00:32 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 18:00:32 DEBUG Processing attribute `support` : value = null
w2022-03-15 18:00:32 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 18:00:32 DEBUG Processing attribute `title` : value = Title2
w2022-03-15 18:00:32 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 18:00:32 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 18:00:32 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#1]
w2022-03-15 18:00:32 DEBUG Processing attribute `firstName` : value = admin
w2022-03-15 18:00:32 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:00:32 DEBUG Processing attribute `lastName` : value = admin
w2022-03-15 18:00:32 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:00:32 DEBUG Processing attribute `login` : value = admin
w2022-03-15 18:00:32 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 18:00:32 DEBUG Processing attribute `password` : value = admin
w2022-03-15 18:00:32 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 18:00:32 DEBUG Processing attribute `role` : value = ADMIN
w2022-03-15 18:00:32 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 18:00:32 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#1]
w2022-03-15 18:00:32 DEBUG Done entity load : ru.edu.helpdesk.entity.Ticket#2
w2022-03-15 18:00:32 DEBUG Processing attribute `user` : value = 3
w2022-03-15 18:00:32 DEBUG Attribute (`user`)  - enhanced for lazy-loading? - false
w2022-03-15 18:00:32 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 18:00:32 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 18:00:32 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#3]
w2022-03-15 18:00:32 DEBUG Processing attribute `firstName` : value = user1
w2022-03-15 18:00:32 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:00:32 DEBUG Processing attribute `lastName` : value = user1
w2022-03-15 18:00:32 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:00:32 DEBUG Processing attribute `login` : value = user1
w2022-03-15 18:00:32 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 18:00:32 DEBUG Processing attribute `password` : value = user1
w2022-03-15 18:00:32 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 18:00:32 DEBUG Processing attribute `role` : value = USER
w2022-03-15 18:00:32 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 18:00:32 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#3]
w2022-03-15 18:00:32 DEBUG Done entity load : ru.edu.helpdesk.entity.User#3
w2022-03-15 18:00:32 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Comment#2]
w2022-03-15 18:00:32 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Comment#5]
w2022-03-15 18:00:32 DEBUG Processing attribute `message` : value = comment ticket22
w2022-03-15 18:00:32 DEBUG Attribute (`message`)  - enhanced for lazy-loading? - false
w2022-03-15 18:00:32 DEBUG Processing attribute `ticket` : value = 2
w2022-03-15 18:00:32 DEBUG Attribute (`ticket`)  - enhanced for lazy-loading? - false
w2022-03-15 18:00:32 DEBUG Processing attribute `user` : value = 2
w2022-03-15 18:00:32 DEBUG Attribute (`user`)  - enhanced for lazy-loading? - false
w2022-03-15 18:00:32 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 18:00:32 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 18:00:32 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#2]
w2022-03-15 18:00:32 DEBUG Processing attribute `firstName` : value = support
w2022-03-15 18:00:32 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:00:32 DEBUG Processing attribute `lastName` : value = support
w2022-03-15 18:00:32 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:00:32 DEBUG Processing attribute `login` : value = support
w2022-03-15 18:00:32 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 18:00:32 DEBUG Processing attribute `password` : value = support
w2022-03-15 18:00:32 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 18:00:32 DEBUG Processing attribute `role` : value = SUPPORT
w2022-03-15 18:00:32 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 18:00:32 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#2]
w2022-03-15 18:00:32 DEBUG Done entity load : ru.edu.helpdesk.entity.User#2
w2022-03-15 18:00:32 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Comment#5]
w2022-03-15 18:06:06 DEBUG Logging Provider: org.jboss.logging.Log4j2LoggerProvider
w2022-03-15 18:06:06 DEBUG PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@afdfab4
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/%d0%9e%d0%bb%d1%8c%d0%b3%d0%b0/Desktop/Java/Project/Project1/helpdeskproject/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		ru.edu.helpdesk.entity.Comment
		ru.edu.helpdesk.entity.Ticket
		ru.edu.helpdesk.entity.User]
	Mapping files names []
	Properties []
w2022-03-15 18:06:06 DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
w2022-03-15 18:06:06 DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
w2022-03-15 18:06:06 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
w2022-03-15 18:06:06 INFO  HHH000412: Hibernate ORM core version 5.6.5.Final
w2022-03-15 18:06:06 DEBUG HHH000206: hibernate.properties not found
w2022-03-15 18:06:07 DEBUG Overriding existing service binding [org.hibernate.secure.spi.JaccService]
w2022-03-15 18:06:07 DEBUG Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
w2022-03-15 18:06:07 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
w2022-03-15 18:06:07 INFO  HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
w2022-03-15 18:06:07 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@64bb22f4
w2022-03-15 18:06:07 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@64bb22f4
w2022-03-15 18:06:07 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@64bb22f4
w2022-03-15 18:06:07 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@11d5ceec
w2022-03-15 18:06:07 DEBUG Adding type registration true_false -> org.hibernate.type.TrueFalseType@66fe99c3
w2022-03-15 18:06:07 DEBUG Adding type registration yes_no -> org.hibernate.type.YesNoType@4aa1ead4
w2022-03-15 18:06:07 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@425c2997
w2022-03-15 18:06:07 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@425c2997
w2022-03-15 18:06:07 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@425c2997
w2022-03-15 18:06:07 DEBUG Adding type registration character -> org.hibernate.type.CharacterType@fad878c
w2022-03-15 18:06:07 DEBUG Adding type registration char -> org.hibernate.type.CharacterType@fad878c
w2022-03-15 18:06:07 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@fad878c
w2022-03-15 18:06:07 DEBUG Adding type registration short -> org.hibernate.type.ShortType@2df8bee0
w2022-03-15 18:06:07 DEBUG Adding type registration short -> org.hibernate.type.ShortType@2df8bee0
w2022-03-15 18:06:07 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2df8bee0
w2022-03-15 18:06:07 DEBUG Adding type registration integer -> org.hibernate.type.IntegerType@517cf886
w2022-03-15 18:06:07 DEBUG Adding type registration int -> org.hibernate.type.IntegerType@517cf886
w2022-03-15 18:06:07 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@517cf886
w2022-03-15 18:06:07 DEBUG Adding type registration long -> org.hibernate.type.LongType@36f736ee
w2022-03-15 18:06:07 DEBUG Adding type registration long -> org.hibernate.type.LongType@36f736ee
w2022-03-15 18:06:07 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.LongType@36f736ee
w2022-03-15 18:06:07 DEBUG Adding type registration float -> org.hibernate.type.FloatType@a0a2117
w2022-03-15 18:06:07 DEBUG Adding type registration float -> org.hibernate.type.FloatType@a0a2117
w2022-03-15 18:06:07 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.FloatType@a0a2117
w2022-03-15 18:06:07 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@2dfc74e8
w2022-03-15 18:06:07 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@2dfc74e8
w2022-03-15 18:06:07 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2dfc74e8
w2022-03-15 18:06:07 DEBUG Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2cc38fb9
w2022-03-15 18:06:07 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2cc38fb9
w2022-03-15 18:06:07 DEBUG Adding type registration big_integer -> org.hibernate.type.BigIntegerType@656c2edc
w2022-03-15 18:06:07 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@656c2edc
w2022-03-15 18:06:07 DEBUG Adding type registration string -> org.hibernate.type.StringType@3bc7f466
w2022-03-15 18:06:07 DEBUG Adding type registration java.lang.String -> org.hibernate.type.StringType@3bc7f466
w2022-03-15 18:06:07 DEBUG Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3ac53b7c
w2022-03-15 18:06:07 DEBUG Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3569c835
w2022-03-15 18:06:07 DEBUG Adding type registration url -> org.hibernate.type.UrlType@6b25a49a
w2022-03-15 18:06:07 DEBUG Adding type registration java.net.URL -> org.hibernate.type.UrlType@6b25a49a
w2022-03-15 18:06:07 DEBUG Adding type registration Duration -> org.hibernate.type.DurationType@5aacb831
w2022-03-15 18:06:07 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5aacb831
w2022-03-15 18:06:07 DEBUG Adding type registration Instant -> org.hibernate.type.InstantType@31e311d9
w2022-03-15 18:06:07 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.InstantType@31e311d9
w2022-03-15 18:06:07 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@42c10e85
w2022-03-15 18:06:07 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@42c10e85
w2022-03-15 18:06:07 DEBUG Adding type registration LocalDate -> org.hibernate.type.LocalDateType@590ea908
w2022-03-15 18:06:07 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@590ea908
w2022-03-15 18:06:07 DEBUG Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5d31f9ac
w2022-03-15 18:06:07 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5d31f9ac
w2022-03-15 18:06:07 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3f3326ca
w2022-03-15 18:06:07 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3f3326ca
w2022-03-15 18:06:07 DEBUG Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@8b1a800
w2022-03-15 18:06:07 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@8b1a800
w2022-03-15 18:06:07 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2af357f2
w2022-03-15 18:06:07 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2af357f2
w2022-03-15 18:06:07 DEBUG Adding type registration date -> org.hibernate.type.DateType@75cdb719
w2022-03-15 18:06:07 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.DateType@75cdb719
w2022-03-15 18:06:07 DEBUG Adding type registration time -> org.hibernate.type.TimeType@4e04fdfd
w2022-03-15 18:06:07 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4e04fdfd
w2022-03-15 18:06:07 DEBUG Adding type registration timestamp -> org.hibernate.type.TimestampType@65101a4d
w2022-03-15 18:06:07 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@65101a4d
w2022-03-15 18:06:07 DEBUG Adding type registration java.util.Date -> org.hibernate.type.TimestampType@65101a4d
w2022-03-15 18:06:07 DEBUG Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3ec40d06
w2022-03-15 18:06:07 DEBUG Adding type registration calendar -> org.hibernate.type.CalendarType@625805d
w2022-03-15 18:06:07 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@625805d
w2022-03-15 18:06:07 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@625805d
w2022-03-15 18:06:07 DEBUG Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@9b469ea
w2022-03-15 18:06:07 DEBUG Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@1856c88d
w2022-03-15 18:06:07 DEBUG Adding type registration locale -> org.hibernate.type.LocaleType@36656c87
w2022-03-15 18:06:07 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@36656c87
w2022-03-15 18:06:07 DEBUG Adding type registration currency -> org.hibernate.type.CurrencyType@5571577b
w2022-03-15 18:06:07 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5571577b
w2022-03-15 18:06:07 DEBUG Adding type registration timezone -> org.hibernate.type.TimeZoneType@4a1f6cc2
w2022-03-15 18:06:07 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4a1f6cc2
w2022-03-15 18:06:07 DEBUG Adding type registration class -> org.hibernate.type.ClassType@368802ff
w2022-03-15 18:06:07 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.ClassType@368802ff
w2022-03-15 18:06:07 DEBUG Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5a2bd337
w2022-03-15 18:06:07 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5a2bd337
w2022-03-15 18:06:07 DEBUG Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@62bf0c55
w2022-03-15 18:06:07 DEBUG Adding type registration binary -> org.hibernate.type.BinaryType@321ce7ef
w2022-03-15 18:06:07 DEBUG Adding type registration byte[] -> org.hibernate.type.BinaryType@321ce7ef
w2022-03-15 18:06:07 DEBUG Adding type registration [B -> org.hibernate.type.BinaryType@321ce7ef
w2022-03-15 18:06:07 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@24898e26
w2022-03-15 18:06:07 DEBUG Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@24898e26
w2022-03-15 18:06:07 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@24898e26
w2022-03-15 18:06:07 DEBUG Adding type registration row_version -> org.hibernate.type.RowVersionType@587bb7f9
w2022-03-15 18:06:07 DEBUG Adding type registration image -> org.hibernate.type.ImageType@62d6cb4d
w2022-03-15 18:06:07 DEBUG Adding type registration characters -> org.hibernate.type.CharArrayType@7d788d8b
w2022-03-15 18:06:07 DEBUG Adding type registration char[] -> org.hibernate.type.CharArrayType@7d788d8b
w2022-03-15 18:06:07 DEBUG Adding type registration [C -> org.hibernate.type.CharArrayType@7d788d8b
w2022-03-15 18:06:07 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7357e515
w2022-03-15 18:06:07 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7357e515
w2022-03-15 18:06:07 DEBUG Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7357e515
w2022-03-15 18:06:07 DEBUG Adding type registration text -> org.hibernate.type.TextType@1778dd0f
w2022-03-15 18:06:07 DEBUG Adding type registration ntext -> org.hibernate.type.NTextType@75e204f9
w2022-03-15 18:06:07 DEBUG Adding type registration blob -> org.hibernate.type.BlobType@391ad07b
w2022-03-15 18:06:07 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@391ad07b
w2022-03-15 18:06:07 DEBUG Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@77baa95c
w2022-03-15 18:06:07 DEBUG Adding type registration clob -> org.hibernate.type.ClobType@17717a13
w2022-03-15 18:06:07 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@17717a13
w2022-03-15 18:06:07 DEBUG Adding type registration nclob -> org.hibernate.type.NClobType@73bb95e3
w2022-03-15 18:06:07 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@73bb95e3
w2022-03-15 18:06:07 DEBUG Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@a6d297a
w2022-03-15 18:06:07 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@67db0ec1
w2022-03-15 18:06:07 DEBUG Adding type registration serializable -> org.hibernate.type.SerializableType@648be2cc
w2022-03-15 18:06:07 DEBUG Adding type registration object -> org.hibernate.type.ObjectType@1c775cbb
w2022-03-15 18:06:07 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1c775cbb
w2022-03-15 18:06:07 DEBUG Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@225eae8d
w2022-03-15 18:06:07 DEBUG Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@46abcf9
w2022-03-15 18:06:07 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@58e04711
w2022-03-15 18:06:07 DEBUG Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@53f90210
w2022-03-15 18:06:07 DEBUG Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@404e424
w2022-03-15 18:06:07 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@55580d29
w2022-03-15 18:06:07 DEBUG Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@fda105c
w2022-03-15 18:06:07 DEBUG Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@14a87a35
w2022-03-15 18:06:07 INFO  HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
w2022-03-15 18:06:07 DEBUG Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@236b5c14] into BootstrapContext; was [null]
w2022-03-15 18:06:07 DEBUG ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@236b5c14) [was null]
w2022-03-15 18:06:07 DEBUG Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@5f1e064d] into BootstrapContext; was [null]
w2022-03-15 18:06:07 DEBUG Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@6abe10c9] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@695bff2]
w2022-03-15 18:06:07 DEBUG Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@236b5c14]
w2022-03-15 18:06:07 DEBUG ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@236b5c14]
w2022-03-15 18:06:07 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
w2022-03-15 18:06:07 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
w2022-03-15 18:06:07 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
w2022-03-15 18:06:07 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
w2022-03-15 18:06:07 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
w2022-03-15 18:06:07 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
w2022-03-15 18:06:07 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
w2022-03-15 18:06:07 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
w2022-03-15 18:06:07 DEBUG Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
w2022-03-15 18:06:07 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
w2022-03-15 18:06:07 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
w2022-03-15 18:06:07 DEBUG Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
w2022-03-15 18:06:07 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
w2022-03-15 18:06:07 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
w2022-03-15 18:06:07 DEBUG Database ->
       name : SQLite
    version : 3.36.0
      major : 3
      minor : 36
w2022-03-15 18:06:07 DEBUG Driver ->
       name : SQLite JDBC
    version : 3.36.0.3
      major : 3
      minor : 36
w2022-03-15 18:06:07 DEBUG JDBC version : 2.1
w2022-03-15 18:06:07 INFO  HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
w2022-03-15 18:06:07 DEBUG JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
w2022-03-15 18:06:07 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
w2022-03-15 18:06:07 DEBUG HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [2] less than 4
w2022-03-15 18:06:07 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1bd13837] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5a6ba92a]
w2022-03-15 18:06:07 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
w2022-03-15 18:06:07 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.Comment
w2022-03-15 18:06:07 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 18:06:07 DEBUG Import with entity name Comment
w2022-03-15 18:06:07 DEBUG Bind entity ru.edu.helpdesk.entity.Comment on table comment
w2022-03-15 18:06:07 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 18:06:07 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Comment] is safe
w2022-03-15 18:06:07 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Comment
w2022-03-15 18:06:07 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 18:06:07 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Comment:id]
w2022-03-15 18:06:07 DEBUG building SimpleValue for id
w2022-03-15 18:06:07 DEBUG Building property id
w2022-03-15 18:06:07 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 18:06:07 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=message, insertable=true, updatable=true, unique=false}
w2022-03-15 18:06:07 DEBUG MetadataSourceProcessor property message with lazy=false
w2022-03-15 18:06:07 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Comment:message]
w2022-03-15 18:06:07 DEBUG building SimpleValue for message
w2022-03-15 18:06:07 DEBUG Building property message
w2022-03-15 18:06:07 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 18:06:07 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=ticket, insertable=true, updatable=true, unique=false}
w2022-03-15 18:06:07 DEBUG Building property ticket
w2022-03-15 18:06:07 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 18:06:07 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=user, insertable=true, updatable=true, unique=false}
w2022-03-15 18:06:07 DEBUG Building property user
w2022-03-15 18:06:07 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 18:06:07 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 18:06:07 DEBUG Import with entity name Ticket
w2022-03-15 18:06:07 DEBUG Bind entity ru.edu.helpdesk.entity.Ticket on table ticket
w2022-03-15 18:06:07 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 18:06:07 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Ticket] is safe
w2022-03-15 18:06:07 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Ticket
w2022-03-15 18:06:07 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 18:06:07 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:id]
w2022-03-15 18:06:07 DEBUG building SimpleValue for id
w2022-03-15 18:06:07 DEBUG Building property id
w2022-03-15 18:06:07 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 18:06:07 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 18:06:07 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=client, insertable=true, updatable=true, unique=false}
w2022-03-15 18:06:07 DEBUG Building property client
w2022-03-15 18:06:07 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=status, insertable=true, updatable=true, unique=false}
w2022-03-15 18:06:07 DEBUG MetadataSourceProcessor property status with lazy=false
w2022-03-15 18:06:07 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:status]
w2022-03-15 18:06:07 DEBUG building SimpleValue for status
w2022-03-15 18:06:07 DEBUG Building property status
w2022-03-15 18:06:07 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 18:06:07 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=support, insertable=true, updatable=true, unique=false}
w2022-03-15 18:06:07 DEBUG Building property support
w2022-03-15 18:06:07 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=title, insertable=true, updatable=true, unique=false}
w2022-03-15 18:06:07 DEBUG MetadataSourceProcessor property title with lazy=false
w2022-03-15 18:06:07 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:title]
w2022-03-15 18:06:07 DEBUG building SimpleValue for title
w2022-03-15 18:06:07 DEBUG Building property title
w2022-03-15 18:06:07 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.User
w2022-03-15 18:06:07 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 18:06:07 DEBUG Import with entity name User
w2022-03-15 18:06:07 DEBUG Bind entity ru.edu.helpdesk.entity.User on table user
w2022-03-15 18:06:07 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 18:06:07 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.User] is safe
w2022-03-15 18:06:07 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.User
w2022-03-15 18:06:07 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 18:06:07 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:id]
w2022-03-15 18:06:07 DEBUG building SimpleValue for id
w2022-03-15 18:06:07 DEBUG Building property id
w2022-03-15 18:06:07 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 18:06:07 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
w2022-03-15 18:06:07 DEBUG MetadataSourceProcessor property firstName with lazy=false
w2022-03-15 18:06:07 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:firstName]
w2022-03-15 18:06:07 DEBUG building SimpleValue for firstName
w2022-03-15 18:06:07 DEBUG Building property firstName
w2022-03-15 18:06:07 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
w2022-03-15 18:06:07 DEBUG MetadataSourceProcessor property lastName with lazy=false
w2022-03-15 18:06:07 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:lastName]
w2022-03-15 18:06:07 DEBUG building SimpleValue for lastName
w2022-03-15 18:06:07 DEBUG Building property lastName
w2022-03-15 18:06:07 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=login, insertable=true, updatable=true, unique=false}
w2022-03-15 18:06:07 DEBUG MetadataSourceProcessor property login with lazy=false
w2022-03-15 18:06:07 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:login]
w2022-03-15 18:06:07 DEBUG building SimpleValue for login
w2022-03-15 18:06:07 DEBUG Building property login
w2022-03-15 18:06:07 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
w2022-03-15 18:06:07 DEBUG MetadataSourceProcessor property password with lazy=false
w2022-03-15 18:06:07 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:password]
w2022-03-15 18:06:07 DEBUG building SimpleValue for password
w2022-03-15 18:06:07 DEBUG Building property password
w2022-03-15 18:06:07 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=role, insertable=true, updatable=true, unique=false}
w2022-03-15 18:06:07 DEBUG MetadataSourceProcessor property role with lazy=false
w2022-03-15 18:06:07 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:role]
w2022-03-15 18:06:07 DEBUG building SimpleValue for role
w2022-03-15 18:06:07 DEBUG Building property role
w2022-03-15 18:06:07 DEBUG Starting fillSimpleValue for id
w2022-03-15 18:06:07 DEBUG Starting fillSimpleValue for message
w2022-03-15 18:06:07 DEBUG Starting fillSimpleValue for id
w2022-03-15 18:06:07 DEBUG Starting fillSimpleValue for status
w2022-03-15 18:06:07 DEBUG Starting fillSimpleValue for title
w2022-03-15 18:06:07 DEBUG Starting fillSimpleValue for id
w2022-03-15 18:06:07 DEBUG Starting fillSimpleValue for firstName
w2022-03-15 18:06:07 DEBUG Starting fillSimpleValue for lastName
w2022-03-15 18:06:07 DEBUG Starting fillSimpleValue for login
w2022-03-15 18:06:07 DEBUG Starting fillSimpleValue for password
w2022-03-15 18:06:07 DEBUG Starting fillSimpleValue for role
w2022-03-15 18:06:07 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [comment]
w2022-03-15 18:06:07 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [ticket]
w2022-03-15 18:06:07 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [user]
w2022-03-15 18:06:07 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 18:06:07 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 18:06:07 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 18:06:07 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 18:06:07 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 18:06:07 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 18:06:07 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 18:06:07 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 18:06:07 DEBUG Building session factory
w2022-03-15 18:06:07 DEBUG SessionFactory name : null
w2022-03-15 18:06:07 DEBUG Automatic flush during beforeCompletion(): enabled
w2022-03-15 18:06:07 DEBUG Automatic session close at end of transaction: disabled
w2022-03-15 18:06:07 DEBUG Statistics: disabled
w2022-03-15 18:06:07 DEBUG Deleted entity synthetic identifier rollback: disabled
w2022-03-15 18:06:07 DEBUG Default entity-mode: pojo
w2022-03-15 18:06:07 DEBUG Check Nullability in Core (should be disabled when Bean Validation is on): enabled
w2022-03-15 18:06:07 DEBUG Allow initialization of lazy state outside session : disabled
w2022-03-15 18:06:07 DEBUG Using BatchFetchStyle : LEGACY
w2022-03-15 18:06:07 DEBUG Default batch fetch size: -1
w2022-03-15 18:06:07 DEBUG Maximum outer join fetch depth: null
w2022-03-15 18:06:07 DEBUG Default null ordering: NONE
w2022-03-15 18:06:07 DEBUG Order SQL updates by primary key: disabled
w2022-03-15 18:06:07 DEBUG Order SQL inserts for batching: disabled
w2022-03-15 18:06:07 DEBUG multi-tenancy strategy : NONE
w2022-03-15 18:06:07 DEBUG JTA Track by Thread: enabled
w2022-03-15 18:06:07 DEBUG Query language substitutions: {}
w2022-03-15 18:06:07 DEBUG Named query checking : enabled
w2022-03-15 18:06:07 DEBUG Second-level cache: disabled
w2022-03-15 18:06:07 DEBUG Second-level query cache: disabled
w2022-03-15 18:06:07 DEBUG Second-level query cache factory: null
w2022-03-15 18:06:07 DEBUG Second-level cache region prefix: null
w2022-03-15 18:06:07 DEBUG Optimize second-level cache for minimal puts: disabled
w2022-03-15 18:06:07 DEBUG Structured second-level cache entries: disabled
w2022-03-15 18:06:07 DEBUG Second-level cache direct-reference entries: disabled
w2022-03-15 18:06:07 DEBUG Automatic eviction of collection cache: disabled
w2022-03-15 18:06:07 DEBUG JDBC batch size: 1
w2022-03-15 18:06:07 DEBUG JDBC batch updates for versioned data: enabled
w2022-03-15 18:06:07 DEBUG Scrollable result sets: disabled
w2022-03-15 18:06:07 DEBUG Wrap result sets: disabled
w2022-03-15 18:06:07 DEBUG JDBC3 getGeneratedKeys(): enabled
w2022-03-15 18:06:07 DEBUG JDBC result set fetch size: null
w2022-03-15 18:06:07 DEBUG Connection release mode: ON_CLOSE
w2022-03-15 18:06:07 DEBUG Generate SQL with comments: disabled
w2022-03-15 18:06:07 DEBUG JPA compliance - query : disabled
w2022-03-15 18:06:07 DEBUG JPA compliance - closed-handling : disabled
w2022-03-15 18:06:07 DEBUG JPA compliance - lists : disabled
w2022-03-15 18:06:07 DEBUG JPA compliance - transactions : disabled
w2022-03-15 18:06:07 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 18:06:07 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 18:06:07 DEBUG Session factory constructed with filter configurations : {}
w2022-03-15 18:06:07 DEBUG Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=true, java.specification.version=1.8, file.encoding.pkg=sun.io, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@5eeff0b6, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.SQLiteDialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\charsets.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\cldrdata.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\dnsns.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\jaccess.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\localedata.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\nashorn.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunec.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunmscapi.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\zipfs.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jce.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jfr.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jsse.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\management-agent.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\resources.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\rt.jar;C:\Users\Ольга\Desktop\Java\Project\Project1\helpdeskproject\target\classes;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\2.6.4\spring-boot-starter-data-jpa-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\2.6.4\spring-boot-starter-jdbc-2.6.4.jar;C:\Users\Ольга\.m2\repository\com\zaxxer\HikariCP\4.0.3\HikariCP-4.0.3.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-jdbc\5.3.16\spring-jdbc-5.3.16.jar;C:\Users\Ольга\.m2\repository\jakarta\transaction\jakarta.transaction-api\1.3.3\jakarta.transaction-api-1.3.3.jar;C:\Users\Ольга\.m2\repository\jakarta\persistence\jakarta.persistence-api\2.2.3\jakarta.persistence-api-2.2.3.jar;C:\Users\Ольга\.m2\repository\org\hibernate\hibernate-core\5.6.5.Final\hibernate-core-5.6.5.Final.jar;C:\Users\Ольга\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy\1.11.22\byte-buddy-1.11.22.jar;C:\Users\Ольга\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ольга\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Ольга\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.6\jaxb-runtime-2.3.6.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\txw2\2.3.6\txw2-2.3.6.jar;C:\Users\Ольга\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.12\istack-commons-runtime-3.0.12.jar;C:\Users\Ольга\.m2\repository\com\sun\activation\jakarta.activation\1.2.2\jakarta.activation-1.2.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\data\spring-data-jpa\2.6.2\spring-data-jpa-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\data\spring-data-commons\2.6.2\spring-data-commons-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-orm\5.3.16\spring-orm-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-context\5.3.16\spring-context-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-tx\5.3.16\spring-tx-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-beans\5.3.16\spring-beans-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-aspects\5.3.16\spring-aspects-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-security\2.6.4\spring-boot-starter-security-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter\2.6.4\spring-boot-starter-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-logging\2.6.4\spring-boot-starter-logging-2.6.4.jar;C:\Users\Ольга\.m2\repository\ch\qos\logback\logback-classic\1.2.10\logback-classic-1.2.10.jar;C:\Users\Ольга\.m2\repository\ch\qos\logback\logback-core\1.2.10\logback-core-1.2.10.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.17.1\log4j-to-slf4j-2.17.1.jar;C:\Users\Ольга\.m2\repository\org\slf4j\jul-to-slf4j\1.7.36\jul-to-slf4j-1.7.36.jar;C:\Users\Ольга\.m2\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;C:\Users\Ольга\.m2\repository\org\yaml\snakeyaml\1.29\snakeyaml-1.29.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-aop\5.3.16\spring-aop-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-config\5.6.2\spring-security-config-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-web\5.6.2\spring-security-web-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-expression\5.3.16\spring-expression-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-web\2.6.4\spring-boot-starter-web-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-json\2.6.4\spring-boot-starter-json-2.6.4.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.13.1\jackson-datatype-jdk8-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.13.1\jackson-datatype-jsr310-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.13.1\jackson-module-parameter-names-2.13.1.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\2.6.4\spring-boot-starter-tomcat-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.58\tomcat-embed-core-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\9.0.58\tomcat-embed-el-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.58\tomcat-embed-websocket-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-web\5.3.16\spring-web-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-webmvc\5.3.16\spring-webmvc-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-devtools\2.6.4\spring-boot-devtools-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot\2.6.4\spring-boot-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\2.6.4\spring-boot-autoconfigure-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\xerial\sqlite-jdbc\3.36.0.3\sqlite-jdbc-3.36.0.3.jar;C:\Users\Ольга\.m2\repository\com\zsoltfabok\sqlite-dialect\1.0\sqlite-dialect-1.0.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-aop\2.6.2\spring-boot-starter-aop-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\aspectj\aspectjweaver\1.9.7\aspectjweaver-1.9.7.jar;C:\Users\Ольга\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.3\jakarta.xml.bind-api-2.3.3.jar;C:\Users\Ольга\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.2\jakarta.activation-api-1.2.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-core\5.3.16\spring-core-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-jcl\5.3.16\spring-jcl-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-core\5.6.2\spring-security-core-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-crypto\5.6.2\spring-security-crypto-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\projectlombok\lombok\1.18.22\lombok-1.18.22.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\2.6.4\spring-boot-starter-thymeleaf-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\thymeleaf-spring5\3.0.15.RELEASE\thymeleaf-spring5-3.0.15.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\thymeleaf\3.0.15.RELEASE\thymeleaf-3.0.15.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\attoparser\attoparser\2.0.5.RELEASE\attoparser-2.0.5.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-java8time\3.0.4.RELEASE\thymeleaf-extras-java8time-3.0.4.RELEASE.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.1\jackson-databind-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.1\jackson-annotations-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.1\jackson-core-2.13.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-api\2.4.1\log4j-api-2.4.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-core\2.4.1\log4j-core-2.4.1.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.2\lib\idea_rt.jar, java.vm.vendor=Temurin, sun.arch.data.model=64, user.variant=, java.vendor.url=https://adoptium.net/, catalina.useNaming=false, user.timezone=Europe/Moscow, jakarta.persistence.sharedCache.mode=UNSPECIFIED, os.name=Windows 10, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), user.country=RU, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\bin, sun.java.command=ru.edu.helpdesk.HelpdeskApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@3b56db8d, com.sun.management.jmxremote=, javax.persistence.sharedCache.mode=UNSPECIFIED, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, user.home=C:\Users\Ольга, user.language=ru, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre, file.separator=\, spring.output.ansi.enabled=always, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, sun.boot.class.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\resources.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\rt.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\sunrsasign.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jsse.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jce.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\charsets.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jfr.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\classes, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_312-b07, user.name=Эльдорадо, spring.jmx.enabled=true, path.separator=;, os.version=10.0, java.endorsed.dirs=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\endorsed, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=default, spring.beaninfo.ignore=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=C:\Users\134E~1\AppData\Local\Temp\, catalina.home=C:\Users\Ольга\AppData\Local\Temp\tomcat.8080.8594019032779694357, java.version=1.8.0_312, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\Ольга\Desktop\Java\Project\Project1\helpdeskproject, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=15544, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\Ольга\AppData\Local\Temp\tomcat.8080.8594019032779694357, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@39c1bdc0, java.library.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\windows\System32\OpenSSH\;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\Program Files\apache-maven-3.8.4\bin;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Ольга\AppData\Local\Microsoft\WindowsApps;C:\Users\Ольга\AppData\Local\Programs\Microsoft VS Code\bin;C:\SQLite;C:\Users\Ольга\AppData\Roaming\npm;C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.2\bin;;., java.vendor=Temurin, java.vm.info=mixed mode, java.vm.version=25.312-b07, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, java.ext.dirs=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext;C:\windows\Sun\Java\lib\ext, hibernate.connection.datasource=HikariDataSource (HikariPool-1), hibernate.hbm2ddl.import_files=data/import.sql, java.class.version=52.0}
w2022-03-15 18:06:07 DEBUG Skipping JACC integration as it was not enabled
w2022-03-15 18:06:07 DEBUG Using ORDINAL-based conversion for Enum ru.edu.helpdesk.entity.UserRole
w2022-03-15 18:06:07 DEBUG Using ORDINAL-based conversion for Enum ru.edu.helpdesk.entity.TicketStatus
w2022-03-15 18:06:07 DEBUG Instantiated session factory
w2022-03-15 18:06:07 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1bd13837] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@296c42be]
w2022-03-15 18:06:07 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.User] is safe
w2022-03-15 18:06:07 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.User
w2022-03-15 18:06:07 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:06:07 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:06:07 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:06:07 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:06:07 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Ticket] is safe
w2022-03-15 18:06:07 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Ticket
w2022-03-15 18:06:07 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:06:07 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:06:07 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:06:07 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:06:07 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:06:07 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:06:07 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:06:07 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:06:07 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Comment] is safe
w2022-03-15 18:06:07 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Comment
w2022-03-15 18:06:07 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:06:07 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:06:07 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:06:07 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:06:07 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.User
w2022-03-15 18:06:07 DEBUG  Version select: select id from user where id =?
w2022-03-15 18:06:07 DEBUG  Snapshot select: select user_.id, user_.first_name as first_na2_2_, user_.last_name as last_nam3_2_, user_.login as login4_2_, user_.password as password5_2_, user_.role as role6_2_ from user user_ where user_.id=?
w2022-03-15 18:06:07 DEBUG  Insert 0: insert into user (first_name, last_name, login, password, role, id) values (?, ?, ?, ?, ?, ?)
w2022-03-15 18:06:07 DEBUG  Update 0: update user set first_name=?, last_name=?, login=?, password=?, role=? where id=?
w2022-03-15 18:06:07 DEBUG  Delete 0: delete from user where id=?
w2022-03-15 18:06:07 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@746fc49]
w2022-03-15 18:06:07 DEBUG Visiting attribute path : firstName
w2022-03-15 18:06:07 DEBUG Visiting attribute path : lastName
w2022-03-15 18:06:07 DEBUG Visiting attribute path : login
w2022-03-15 18:06:07 DEBUG Visiting attribute path : password
w2022-03-15 18:06:07 DEBUG Visiting attribute path : role
w2022-03-15 18:06:07 DEBUG Building LoadPlan...
w2022-03-15 18:06:07 DEBUG processing queryspace <gen:0>
w2022-03-15 18:06:07 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.User)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

w2022-03-15 18:06:07 DEBUG Static select for entity ru.edu.helpdesk.entity.User [NONE]: select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 18:06:07 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.Ticket
w2022-03-15 18:06:07 DEBUG  Version select: select id from ticket where id =?
w2022-03-15 18:06:07 DEBUG  Snapshot select: select ticket_.id, ticket_.client_id as client_i4_1_, ticket_.status as status2_1_, ticket_.support_id as support_5_1_, ticket_.title as title3_1_ from ticket ticket_ where ticket_.id=?
w2022-03-15 18:06:07 DEBUG  Insert 0: insert into ticket (client_id, status, support_id, title, id) values (?, ?, ?, ?, ?)
w2022-03-15 18:06:07 DEBUG  Update 0: update ticket set client_id=?, status=?, support_id=?, title=? where id=?
w2022-03-15 18:06:07 DEBUG  Delete 0: delete from ticket where id=?
w2022-03-15 18:06:07 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d90aa73]
w2022-03-15 18:06:07 DEBUG Visiting attribute path : client
w2022-03-15 18:06:07 DEBUG Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f85044e]
w2022-03-15 18:06:07 DEBUG Visiting attribute path : client.firstName
w2022-03-15 18:06:07 DEBUG Visiting attribute path : client.lastName
w2022-03-15 18:06:07 DEBUG Visiting attribute path : client.login
w2022-03-15 18:06:07 DEBUG Visiting attribute path : client.password
w2022-03-15 18:06:07 DEBUG Visiting attribute path : client.role
w2022-03-15 18:06:07 DEBUG Visiting attribute path : status
w2022-03-15 18:06:07 DEBUG Visiting attribute path : support
w2022-03-15 18:06:07 DEBUG Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e77a157]
w2022-03-15 18:06:07 DEBUG Visiting attribute path : support.firstName
w2022-03-15 18:06:07 DEBUG Visiting attribute path : support.lastName
w2022-03-15 18:06:07 DEBUG Visiting attribute path : support.login
w2022-03-15 18:06:07 DEBUG Visiting attribute path : support.password
w2022-03-15 18:06:07 DEBUG Visiting attribute path : support.role
w2022-03-15 18:06:07 DEBUG Visiting attribute path : title
w2022-03-15 18:06:07 DEBUG Building LoadPlan...
w2022-03-15 18:06:07 DEBUG processing queryspace <gen:0>
w2022-03-15 18:06:07 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.Ticket)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.Ticket, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.Ticket)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:1>, path=ru.edu.helpdesk.entity.Ticket.client)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:2>, path=ru.edu.helpdesk.entity.Ticket.support)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.Ticket)
          - SQL table alias mapping - ticket0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(client)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
          - JOIN (JoinDefinedByMetadata(support)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user2_
                - alias suffix - 2_
                - suffixed key columns - {id1_2_2_}

w2022-03-15 18:06:07 DEBUG Static select for entity ru.edu.helpdesk.entity.Ticket [NONE]: select ticket0_.id as id1_1_0_, ticket0_.client_id as client_i4_1_0_, ticket0_.status as status2_1_0_, ticket0_.support_id as support_5_1_0_, ticket0_.title as title3_1_0_, user1_.id as id1_2_1_, user1_.first_name as first_na2_2_1_, user1_.last_name as last_nam3_2_1_, user1_.login as login4_2_1_, user1_.password as password5_2_1_, user1_.role as role6_2_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id left outer join user user2_ on ticket0_.support_id=user2_.id where ticket0_.id=?
w2022-03-15 18:06:07 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.Comment
w2022-03-15 18:06:07 DEBUG  Version select: select id from comment where id =?
w2022-03-15 18:06:07 DEBUG  Snapshot select: select comment_.id, comment_.message as message2_0_, comment_.ticket_id as ticket_i3_0_, comment_.user_id as user_id4_0_ from comment comment_ where comment_.id=?
w2022-03-15 18:06:07 DEBUG  Insert 0: insert into comment (message, ticket_id, user_id, id) values (?, ?, ?, ?)
w2022-03-15 18:06:07 DEBUG  Update 0: update comment set message=?, ticket_id=?, user_id=? where id=?
w2022-03-15 18:06:07 DEBUG  Delete 0: delete from comment where id=?
w2022-03-15 18:06:07 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@289981ee]
w2022-03-15 18:06:07 DEBUG Visiting attribute path : message
w2022-03-15 18:06:07 DEBUG Visiting attribute path : ticket
w2022-03-15 18:06:07 DEBUG Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@658c1841]
w2022-03-15 18:06:07 DEBUG Visiting attribute path : ticket.client
w2022-03-15 18:06:07 DEBUG Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5385b937]
w2022-03-15 18:06:07 DEBUG Visiting attribute path : ticket.client.firstName
w2022-03-15 18:06:07 DEBUG Visiting attribute path : ticket.client.lastName
w2022-03-15 18:06:07 DEBUG Visiting attribute path : ticket.client.login
w2022-03-15 18:06:07 DEBUG Visiting attribute path : ticket.client.password
w2022-03-15 18:06:07 DEBUG Visiting attribute path : ticket.client.role
w2022-03-15 18:06:07 DEBUG Visiting attribute path : ticket.status
w2022-03-15 18:06:07 DEBUG Visiting attribute path : ticket.support
w2022-03-15 18:06:07 DEBUG Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a5c488]
w2022-03-15 18:06:07 DEBUG Visiting attribute path : ticket.support.firstName
w2022-03-15 18:06:07 DEBUG Visiting attribute path : ticket.support.lastName
w2022-03-15 18:06:07 DEBUG Visiting attribute path : ticket.support.login
w2022-03-15 18:06:07 DEBUG Visiting attribute path : ticket.support.password
w2022-03-15 18:06:07 DEBUG Visiting attribute path : ticket.support.role
w2022-03-15 18:06:07 DEBUG Visiting attribute path : ticket.title
w2022-03-15 18:06:07 DEBUG Visiting attribute path : user
w2022-03-15 18:06:07 DEBUG Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@722f41a7]
w2022-03-15 18:06:07 DEBUG Visiting attribute path : user.firstName
w2022-03-15 18:06:07 DEBUG Visiting attribute path : user.lastName
w2022-03-15 18:06:07 DEBUG Visiting attribute path : user.login
w2022-03-15 18:06:07 DEBUG Visiting attribute path : user.password
w2022-03-15 18:06:07 DEBUG Visiting attribute path : user.role
w2022-03-15 18:06:07 DEBUG Building LoadPlan...
w2022-03-15 18:06:07 DEBUG processing queryspace <gen:0>
w2022-03-15 18:06:07 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.Comment)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.Comment, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.Comment)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.Ticket, querySpaceUid=<gen:1>, path=ru.edu.helpdesk.entity.Comment.ticket)
             - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:2>, path=ru.edu.helpdesk.entity.Comment.ticket.client)
             - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:3>, path=ru.edu.helpdesk.entity.Comment.ticket.support)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:4>, path=ru.edu.helpdesk.entity.Comment.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(ticket)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ru.edu.helpdesk.entity.Ticket)
                - SQL table alias mapping - ticket1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(client)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=ru.edu.helpdesk.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}
                - JOIN (JoinDefinedByMetadata(support)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=ru.edu.helpdesk.entity.User)
                      - SQL table alias mapping - user3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_2_3_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user4_
                - alias suffix - 4_
                - suffixed key columns - {id1_2_4_}

w2022-03-15 18:06:07 DEBUG Static select for entity ru.edu.helpdesk.entity.Comment [NONE]: select comment0_.id as id1_0_0_, comment0_.message as message2_0_0_, comment0_.ticket_id as ticket_i3_0_0_, comment0_.user_id as user_id4_0_0_, ticket1_.id as id1_1_1_, ticket1_.client_id as client_i4_1_1_, ticket1_.status as status2_1_1_, ticket1_.support_id as support_5_1_1_, ticket1_.title as title3_1_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_, user3_.id as id1_2_3_, user3_.first_name as first_na2_2_3_, user3_.last_name as last_nam3_2_3_, user3_.login as login4_2_3_, user3_.password as password5_2_3_, user3_.role as role6_2_3_, user4_.id as id1_2_4_, user4_.first_name as first_na2_2_4_, user4_.last_name as last_nam3_2_4_, user4_.login as login4_2_4_, user4_.password as password5_2_4_, user4_.role as role6_2_4_ from comment comment0_ left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id left outer join user user2_ on ticket1_.client_id=user2_.id left outer join user user3_ on ticket1_.support_id=user3_.id left outer join user user4_ on comment0_.user_id=user4_.id where comment0_.id=?
w2022-03-15 18:06:07 DEBUG drop table if exists comment
w2022-03-15 18:06:07 DEBUG drop table if exists hibernate_sequence
w2022-03-15 18:06:07 DEBUG drop table if exists ticket
w2022-03-15 18:06:07 DEBUG drop table if exists user
w2022-03-15 18:06:07 DEBUG create table comment (id bigint not null, message varchar(255) not null, ticket_id bigint, user_id bigint, primary key (id))
w2022-03-15 18:06:07 DEBUG create table hibernate_sequence (next_val bigint)
w2022-03-15 18:06:07 DEBUG insert into hibernate_sequence values ( 1 )
w2022-03-15 18:06:07 DEBUG create table ticket (id bigint not null, status integer, title varchar(255) not null, client_id bigint, support_id bigint, primary key (id))
w2022-03-15 18:06:07 DEBUG create table user (id bigint not null, first_name varchar(255), last_name varchar(255), login varchar(255) not null, password varchar(255) not null, role integer, primary key (id))
w2022-03-15 18:06:07 INFO  HHH000476: Executing import script 'file:/C:/Users/%d0%9e%d0%bb%d1%8c%d0%b3%d0%b0/Desktop/Java/Project/Project1/helpdeskproject/target/classes/data/import.sql'
w2022-03-15 18:06:07 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (1, 'admin', 'admin', 'admin', 'admin', 0)
w2022-03-15 18:06:07 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (2, 'support', 'support', 'support', 'support', 1)
w2022-03-15 18:06:07 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (3, 'user1', 'user1', 'user1', 'user1', 2)
w2022-03-15 18:06:07 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (4, 'user2', 'user2', 'user2', 'user2', 2)
w2022-03-15 18:06:07 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (1, 1, 'Hello user1',1, 2)
w2022-03-15 18:06:07 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (2, 0, 'Title2', 1, NULL)
w2022-03-15 18:06:07 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (3, 0, 'Message user2', 4, NULL)
w2022-03-15 18:06:07 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (1, "comment ticket1", 1, 3)
w2022-03-15 18:06:07 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (2, "comment ticket2", 2, 3)
w2022-03-15 18:06:07 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (3, "comment ticket11", 1, 2)
w2022-03-15 18:06:07 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (4, "comment ticket111", 1, 2)
w2022-03-15 18:06:07 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (5, "comment ticket22", 2, 2)
w2022-03-15 18:06:07 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (6, "comment ticket3", 3, 4)
w2022-03-15 18:06:07 DEBUG UPDATE hibernate_sequence SET next_val = 8 WHERE next_val = 1
w2022-03-15 18:06:07 INFO  HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
w2022-03-15 18:06:07 DEBUG Checking 0 named HQL queries
w2022-03-15 18:06:07 DEBUG Checking 0 named SQL queries
w2022-03-15 18:06:07 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 18:06:07 DEBUG Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@58467863
w2022-03-15 18:06:07 DEBUG Registering SessionFactory: 5d09af95-e9f9-4dc0-a034-bd2eb44ed0ea (<unnamed>)
w2022-03-15 18:06:07 DEBUG Not binding SessionFactory to JNDI, no JNDI name configured
w2022-03-15 18:06:07 DEBUG Statistics initialized [enabled=false]
w2022-03-15 18:06:07 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 18:06:08 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 18:06:08 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 18:06:17 DEBUG Rendered criteria query -> select generatedAlias0 from Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 18:06:17 DEBUG QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@15735ca4
w2022-03-15 18:06:17 DEBUG parse() - HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 18:06:17 DEBUG throwQueryException() : no errors
w2022-03-15 18:06:17 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[IDENT] Node: 'ru'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'edu'
    |  |  |  |  |  |  \-[IDENT] Node: 'helpdesk'
    |  |  |  |  |  \-[IDENT] Node: 'entity'
    |  |  |  |  \-[IDENT] Node: 'Ticket'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'client'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias1'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

w2022-03-15 18:06:17 DEBUG select << begin [level=1, statement=select]
w2022-03-15 18:06:17 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.Ticket (generatedAlias0) -> ticket0_
w2022-03-15 18:06:17 DEBUG Resolved : generatedAlias0 -> ticket0_.id
w2022-03-15 18:06:17 DEBUG getDataType() : client -> org.hibernate.type.ManyToOneType(ru.edu.helpdesk.entity.User)
w2022-03-15 18:06:17 DEBUG dereferenceEntityJoin() : generating join for client in ru.edu.helpdesk.entity.Ticket (generatedAlias1) parent = [ {null} ]
w2022-03-15 18:06:17 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.User (generatedAlias1) -> user1_
w2022-03-15 18:06:17 DEBUG addJoinByPathMap() : generatedAlias0.client -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}
w2022-03-15 18:06:17 DEBUG Resolved : generatedAlias0.client -> ticket0_.client_id
w2022-03-15 18:06:17 DEBUG createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'user user1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Ticket.client,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}

w2022-03-15 18:06:17 DEBUG Resolved : generatedAlias0 -> ticket0_.id
w2022-03-15 18:06:17 DEBUG Resolved : generatedAlias1 -> user1_.id
w2022-03-15 18:06:17 DEBUG getDataType() : id -> org.hibernate.type.LongType@36f736ee
w2022-03-15 18:06:17 DEBUG Resolved : generatedAlias1.id -> user1_.id
w2022-03-15 18:06:17 DEBUG select : finishing up [level=1, statement=select]
w2022-03-15 18:06:17 DEBUG processQuery() :  ( SELECT ( {select clause} ticket0_.id ) ( FromClause{level=1} ( ticket ticket0_ user user1_ ) ) ( where ( = ( user1_.id user1_.id id ) ? ) ) )
w2022-03-15 18:06:17 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Ticket): [ticket]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.Ticket)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.User)
          | path: generatedAlias1.id
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.User)
          |  | originalText: generatedAlias1
          |  \-IdentNode
          |    persister: null
          |    originalText: id
          \-ParameterNode

w2022-03-15 18:06:17 DEBUG Using FROM fragment [ticket ticket0_]
w2022-03-15 18:06:17 DEBUG Using FROM fragment [left outer join user user1_ on ticket0_.client_id=user1_.id]
w2022-03-15 18:06:17 DEBUG select >> end [level=1, statement=select]
w2022-03-15 18:06:17 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (ticket,user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'ticket0_.id as id1_1_' {alias=generatedAlias0, className=ru.edu.helpdesk.entity.Ticket, tableAlias=ticket0_}
    |  \-[SQL_TOKEN] SqlFragment: 'ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[ticket0_, user1_], fromElementsByPath=[generatedAlias0.client], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'ticket ticket0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=ticket,tableAlias=ticket0_,origin=null,columns={,className=ru.edu.helpdesk.entity.Ticket}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join user user1_ on ticket0_.client_id=user1_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Ticket.client,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user1_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias1.id,tableAlias=user1_,className=ru.edu.helpdesk.entity.User,classAlias=generatedAlias1}
          |  +-[ALIAS_REF] IdentNode: 'user1_.id' {alias=generatedAlias1, className=ru.edu.helpdesk.entity.User, tableAlias=user1_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LongType@36f736ee}

w2022-03-15 18:06:17 DEBUG throwQueryException() : no errors
w2022-03-15 18:06:17 DEBUG HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 18:06:17 DEBUG SQL: select ticket0_.id as id1_1_, ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id where user1_.id=?
w2022-03-15 18:06:17 DEBUG throwQueryException() : no errors
w2022-03-15 18:06:18 DEBUG select ticket0_.id as id1_1_, ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id where user1_.id=?
w2022-03-15 18:06:18 DEBUG Result set row: 0
w2022-03-15 18:06:18 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 18:06:18 DEBUG Result set row: 1
w2022-03-15 18:06:18 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 18:06:18 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 18:06:18 DEBUG Processing attribute `client` : value = 1
w2022-03-15 18:06:18 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 18:06:18 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 18:06:18 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 18:06:18 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#1]
w2022-03-15 18:06:18 DEBUG Processing attribute `firstName` : value = admin
w2022-03-15 18:06:18 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:06:18 DEBUG Processing attribute `lastName` : value = admin
w2022-03-15 18:06:18 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:06:18 DEBUG Processing attribute `login` : value = admin
w2022-03-15 18:06:18 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 18:06:18 DEBUG Processing attribute `password` : value = admin
w2022-03-15 18:06:18 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 18:06:18 DEBUG Processing attribute `role` : value = ADMIN
w2022-03-15 18:06:18 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 18:06:18 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#1]
w2022-03-15 18:06:18 DEBUG Done entity load : ru.edu.helpdesk.entity.User#1
w2022-03-15 18:06:18 DEBUG Processing attribute `status` : value = WORKING
w2022-03-15 18:06:18 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 18:06:18 DEBUG Processing attribute `support` : value = 2
w2022-03-15 18:06:18 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 18:06:18 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 18:06:18 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 18:06:18 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#2]
w2022-03-15 18:06:18 DEBUG Processing attribute `firstName` : value = support
w2022-03-15 18:06:18 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:06:18 DEBUG Processing attribute `lastName` : value = support
w2022-03-15 18:06:18 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:06:18 DEBUG Processing attribute `login` : value = support
w2022-03-15 18:06:18 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 18:06:18 DEBUG Processing attribute `password` : value = support
w2022-03-15 18:06:18 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 18:06:18 DEBUG Processing attribute `role` : value = SUPPORT
w2022-03-15 18:06:18 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 18:06:18 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#2]
w2022-03-15 18:06:18 DEBUG Done entity load : ru.edu.helpdesk.entity.User#2
w2022-03-15 18:06:18 DEBUG Processing attribute `title` : value = Hello user1
w2022-03-15 18:06:18 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 18:06:18 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 18:06:18 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 18:06:18 DEBUG Processing attribute `client` : value = 1
w2022-03-15 18:06:18 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 18:06:18 DEBUG Processing attribute `status` : value = OPEN
w2022-03-15 18:06:18 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 18:06:18 DEBUG Processing attribute `support` : value = null
w2022-03-15 18:06:18 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 18:06:18 DEBUG Processing attribute `title` : value = Title2
w2022-03-15 18:06:18 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 18:06:18 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 18:07:55 DEBUG Logging Provider: org.jboss.logging.Log4j2LoggerProvider
w2022-03-15 18:07:55 DEBUG PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@7aa52917
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/%d0%9e%d0%bb%d1%8c%d0%b3%d0%b0/Desktop/Java/Project/Project1/helpdeskproject/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		ru.edu.helpdesk.entity.Comment
		ru.edu.helpdesk.entity.Ticket
		ru.edu.helpdesk.entity.User]
	Mapping files names []
	Properties []
w2022-03-15 18:07:55 DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
w2022-03-15 18:07:55 DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
w2022-03-15 18:07:55 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
w2022-03-15 18:07:55 INFO  HHH000412: Hibernate ORM core version 5.6.5.Final
w2022-03-15 18:07:55 DEBUG HHH000206: hibernate.properties not found
w2022-03-15 18:07:55 DEBUG Overriding existing service binding [org.hibernate.secure.spi.JaccService]
w2022-03-15 18:07:55 DEBUG Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
w2022-03-15 18:07:55 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
w2022-03-15 18:07:55 INFO  HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
w2022-03-15 18:07:55 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@50175d0b
w2022-03-15 18:07:55 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@50175d0b
w2022-03-15 18:07:55 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@50175d0b
w2022-03-15 18:07:55 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@606af00a
w2022-03-15 18:07:55 DEBUG Adding type registration true_false -> org.hibernate.type.TrueFalseType@1cb3a95a
w2022-03-15 18:07:55 DEBUG Adding type registration yes_no -> org.hibernate.type.YesNoType@68840ef0
w2022-03-15 18:07:55 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@4bff0191
w2022-03-15 18:07:55 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@4bff0191
w2022-03-15 18:07:55 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4bff0191
w2022-03-15 18:07:55 DEBUG Adding type registration character -> org.hibernate.type.CharacterType@1b901a45
w2022-03-15 18:07:55 DEBUG Adding type registration char -> org.hibernate.type.CharacterType@1b901a45
w2022-03-15 18:07:55 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1b901a45
w2022-03-15 18:07:55 DEBUG Adding type registration short -> org.hibernate.type.ShortType@617c86be
w2022-03-15 18:07:55 DEBUG Adding type registration short -> org.hibernate.type.ShortType@617c86be
w2022-03-15 18:07:55 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.ShortType@617c86be
w2022-03-15 18:07:55 DEBUG Adding type registration integer -> org.hibernate.type.IntegerType@599ae1a1
w2022-03-15 18:07:55 DEBUG Adding type registration int -> org.hibernate.type.IntegerType@599ae1a1
w2022-03-15 18:07:55 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@599ae1a1
w2022-03-15 18:07:55 DEBUG Adding type registration long -> org.hibernate.type.LongType@653f58df
w2022-03-15 18:07:55 DEBUG Adding type registration long -> org.hibernate.type.LongType@653f58df
w2022-03-15 18:07:55 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.LongType@653f58df
w2022-03-15 18:07:55 DEBUG Adding type registration float -> org.hibernate.type.FloatType@13dab2cc
w2022-03-15 18:07:55 DEBUG Adding type registration float -> org.hibernate.type.FloatType@13dab2cc
w2022-03-15 18:07:55 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.FloatType@13dab2cc
w2022-03-15 18:07:55 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@8c866c0
w2022-03-15 18:07:55 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@8c866c0
w2022-03-15 18:07:55 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@8c866c0
w2022-03-15 18:07:55 DEBUG Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3ad20953
w2022-03-15 18:07:55 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3ad20953
w2022-03-15 18:07:55 DEBUG Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1fa6d5ba
w2022-03-15 18:07:55 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1fa6d5ba
w2022-03-15 18:07:55 DEBUG Adding type registration string -> org.hibernate.type.StringType@3a63017f
w2022-03-15 18:07:55 DEBUG Adding type registration java.lang.String -> org.hibernate.type.StringType@3a63017f
w2022-03-15 18:07:55 DEBUG Adding type registration nstring -> org.hibernate.type.StringNVarcharType@41708bc4
w2022-03-15 18:07:55 DEBUG Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@619b84ce
w2022-03-15 18:07:55 DEBUG Adding type registration url -> org.hibernate.type.UrlType@4c95583c
w2022-03-15 18:07:55 DEBUG Adding type registration java.net.URL -> org.hibernate.type.UrlType@4c95583c
w2022-03-15 18:07:55 DEBUG Adding type registration Duration -> org.hibernate.type.DurationType@a04c55a
w2022-03-15 18:07:55 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.DurationType@a04c55a
w2022-03-15 18:07:55 DEBUG Adding type registration Instant -> org.hibernate.type.InstantType@6082dfaa
w2022-03-15 18:07:55 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6082dfaa
w2022-03-15 18:07:55 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@adb8c88
w2022-03-15 18:07:55 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@adb8c88
w2022-03-15 18:07:55 DEBUG Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5a11bde0
w2022-03-15 18:07:55 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5a11bde0
w2022-03-15 18:07:55 DEBUG Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@4b8075dd
w2022-03-15 18:07:55 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@4b8075dd
w2022-03-15 18:07:55 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@39060d22
w2022-03-15 18:07:55 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@39060d22
w2022-03-15 18:07:55 DEBUG Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@6f2288e3
w2022-03-15 18:07:55 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@6f2288e3
w2022-03-15 18:07:55 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6f82ee8f
w2022-03-15 18:07:55 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6f82ee8f
w2022-03-15 18:07:55 DEBUG Adding type registration date -> org.hibernate.type.DateType@6b8163a9
w2022-03-15 18:07:55 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.DateType@6b8163a9
w2022-03-15 18:07:55 DEBUG Adding type registration time -> org.hibernate.type.TimeType@5b5f7f8
w2022-03-15 18:07:55 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5b5f7f8
w2022-03-15 18:07:55 DEBUG Adding type registration timestamp -> org.hibernate.type.TimestampType@3edd217f
w2022-03-15 18:07:55 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3edd217f
w2022-03-15 18:07:55 DEBUG Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3edd217f
w2022-03-15 18:07:55 DEBUG Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1a3e7675
w2022-03-15 18:07:55 DEBUG Adding type registration calendar -> org.hibernate.type.CalendarType@959beff
w2022-03-15 18:07:55 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@959beff
w2022-03-15 18:07:55 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@959beff
w2022-03-15 18:07:55 DEBUG Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4815b899
w2022-03-15 18:07:55 DEBUG Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@152e080f
w2022-03-15 18:07:55 DEBUG Adding type registration locale -> org.hibernate.type.LocaleType@2bddec77
w2022-03-15 18:07:55 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2bddec77
w2022-03-15 18:07:55 DEBUG Adding type registration currency -> org.hibernate.type.CurrencyType@44035964
w2022-03-15 18:07:55 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@44035964
w2022-03-15 18:07:55 DEBUG Adding type registration timezone -> org.hibernate.type.TimeZoneType@70d4d809
w2022-03-15 18:07:55 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@70d4d809
w2022-03-15 18:07:55 DEBUG Adding type registration class -> org.hibernate.type.ClassType@63521c8a
w2022-03-15 18:07:55 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.ClassType@63521c8a
w2022-03-15 18:07:55 DEBUG Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1dbb3d41
w2022-03-15 18:07:55 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1dbb3d41
w2022-03-15 18:07:55 DEBUG Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@10b9aad
w2022-03-15 18:07:55 DEBUG Adding type registration binary -> org.hibernate.type.BinaryType@5b3b10d6
w2022-03-15 18:07:55 DEBUG Adding type registration byte[] -> org.hibernate.type.BinaryType@5b3b10d6
w2022-03-15 18:07:55 DEBUG Adding type registration [B -> org.hibernate.type.BinaryType@5b3b10d6
w2022-03-15 18:07:55 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@47ab6012
w2022-03-15 18:07:55 DEBUG Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@47ab6012
w2022-03-15 18:07:55 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@47ab6012
w2022-03-15 18:07:55 DEBUG Adding type registration row_version -> org.hibernate.type.RowVersionType@7ebd3260
w2022-03-15 18:07:55 DEBUG Adding type registration image -> org.hibernate.type.ImageType@ddf2826
w2022-03-15 18:07:55 DEBUG Adding type registration characters -> org.hibernate.type.CharArrayType@54dda88b
w2022-03-15 18:07:55 DEBUG Adding type registration char[] -> org.hibernate.type.CharArrayType@54dda88b
w2022-03-15 18:07:55 DEBUG Adding type registration [C -> org.hibernate.type.CharArrayType@54dda88b
w2022-03-15 18:07:55 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@42408cd2
w2022-03-15 18:07:55 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@42408cd2
w2022-03-15 18:07:55 DEBUG Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@42408cd2
w2022-03-15 18:07:55 DEBUG Adding type registration text -> org.hibernate.type.TextType@3909b941
w2022-03-15 18:07:55 DEBUG Adding type registration ntext -> org.hibernate.type.NTextType@469043cd
w2022-03-15 18:07:55 DEBUG Adding type registration blob -> org.hibernate.type.BlobType@4aa25564
w2022-03-15 18:07:55 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4aa25564
w2022-03-15 18:07:55 DEBUG Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@593f9b43
w2022-03-15 18:07:55 DEBUG Adding type registration clob -> org.hibernate.type.ClobType@614fbae7
w2022-03-15 18:07:55 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@614fbae7
w2022-03-15 18:07:55 DEBUG Adding type registration nclob -> org.hibernate.type.NClobType@1a009173
w2022-03-15 18:07:55 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1a009173
w2022-03-15 18:07:55 DEBUG Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@22cef000
w2022-03-15 18:07:55 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3d05a586
w2022-03-15 18:07:55 DEBUG Adding type registration serializable -> org.hibernate.type.SerializableType@4c4da762
w2022-03-15 18:07:55 DEBUG Adding type registration object -> org.hibernate.type.ObjectType@2fbb5ccf
w2022-03-15 18:07:55 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2fbb5ccf
w2022-03-15 18:07:55 DEBUG Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@28dc495f
w2022-03-15 18:07:55 DEBUG Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5df435af
w2022-03-15 18:07:55 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@11f03f0b
w2022-03-15 18:07:55 DEBUG Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1fce19d2
w2022-03-15 18:07:55 DEBUG Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@55923dc5
w2022-03-15 18:07:55 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@29373395
w2022-03-15 18:07:55 DEBUG Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@39af59df
w2022-03-15 18:07:55 DEBUG Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@56c0c7b1
w2022-03-15 18:07:55 INFO  HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
w2022-03-15 18:07:55 DEBUG Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@cc55c1e] into BootstrapContext; was [null]
w2022-03-15 18:07:55 DEBUG ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@cc55c1e) [was null]
w2022-03-15 18:07:55 DEBUG Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@552e028a] into BootstrapContext; was [null]
w2022-03-15 18:07:55 DEBUG Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@451216e4] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@20b55fb6]
w2022-03-15 18:07:55 DEBUG Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@cc55c1e]
w2022-03-15 18:07:55 DEBUG ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@cc55c1e]
w2022-03-15 18:07:55 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
w2022-03-15 18:07:55 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
w2022-03-15 18:07:55 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
w2022-03-15 18:07:55 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
w2022-03-15 18:07:55 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
w2022-03-15 18:07:55 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
w2022-03-15 18:07:55 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
w2022-03-15 18:07:55 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
w2022-03-15 18:07:55 DEBUG Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
w2022-03-15 18:07:55 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
w2022-03-15 18:07:55 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
w2022-03-15 18:07:55 DEBUG Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
w2022-03-15 18:07:55 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
w2022-03-15 18:07:55 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
w2022-03-15 18:07:55 DEBUG Database ->
       name : SQLite
    version : 3.36.0
      major : 3
      minor : 36
w2022-03-15 18:07:55 DEBUG Driver ->
       name : SQLite JDBC
    version : 3.36.0.3
      major : 3
      minor : 36
w2022-03-15 18:07:55 DEBUG JDBC version : 2.1
w2022-03-15 18:07:55 INFO  HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
w2022-03-15 18:07:55 DEBUG JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
w2022-03-15 18:07:55 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
w2022-03-15 18:07:55 DEBUG HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [2] less than 4
w2022-03-15 18:07:55 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@458deb0e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@214049db]
w2022-03-15 18:07:55 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
w2022-03-15 18:07:55 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.Comment
w2022-03-15 18:07:55 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 18:07:55 DEBUG Import with entity name Comment
w2022-03-15 18:07:55 DEBUG Bind entity ru.edu.helpdesk.entity.Comment on table comment
w2022-03-15 18:07:55 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 18:07:55 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Comment] is safe
w2022-03-15 18:07:55 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Comment
w2022-03-15 18:07:55 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 18:07:55 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Comment:id]
w2022-03-15 18:07:55 DEBUG building SimpleValue for id
w2022-03-15 18:07:55 DEBUG Building property id
w2022-03-15 18:07:55 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 18:07:55 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=message, insertable=true, updatable=true, unique=false}
w2022-03-15 18:07:55 DEBUG MetadataSourceProcessor property message with lazy=false
w2022-03-15 18:07:55 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Comment:message]
w2022-03-15 18:07:55 DEBUG building SimpleValue for message
w2022-03-15 18:07:55 DEBUG Building property message
w2022-03-15 18:07:55 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 18:07:55 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=ticket, insertable=true, updatable=true, unique=false}
w2022-03-15 18:07:55 DEBUG Building property ticket
w2022-03-15 18:07:55 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 18:07:55 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=user, insertable=true, updatable=true, unique=false}
w2022-03-15 18:07:55 DEBUG Building property user
w2022-03-15 18:07:55 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 18:07:55 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 18:07:55 DEBUG Import with entity name Ticket
w2022-03-15 18:07:55 DEBUG Bind entity ru.edu.helpdesk.entity.Ticket on table ticket
w2022-03-15 18:07:55 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 18:07:55 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Ticket] is safe
w2022-03-15 18:07:55 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Ticket
w2022-03-15 18:07:55 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 18:07:55 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:id]
w2022-03-15 18:07:55 DEBUG building SimpleValue for id
w2022-03-15 18:07:55 DEBUG Building property id
w2022-03-15 18:07:55 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 18:07:55 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 18:07:55 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=client, insertable=true, updatable=true, unique=false}
w2022-03-15 18:07:55 DEBUG Building property client
w2022-03-15 18:07:55 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=status, insertable=true, updatable=true, unique=false}
w2022-03-15 18:07:55 DEBUG MetadataSourceProcessor property status with lazy=false
w2022-03-15 18:07:55 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:status]
w2022-03-15 18:07:55 DEBUG building SimpleValue for status
w2022-03-15 18:07:55 DEBUG Building property status
w2022-03-15 18:07:55 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 18:07:55 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=support, insertable=true, updatable=true, unique=false}
w2022-03-15 18:07:55 DEBUG Building property support
w2022-03-15 18:07:55 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=title, insertable=true, updatable=true, unique=false}
w2022-03-15 18:07:55 DEBUG MetadataSourceProcessor property title with lazy=false
w2022-03-15 18:07:55 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:title]
w2022-03-15 18:07:55 DEBUG building SimpleValue for title
w2022-03-15 18:07:55 DEBUG Building property title
w2022-03-15 18:07:55 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.User
w2022-03-15 18:07:55 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 18:07:55 DEBUG Import with entity name User
w2022-03-15 18:07:55 DEBUG Bind entity ru.edu.helpdesk.entity.User on table user
w2022-03-15 18:07:55 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 18:07:55 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.User] is safe
w2022-03-15 18:07:55 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.User
w2022-03-15 18:07:55 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 18:07:55 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:id]
w2022-03-15 18:07:55 DEBUG building SimpleValue for id
w2022-03-15 18:07:55 DEBUG Building property id
w2022-03-15 18:07:55 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 18:07:55 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
w2022-03-15 18:07:55 DEBUG MetadataSourceProcessor property firstName with lazy=false
w2022-03-15 18:07:55 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:firstName]
w2022-03-15 18:07:55 DEBUG building SimpleValue for firstName
w2022-03-15 18:07:55 DEBUG Building property firstName
w2022-03-15 18:07:55 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
w2022-03-15 18:07:55 DEBUG MetadataSourceProcessor property lastName with lazy=false
w2022-03-15 18:07:55 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:lastName]
w2022-03-15 18:07:55 DEBUG building SimpleValue for lastName
w2022-03-15 18:07:55 DEBUG Building property lastName
w2022-03-15 18:07:55 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=login, insertable=true, updatable=true, unique=false}
w2022-03-15 18:07:55 DEBUG MetadataSourceProcessor property login with lazy=false
w2022-03-15 18:07:55 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:login]
w2022-03-15 18:07:55 DEBUG building SimpleValue for login
w2022-03-15 18:07:55 DEBUG Building property login
w2022-03-15 18:07:55 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
w2022-03-15 18:07:55 DEBUG MetadataSourceProcessor property password with lazy=false
w2022-03-15 18:07:55 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:password]
w2022-03-15 18:07:55 DEBUG building SimpleValue for password
w2022-03-15 18:07:55 DEBUG Building property password
w2022-03-15 18:07:55 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=role, insertable=true, updatable=true, unique=false}
w2022-03-15 18:07:55 DEBUG MetadataSourceProcessor property role with lazy=false
w2022-03-15 18:07:55 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:role]
w2022-03-15 18:07:55 DEBUG building SimpleValue for role
w2022-03-15 18:07:55 DEBUG Building property role
w2022-03-15 18:07:55 DEBUG Starting fillSimpleValue for id
w2022-03-15 18:07:55 DEBUG Starting fillSimpleValue for message
w2022-03-15 18:07:55 DEBUG Starting fillSimpleValue for id
w2022-03-15 18:07:55 DEBUG Starting fillSimpleValue for status
w2022-03-15 18:07:55 DEBUG Starting fillSimpleValue for title
w2022-03-15 18:07:55 DEBUG Starting fillSimpleValue for id
w2022-03-15 18:07:55 DEBUG Starting fillSimpleValue for firstName
w2022-03-15 18:07:55 DEBUG Starting fillSimpleValue for lastName
w2022-03-15 18:07:55 DEBUG Starting fillSimpleValue for login
w2022-03-15 18:07:55 DEBUG Starting fillSimpleValue for password
w2022-03-15 18:07:55 DEBUG Starting fillSimpleValue for role
w2022-03-15 18:07:55 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [comment]
w2022-03-15 18:07:55 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [ticket]
w2022-03-15 18:07:55 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [user]
w2022-03-15 18:07:55 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 18:07:55 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 18:07:55 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 18:07:55 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 18:07:55 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 18:07:55 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 18:07:55 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 18:07:55 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 18:07:55 DEBUG Building session factory
w2022-03-15 18:07:55 DEBUG SessionFactory name : null
w2022-03-15 18:07:55 DEBUG Automatic flush during beforeCompletion(): enabled
w2022-03-15 18:07:55 DEBUG Automatic session close at end of transaction: disabled
w2022-03-15 18:07:55 DEBUG Statistics: disabled
w2022-03-15 18:07:55 DEBUG Deleted entity synthetic identifier rollback: disabled
w2022-03-15 18:07:55 DEBUG Default entity-mode: pojo
w2022-03-15 18:07:55 DEBUG Check Nullability in Core (should be disabled when Bean Validation is on): enabled
w2022-03-15 18:07:55 DEBUG Allow initialization of lazy state outside session : disabled
w2022-03-15 18:07:55 DEBUG Using BatchFetchStyle : LEGACY
w2022-03-15 18:07:55 DEBUG Default batch fetch size: -1
w2022-03-15 18:07:55 DEBUG Maximum outer join fetch depth: null
w2022-03-15 18:07:55 DEBUG Default null ordering: NONE
w2022-03-15 18:07:55 DEBUG Order SQL updates by primary key: disabled
w2022-03-15 18:07:55 DEBUG Order SQL inserts for batching: disabled
w2022-03-15 18:07:55 DEBUG multi-tenancy strategy : NONE
w2022-03-15 18:07:55 DEBUG JTA Track by Thread: enabled
w2022-03-15 18:07:55 DEBUG Query language substitutions: {}
w2022-03-15 18:07:55 DEBUG Named query checking : enabled
w2022-03-15 18:07:55 DEBUG Second-level cache: disabled
w2022-03-15 18:07:55 DEBUG Second-level query cache: disabled
w2022-03-15 18:07:55 DEBUG Second-level query cache factory: null
w2022-03-15 18:07:55 DEBUG Second-level cache region prefix: null
w2022-03-15 18:07:55 DEBUG Optimize second-level cache for minimal puts: disabled
w2022-03-15 18:07:55 DEBUG Structured second-level cache entries: disabled
w2022-03-15 18:07:55 DEBUG Second-level cache direct-reference entries: disabled
w2022-03-15 18:07:55 DEBUG Automatic eviction of collection cache: disabled
w2022-03-15 18:07:55 DEBUG JDBC batch size: 1
w2022-03-15 18:07:55 DEBUG JDBC batch updates for versioned data: enabled
w2022-03-15 18:07:55 DEBUG Scrollable result sets: disabled
w2022-03-15 18:07:55 DEBUG Wrap result sets: disabled
w2022-03-15 18:07:55 DEBUG JDBC3 getGeneratedKeys(): enabled
w2022-03-15 18:07:55 DEBUG JDBC result set fetch size: null
w2022-03-15 18:07:55 DEBUG Connection release mode: ON_CLOSE
w2022-03-15 18:07:55 DEBUG Generate SQL with comments: disabled
w2022-03-15 18:07:55 DEBUG JPA compliance - query : disabled
w2022-03-15 18:07:55 DEBUG JPA compliance - closed-handling : disabled
w2022-03-15 18:07:55 DEBUG JPA compliance - lists : disabled
w2022-03-15 18:07:55 DEBUG JPA compliance - transactions : disabled
w2022-03-15 18:07:55 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 18:07:55 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 18:07:55 DEBUG Session factory constructed with filter configurations : {}
w2022-03-15 18:07:55 DEBUG Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=true, java.specification.version=1.8, file.encoding.pkg=sun.io, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@3e25366b, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.SQLiteDialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\charsets.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\cldrdata.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\dnsns.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\jaccess.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\localedata.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\nashorn.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunec.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunmscapi.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\zipfs.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jce.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jfr.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jsse.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\management-agent.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\resources.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\rt.jar;C:\Users\Ольга\Desktop\Java\Project\Project1\helpdeskproject\target\classes;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\2.6.4\spring-boot-starter-data-jpa-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\2.6.4\spring-boot-starter-jdbc-2.6.4.jar;C:\Users\Ольга\.m2\repository\com\zaxxer\HikariCP\4.0.3\HikariCP-4.0.3.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-jdbc\5.3.16\spring-jdbc-5.3.16.jar;C:\Users\Ольга\.m2\repository\jakarta\transaction\jakarta.transaction-api\1.3.3\jakarta.transaction-api-1.3.3.jar;C:\Users\Ольга\.m2\repository\jakarta\persistence\jakarta.persistence-api\2.2.3\jakarta.persistence-api-2.2.3.jar;C:\Users\Ольга\.m2\repository\org\hibernate\hibernate-core\5.6.5.Final\hibernate-core-5.6.5.Final.jar;C:\Users\Ольга\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy\1.11.22\byte-buddy-1.11.22.jar;C:\Users\Ольга\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ольга\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Ольга\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.6\jaxb-runtime-2.3.6.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\txw2\2.3.6\txw2-2.3.6.jar;C:\Users\Ольга\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.12\istack-commons-runtime-3.0.12.jar;C:\Users\Ольга\.m2\repository\com\sun\activation\jakarta.activation\1.2.2\jakarta.activation-1.2.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\data\spring-data-jpa\2.6.2\spring-data-jpa-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\data\spring-data-commons\2.6.2\spring-data-commons-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-orm\5.3.16\spring-orm-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-context\5.3.16\spring-context-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-tx\5.3.16\spring-tx-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-beans\5.3.16\spring-beans-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-aspects\5.3.16\spring-aspects-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-security\2.6.4\spring-boot-starter-security-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter\2.6.4\spring-boot-starter-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-logging\2.6.4\spring-boot-starter-logging-2.6.4.jar;C:\Users\Ольга\.m2\repository\ch\qos\logback\logback-classic\1.2.10\logback-classic-1.2.10.jar;C:\Users\Ольга\.m2\repository\ch\qos\logback\logback-core\1.2.10\logback-core-1.2.10.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.17.1\log4j-to-slf4j-2.17.1.jar;C:\Users\Ольга\.m2\repository\org\slf4j\jul-to-slf4j\1.7.36\jul-to-slf4j-1.7.36.jar;C:\Users\Ольга\.m2\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;C:\Users\Ольга\.m2\repository\org\yaml\snakeyaml\1.29\snakeyaml-1.29.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-aop\5.3.16\spring-aop-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-config\5.6.2\spring-security-config-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-web\5.6.2\spring-security-web-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-expression\5.3.16\spring-expression-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-web\2.6.4\spring-boot-starter-web-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-json\2.6.4\spring-boot-starter-json-2.6.4.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.13.1\jackson-datatype-jdk8-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.13.1\jackson-datatype-jsr310-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.13.1\jackson-module-parameter-names-2.13.1.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\2.6.4\spring-boot-starter-tomcat-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.58\tomcat-embed-core-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\9.0.58\tomcat-embed-el-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.58\tomcat-embed-websocket-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-web\5.3.16\spring-web-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-webmvc\5.3.16\spring-webmvc-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-devtools\2.6.4\spring-boot-devtools-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot\2.6.4\spring-boot-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\2.6.4\spring-boot-autoconfigure-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\xerial\sqlite-jdbc\3.36.0.3\sqlite-jdbc-3.36.0.3.jar;C:\Users\Ольга\.m2\repository\com\zsoltfabok\sqlite-dialect\1.0\sqlite-dialect-1.0.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-aop\2.6.2\spring-boot-starter-aop-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\aspectj\aspectjweaver\1.9.7\aspectjweaver-1.9.7.jar;C:\Users\Ольга\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.3\jakarta.xml.bind-api-2.3.3.jar;C:\Users\Ольга\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.2\jakarta.activation-api-1.2.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-core\5.3.16\spring-core-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-jcl\5.3.16\spring-jcl-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-core\5.6.2\spring-security-core-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-crypto\5.6.2\spring-security-crypto-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\projectlombok\lombok\1.18.22\lombok-1.18.22.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\2.6.4\spring-boot-starter-thymeleaf-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\thymeleaf-spring5\3.0.15.RELEASE\thymeleaf-spring5-3.0.15.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\thymeleaf\3.0.15.RELEASE\thymeleaf-3.0.15.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\attoparser\attoparser\2.0.5.RELEASE\attoparser-2.0.5.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-java8time\3.0.4.RELEASE\thymeleaf-extras-java8time-3.0.4.RELEASE.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.1\jackson-databind-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.1\jackson-annotations-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.1\jackson-core-2.13.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-api\2.4.1\log4j-api-2.4.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-core\2.4.1\log4j-core-2.4.1.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.2\lib\idea_rt.jar, java.vm.vendor=Temurin, sun.arch.data.model=64, user.variant=, java.vendor.url=https://adoptium.net/, catalina.useNaming=false, user.timezone=Europe/Moscow, jakarta.persistence.sharedCache.mode=UNSPECIFIED, os.name=Windows 10, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), user.country=RU, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\bin, sun.java.command=ru.edu.helpdesk.HelpdeskApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@289e5a6c, com.sun.management.jmxremote=, javax.persistence.sharedCache.mode=UNSPECIFIED, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, user.home=C:\Users\Ольга, user.language=ru, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre, file.separator=\, spring.output.ansi.enabled=always, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, sun.boot.class.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\resources.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\rt.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\sunrsasign.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jsse.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jce.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\charsets.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jfr.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\classes, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_312-b07, user.name=Эльдорадо, spring.jmx.enabled=true, path.separator=;, os.version=10.0, java.endorsed.dirs=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\endorsed, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=default, spring.beaninfo.ignore=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=C:\Users\134E~1\AppData\Local\Temp\, catalina.home=C:\Users\Ольга\AppData\Local\Temp\tomcat.8080.8534891670166300988, java.version=1.8.0_312, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\Ольга\Desktop\Java\Project\Project1\helpdeskproject, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=5204, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\Ольга\AppData\Local\Temp\tomcat.8080.8534891670166300988, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@70ca37b0, java.library.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\windows\System32\OpenSSH\;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\Program Files\apache-maven-3.8.4\bin;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Ольга\AppData\Local\Microsoft\WindowsApps;C:\Users\Ольга\AppData\Local\Programs\Microsoft VS Code\bin;C:\SQLite;C:\Users\Ольга\AppData\Roaming\npm;C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.2\bin;;., java.vendor=Temurin, java.vm.info=mixed mode, java.vm.version=25.312-b07, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, java.ext.dirs=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext;C:\windows\Sun\Java\lib\ext, hibernate.connection.datasource=HikariDataSource (HikariPool-1), hibernate.hbm2ddl.import_files=data/import.sql, java.class.version=52.0}
w2022-03-15 18:07:56 DEBUG Skipping JACC integration as it was not enabled
w2022-03-15 18:07:56 DEBUG Using ORDINAL-based conversion for Enum ru.edu.helpdesk.entity.UserRole
w2022-03-15 18:07:56 DEBUG Using ORDINAL-based conversion for Enum ru.edu.helpdesk.entity.TicketStatus
w2022-03-15 18:07:56 DEBUG Instantiated session factory
w2022-03-15 18:07:56 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@458deb0e] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@75d2426b]
w2022-03-15 18:07:56 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.User] is safe
w2022-03-15 18:07:56 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.User
w2022-03-15 18:07:56 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:07:56 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:07:56 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:07:56 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:07:56 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Ticket] is safe
w2022-03-15 18:07:56 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Ticket
w2022-03-15 18:07:56 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:07:56 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:07:56 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:07:56 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:07:56 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:07:56 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:07:56 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:07:56 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:07:56 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Comment] is safe
w2022-03-15 18:07:56 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Comment
w2022-03-15 18:07:56 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:07:56 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:07:56 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:07:56 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:07:56 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.User
w2022-03-15 18:07:56 DEBUG  Version select: select id from user where id =?
w2022-03-15 18:07:56 DEBUG  Snapshot select: select user_.id, user_.first_name as first_na2_2_, user_.last_name as last_nam3_2_, user_.login as login4_2_, user_.password as password5_2_, user_.role as role6_2_ from user user_ where user_.id=?
w2022-03-15 18:07:56 DEBUG  Insert 0: insert into user (first_name, last_name, login, password, role, id) values (?, ?, ?, ?, ?, ?)
w2022-03-15 18:07:56 DEBUG  Update 0: update user set first_name=?, last_name=?, login=?, password=?, role=? where id=?
w2022-03-15 18:07:56 DEBUG  Delete 0: delete from user where id=?
w2022-03-15 18:07:56 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6398dd07]
w2022-03-15 18:07:56 DEBUG Visiting attribute path : firstName
w2022-03-15 18:07:56 DEBUG Visiting attribute path : lastName
w2022-03-15 18:07:56 DEBUG Visiting attribute path : login
w2022-03-15 18:07:56 DEBUG Visiting attribute path : password
w2022-03-15 18:07:56 DEBUG Visiting attribute path : role
w2022-03-15 18:07:56 DEBUG Building LoadPlan...
w2022-03-15 18:07:56 DEBUG processing queryspace <gen:0>
w2022-03-15 18:07:56 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.User)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

w2022-03-15 18:07:56 DEBUG Static select for entity ru.edu.helpdesk.entity.User [NONE]: select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 18:07:56 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.Ticket
w2022-03-15 18:07:56 DEBUG  Version select: select id from ticket where id =?
w2022-03-15 18:07:56 DEBUG  Snapshot select: select ticket_.id, ticket_.client_id as client_i4_1_, ticket_.status as status2_1_, ticket_.support_id as support_5_1_, ticket_.title as title3_1_ from ticket ticket_ where ticket_.id=?
w2022-03-15 18:07:56 DEBUG  Insert 0: insert into ticket (client_id, status, support_id, title, id) values (?, ?, ?, ?, ?)
w2022-03-15 18:07:56 DEBUG  Update 0: update ticket set client_id=?, status=?, support_id=?, title=? where id=?
w2022-03-15 18:07:56 DEBUG  Delete 0: delete from ticket where id=?
w2022-03-15 18:07:56 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ff415cb]
w2022-03-15 18:07:56 DEBUG Visiting attribute path : client
w2022-03-15 18:07:56 DEBUG Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@188c1384]
w2022-03-15 18:07:56 DEBUG Visiting attribute path : client.firstName
w2022-03-15 18:07:56 DEBUG Visiting attribute path : client.lastName
w2022-03-15 18:07:56 DEBUG Visiting attribute path : client.login
w2022-03-15 18:07:56 DEBUG Visiting attribute path : client.password
w2022-03-15 18:07:56 DEBUG Visiting attribute path : client.role
w2022-03-15 18:07:56 DEBUG Visiting attribute path : status
w2022-03-15 18:07:56 DEBUG Visiting attribute path : support
w2022-03-15 18:07:56 DEBUG Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39c1b319]
w2022-03-15 18:07:56 DEBUG Visiting attribute path : support.firstName
w2022-03-15 18:07:56 DEBUG Visiting attribute path : support.lastName
w2022-03-15 18:07:56 DEBUG Visiting attribute path : support.login
w2022-03-15 18:07:56 DEBUG Visiting attribute path : support.password
w2022-03-15 18:07:56 DEBUG Visiting attribute path : support.role
w2022-03-15 18:07:56 DEBUG Visiting attribute path : title
w2022-03-15 18:07:56 DEBUG Building LoadPlan...
w2022-03-15 18:07:56 DEBUG processing queryspace <gen:0>
w2022-03-15 18:07:56 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.Ticket)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.Ticket, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.Ticket)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:1>, path=ru.edu.helpdesk.entity.Ticket.client)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:2>, path=ru.edu.helpdesk.entity.Ticket.support)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.Ticket)
          - SQL table alias mapping - ticket0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(client)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
          - JOIN (JoinDefinedByMetadata(support)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user2_
                - alias suffix - 2_
                - suffixed key columns - {id1_2_2_}

w2022-03-15 18:07:56 DEBUG Static select for entity ru.edu.helpdesk.entity.Ticket [NONE]: select ticket0_.id as id1_1_0_, ticket0_.client_id as client_i4_1_0_, ticket0_.status as status2_1_0_, ticket0_.support_id as support_5_1_0_, ticket0_.title as title3_1_0_, user1_.id as id1_2_1_, user1_.first_name as first_na2_2_1_, user1_.last_name as last_nam3_2_1_, user1_.login as login4_2_1_, user1_.password as password5_2_1_, user1_.role as role6_2_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id left outer join user user2_ on ticket0_.support_id=user2_.id where ticket0_.id=?
w2022-03-15 18:07:56 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.Comment
w2022-03-15 18:07:56 DEBUG  Version select: select id from comment where id =?
w2022-03-15 18:07:56 DEBUG  Snapshot select: select comment_.id, comment_.message as message2_0_, comment_.ticket_id as ticket_i3_0_, comment_.user_id as user_id4_0_ from comment comment_ where comment_.id=?
w2022-03-15 18:07:56 DEBUG  Insert 0: insert into comment (message, ticket_id, user_id, id) values (?, ?, ?, ?)
w2022-03-15 18:07:56 DEBUG  Update 0: update comment set message=?, ticket_id=?, user_id=? where id=?
w2022-03-15 18:07:56 DEBUG  Delete 0: delete from comment where id=?
w2022-03-15 18:07:56 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@537de0b0]
w2022-03-15 18:07:56 DEBUG Visiting attribute path : message
w2022-03-15 18:07:56 DEBUG Visiting attribute path : ticket
w2022-03-15 18:07:56 DEBUG Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4202d5c2]
w2022-03-15 18:07:56 DEBUG Visiting attribute path : ticket.client
w2022-03-15 18:07:56 DEBUG Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b335620]
w2022-03-15 18:07:56 DEBUG Visiting attribute path : ticket.client.firstName
w2022-03-15 18:07:56 DEBUG Visiting attribute path : ticket.client.lastName
w2022-03-15 18:07:56 DEBUG Visiting attribute path : ticket.client.login
w2022-03-15 18:07:56 DEBUG Visiting attribute path : ticket.client.password
w2022-03-15 18:07:56 DEBUG Visiting attribute path : ticket.client.role
w2022-03-15 18:07:56 DEBUG Visiting attribute path : ticket.status
w2022-03-15 18:07:56 DEBUG Visiting attribute path : ticket.support
w2022-03-15 18:07:56 DEBUG Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7bf2537d]
w2022-03-15 18:07:56 DEBUG Visiting attribute path : ticket.support.firstName
w2022-03-15 18:07:56 DEBUG Visiting attribute path : ticket.support.lastName
w2022-03-15 18:07:56 DEBUG Visiting attribute path : ticket.support.login
w2022-03-15 18:07:56 DEBUG Visiting attribute path : ticket.support.password
w2022-03-15 18:07:56 DEBUG Visiting attribute path : ticket.support.role
w2022-03-15 18:07:56 DEBUG Visiting attribute path : ticket.title
w2022-03-15 18:07:56 DEBUG Visiting attribute path : user
w2022-03-15 18:07:56 DEBUG Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67eba98c]
w2022-03-15 18:07:56 DEBUG Visiting attribute path : user.firstName
w2022-03-15 18:07:56 DEBUG Visiting attribute path : user.lastName
w2022-03-15 18:07:56 DEBUG Visiting attribute path : user.login
w2022-03-15 18:07:56 DEBUG Visiting attribute path : user.password
w2022-03-15 18:07:56 DEBUG Visiting attribute path : user.role
w2022-03-15 18:07:56 DEBUG Building LoadPlan...
w2022-03-15 18:07:56 DEBUG processing queryspace <gen:0>
w2022-03-15 18:07:56 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.Comment)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.Comment, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.Comment)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.Ticket, querySpaceUid=<gen:1>, path=ru.edu.helpdesk.entity.Comment.ticket)
             - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:2>, path=ru.edu.helpdesk.entity.Comment.ticket.client)
             - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:3>, path=ru.edu.helpdesk.entity.Comment.ticket.support)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:4>, path=ru.edu.helpdesk.entity.Comment.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(ticket)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ru.edu.helpdesk.entity.Ticket)
                - SQL table alias mapping - ticket1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(client)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=ru.edu.helpdesk.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}
                - JOIN (JoinDefinedByMetadata(support)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=ru.edu.helpdesk.entity.User)
                      - SQL table alias mapping - user3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_2_3_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user4_
                - alias suffix - 4_
                - suffixed key columns - {id1_2_4_}

w2022-03-15 18:07:56 DEBUG Static select for entity ru.edu.helpdesk.entity.Comment [NONE]: select comment0_.id as id1_0_0_, comment0_.message as message2_0_0_, comment0_.ticket_id as ticket_i3_0_0_, comment0_.user_id as user_id4_0_0_, ticket1_.id as id1_1_1_, ticket1_.client_id as client_i4_1_1_, ticket1_.status as status2_1_1_, ticket1_.support_id as support_5_1_1_, ticket1_.title as title3_1_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_, user3_.id as id1_2_3_, user3_.first_name as first_na2_2_3_, user3_.last_name as last_nam3_2_3_, user3_.login as login4_2_3_, user3_.password as password5_2_3_, user3_.role as role6_2_3_, user4_.id as id1_2_4_, user4_.first_name as first_na2_2_4_, user4_.last_name as last_nam3_2_4_, user4_.login as login4_2_4_, user4_.password as password5_2_4_, user4_.role as role6_2_4_ from comment comment0_ left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id left outer join user user2_ on ticket1_.client_id=user2_.id left outer join user user3_ on ticket1_.support_id=user3_.id left outer join user user4_ on comment0_.user_id=user4_.id where comment0_.id=?
w2022-03-15 18:07:56 DEBUG drop table if exists comment
w2022-03-15 18:07:56 DEBUG drop table if exists hibernate_sequence
w2022-03-15 18:07:56 DEBUG drop table if exists ticket
w2022-03-15 18:07:56 DEBUG drop table if exists user
w2022-03-15 18:07:56 DEBUG create table comment (id bigint not null, message varchar(255) not null, ticket_id bigint, user_id bigint, primary key (id))
w2022-03-15 18:07:56 DEBUG create table hibernate_sequence (next_val bigint)
w2022-03-15 18:07:56 DEBUG insert into hibernate_sequence values ( 1 )
w2022-03-15 18:07:56 DEBUG create table ticket (id bigint not null, status integer, title varchar(255) not null, client_id bigint, support_id bigint, primary key (id))
w2022-03-15 18:07:56 DEBUG create table user (id bigint not null, first_name varchar(255), last_name varchar(255), login varchar(255) not null, password varchar(255) not null, role integer, primary key (id))
w2022-03-15 18:07:56 INFO  HHH000476: Executing import script 'file:/C:/Users/%d0%9e%d0%bb%d1%8c%d0%b3%d0%b0/Desktop/Java/Project/Project1/helpdeskproject/target/classes/data/import.sql'
w2022-03-15 18:07:56 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (1, 'admin', 'admin', 'admin', 'admin', 0)
w2022-03-15 18:07:56 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (2, 'support', 'support', 'support', 'support', 1)
w2022-03-15 18:07:56 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (3, 'user1', 'user1', 'user1', 'user1', 2)
w2022-03-15 18:07:56 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (4, 'user2', 'user2', 'user2', 'user2', 2)
w2022-03-15 18:07:56 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (1, 1, 'Hello user1',1, 2)
w2022-03-15 18:07:56 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (2, 0, 'Title2', 1, NULL)
w2022-03-15 18:07:56 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (3, 0, 'Message user2', 4, NULL)
w2022-03-15 18:07:56 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (1, "comment ticket1", 1, 3)
w2022-03-15 18:07:56 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (2, "comment ticket2", 2, 3)
w2022-03-15 18:07:56 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (3, "comment ticket11", 1, 2)
w2022-03-15 18:07:56 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (4, "comment ticket111", 1, 2)
w2022-03-15 18:07:56 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (5, "comment ticket22", 2, 2)
w2022-03-15 18:07:56 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (6, "comment ticket3", 3, 4)
w2022-03-15 18:07:56 DEBUG UPDATE hibernate_sequence SET next_val = 8 WHERE next_val = 1
w2022-03-15 18:07:56 INFO  HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
w2022-03-15 18:07:56 DEBUG Checking 0 named HQL queries
w2022-03-15 18:07:56 DEBUG Checking 0 named SQL queries
w2022-03-15 18:07:56 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 18:07:56 DEBUG Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5b59ff55
w2022-03-15 18:07:56 DEBUG Registering SessionFactory: 18365423-878e-44e7-9b07-1a809f5115fd (<unnamed>)
w2022-03-15 18:07:56 DEBUG Not binding SessionFactory to JNDI, no JNDI name configured
w2022-03-15 18:07:56 DEBUG Statistics initialized [enabled=false]
w2022-03-15 18:07:56 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 18:07:56 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 18:07:56 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 18:08:01 DEBUG Rendered criteria query -> select generatedAlias0 from Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 18:08:01 DEBUG QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@2320d14c
w2022-03-15 18:08:01 DEBUG parse() - HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 18:08:01 DEBUG throwQueryException() : no errors
w2022-03-15 18:08:01 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[IDENT] Node: 'ru'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'edu'
    |  |  |  |  |  |  \-[IDENT] Node: 'helpdesk'
    |  |  |  |  |  \-[IDENT] Node: 'entity'
    |  |  |  |  \-[IDENT] Node: 'Ticket'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'client'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias1'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

w2022-03-15 18:08:01 DEBUG select << begin [level=1, statement=select]
w2022-03-15 18:08:01 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.Ticket (generatedAlias0) -> ticket0_
w2022-03-15 18:08:01 DEBUG Resolved : generatedAlias0 -> ticket0_.id
w2022-03-15 18:08:01 DEBUG getDataType() : client -> org.hibernate.type.ManyToOneType(ru.edu.helpdesk.entity.User)
w2022-03-15 18:08:01 DEBUG dereferenceEntityJoin() : generating join for client in ru.edu.helpdesk.entity.Ticket (generatedAlias1) parent = [ {null} ]
w2022-03-15 18:08:01 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.User (generatedAlias1) -> user1_
w2022-03-15 18:08:01 DEBUG addJoinByPathMap() : generatedAlias0.client -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}
w2022-03-15 18:08:01 DEBUG Resolved : generatedAlias0.client -> ticket0_.client_id
w2022-03-15 18:08:01 DEBUG createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'user user1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Ticket.client,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}

w2022-03-15 18:08:01 DEBUG Resolved : generatedAlias0 -> ticket0_.id
w2022-03-15 18:08:01 DEBUG Resolved : generatedAlias1 -> user1_.id
w2022-03-15 18:08:01 DEBUG getDataType() : id -> org.hibernate.type.LongType@653f58df
w2022-03-15 18:08:01 DEBUG Resolved : generatedAlias1.id -> user1_.id
w2022-03-15 18:08:01 DEBUG select : finishing up [level=1, statement=select]
w2022-03-15 18:08:01 DEBUG processQuery() :  ( SELECT ( {select clause} ticket0_.id ) ( FromClause{level=1} ( ticket ticket0_ user user1_ ) ) ( where ( = ( user1_.id user1_.id id ) ? ) ) )
w2022-03-15 18:08:01 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Ticket): [ticket]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.Ticket)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.User)
          | path: generatedAlias1.id
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.User)
          |  | originalText: generatedAlias1
          |  \-IdentNode
          |    persister: null
          |    originalText: id
          \-ParameterNode

w2022-03-15 18:08:01 DEBUG Using FROM fragment [ticket ticket0_]
w2022-03-15 18:08:01 DEBUG Using FROM fragment [left outer join user user1_ on ticket0_.client_id=user1_.id]
w2022-03-15 18:08:01 DEBUG select >> end [level=1, statement=select]
w2022-03-15 18:08:01 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (ticket,user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'ticket0_.id as id1_1_' {alias=generatedAlias0, className=ru.edu.helpdesk.entity.Ticket, tableAlias=ticket0_}
    |  \-[SQL_TOKEN] SqlFragment: 'ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[ticket0_, user1_], fromElementsByPath=[generatedAlias0.client], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'ticket ticket0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=ticket,tableAlias=ticket0_,origin=null,columns={,className=ru.edu.helpdesk.entity.Ticket}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join user user1_ on ticket0_.client_id=user1_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Ticket.client,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user1_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias1.id,tableAlias=user1_,className=ru.edu.helpdesk.entity.User,classAlias=generatedAlias1}
          |  +-[ALIAS_REF] IdentNode: 'user1_.id' {alias=generatedAlias1, className=ru.edu.helpdesk.entity.User, tableAlias=user1_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LongType@653f58df}

w2022-03-15 18:08:01 DEBUG throwQueryException() : no errors
w2022-03-15 18:08:01 DEBUG HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 18:08:01 DEBUG SQL: select ticket0_.id as id1_1_, ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id where user1_.id=?
w2022-03-15 18:08:01 DEBUG throwQueryException() : no errors
w2022-03-15 18:08:01 DEBUG select ticket0_.id as id1_1_, ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id where user1_.id=?
w2022-03-15 18:08:01 DEBUG Result set row: 0
w2022-03-15 18:08:01 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 18:08:01 DEBUG Result set row: 1
w2022-03-15 18:08:01 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 18:08:01 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 18:08:01 DEBUG Processing attribute `client` : value = 1
w2022-03-15 18:08:01 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 18:08:01 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 18:08:01 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 18:08:01 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#1]
w2022-03-15 18:08:01 DEBUG Processing attribute `firstName` : value = admin
w2022-03-15 18:08:01 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:08:01 DEBUG Processing attribute `lastName` : value = admin
w2022-03-15 18:08:01 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:08:01 DEBUG Processing attribute `login` : value = admin
w2022-03-15 18:08:01 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 18:08:01 DEBUG Processing attribute `password` : value = admin
w2022-03-15 18:08:01 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 18:08:01 DEBUG Processing attribute `role` : value = ADMIN
w2022-03-15 18:08:01 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 18:08:01 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#1]
w2022-03-15 18:08:01 DEBUG Done entity load : ru.edu.helpdesk.entity.User#1
w2022-03-15 18:08:01 DEBUG Processing attribute `status` : value = WORKING
w2022-03-15 18:08:01 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 18:08:01 DEBUG Processing attribute `support` : value = 2
w2022-03-15 18:08:01 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 18:08:01 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 18:08:01 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 18:08:01 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#2]
w2022-03-15 18:08:01 DEBUG Processing attribute `firstName` : value = support
w2022-03-15 18:08:01 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:08:01 DEBUG Processing attribute `lastName` : value = support
w2022-03-15 18:08:01 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:08:01 DEBUG Processing attribute `login` : value = support
w2022-03-15 18:08:01 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 18:08:01 DEBUG Processing attribute `password` : value = support
w2022-03-15 18:08:01 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 18:08:01 DEBUG Processing attribute `role` : value = SUPPORT
w2022-03-15 18:08:01 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 18:08:01 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#2]
w2022-03-15 18:08:01 DEBUG Done entity load : ru.edu.helpdesk.entity.User#2
w2022-03-15 18:08:01 DEBUG Processing attribute `title` : value = Hello user1
w2022-03-15 18:08:01 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 18:08:01 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 18:08:01 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 18:08:01 DEBUG Processing attribute `client` : value = 1
w2022-03-15 18:08:01 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 18:08:01 DEBUG Processing attribute `status` : value = OPEN
w2022-03-15 18:08:01 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 18:08:01 DEBUG Processing attribute `support` : value = null
w2022-03-15 18:08:01 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 18:08:01 DEBUG Processing attribute `title` : value = Title2
w2022-03-15 18:08:01 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 18:08:01 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 18:08:40 DEBUG Logging Provider: org.jboss.logging.Log4j2LoggerProvider
w2022-03-15 18:08:40 DEBUG PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@7aa6619b
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/%d0%9e%d0%bb%d1%8c%d0%b3%d0%b0/Desktop/Java/Project/Project1/helpdeskproject/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		ru.edu.helpdesk.entity.Comment
		ru.edu.helpdesk.entity.Ticket
		ru.edu.helpdesk.entity.User]
	Mapping files names []
	Properties []
w2022-03-15 18:08:40 DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
w2022-03-15 18:08:40 DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
w2022-03-15 18:08:40 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
w2022-03-15 18:08:40 INFO  HHH000412: Hibernate ORM core version 5.6.5.Final
w2022-03-15 18:08:40 DEBUG HHH000206: hibernate.properties not found
w2022-03-15 18:08:40 DEBUG Overriding existing service binding [org.hibernate.secure.spi.JaccService]
w2022-03-15 18:08:40 DEBUG Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
w2022-03-15 18:08:40 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
w2022-03-15 18:08:40 INFO  HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
w2022-03-15 18:08:40 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@d7b4d03
w2022-03-15 18:08:40 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@d7b4d03
w2022-03-15 18:08:40 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@d7b4d03
w2022-03-15 18:08:40 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3d864d3b
w2022-03-15 18:08:40 DEBUG Adding type registration true_false -> org.hibernate.type.TrueFalseType@1084780c
w2022-03-15 18:08:40 DEBUG Adding type registration yes_no -> org.hibernate.type.YesNoType@718e86ed
w2022-03-15 18:08:40 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@62c4d2d9
w2022-03-15 18:08:40 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@62c4d2d9
w2022-03-15 18:08:40 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@62c4d2d9
w2022-03-15 18:08:40 DEBUG Adding type registration character -> org.hibernate.type.CharacterType@3aa17163
w2022-03-15 18:08:40 DEBUG Adding type registration char -> org.hibernate.type.CharacterType@3aa17163
w2022-03-15 18:08:40 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3aa17163
w2022-03-15 18:08:40 DEBUG Adding type registration short -> org.hibernate.type.ShortType@41a032e7
w2022-03-15 18:08:40 DEBUG Adding type registration short -> org.hibernate.type.ShortType@41a032e7
w2022-03-15 18:08:40 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.ShortType@41a032e7
w2022-03-15 18:08:40 DEBUG Adding type registration integer -> org.hibernate.type.IntegerType@1a6ad907
w2022-03-15 18:08:40 DEBUG Adding type registration int -> org.hibernate.type.IntegerType@1a6ad907
w2022-03-15 18:08:40 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1a6ad907
w2022-03-15 18:08:40 DEBUG Adding type registration long -> org.hibernate.type.LongType@72f593ea
w2022-03-15 18:08:40 DEBUG Adding type registration long -> org.hibernate.type.LongType@72f593ea
w2022-03-15 18:08:40 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.LongType@72f593ea
w2022-03-15 18:08:40 DEBUG Adding type registration float -> org.hibernate.type.FloatType@1b5c7bc
w2022-03-15 18:08:40 DEBUG Adding type registration float -> org.hibernate.type.FloatType@1b5c7bc
w2022-03-15 18:08:40 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1b5c7bc
w2022-03-15 18:08:40 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@55c36232
w2022-03-15 18:08:40 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@55c36232
w2022-03-15 18:08:40 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@55c36232
w2022-03-15 18:08:40 DEBUG Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@540a35ed
w2022-03-15 18:08:40 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@540a35ed
w2022-03-15 18:08:40 DEBUG Adding type registration big_integer -> org.hibernate.type.BigIntegerType@513ff7c5
w2022-03-15 18:08:40 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@513ff7c5
w2022-03-15 18:08:40 DEBUG Adding type registration string -> org.hibernate.type.StringType@3936221
w2022-03-15 18:08:40 DEBUG Adding type registration java.lang.String -> org.hibernate.type.StringType@3936221
w2022-03-15 18:08:40 DEBUG Adding type registration nstring -> org.hibernate.type.StringNVarcharType@814bd1e
w2022-03-15 18:08:40 DEBUG Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@49ee388b
w2022-03-15 18:08:40 DEBUG Adding type registration url -> org.hibernate.type.UrlType@7c76539
w2022-03-15 18:08:40 DEBUG Adding type registration java.net.URL -> org.hibernate.type.UrlType@7c76539
w2022-03-15 18:08:40 DEBUG Adding type registration Duration -> org.hibernate.type.DurationType@5166ddac
w2022-03-15 18:08:40 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5166ddac
w2022-03-15 18:08:40 DEBUG Adding type registration Instant -> org.hibernate.type.InstantType@2390e04f
w2022-03-15 18:08:40 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2390e04f
w2022-03-15 18:08:40 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@62b87628
w2022-03-15 18:08:40 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@62b87628
w2022-03-15 18:08:40 DEBUG Adding type registration LocalDate -> org.hibernate.type.LocalDateType@199fe665
w2022-03-15 18:08:40 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@199fe665
w2022-03-15 18:08:40 DEBUG Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@565f4761
w2022-03-15 18:08:40 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@565f4761
w2022-03-15 18:08:40 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@604851f2
w2022-03-15 18:08:40 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@604851f2
w2022-03-15 18:08:40 DEBUG Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@e905996
w2022-03-15 18:08:40 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@e905996
w2022-03-15 18:08:40 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5d597be8
w2022-03-15 18:08:40 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5d597be8
w2022-03-15 18:08:40 DEBUG Adding type registration date -> org.hibernate.type.DateType@623e3e4
w2022-03-15 18:08:40 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.DateType@623e3e4
w2022-03-15 18:08:40 DEBUG Adding type registration time -> org.hibernate.type.TimeType@70ccfc03
w2022-03-15 18:08:40 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.TimeType@70ccfc03
w2022-03-15 18:08:40 DEBUG Adding type registration timestamp -> org.hibernate.type.TimestampType@4ef9f9c9
w2022-03-15 18:08:40 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4ef9f9c9
w2022-03-15 18:08:40 DEBUG Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4ef9f9c9
w2022-03-15 18:08:40 DEBUG Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@22a22b28
w2022-03-15 18:08:40 DEBUG Adding type registration calendar -> org.hibernate.type.CalendarType@4eae0b5c
w2022-03-15 18:08:40 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4eae0b5c
w2022-03-15 18:08:40 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4eae0b5c
w2022-03-15 18:08:40 DEBUG Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@20c27a3f
w2022-03-15 18:08:40 DEBUG Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@729289eb
w2022-03-15 18:08:40 DEBUG Adding type registration locale -> org.hibernate.type.LocaleType@346ea85a
w2022-03-15 18:08:40 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@346ea85a
w2022-03-15 18:08:40 DEBUG Adding type registration currency -> org.hibernate.type.CurrencyType@185a0662
w2022-03-15 18:08:40 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@185a0662
w2022-03-15 18:08:40 DEBUG Adding type registration timezone -> org.hibernate.type.TimeZoneType@62342821
w2022-03-15 18:08:40 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@62342821
w2022-03-15 18:08:40 DEBUG Adding type registration class -> org.hibernate.type.ClassType@728ba52b
w2022-03-15 18:08:40 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.ClassType@728ba52b
w2022-03-15 18:08:40 DEBUG Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5d59ec5a
w2022-03-15 18:08:40 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5d59ec5a
w2022-03-15 18:08:40 DEBUG Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@37326876
w2022-03-15 18:08:40 DEBUG Adding type registration binary -> org.hibernate.type.BinaryType@2b9b5c4d
w2022-03-15 18:08:40 DEBUG Adding type registration byte[] -> org.hibernate.type.BinaryType@2b9b5c4d
w2022-03-15 18:08:40 DEBUG Adding type registration [B -> org.hibernate.type.BinaryType@2b9b5c4d
w2022-03-15 18:08:40 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@9eb0aa5
w2022-03-15 18:08:40 DEBUG Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@9eb0aa5
w2022-03-15 18:08:40 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@9eb0aa5
w2022-03-15 18:08:40 DEBUG Adding type registration row_version -> org.hibernate.type.RowVersionType@63127e74
w2022-03-15 18:08:40 DEBUG Adding type registration image -> org.hibernate.type.ImageType@371b4d86
w2022-03-15 18:08:40 DEBUG Adding type registration characters -> org.hibernate.type.CharArrayType@45424657
w2022-03-15 18:08:40 DEBUG Adding type registration char[] -> org.hibernate.type.CharArrayType@45424657
w2022-03-15 18:08:40 DEBUG Adding type registration [C -> org.hibernate.type.CharArrayType@45424657
w2022-03-15 18:08:40 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5bc7f654
w2022-03-15 18:08:40 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5bc7f654
w2022-03-15 18:08:40 DEBUG Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5bc7f654
w2022-03-15 18:08:40 DEBUG Adding type registration text -> org.hibernate.type.TextType@4726a827
w2022-03-15 18:08:40 DEBUG Adding type registration ntext -> org.hibernate.type.NTextType@19a65abb
w2022-03-15 18:08:40 DEBUG Adding type registration blob -> org.hibernate.type.BlobType@58879b7c
w2022-03-15 18:08:40 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@58879b7c
w2022-03-15 18:08:40 DEBUG Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@40a7a66a
w2022-03-15 18:08:40 DEBUG Adding type registration clob -> org.hibernate.type.ClobType@4c3d7773
w2022-03-15 18:08:40 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4c3d7773
w2022-03-15 18:08:40 DEBUG Adding type registration nclob -> org.hibernate.type.NClobType@7d703384
w2022-03-15 18:08:40 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7d703384
w2022-03-15 18:08:40 DEBUG Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6434934c
w2022-03-15 18:08:40 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@504502b8
w2022-03-15 18:08:40 DEBUG Adding type registration serializable -> org.hibernate.type.SerializableType@6a2499b2
w2022-03-15 18:08:40 DEBUG Adding type registration object -> org.hibernate.type.ObjectType@74c4f216
w2022-03-15 18:08:40 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@74c4f216
w2022-03-15 18:08:40 DEBUG Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1b96eb7
w2022-03-15 18:08:40 DEBUG Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@523e78d4
w2022-03-15 18:08:40 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@13393889
w2022-03-15 18:08:40 DEBUG Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@c9f8fa1
w2022-03-15 18:08:40 DEBUG Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@46998453
w2022-03-15 18:08:40 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6740ac8c
w2022-03-15 18:08:40 DEBUG Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3de72d9d
w2022-03-15 18:08:40 DEBUG Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4d754f07
w2022-03-15 18:08:40 INFO  HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
w2022-03-15 18:08:40 DEBUG Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@5ed60222] into BootstrapContext; was [null]
w2022-03-15 18:08:40 DEBUG ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@5ed60222) [was null]
w2022-03-15 18:08:40 DEBUG Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@230140f8] into BootstrapContext; was [null]
w2022-03-15 18:08:40 DEBUG Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@4a9ddebb] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@40f5d68a]
w2022-03-15 18:08:40 DEBUG Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@5ed60222]
w2022-03-15 18:08:40 DEBUG ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@5ed60222]
w2022-03-15 18:08:40 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
w2022-03-15 18:08:40 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
w2022-03-15 18:08:40 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
w2022-03-15 18:08:40 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
w2022-03-15 18:08:40 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
w2022-03-15 18:08:40 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
w2022-03-15 18:08:40 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
w2022-03-15 18:08:40 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
w2022-03-15 18:08:40 DEBUG Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
w2022-03-15 18:08:40 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
w2022-03-15 18:08:40 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
w2022-03-15 18:08:40 DEBUG Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
w2022-03-15 18:08:40 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
w2022-03-15 18:08:40 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
w2022-03-15 18:08:40 DEBUG Database ->
       name : SQLite
    version : 3.36.0
      major : 3
      minor : 36
w2022-03-15 18:08:40 DEBUG Driver ->
       name : SQLite JDBC
    version : 3.36.0.3
      major : 3
      minor : 36
w2022-03-15 18:08:40 DEBUG JDBC version : 2.1
w2022-03-15 18:08:40 INFO  HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
w2022-03-15 18:08:40 DEBUG JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
w2022-03-15 18:08:40 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
w2022-03-15 18:08:40 DEBUG HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [2] less than 4
w2022-03-15 18:08:40 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@27391c2a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7f1a6213]
w2022-03-15 18:08:40 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
w2022-03-15 18:08:40 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.Comment
w2022-03-15 18:08:40 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 18:08:40 DEBUG Import with entity name Comment
w2022-03-15 18:08:40 DEBUG Bind entity ru.edu.helpdesk.entity.Comment on table comment
w2022-03-15 18:08:40 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 18:08:40 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Comment] is safe
w2022-03-15 18:08:40 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Comment
w2022-03-15 18:08:40 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 18:08:40 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Comment:id]
w2022-03-15 18:08:40 DEBUG building SimpleValue for id
w2022-03-15 18:08:40 DEBUG Building property id
w2022-03-15 18:08:40 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 18:08:40 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=message, insertable=true, updatable=true, unique=false}
w2022-03-15 18:08:40 DEBUG MetadataSourceProcessor property message with lazy=false
w2022-03-15 18:08:40 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Comment:message]
w2022-03-15 18:08:40 DEBUG building SimpleValue for message
w2022-03-15 18:08:40 DEBUG Building property message
w2022-03-15 18:08:40 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 18:08:40 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=ticket, insertable=true, updatable=true, unique=false}
w2022-03-15 18:08:40 DEBUG Building property ticket
w2022-03-15 18:08:40 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 18:08:40 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=user, insertable=true, updatable=true, unique=false}
w2022-03-15 18:08:40 DEBUG Building property user
w2022-03-15 18:08:40 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 18:08:40 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 18:08:40 DEBUG Import with entity name Ticket
w2022-03-15 18:08:40 DEBUG Bind entity ru.edu.helpdesk.entity.Ticket on table ticket
w2022-03-15 18:08:40 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 18:08:40 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Ticket] is safe
w2022-03-15 18:08:40 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Ticket
w2022-03-15 18:08:40 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 18:08:40 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:id]
w2022-03-15 18:08:40 DEBUG building SimpleValue for id
w2022-03-15 18:08:40 DEBUG Building property id
w2022-03-15 18:08:40 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 18:08:40 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 18:08:40 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=client, insertable=true, updatable=true, unique=false}
w2022-03-15 18:08:40 DEBUG Building property client
w2022-03-15 18:08:40 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=status, insertable=true, updatable=true, unique=false}
w2022-03-15 18:08:40 DEBUG MetadataSourceProcessor property status with lazy=false
w2022-03-15 18:08:40 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:status]
w2022-03-15 18:08:40 DEBUG building SimpleValue for status
w2022-03-15 18:08:40 DEBUG Building property status
w2022-03-15 18:08:40 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 18:08:40 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=support, insertable=true, updatable=true, unique=false}
w2022-03-15 18:08:40 DEBUG Building property support
w2022-03-15 18:08:40 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=title, insertable=true, updatable=true, unique=false}
w2022-03-15 18:08:40 DEBUG MetadataSourceProcessor property title with lazy=false
w2022-03-15 18:08:40 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:title]
w2022-03-15 18:08:40 DEBUG building SimpleValue for title
w2022-03-15 18:08:40 DEBUG Building property title
w2022-03-15 18:08:40 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.User
w2022-03-15 18:08:40 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 18:08:40 DEBUG Import with entity name User
w2022-03-15 18:08:40 DEBUG Bind entity ru.edu.helpdesk.entity.User on table user
w2022-03-15 18:08:40 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 18:08:40 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.User] is safe
w2022-03-15 18:08:40 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.User
w2022-03-15 18:08:40 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 18:08:40 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:id]
w2022-03-15 18:08:40 DEBUG building SimpleValue for id
w2022-03-15 18:08:40 DEBUG Building property id
w2022-03-15 18:08:40 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 18:08:40 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
w2022-03-15 18:08:40 DEBUG MetadataSourceProcessor property firstName with lazy=false
w2022-03-15 18:08:40 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:firstName]
w2022-03-15 18:08:40 DEBUG building SimpleValue for firstName
w2022-03-15 18:08:40 DEBUG Building property firstName
w2022-03-15 18:08:40 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
w2022-03-15 18:08:40 DEBUG MetadataSourceProcessor property lastName with lazy=false
w2022-03-15 18:08:40 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:lastName]
w2022-03-15 18:08:40 DEBUG building SimpleValue for lastName
w2022-03-15 18:08:40 DEBUG Building property lastName
w2022-03-15 18:08:40 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=login, insertable=true, updatable=true, unique=false}
w2022-03-15 18:08:40 DEBUG MetadataSourceProcessor property login with lazy=false
w2022-03-15 18:08:40 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:login]
w2022-03-15 18:08:40 DEBUG building SimpleValue for login
w2022-03-15 18:08:40 DEBUG Building property login
w2022-03-15 18:08:40 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
w2022-03-15 18:08:40 DEBUG MetadataSourceProcessor property password with lazy=false
w2022-03-15 18:08:40 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:password]
w2022-03-15 18:08:40 DEBUG building SimpleValue for password
w2022-03-15 18:08:40 DEBUG Building property password
w2022-03-15 18:08:40 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=role, insertable=true, updatable=true, unique=false}
w2022-03-15 18:08:40 DEBUG MetadataSourceProcessor property role with lazy=false
w2022-03-15 18:08:40 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:role]
w2022-03-15 18:08:40 DEBUG building SimpleValue for role
w2022-03-15 18:08:40 DEBUG Building property role
w2022-03-15 18:08:40 DEBUG Starting fillSimpleValue for id
w2022-03-15 18:08:40 DEBUG Starting fillSimpleValue for message
w2022-03-15 18:08:40 DEBUG Starting fillSimpleValue for id
w2022-03-15 18:08:40 DEBUG Starting fillSimpleValue for status
w2022-03-15 18:08:40 DEBUG Starting fillSimpleValue for title
w2022-03-15 18:08:40 DEBUG Starting fillSimpleValue for id
w2022-03-15 18:08:40 DEBUG Starting fillSimpleValue for firstName
w2022-03-15 18:08:40 DEBUG Starting fillSimpleValue for lastName
w2022-03-15 18:08:40 DEBUG Starting fillSimpleValue for login
w2022-03-15 18:08:40 DEBUG Starting fillSimpleValue for password
w2022-03-15 18:08:40 DEBUG Starting fillSimpleValue for role
w2022-03-15 18:08:40 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [comment]
w2022-03-15 18:08:40 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [ticket]
w2022-03-15 18:08:40 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [user]
w2022-03-15 18:08:40 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 18:08:40 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 18:08:40 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 18:08:40 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 18:08:40 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 18:08:40 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 18:08:40 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 18:08:40 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 18:08:40 DEBUG Building session factory
w2022-03-15 18:08:40 DEBUG SessionFactory name : null
w2022-03-15 18:08:40 DEBUG Automatic flush during beforeCompletion(): enabled
w2022-03-15 18:08:40 DEBUG Automatic session close at end of transaction: disabled
w2022-03-15 18:08:40 DEBUG Statistics: disabled
w2022-03-15 18:08:40 DEBUG Deleted entity synthetic identifier rollback: disabled
w2022-03-15 18:08:40 DEBUG Default entity-mode: pojo
w2022-03-15 18:08:40 DEBUG Check Nullability in Core (should be disabled when Bean Validation is on): enabled
w2022-03-15 18:08:40 DEBUG Allow initialization of lazy state outside session : disabled
w2022-03-15 18:08:40 DEBUG Using BatchFetchStyle : LEGACY
w2022-03-15 18:08:40 DEBUG Default batch fetch size: -1
w2022-03-15 18:08:40 DEBUG Maximum outer join fetch depth: null
w2022-03-15 18:08:40 DEBUG Default null ordering: NONE
w2022-03-15 18:08:40 DEBUG Order SQL updates by primary key: disabled
w2022-03-15 18:08:40 DEBUG Order SQL inserts for batching: disabled
w2022-03-15 18:08:40 DEBUG multi-tenancy strategy : NONE
w2022-03-15 18:08:40 DEBUG JTA Track by Thread: enabled
w2022-03-15 18:08:40 DEBUG Query language substitutions: {}
w2022-03-15 18:08:40 DEBUG Named query checking : enabled
w2022-03-15 18:08:40 DEBUG Second-level cache: disabled
w2022-03-15 18:08:40 DEBUG Second-level query cache: disabled
w2022-03-15 18:08:40 DEBUG Second-level query cache factory: null
w2022-03-15 18:08:40 DEBUG Second-level cache region prefix: null
w2022-03-15 18:08:40 DEBUG Optimize second-level cache for minimal puts: disabled
w2022-03-15 18:08:40 DEBUG Structured second-level cache entries: disabled
w2022-03-15 18:08:40 DEBUG Second-level cache direct-reference entries: disabled
w2022-03-15 18:08:40 DEBUG Automatic eviction of collection cache: disabled
w2022-03-15 18:08:40 DEBUG JDBC batch size: 1
w2022-03-15 18:08:40 DEBUG JDBC batch updates for versioned data: enabled
w2022-03-15 18:08:40 DEBUG Scrollable result sets: disabled
w2022-03-15 18:08:40 DEBUG Wrap result sets: disabled
w2022-03-15 18:08:40 DEBUG JDBC3 getGeneratedKeys(): enabled
w2022-03-15 18:08:40 DEBUG JDBC result set fetch size: null
w2022-03-15 18:08:40 DEBUG Connection release mode: ON_CLOSE
w2022-03-15 18:08:40 DEBUG Generate SQL with comments: disabled
w2022-03-15 18:08:40 DEBUG JPA compliance - query : disabled
w2022-03-15 18:08:40 DEBUG JPA compliance - closed-handling : disabled
w2022-03-15 18:08:40 DEBUG JPA compliance - lists : disabled
w2022-03-15 18:08:40 DEBUG JPA compliance - transactions : disabled
w2022-03-15 18:08:40 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 18:08:40 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 18:08:40 DEBUG Session factory constructed with filter configurations : {}
w2022-03-15 18:08:40 DEBUG Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=true, java.specification.version=1.8, file.encoding.pkg=sun.io, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@5e17f507, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.SQLiteDialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\charsets.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\cldrdata.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\dnsns.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\jaccess.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\localedata.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\nashorn.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunec.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunmscapi.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\zipfs.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jce.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jfr.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jsse.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\management-agent.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\resources.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\rt.jar;C:\Users\Ольга\Desktop\Java\Project\Project1\helpdeskproject\target\classes;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\2.6.4\spring-boot-starter-data-jpa-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\2.6.4\spring-boot-starter-jdbc-2.6.4.jar;C:\Users\Ольга\.m2\repository\com\zaxxer\HikariCP\4.0.3\HikariCP-4.0.3.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-jdbc\5.3.16\spring-jdbc-5.3.16.jar;C:\Users\Ольга\.m2\repository\jakarta\transaction\jakarta.transaction-api\1.3.3\jakarta.transaction-api-1.3.3.jar;C:\Users\Ольга\.m2\repository\jakarta\persistence\jakarta.persistence-api\2.2.3\jakarta.persistence-api-2.2.3.jar;C:\Users\Ольга\.m2\repository\org\hibernate\hibernate-core\5.6.5.Final\hibernate-core-5.6.5.Final.jar;C:\Users\Ольга\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy\1.11.22\byte-buddy-1.11.22.jar;C:\Users\Ольга\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ольга\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Ольга\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.6\jaxb-runtime-2.3.6.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\txw2\2.3.6\txw2-2.3.6.jar;C:\Users\Ольга\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.12\istack-commons-runtime-3.0.12.jar;C:\Users\Ольга\.m2\repository\com\sun\activation\jakarta.activation\1.2.2\jakarta.activation-1.2.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\data\spring-data-jpa\2.6.2\spring-data-jpa-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\data\spring-data-commons\2.6.2\spring-data-commons-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-orm\5.3.16\spring-orm-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-context\5.3.16\spring-context-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-tx\5.3.16\spring-tx-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-beans\5.3.16\spring-beans-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-aspects\5.3.16\spring-aspects-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-security\2.6.4\spring-boot-starter-security-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter\2.6.4\spring-boot-starter-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-logging\2.6.4\spring-boot-starter-logging-2.6.4.jar;C:\Users\Ольга\.m2\repository\ch\qos\logback\logback-classic\1.2.10\logback-classic-1.2.10.jar;C:\Users\Ольга\.m2\repository\ch\qos\logback\logback-core\1.2.10\logback-core-1.2.10.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.17.1\log4j-to-slf4j-2.17.1.jar;C:\Users\Ольга\.m2\repository\org\slf4j\jul-to-slf4j\1.7.36\jul-to-slf4j-1.7.36.jar;C:\Users\Ольга\.m2\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;C:\Users\Ольга\.m2\repository\org\yaml\snakeyaml\1.29\snakeyaml-1.29.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-aop\5.3.16\spring-aop-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-config\5.6.2\spring-security-config-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-web\5.6.2\spring-security-web-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-expression\5.3.16\spring-expression-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-web\2.6.4\spring-boot-starter-web-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-json\2.6.4\spring-boot-starter-json-2.6.4.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.13.1\jackson-datatype-jdk8-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.13.1\jackson-datatype-jsr310-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.13.1\jackson-module-parameter-names-2.13.1.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\2.6.4\spring-boot-starter-tomcat-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.58\tomcat-embed-core-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\9.0.58\tomcat-embed-el-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.58\tomcat-embed-websocket-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-web\5.3.16\spring-web-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-webmvc\5.3.16\spring-webmvc-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-devtools\2.6.4\spring-boot-devtools-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot\2.6.4\spring-boot-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\2.6.4\spring-boot-autoconfigure-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\xerial\sqlite-jdbc\3.36.0.3\sqlite-jdbc-3.36.0.3.jar;C:\Users\Ольга\.m2\repository\com\zsoltfabok\sqlite-dialect\1.0\sqlite-dialect-1.0.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-aop\2.6.2\spring-boot-starter-aop-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\aspectj\aspectjweaver\1.9.7\aspectjweaver-1.9.7.jar;C:\Users\Ольга\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.3\jakarta.xml.bind-api-2.3.3.jar;C:\Users\Ольга\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.2\jakarta.activation-api-1.2.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-core\5.3.16\spring-core-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-jcl\5.3.16\spring-jcl-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-core\5.6.2\spring-security-core-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-crypto\5.6.2\spring-security-crypto-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\projectlombok\lombok\1.18.22\lombok-1.18.22.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\2.6.4\spring-boot-starter-thymeleaf-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\thymeleaf-spring5\3.0.15.RELEASE\thymeleaf-spring5-3.0.15.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\thymeleaf\3.0.15.RELEASE\thymeleaf-3.0.15.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\attoparser\attoparser\2.0.5.RELEASE\attoparser-2.0.5.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-java8time\3.0.4.RELEASE\thymeleaf-extras-java8time-3.0.4.RELEASE.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.1\jackson-databind-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.1\jackson-annotations-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.1\jackson-core-2.13.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-api\2.4.1\log4j-api-2.4.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-core\2.4.1\log4j-core-2.4.1.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.2\lib\idea_rt.jar, java.vm.vendor=Temurin, sun.arch.data.model=64, user.variant=, java.vendor.url=https://adoptium.net/, catalina.useNaming=false, user.timezone=Europe/Moscow, jakarta.persistence.sharedCache.mode=UNSPECIFIED, os.name=Windows 10, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), user.country=RU, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\bin, sun.java.command=ru.edu.helpdesk.HelpdeskApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@49ed1fbe, com.sun.management.jmxremote=, javax.persistence.sharedCache.mode=UNSPECIFIED, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, user.home=C:\Users\Ольга, user.language=ru, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre, file.separator=\, spring.output.ansi.enabled=always, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, sun.boot.class.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\resources.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\rt.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\sunrsasign.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jsse.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jce.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\charsets.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jfr.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\classes, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_312-b07, user.name=Эльдорадо, spring.jmx.enabled=true, path.separator=;, os.version=10.0, java.endorsed.dirs=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\endorsed, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=default, spring.beaninfo.ignore=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=C:\Users\134E~1\AppData\Local\Temp\, catalina.home=C:\Users\Ольга\AppData\Local\Temp\tomcat.8080.2448183581357493831, java.version=1.8.0_312, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\Ольга\Desktop\Java\Project\Project1\helpdeskproject, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=13304, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\Ольга\AppData\Local\Temp\tomcat.8080.2448183581357493831, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@5a80ba57, java.library.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\windows\System32\OpenSSH\;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\Program Files\apache-maven-3.8.4\bin;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Ольга\AppData\Local\Microsoft\WindowsApps;C:\Users\Ольга\AppData\Local\Programs\Microsoft VS Code\bin;C:\SQLite;C:\Users\Ольга\AppData\Roaming\npm;C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.2\bin;;., java.vendor=Temurin, java.vm.info=mixed mode, java.vm.version=25.312-b07, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, java.ext.dirs=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext;C:\windows\Sun\Java\lib\ext, hibernate.connection.datasource=HikariDataSource (HikariPool-1), hibernate.hbm2ddl.import_files=data/import.sql, java.class.version=52.0}
w2022-03-15 18:08:40 DEBUG Skipping JACC integration as it was not enabled
w2022-03-15 18:08:40 DEBUG Using ORDINAL-based conversion for Enum ru.edu.helpdesk.entity.UserRole
w2022-03-15 18:08:40 DEBUG Using ORDINAL-based conversion for Enum ru.edu.helpdesk.entity.TicketStatus
w2022-03-15 18:08:40 DEBUG Instantiated session factory
w2022-03-15 18:08:40 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@27391c2a] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@254e6603]
w2022-03-15 18:08:40 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.User] is safe
w2022-03-15 18:08:40 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.User
w2022-03-15 18:08:40 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:08:40 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:08:40 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:08:40 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:08:40 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Ticket] is safe
w2022-03-15 18:08:40 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Ticket
w2022-03-15 18:08:40 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:08:40 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:08:40 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:08:40 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:08:40 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:08:40 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:08:40 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:08:40 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:08:40 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Comment] is safe
w2022-03-15 18:08:40 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Comment
w2022-03-15 18:08:40 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:08:40 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:08:40 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:08:40 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:08:40 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.User
w2022-03-15 18:08:40 DEBUG  Version select: select id from user where id =?
w2022-03-15 18:08:40 DEBUG  Snapshot select: select user_.id, user_.first_name as first_na2_2_, user_.last_name as last_nam3_2_, user_.login as login4_2_, user_.password as password5_2_, user_.role as role6_2_ from user user_ where user_.id=?
w2022-03-15 18:08:40 DEBUG  Insert 0: insert into user (first_name, last_name, login, password, role, id) values (?, ?, ?, ?, ?, ?)
w2022-03-15 18:08:40 DEBUG  Update 0: update user set first_name=?, last_name=?, login=?, password=?, role=? where id=?
w2022-03-15 18:08:40 DEBUG  Delete 0: delete from user where id=?
w2022-03-15 18:08:40 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a179b4a]
w2022-03-15 18:08:40 DEBUG Visiting attribute path : firstName
w2022-03-15 18:08:40 DEBUG Visiting attribute path : lastName
w2022-03-15 18:08:40 DEBUG Visiting attribute path : login
w2022-03-15 18:08:40 DEBUG Visiting attribute path : password
w2022-03-15 18:08:40 DEBUG Visiting attribute path : role
w2022-03-15 18:08:40 DEBUG Building LoadPlan...
w2022-03-15 18:08:40 DEBUG processing queryspace <gen:0>
w2022-03-15 18:08:40 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.User)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

w2022-03-15 18:08:40 DEBUG Static select for entity ru.edu.helpdesk.entity.User [NONE]: select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 18:08:40 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.Ticket
w2022-03-15 18:08:40 DEBUG  Version select: select id from ticket where id =?
w2022-03-15 18:08:40 DEBUG  Snapshot select: select ticket_.id, ticket_.client_id as client_i4_1_, ticket_.status as status2_1_, ticket_.support_id as support_5_1_, ticket_.title as title3_1_ from ticket ticket_ where ticket_.id=?
w2022-03-15 18:08:40 DEBUG  Insert 0: insert into ticket (client_id, status, support_id, title, id) values (?, ?, ?, ?, ?)
w2022-03-15 18:08:40 DEBUG  Update 0: update ticket set client_id=?, status=?, support_id=?, title=? where id=?
w2022-03-15 18:08:40 DEBUG  Delete 0: delete from ticket where id=?
w2022-03-15 18:08:40 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@784ea427]
w2022-03-15 18:08:40 DEBUG Visiting attribute path : client
w2022-03-15 18:08:40 DEBUG Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45555e8f]
w2022-03-15 18:08:40 DEBUG Visiting attribute path : client.firstName
w2022-03-15 18:08:40 DEBUG Visiting attribute path : client.lastName
w2022-03-15 18:08:40 DEBUG Visiting attribute path : client.login
w2022-03-15 18:08:40 DEBUG Visiting attribute path : client.password
w2022-03-15 18:08:40 DEBUG Visiting attribute path : client.role
w2022-03-15 18:08:40 DEBUG Visiting attribute path : status
w2022-03-15 18:08:40 DEBUG Visiting attribute path : support
w2022-03-15 18:08:40 DEBUG Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c0d1a76]
w2022-03-15 18:08:40 DEBUG Visiting attribute path : support.firstName
w2022-03-15 18:08:40 DEBUG Visiting attribute path : support.lastName
w2022-03-15 18:08:40 DEBUG Visiting attribute path : support.login
w2022-03-15 18:08:40 DEBUG Visiting attribute path : support.password
w2022-03-15 18:08:40 DEBUG Visiting attribute path : support.role
w2022-03-15 18:08:40 DEBUG Visiting attribute path : title
w2022-03-15 18:08:40 DEBUG Building LoadPlan...
w2022-03-15 18:08:40 DEBUG processing queryspace <gen:0>
w2022-03-15 18:08:40 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.Ticket)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.Ticket, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.Ticket)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:1>, path=ru.edu.helpdesk.entity.Ticket.client)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:2>, path=ru.edu.helpdesk.entity.Ticket.support)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.Ticket)
          - SQL table alias mapping - ticket0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(client)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
          - JOIN (JoinDefinedByMetadata(support)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user2_
                - alias suffix - 2_
                - suffixed key columns - {id1_2_2_}

w2022-03-15 18:08:40 DEBUG Static select for entity ru.edu.helpdesk.entity.Ticket [NONE]: select ticket0_.id as id1_1_0_, ticket0_.client_id as client_i4_1_0_, ticket0_.status as status2_1_0_, ticket0_.support_id as support_5_1_0_, ticket0_.title as title3_1_0_, user1_.id as id1_2_1_, user1_.first_name as first_na2_2_1_, user1_.last_name as last_nam3_2_1_, user1_.login as login4_2_1_, user1_.password as password5_2_1_, user1_.role as role6_2_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id left outer join user user2_ on ticket0_.support_id=user2_.id where ticket0_.id=?
w2022-03-15 18:08:40 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.Comment
w2022-03-15 18:08:40 DEBUG  Version select: select id from comment where id =?
w2022-03-15 18:08:40 DEBUG  Snapshot select: select comment_.id, comment_.message as message2_0_, comment_.ticket_id as ticket_i3_0_, comment_.user_id as user_id4_0_ from comment comment_ where comment_.id=?
w2022-03-15 18:08:40 DEBUG  Insert 0: insert into comment (message, ticket_id, user_id, id) values (?, ?, ?, ?)
w2022-03-15 18:08:40 DEBUG  Update 0: update comment set message=?, ticket_id=?, user_id=? where id=?
w2022-03-15 18:08:40 DEBUG  Delete 0: delete from comment where id=?
w2022-03-15 18:08:40 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17a46f9a]
w2022-03-15 18:08:40 DEBUG Visiting attribute path : message
w2022-03-15 18:08:40 DEBUG Visiting attribute path : ticket
w2022-03-15 18:08:40 DEBUG Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c3368b9]
w2022-03-15 18:08:40 DEBUG Visiting attribute path : ticket.client
w2022-03-15 18:08:40 DEBUG Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b03656b]
w2022-03-15 18:08:40 DEBUG Visiting attribute path : ticket.client.firstName
w2022-03-15 18:08:40 DEBUG Visiting attribute path : ticket.client.lastName
w2022-03-15 18:08:40 DEBUG Visiting attribute path : ticket.client.login
w2022-03-15 18:08:40 DEBUG Visiting attribute path : ticket.client.password
w2022-03-15 18:08:40 DEBUG Visiting attribute path : ticket.client.role
w2022-03-15 18:08:40 DEBUG Visiting attribute path : ticket.status
w2022-03-15 18:08:40 DEBUG Visiting attribute path : ticket.support
w2022-03-15 18:08:40 DEBUG Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@693d9319]
w2022-03-15 18:08:40 DEBUG Visiting attribute path : ticket.support.firstName
w2022-03-15 18:08:40 DEBUG Visiting attribute path : ticket.support.lastName
w2022-03-15 18:08:40 DEBUG Visiting attribute path : ticket.support.login
w2022-03-15 18:08:40 DEBUG Visiting attribute path : ticket.support.password
w2022-03-15 18:08:40 DEBUG Visiting attribute path : ticket.support.role
w2022-03-15 18:08:40 DEBUG Visiting attribute path : ticket.title
w2022-03-15 18:08:40 DEBUG Visiting attribute path : user
w2022-03-15 18:08:40 DEBUG Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e60318d]
w2022-03-15 18:08:40 DEBUG Visiting attribute path : user.firstName
w2022-03-15 18:08:40 DEBUG Visiting attribute path : user.lastName
w2022-03-15 18:08:40 DEBUG Visiting attribute path : user.login
w2022-03-15 18:08:40 DEBUG Visiting attribute path : user.password
w2022-03-15 18:08:40 DEBUG Visiting attribute path : user.role
w2022-03-15 18:08:40 DEBUG Building LoadPlan...
w2022-03-15 18:08:40 DEBUG processing queryspace <gen:0>
w2022-03-15 18:08:40 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.Comment)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.Comment, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.Comment)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.Ticket, querySpaceUid=<gen:1>, path=ru.edu.helpdesk.entity.Comment.ticket)
             - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:2>, path=ru.edu.helpdesk.entity.Comment.ticket.client)
             - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:3>, path=ru.edu.helpdesk.entity.Comment.ticket.support)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:4>, path=ru.edu.helpdesk.entity.Comment.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(ticket)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ru.edu.helpdesk.entity.Ticket)
                - SQL table alias mapping - ticket1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(client)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=ru.edu.helpdesk.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}
                - JOIN (JoinDefinedByMetadata(support)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=ru.edu.helpdesk.entity.User)
                      - SQL table alias mapping - user3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_2_3_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user4_
                - alias suffix - 4_
                - suffixed key columns - {id1_2_4_}

w2022-03-15 18:08:40 DEBUG Static select for entity ru.edu.helpdesk.entity.Comment [NONE]: select comment0_.id as id1_0_0_, comment0_.message as message2_0_0_, comment0_.ticket_id as ticket_i3_0_0_, comment0_.user_id as user_id4_0_0_, ticket1_.id as id1_1_1_, ticket1_.client_id as client_i4_1_1_, ticket1_.status as status2_1_1_, ticket1_.support_id as support_5_1_1_, ticket1_.title as title3_1_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_, user3_.id as id1_2_3_, user3_.first_name as first_na2_2_3_, user3_.last_name as last_nam3_2_3_, user3_.login as login4_2_3_, user3_.password as password5_2_3_, user3_.role as role6_2_3_, user4_.id as id1_2_4_, user4_.first_name as first_na2_2_4_, user4_.last_name as last_nam3_2_4_, user4_.login as login4_2_4_, user4_.password as password5_2_4_, user4_.role as role6_2_4_ from comment comment0_ left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id left outer join user user2_ on ticket1_.client_id=user2_.id left outer join user user3_ on ticket1_.support_id=user3_.id left outer join user user4_ on comment0_.user_id=user4_.id where comment0_.id=?
w2022-03-15 18:08:40 DEBUG drop table if exists comment
w2022-03-15 18:08:40 DEBUG drop table if exists hibernate_sequence
w2022-03-15 18:08:40 DEBUG drop table if exists ticket
w2022-03-15 18:08:40 DEBUG drop table if exists user
w2022-03-15 18:08:40 DEBUG create table comment (id bigint not null, message varchar(255) not null, ticket_id bigint, user_id bigint, primary key (id))
w2022-03-15 18:08:40 DEBUG create table hibernate_sequence (next_val bigint)
w2022-03-15 18:08:40 DEBUG insert into hibernate_sequence values ( 1 )
w2022-03-15 18:08:40 DEBUG create table ticket (id bigint not null, status integer, title varchar(255) not null, client_id bigint, support_id bigint, primary key (id))
w2022-03-15 18:08:40 DEBUG create table user (id bigint not null, first_name varchar(255), last_name varchar(255), login varchar(255) not null, password varchar(255) not null, role integer, primary key (id))
w2022-03-15 18:08:40 INFO  HHH000476: Executing import script 'file:/C:/Users/%d0%9e%d0%bb%d1%8c%d0%b3%d0%b0/Desktop/Java/Project/Project1/helpdeskproject/target/classes/data/import.sql'
w2022-03-15 18:08:40 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (1, 'admin', 'admin', 'admin', 'admin', 0)
w2022-03-15 18:08:40 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (2, 'support', 'support', 'support', 'support', 1)
w2022-03-15 18:08:40 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (3, 'user1', 'user1', 'user1', 'user1', 2)
w2022-03-15 18:08:40 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (4, 'user2', 'user2', 'user2', 'user2', 2)
w2022-03-15 18:08:40 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (1, 1, 'Hello user1',1, 2)
w2022-03-15 18:08:40 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (2, 0, 'Title2', 1, NULL)
w2022-03-15 18:08:40 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (3, 0, 'Message user2', 4, NULL)
w2022-03-15 18:08:40 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (1, "comment ticket1", 1, 3)
w2022-03-15 18:08:41 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (2, "comment ticket2", 2, 3)
w2022-03-15 18:08:41 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (3, "comment ticket11", 1, 2)
w2022-03-15 18:08:41 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (4, "comment ticket111", 1, 2)
w2022-03-15 18:08:41 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (5, "comment ticket22", 2, 2)
w2022-03-15 18:08:41 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (6, "comment ticket3", 3, 4)
w2022-03-15 18:08:41 DEBUG UPDATE hibernate_sequence SET next_val = 8 WHERE next_val = 1
w2022-03-15 18:08:41 INFO  HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
w2022-03-15 18:08:41 DEBUG Checking 0 named HQL queries
w2022-03-15 18:08:41 DEBUG Checking 0 named SQL queries
w2022-03-15 18:08:41 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 18:08:41 DEBUG Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@17769063
w2022-03-15 18:08:41 DEBUG Registering SessionFactory: d2b1df71-b531-4041-9508-ba9f8ef70068 (<unnamed>)
w2022-03-15 18:08:41 DEBUG Not binding SessionFactory to JNDI, no JNDI name configured
w2022-03-15 18:08:41 DEBUG Statistics initialized [enabled=false]
w2022-03-15 18:08:41 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 18:08:41 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 18:08:41 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 18:08:46 DEBUG Rendered criteria query -> select generatedAlias0 from Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 18:08:46 DEBUG QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@6feaf054
w2022-03-15 18:08:46 DEBUG parse() - HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 18:08:46 DEBUG throwQueryException() : no errors
w2022-03-15 18:08:46 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[IDENT] Node: 'ru'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'edu'
    |  |  |  |  |  |  \-[IDENT] Node: 'helpdesk'
    |  |  |  |  |  \-[IDENT] Node: 'entity'
    |  |  |  |  \-[IDENT] Node: 'Ticket'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'client'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias1'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

w2022-03-15 18:08:46 DEBUG select << begin [level=1, statement=select]
w2022-03-15 18:08:46 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.Ticket (generatedAlias0) -> ticket0_
w2022-03-15 18:08:46 DEBUG Resolved : generatedAlias0 -> ticket0_.id
w2022-03-15 18:08:46 DEBUG getDataType() : client -> org.hibernate.type.ManyToOneType(ru.edu.helpdesk.entity.User)
w2022-03-15 18:08:46 DEBUG dereferenceEntityJoin() : generating join for client in ru.edu.helpdesk.entity.Ticket (generatedAlias1) parent = [ {null} ]
w2022-03-15 18:08:46 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.User (generatedAlias1) -> user1_
w2022-03-15 18:08:46 DEBUG addJoinByPathMap() : generatedAlias0.client -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}
w2022-03-15 18:08:46 DEBUG Resolved : generatedAlias0.client -> ticket0_.client_id
w2022-03-15 18:08:46 DEBUG createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'user user1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Ticket.client,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}

w2022-03-15 18:08:46 DEBUG Resolved : generatedAlias0 -> ticket0_.id
w2022-03-15 18:08:46 DEBUG Resolved : generatedAlias1 -> user1_.id
w2022-03-15 18:08:46 DEBUG getDataType() : id -> org.hibernate.type.LongType@72f593ea
w2022-03-15 18:08:46 DEBUG Resolved : generatedAlias1.id -> user1_.id
w2022-03-15 18:08:46 DEBUG select : finishing up [level=1, statement=select]
w2022-03-15 18:08:46 DEBUG processQuery() :  ( SELECT ( {select clause} ticket0_.id ) ( FromClause{level=1} ( ticket ticket0_ user user1_ ) ) ( where ( = ( user1_.id user1_.id id ) ? ) ) )
w2022-03-15 18:08:46 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Ticket): [ticket]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.Ticket)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.User)
          | path: generatedAlias1.id
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.User)
          |  | originalText: generatedAlias1
          |  \-IdentNode
          |    persister: null
          |    originalText: id
          \-ParameterNode

w2022-03-15 18:08:46 DEBUG Using FROM fragment [ticket ticket0_]
w2022-03-15 18:08:46 DEBUG Using FROM fragment [left outer join user user1_ on ticket0_.client_id=user1_.id]
w2022-03-15 18:08:46 DEBUG select >> end [level=1, statement=select]
w2022-03-15 18:08:46 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (ticket,user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'ticket0_.id as id1_1_' {alias=generatedAlias0, className=ru.edu.helpdesk.entity.Ticket, tableAlias=ticket0_}
    |  \-[SQL_TOKEN] SqlFragment: 'ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[ticket0_, user1_], fromElementsByPath=[generatedAlias0.client], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'ticket ticket0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=ticket,tableAlias=ticket0_,origin=null,columns={,className=ru.edu.helpdesk.entity.Ticket}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join user user1_ on ticket0_.client_id=user1_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Ticket.client,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user1_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias1.id,tableAlias=user1_,className=ru.edu.helpdesk.entity.User,classAlias=generatedAlias1}
          |  +-[ALIAS_REF] IdentNode: 'user1_.id' {alias=generatedAlias1, className=ru.edu.helpdesk.entity.User, tableAlias=user1_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LongType@72f593ea}

w2022-03-15 18:08:46 DEBUG throwQueryException() : no errors
w2022-03-15 18:08:46 DEBUG HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 18:08:46 DEBUG SQL: select ticket0_.id as id1_1_, ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id where user1_.id=?
w2022-03-15 18:08:46 DEBUG throwQueryException() : no errors
w2022-03-15 18:08:46 DEBUG select ticket0_.id as id1_1_, ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id where user1_.id=?
w2022-03-15 18:08:46 DEBUG Result set row: 0
w2022-03-15 18:08:46 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 18:08:46 DEBUG Result set row: 1
w2022-03-15 18:08:46 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 18:08:46 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 18:08:46 DEBUG Processing attribute `client` : value = 1
w2022-03-15 18:08:46 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 18:08:46 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 18:08:46 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 18:08:46 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#1]
w2022-03-15 18:08:46 DEBUG Processing attribute `firstName` : value = admin
w2022-03-15 18:08:46 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:08:46 DEBUG Processing attribute `lastName` : value = admin
w2022-03-15 18:08:46 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:08:46 DEBUG Processing attribute `login` : value = admin
w2022-03-15 18:08:46 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 18:08:46 DEBUG Processing attribute `password` : value = admin
w2022-03-15 18:08:46 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 18:08:46 DEBUG Processing attribute `role` : value = ADMIN
w2022-03-15 18:08:46 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 18:08:46 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#1]
w2022-03-15 18:08:46 DEBUG Done entity load : ru.edu.helpdesk.entity.User#1
w2022-03-15 18:08:46 DEBUG Processing attribute `status` : value = WORKING
w2022-03-15 18:08:46 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 18:08:46 DEBUG Processing attribute `support` : value = 2
w2022-03-15 18:08:46 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 18:08:46 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 18:08:46 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 18:08:46 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#2]
w2022-03-15 18:08:46 DEBUG Processing attribute `firstName` : value = support
w2022-03-15 18:08:46 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:08:46 DEBUG Processing attribute `lastName` : value = support
w2022-03-15 18:08:46 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:08:46 DEBUG Processing attribute `login` : value = support
w2022-03-15 18:08:46 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 18:08:46 DEBUG Processing attribute `password` : value = support
w2022-03-15 18:08:46 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 18:08:46 DEBUG Processing attribute `role` : value = SUPPORT
w2022-03-15 18:08:46 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 18:08:46 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#2]
w2022-03-15 18:08:46 DEBUG Done entity load : ru.edu.helpdesk.entity.User#2
w2022-03-15 18:08:46 DEBUG Processing attribute `title` : value = Hello user1
w2022-03-15 18:08:46 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 18:08:46 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 18:08:46 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 18:08:46 DEBUG Processing attribute `client` : value = 1
w2022-03-15 18:08:46 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 18:08:46 DEBUG Processing attribute `status` : value = OPEN
w2022-03-15 18:08:46 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 18:08:46 DEBUG Processing attribute `support` : value = null
w2022-03-15 18:08:46 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 18:08:46 DEBUG Processing attribute `title` : value = Title2
w2022-03-15 18:08:46 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 18:08:46 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 18:09:20 DEBUG Rendered criteria query -> select generatedAlias0 from Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 18:09:20 DEBUG select ticket0_.id as id1_1_, ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id where user1_.id=?
w2022-03-15 18:09:20 DEBUG Result set row: 0
w2022-03-15 18:09:20 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 18:09:20 DEBUG Result set row: 1
w2022-03-15 18:09:20 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 18:09:20 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 18:09:20 DEBUG Processing attribute `client` : value = 1
w2022-03-15 18:09:20 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:20 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 18:09:20 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 18:09:20 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#1]
w2022-03-15 18:09:20 DEBUG Processing attribute `firstName` : value = admin
w2022-03-15 18:09:20 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:20 DEBUG Processing attribute `lastName` : value = admin
w2022-03-15 18:09:20 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:20 DEBUG Processing attribute `login` : value = admin
w2022-03-15 18:09:20 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:20 DEBUG Processing attribute `password` : value = admin
w2022-03-15 18:09:20 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:20 DEBUG Processing attribute `role` : value = ADMIN
w2022-03-15 18:09:20 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:20 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#1]
w2022-03-15 18:09:20 DEBUG Done entity load : ru.edu.helpdesk.entity.User#1
w2022-03-15 18:09:20 DEBUG Processing attribute `status` : value = WORKING
w2022-03-15 18:09:20 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:20 DEBUG Processing attribute `support` : value = 2
w2022-03-15 18:09:20 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:20 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 18:09:20 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 18:09:20 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#2]
w2022-03-15 18:09:20 DEBUG Processing attribute `firstName` : value = support
w2022-03-15 18:09:20 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:20 DEBUG Processing attribute `lastName` : value = support
w2022-03-15 18:09:20 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:20 DEBUG Processing attribute `login` : value = support
w2022-03-15 18:09:20 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:20 DEBUG Processing attribute `password` : value = support
w2022-03-15 18:09:20 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:20 DEBUG Processing attribute `role` : value = SUPPORT
w2022-03-15 18:09:20 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:20 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#2]
w2022-03-15 18:09:20 DEBUG Done entity load : ru.edu.helpdesk.entity.User#2
w2022-03-15 18:09:20 DEBUG Processing attribute `title` : value = Hello user1
w2022-03-15 18:09:20 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:20 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 18:09:20 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 18:09:20 DEBUG Processing attribute `client` : value = 1
w2022-03-15 18:09:20 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:20 DEBUG Processing attribute `status` : value = OPEN
w2022-03-15 18:09:20 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:20 DEBUG Processing attribute `support` : value = 2
w2022-03-15 18:09:20 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:20 DEBUG Processing attribute `title` : value = Title2
w2022-03-15 18:09:20 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:20 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 18:09:28 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 18:09:28 DEBUG begin
w2022-03-15 18:09:28 DEBUG committing
w2022-03-15 18:09:28 DEBUG Rendered criteria query -> select generatedAlias0 from Comment as generatedAlias0 left join generatedAlias0.ticket as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 18:09:28 DEBUG parse() - HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Comment as generatedAlias0 left join generatedAlias0.ticket as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 18:09:28 DEBUG throwQueryException() : no errors
w2022-03-15 18:09:28 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[IDENT] Node: 'ru'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'edu'
    |  |  |  |  |  |  \-[IDENT] Node: 'helpdesk'
    |  |  |  |  |  \-[IDENT] Node: 'entity'
    |  |  |  |  \-[IDENT] Node: 'Comment'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'ticket'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias1'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

w2022-03-15 18:09:28 DEBUG select << begin [level=1, statement=select]
w2022-03-15 18:09:28 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.Comment (generatedAlias0) -> comment0_
w2022-03-15 18:09:28 DEBUG Resolved : generatedAlias0 -> comment0_.id
w2022-03-15 18:09:28 DEBUG getDataType() : ticket -> org.hibernate.type.ManyToOneType(ru.edu.helpdesk.entity.Ticket)
w2022-03-15 18:09:28 DEBUG dereferenceEntityJoin() : generating join for ticket in ru.edu.helpdesk.entity.Comment (generatedAlias1) parent = [ {null} ]
w2022-03-15 18:09:28 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.Ticket (generatedAlias1) -> ticket1_
w2022-03-15 18:09:28 DEBUG addJoinByPathMap() : generatedAlias0.ticket -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=ticket,tableAlias=ticket1_,origin=comment comment0_,columns={comment0_.ticket_id,className=ru.edu.helpdesk.entity.Ticket}}
w2022-03-15 18:09:28 DEBUG Resolved : generatedAlias0.ticket -> comment0_.ticket_id
w2022-03-15 18:09:28 DEBUG createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'ticket ticket1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Comment.ticket,tableName=ticket,tableAlias=ticket1_,origin=comment comment0_,columns={comment0_.ticket_id,className=ru.edu.helpdesk.entity.Ticket}}

w2022-03-15 18:09:28 DEBUG Resolved : generatedAlias0 -> comment0_.id
w2022-03-15 18:09:28 DEBUG Resolved : generatedAlias1 -> ticket1_.id
w2022-03-15 18:09:28 DEBUG getDataType() : id -> org.hibernate.type.LongType@72f593ea
w2022-03-15 18:09:28 DEBUG Resolved : generatedAlias1.id -> ticket1_.id
w2022-03-15 18:09:28 DEBUG select : finishing up [level=1, statement=select]
w2022-03-15 18:09:28 DEBUG processQuery() :  ( SELECT ( {select clause} comment0_.id ) ( FromClause{level=1} ( comment comment0_ ticket ticket1_ ) ) ( where ( = ( ticket1_.id ticket1_.id id ) ? ) ) )
w2022-03-15 18:09:28 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Comment): [comment]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.Comment)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.Ticket)
          | path: generatedAlias1.id
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.Ticket)
          |  | originalText: generatedAlias1
          |  \-IdentNode
          |    persister: null
          |    originalText: id
          \-ParameterNode

w2022-03-15 18:09:28 DEBUG Using FROM fragment [comment comment0_]
w2022-03-15 18:09:28 DEBUG Using FROM fragment [left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id]
w2022-03-15 18:09:28 DEBUG select >> end [level=1, statement=select]
w2022-03-15 18:09:28 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (ticket,comment)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'comment0_.id as id1_0_' {alias=generatedAlias0, className=ru.edu.helpdesk.entity.Comment, tableAlias=comment0_}
    |  \-[SQL_TOKEN] SqlFragment: 'comment0_.message as message2_0_, comment0_.ticket_id as ticket_i3_0_, comment0_.user_id as user_id4_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[ticket1_, comment0_], fromElementsByPath=[generatedAlias0.ticket], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'comment comment0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=comment,tableAlias=comment0_,origin=null,columns={,className=ru.edu.helpdesk.entity.Comment}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Comment.ticket,tableName=ticket,tableAlias=ticket1_,origin=comment comment0_,columns={comment0_.ticket_id,className=ru.edu.helpdesk.entity.Ticket}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'ticket1_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias1.id,tableAlias=ticket1_,className=ru.edu.helpdesk.entity.Ticket,classAlias=generatedAlias1}
          |  +-[ALIAS_REF] IdentNode: 'ticket1_.id' {alias=generatedAlias1, className=ru.edu.helpdesk.entity.Ticket, tableAlias=ticket1_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LongType@72f593ea}

w2022-03-15 18:09:28 DEBUG throwQueryException() : no errors
w2022-03-15 18:09:28 DEBUG HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Comment as generatedAlias0 left join generatedAlias0.ticket as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 18:09:28 DEBUG SQL: select comment0_.id as id1_0_, comment0_.message as message2_0_, comment0_.ticket_id as ticket_i3_0_, comment0_.user_id as user_id4_0_ from comment comment0_ left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id where ticket1_.id=?
w2022-03-15 18:09:28 DEBUG throwQueryException() : no errors
w2022-03-15 18:09:28 DEBUG select comment0_.id as id1_0_, comment0_.message as message2_0_, comment0_.ticket_id as ticket_i3_0_, comment0_.user_id as user_id4_0_ from comment comment0_ left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id where ticket1_.id=?
w2022-03-15 18:09:28 DEBUG Result set row: 0
w2022-03-15 18:09:28 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Comment#1]
w2022-03-15 18:09:28 DEBUG Result set row: 1
w2022-03-15 18:09:28 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Comment#3]
w2022-03-15 18:09:28 DEBUG Result set row: 2
w2022-03-15 18:09:28 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Comment#4]
w2022-03-15 18:09:28 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Comment#1]
w2022-03-15 18:09:28 DEBUG Processing attribute `message` : value = comment ticket1
w2022-03-15 18:09:28 DEBUG Attribute (`message`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:28 DEBUG Processing attribute `ticket` : value = 1
w2022-03-15 18:09:28 DEBUG Attribute (`ticket`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:28 DEBUG select ticket0_.id as id1_1_0_, ticket0_.client_id as client_i4_1_0_, ticket0_.status as status2_1_0_, ticket0_.support_id as support_5_1_0_, ticket0_.title as title3_1_0_, user1_.id as id1_2_1_, user1_.first_name as first_na2_2_1_, user1_.last_name as last_nam3_2_1_, user1_.login as login4_2_1_, user1_.password as password5_2_1_, user1_.role as role6_2_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id left outer join user user2_ on ticket0_.support_id=user2_.id where ticket0_.id=?
w2022-03-15 18:09:28 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 18:09:28 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 18:09:28 DEBUG Processing attribute `client` : value = 1
w2022-03-15 18:09:28 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:28 DEBUG Processing attribute `status` : value = WORKING
w2022-03-15 18:09:28 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:28 DEBUG Processing attribute `support` : value = 2
w2022-03-15 18:09:28 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:28 DEBUG Processing attribute `title` : value = Hello user1
w2022-03-15 18:09:28 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:28 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 18:09:28 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#1]
w2022-03-15 18:09:28 DEBUG Processing attribute `firstName` : value = admin
w2022-03-15 18:09:28 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:28 DEBUG Processing attribute `lastName` : value = admin
w2022-03-15 18:09:28 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:28 DEBUG Processing attribute `login` : value = admin
w2022-03-15 18:09:28 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:28 DEBUG Processing attribute `password` : value = admin
w2022-03-15 18:09:28 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:28 DEBUG Processing attribute `role` : value = ADMIN
w2022-03-15 18:09:28 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:28 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#1]
w2022-03-15 18:09:28 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#2]
w2022-03-15 18:09:28 DEBUG Processing attribute `firstName` : value = support
w2022-03-15 18:09:28 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:28 DEBUG Processing attribute `lastName` : value = support
w2022-03-15 18:09:28 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:28 DEBUG Processing attribute `login` : value = support
w2022-03-15 18:09:28 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:28 DEBUG Processing attribute `password` : value = support
w2022-03-15 18:09:28 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:28 DEBUG Processing attribute `role` : value = SUPPORT
w2022-03-15 18:09:28 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:28 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#2]
w2022-03-15 18:09:28 DEBUG Done entity load : ru.edu.helpdesk.entity.Ticket#1
w2022-03-15 18:09:28 DEBUG Processing attribute `user` : value = 3
w2022-03-15 18:09:28 DEBUG Attribute (`user`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:28 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 18:09:28 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 18:09:28 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#3]
w2022-03-15 18:09:28 DEBUG Processing attribute `firstName` : value = user1
w2022-03-15 18:09:28 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:28 DEBUG Processing attribute `lastName` : value = user1
w2022-03-15 18:09:28 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:28 DEBUG Processing attribute `login` : value = user1
w2022-03-15 18:09:28 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:28 DEBUG Processing attribute `password` : value = user1
w2022-03-15 18:09:28 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:28 DEBUG Processing attribute `role` : value = USER
w2022-03-15 18:09:28 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:28 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#3]
w2022-03-15 18:09:28 DEBUG Done entity load : ru.edu.helpdesk.entity.User#3
w2022-03-15 18:09:28 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Comment#1]
w2022-03-15 18:09:28 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Comment#3]
w2022-03-15 18:09:28 DEBUG Processing attribute `message` : value = comment ticket11
w2022-03-15 18:09:28 DEBUG Attribute (`message`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:28 DEBUG Processing attribute `ticket` : value = 1
w2022-03-15 18:09:28 DEBUG Attribute (`ticket`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:28 DEBUG Processing attribute `user` : value = 2
w2022-03-15 18:09:28 DEBUG Attribute (`user`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:28 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Comment#3]
w2022-03-15 18:09:28 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Comment#4]
w2022-03-15 18:09:28 DEBUG Processing attribute `message` : value = comment ticket111
w2022-03-15 18:09:28 DEBUG Attribute (`message`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:28 DEBUG Processing attribute `ticket` : value = 1
w2022-03-15 18:09:28 DEBUG Attribute (`ticket`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:28 DEBUG Processing attribute `user` : value = 2
w2022-03-15 18:09:28 DEBUG Attribute (`user`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:28 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Comment#4]
w2022-03-15 18:09:31 DEBUG Rendered criteria query -> select generatedAlias0 from Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 18:09:31 DEBUG select ticket0_.id as id1_1_, ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id where user1_.id=?
w2022-03-15 18:09:31 DEBUG Result set row: 0
w2022-03-15 18:09:31 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 18:09:31 DEBUG Result set row: 1
w2022-03-15 18:09:31 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 18:09:31 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 18:09:31 DEBUG Processing attribute `client` : value = 1
w2022-03-15 18:09:31 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:31 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 18:09:31 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 18:09:31 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#1]
w2022-03-15 18:09:31 DEBUG Processing attribute `firstName` : value = admin
w2022-03-15 18:09:31 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:31 DEBUG Processing attribute `lastName` : value = admin
w2022-03-15 18:09:31 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:31 DEBUG Processing attribute `login` : value = admin
w2022-03-15 18:09:31 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:31 DEBUG Processing attribute `password` : value = admin
w2022-03-15 18:09:31 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:31 DEBUG Processing attribute `role` : value = ADMIN
w2022-03-15 18:09:31 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:31 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#1]
w2022-03-15 18:09:31 DEBUG Done entity load : ru.edu.helpdesk.entity.User#1
w2022-03-15 18:09:31 DEBUG Processing attribute `status` : value = WORKING
w2022-03-15 18:09:31 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:31 DEBUG Processing attribute `support` : value = 2
w2022-03-15 18:09:31 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:31 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 18:09:31 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 18:09:31 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#2]
w2022-03-15 18:09:31 DEBUG Processing attribute `firstName` : value = support
w2022-03-15 18:09:31 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:31 DEBUG Processing attribute `lastName` : value = support
w2022-03-15 18:09:31 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:31 DEBUG Processing attribute `login` : value = support
w2022-03-15 18:09:31 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:31 DEBUG Processing attribute `password` : value = support
w2022-03-15 18:09:31 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:31 DEBUG Processing attribute `role` : value = SUPPORT
w2022-03-15 18:09:31 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:31 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#2]
w2022-03-15 18:09:31 DEBUG Done entity load : ru.edu.helpdesk.entity.User#2
w2022-03-15 18:09:31 DEBUG Processing attribute `title` : value = Hello user1
w2022-03-15 18:09:31 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:31 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 18:09:31 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 18:09:31 DEBUG Processing attribute `client` : value = 1
w2022-03-15 18:09:31 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:31 DEBUG Processing attribute `status` : value = OPEN
w2022-03-15 18:09:31 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:31 DEBUG Processing attribute `support` : value = 2
w2022-03-15 18:09:31 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:31 DEBUG Processing attribute `title` : value = Title2
w2022-03-15 18:09:31 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:31 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 18:09:33 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 18:09:33 DEBUG begin
w2022-03-15 18:09:33 DEBUG committing
w2022-03-15 18:09:33 DEBUG Rendered criteria query -> select generatedAlias0 from Comment as generatedAlias0 left join generatedAlias0.ticket as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 18:09:33 DEBUG select comment0_.id as id1_0_, comment0_.message as message2_0_, comment0_.ticket_id as ticket_i3_0_, comment0_.user_id as user_id4_0_ from comment comment0_ left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id where ticket1_.id=?
w2022-03-15 18:09:33 DEBUG Result set row: 0
w2022-03-15 18:09:33 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Comment#2]
w2022-03-15 18:09:33 DEBUG Result set row: 1
w2022-03-15 18:09:33 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Comment#5]
w2022-03-15 18:09:33 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Comment#2]
w2022-03-15 18:09:33 DEBUG Processing attribute `message` : value = comment ticket2
w2022-03-15 18:09:33 DEBUG Attribute (`message`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:33 DEBUG Processing attribute `ticket` : value = 2
w2022-03-15 18:09:33 DEBUG Attribute (`ticket`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:33 DEBUG select ticket0_.id as id1_1_0_, ticket0_.client_id as client_i4_1_0_, ticket0_.status as status2_1_0_, ticket0_.support_id as support_5_1_0_, ticket0_.title as title3_1_0_, user1_.id as id1_2_1_, user1_.first_name as first_na2_2_1_, user1_.last_name as last_nam3_2_1_, user1_.login as login4_2_1_, user1_.password as password5_2_1_, user1_.role as role6_2_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id left outer join user user2_ on ticket0_.support_id=user2_.id where ticket0_.id=?
w2022-03-15 18:09:33 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 18:09:33 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 18:09:33 DEBUG Processing attribute `client` : value = 1
w2022-03-15 18:09:33 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:33 DEBUG Processing attribute `status` : value = OPEN
w2022-03-15 18:09:33 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:33 DEBUG Processing attribute `support` : value = 2
w2022-03-15 18:09:33 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:33 DEBUG Processing attribute `title` : value = Title2
w2022-03-15 18:09:33 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:33 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 18:09:33 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#1]
w2022-03-15 18:09:33 DEBUG Processing attribute `firstName` : value = admin
w2022-03-15 18:09:33 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:33 DEBUG Processing attribute `lastName` : value = admin
w2022-03-15 18:09:33 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:33 DEBUG Processing attribute `login` : value = admin
w2022-03-15 18:09:33 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:33 DEBUG Processing attribute `password` : value = admin
w2022-03-15 18:09:33 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:33 DEBUG Processing attribute `role` : value = ADMIN
w2022-03-15 18:09:33 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:33 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#1]
w2022-03-15 18:09:33 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#2]
w2022-03-15 18:09:33 DEBUG Processing attribute `firstName` : value = support
w2022-03-15 18:09:33 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:33 DEBUG Processing attribute `lastName` : value = support
w2022-03-15 18:09:33 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:33 DEBUG Processing attribute `login` : value = support
w2022-03-15 18:09:33 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:33 DEBUG Processing attribute `password` : value = support
w2022-03-15 18:09:33 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:33 DEBUG Processing attribute `role` : value = SUPPORT
w2022-03-15 18:09:33 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:33 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#2]
w2022-03-15 18:09:33 DEBUG Done entity load : ru.edu.helpdesk.entity.Ticket#2
w2022-03-15 18:09:33 DEBUG Processing attribute `user` : value = 3
w2022-03-15 18:09:33 DEBUG Attribute (`user`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:33 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 18:09:33 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 18:09:33 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#3]
w2022-03-15 18:09:33 DEBUG Processing attribute `firstName` : value = user1
w2022-03-15 18:09:33 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:33 DEBUG Processing attribute `lastName` : value = user1
w2022-03-15 18:09:33 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:33 DEBUG Processing attribute `login` : value = user1
w2022-03-15 18:09:33 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:33 DEBUG Processing attribute `password` : value = user1
w2022-03-15 18:09:33 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:33 DEBUG Processing attribute `role` : value = USER
w2022-03-15 18:09:33 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:33 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#3]
w2022-03-15 18:09:33 DEBUG Done entity load : ru.edu.helpdesk.entity.User#3
w2022-03-15 18:09:33 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Comment#2]
w2022-03-15 18:09:33 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Comment#5]
w2022-03-15 18:09:33 DEBUG Processing attribute `message` : value = comment ticket22
w2022-03-15 18:09:33 DEBUG Attribute (`message`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:33 DEBUG Processing attribute `ticket` : value = 2
w2022-03-15 18:09:33 DEBUG Attribute (`ticket`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:33 DEBUG Processing attribute `user` : value = 2
w2022-03-15 18:09:33 DEBUG Attribute (`user`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:33 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Comment#5]
w2022-03-15 18:09:43 DEBUG Rendered criteria query -> select generatedAlias0 from Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 18:09:43 DEBUG select ticket0_.id as id1_1_, ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id where user1_.id=?
w2022-03-15 18:09:43 DEBUG Result set row: 0
w2022-03-15 18:09:43 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 18:09:43 DEBUG Result set row: 1
w2022-03-15 18:09:43 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 18:09:43 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 18:09:43 DEBUG Processing attribute `client` : value = 1
w2022-03-15 18:09:43 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:43 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 18:09:43 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 18:09:43 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#1]
w2022-03-15 18:09:43 DEBUG Processing attribute `firstName` : value = admin
w2022-03-15 18:09:43 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:43 DEBUG Processing attribute `lastName` : value = admin
w2022-03-15 18:09:43 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:43 DEBUG Processing attribute `login` : value = admin
w2022-03-15 18:09:43 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:43 DEBUG Processing attribute `password` : value = admin
w2022-03-15 18:09:43 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:43 DEBUG Processing attribute `role` : value = ADMIN
w2022-03-15 18:09:43 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:43 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#1]
w2022-03-15 18:09:43 DEBUG Done entity load : ru.edu.helpdesk.entity.User#1
w2022-03-15 18:09:43 DEBUG Processing attribute `status` : value = WORKING
w2022-03-15 18:09:43 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:43 DEBUG Processing attribute `support` : value = 2
w2022-03-15 18:09:43 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:43 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 18:09:43 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 18:09:43 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#2]
w2022-03-15 18:09:43 DEBUG Processing attribute `firstName` : value = support
w2022-03-15 18:09:43 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:43 DEBUG Processing attribute `lastName` : value = support
w2022-03-15 18:09:43 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:43 DEBUG Processing attribute `login` : value = support
w2022-03-15 18:09:43 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:43 DEBUG Processing attribute `password` : value = support
w2022-03-15 18:09:43 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:43 DEBUG Processing attribute `role` : value = SUPPORT
w2022-03-15 18:09:43 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:43 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#2]
w2022-03-15 18:09:43 DEBUG Done entity load : ru.edu.helpdesk.entity.User#2
w2022-03-15 18:09:43 DEBUG Processing attribute `title` : value = Hello user1
w2022-03-15 18:09:43 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:43 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 18:09:43 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 18:09:43 DEBUG Processing attribute `client` : value = 1
w2022-03-15 18:09:43 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:43 DEBUG Processing attribute `status` : value = OPEN
w2022-03-15 18:09:43 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:43 DEBUG Processing attribute `support` : value = 2
w2022-03-15 18:09:43 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:43 DEBUG Processing attribute `title` : value = Title2
w2022-03-15 18:09:43 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 18:09:43 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 18:12:08 DEBUG Logging Provider: org.jboss.logging.Log4j2LoggerProvider
w2022-03-15 18:12:08 DEBUG PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@70f92b97
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/%d0%9e%d0%bb%d1%8c%d0%b3%d0%b0/Desktop/Java/Project/Project1/helpdeskproject/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		ru.edu.helpdesk.entity.Comment
		ru.edu.helpdesk.entity.Ticket
		ru.edu.helpdesk.entity.User]
	Mapping files names []
	Properties []
w2022-03-15 18:12:08 DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
w2022-03-15 18:12:08 DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
w2022-03-15 18:12:08 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
w2022-03-15 18:12:08 INFO  HHH000412: Hibernate ORM core version 5.6.5.Final
w2022-03-15 18:12:08 DEBUG HHH000206: hibernate.properties not found
w2022-03-15 18:12:08 DEBUG Overriding existing service binding [org.hibernate.secure.spi.JaccService]
w2022-03-15 18:12:08 DEBUG Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
w2022-03-15 18:12:08 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
w2022-03-15 18:12:08 INFO  HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
w2022-03-15 18:12:08 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@5246c241
w2022-03-15 18:12:08 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@5246c241
w2022-03-15 18:12:08 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5246c241
w2022-03-15 18:12:08 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@48741e6e
w2022-03-15 18:12:08 DEBUG Adding type registration true_false -> org.hibernate.type.TrueFalseType@a24822e
w2022-03-15 18:12:08 DEBUG Adding type registration yes_no -> org.hibernate.type.YesNoType@2732afc
w2022-03-15 18:12:08 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@5b79e307
w2022-03-15 18:12:08 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@5b79e307
w2022-03-15 18:12:08 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5b79e307
w2022-03-15 18:12:08 DEBUG Adding type registration character -> org.hibernate.type.CharacterType@78bc1b7
w2022-03-15 18:12:08 DEBUG Adding type registration char -> org.hibernate.type.CharacterType@78bc1b7
w2022-03-15 18:12:08 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@78bc1b7
w2022-03-15 18:12:08 DEBUG Adding type registration short -> org.hibernate.type.ShortType@6d49fae3
w2022-03-15 18:12:08 DEBUG Adding type registration short -> org.hibernate.type.ShortType@6d49fae3
w2022-03-15 18:12:08 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6d49fae3
w2022-03-15 18:12:08 DEBUG Adding type registration integer -> org.hibernate.type.IntegerType@6e1e30e3
w2022-03-15 18:12:08 DEBUG Adding type registration int -> org.hibernate.type.IntegerType@6e1e30e3
w2022-03-15 18:12:08 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6e1e30e3
w2022-03-15 18:12:08 DEBUG Adding type registration long -> org.hibernate.type.LongType@4fe3b32b
w2022-03-15 18:12:08 DEBUG Adding type registration long -> org.hibernate.type.LongType@4fe3b32b
w2022-03-15 18:12:08 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.LongType@4fe3b32b
w2022-03-15 18:12:08 DEBUG Adding type registration float -> org.hibernate.type.FloatType@39f68064
w2022-03-15 18:12:08 DEBUG Adding type registration float -> org.hibernate.type.FloatType@39f68064
w2022-03-15 18:12:08 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.FloatType@39f68064
w2022-03-15 18:12:08 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@2d60276e
w2022-03-15 18:12:08 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@2d60276e
w2022-03-15 18:12:08 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2d60276e
w2022-03-15 18:12:08 DEBUG Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1b136c04
w2022-03-15 18:12:08 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1b136c04
w2022-03-15 18:12:08 DEBUG Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4dd98cfc
w2022-03-15 18:12:08 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4dd98cfc
w2022-03-15 18:12:08 DEBUG Adding type registration string -> org.hibernate.type.StringType@30652da0
w2022-03-15 18:12:08 DEBUG Adding type registration java.lang.String -> org.hibernate.type.StringType@30652da0
w2022-03-15 18:12:08 DEBUG Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1311758f
w2022-03-15 18:12:08 DEBUG Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1a2b05ad
w2022-03-15 18:12:08 DEBUG Adding type registration url -> org.hibernate.type.UrlType@591fd44a
w2022-03-15 18:12:08 DEBUG Adding type registration java.net.URL -> org.hibernate.type.UrlType@591fd44a
w2022-03-15 18:12:08 DEBUG Adding type registration Duration -> org.hibernate.type.DurationType@7c21b4ce
w2022-03-15 18:12:08 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7c21b4ce
w2022-03-15 18:12:08 DEBUG Adding type registration Instant -> org.hibernate.type.InstantType@677bad73
w2022-03-15 18:12:08 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.InstantType@677bad73
w2022-03-15 18:12:08 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@46736e2f
w2022-03-15 18:12:08 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@46736e2f
w2022-03-15 18:12:08 DEBUG Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2e4823f2
w2022-03-15 18:12:08 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2e4823f2
w2022-03-15 18:12:08 DEBUG Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7587ec0e
w2022-03-15 18:12:08 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7587ec0e
w2022-03-15 18:12:08 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@10575364
w2022-03-15 18:12:08 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@10575364
w2022-03-15 18:12:08 DEBUG Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@c77b589
w2022-03-15 18:12:08 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@c77b589
w2022-03-15 18:12:08 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@596a3b6f
w2022-03-15 18:12:08 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@596a3b6f
w2022-03-15 18:12:08 DEBUG Adding type registration date -> org.hibernate.type.DateType@3c682221
w2022-03-15 18:12:08 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.DateType@3c682221
w2022-03-15 18:12:08 DEBUG Adding type registration time -> org.hibernate.type.TimeType@4d039071
w2022-03-15 18:12:08 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4d039071
w2022-03-15 18:12:08 DEBUG Adding type registration timestamp -> org.hibernate.type.TimestampType@2da7e040
w2022-03-15 18:12:08 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2da7e040
w2022-03-15 18:12:08 DEBUG Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2da7e040
w2022-03-15 18:12:08 DEBUG Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6b98869e
w2022-03-15 18:12:08 DEBUG Adding type registration calendar -> org.hibernate.type.CalendarType@6a496473
w2022-03-15 18:12:08 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6a496473
w2022-03-15 18:12:08 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6a496473
w2022-03-15 18:12:08 DEBUG Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6ffd79d2
w2022-03-15 18:12:08 DEBUG Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@33ace4e4
w2022-03-15 18:12:08 DEBUG Adding type registration locale -> org.hibernate.type.LocaleType@3814e8e5
w2022-03-15 18:12:08 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3814e8e5
w2022-03-15 18:12:08 DEBUG Adding type registration currency -> org.hibernate.type.CurrencyType@5f87a25f
w2022-03-15 18:12:08 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5f87a25f
w2022-03-15 18:12:08 DEBUG Adding type registration timezone -> org.hibernate.type.TimeZoneType@41010cdc
w2022-03-15 18:12:08 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@41010cdc
w2022-03-15 18:12:08 DEBUG Adding type registration class -> org.hibernate.type.ClassType@30b28f4a
w2022-03-15 18:12:08 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.ClassType@30b28f4a
w2022-03-15 18:12:08 DEBUG Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1f2bfa66
w2022-03-15 18:12:08 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1f2bfa66
w2022-03-15 18:12:08 DEBUG Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@bc86809
w2022-03-15 18:12:08 DEBUG Adding type registration binary -> org.hibernate.type.BinaryType@6302bb6c
w2022-03-15 18:12:08 DEBUG Adding type registration byte[] -> org.hibernate.type.BinaryType@6302bb6c
w2022-03-15 18:12:08 DEBUG Adding type registration [B -> org.hibernate.type.BinaryType@6302bb6c
w2022-03-15 18:12:08 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@41f2bee
w2022-03-15 18:12:08 DEBUG Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@41f2bee
w2022-03-15 18:12:08 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@41f2bee
w2022-03-15 18:12:08 DEBUG Adding type registration row_version -> org.hibernate.type.RowVersionType@500c076d
w2022-03-15 18:12:08 DEBUG Adding type registration image -> org.hibernate.type.ImageType@5948cdce
w2022-03-15 18:12:08 DEBUG Adding type registration characters -> org.hibernate.type.CharArrayType@11d9388c
w2022-03-15 18:12:08 DEBUG Adding type registration char[] -> org.hibernate.type.CharArrayType@11d9388c
w2022-03-15 18:12:08 DEBUG Adding type registration [C -> org.hibernate.type.CharArrayType@11d9388c
w2022-03-15 18:12:08 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5c7609f3
w2022-03-15 18:12:08 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5c7609f3
w2022-03-15 18:12:08 DEBUG Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5c7609f3
w2022-03-15 18:12:08 DEBUG Adding type registration text -> org.hibernate.type.TextType@2997c3c1
w2022-03-15 18:12:08 DEBUG Adding type registration ntext -> org.hibernate.type.NTextType@45962249
w2022-03-15 18:12:08 DEBUG Adding type registration blob -> org.hibernate.type.BlobType@e1acdce
w2022-03-15 18:12:08 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@e1acdce
w2022-03-15 18:12:08 DEBUG Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4f104204
w2022-03-15 18:12:08 DEBUG Adding type registration clob -> org.hibernate.type.ClobType@c94d4f3
w2022-03-15 18:12:08 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@c94d4f3
w2022-03-15 18:12:08 DEBUG Adding type registration nclob -> org.hibernate.type.NClobType@7b9f5965
w2022-03-15 18:12:08 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7b9f5965
w2022-03-15 18:12:08 DEBUG Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3355ae13
w2022-03-15 18:12:08 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@587b82a3
w2022-03-15 18:12:08 DEBUG Adding type registration serializable -> org.hibernate.type.SerializableType@3bee7c50
w2022-03-15 18:12:08 DEBUG Adding type registration object -> org.hibernate.type.ObjectType@116f01e
w2022-03-15 18:12:08 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@116f01e
w2022-03-15 18:12:08 DEBUG Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2fdce9a2
w2022-03-15 18:12:08 DEBUG Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@197c7a47
w2022-03-15 18:12:08 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@19e9b986
w2022-03-15 18:12:08 DEBUG Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5fec45b5
w2022-03-15 18:12:08 DEBUG Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@17b53613
w2022-03-15 18:12:08 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6de1d8e0
w2022-03-15 18:12:08 DEBUG Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@39906953
w2022-03-15 18:12:08 DEBUG Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4ec5239
w2022-03-15 18:12:08 INFO  HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
w2022-03-15 18:12:08 DEBUG Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@624d45b] into BootstrapContext; was [null]
w2022-03-15 18:12:08 DEBUG ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@624d45b) [was null]
w2022-03-15 18:12:08 DEBUG Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@4be0472e] into BootstrapContext; was [null]
w2022-03-15 18:12:08 DEBUG Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@27028711] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@309b558d]
w2022-03-15 18:12:08 DEBUG Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@624d45b]
w2022-03-15 18:12:08 DEBUG ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@624d45b]
w2022-03-15 18:12:08 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
w2022-03-15 18:12:08 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
w2022-03-15 18:12:08 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
w2022-03-15 18:12:08 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
w2022-03-15 18:12:08 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
w2022-03-15 18:12:08 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
w2022-03-15 18:12:08 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
w2022-03-15 18:12:08 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
w2022-03-15 18:12:08 DEBUG Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
w2022-03-15 18:12:08 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
w2022-03-15 18:12:08 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
w2022-03-15 18:12:08 DEBUG Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
w2022-03-15 18:12:08 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
w2022-03-15 18:12:08 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
w2022-03-15 18:12:08 DEBUG Database ->
       name : SQLite
    version : 3.36.0
      major : 3
      minor : 36
w2022-03-15 18:12:08 DEBUG Driver ->
       name : SQLite JDBC
    version : 3.36.0.3
      major : 3
      minor : 36
w2022-03-15 18:12:08 DEBUG JDBC version : 2.1
w2022-03-15 18:12:08 INFO  HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
w2022-03-15 18:12:08 DEBUG JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
w2022-03-15 18:12:08 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
w2022-03-15 18:12:08 DEBUG HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [2] less than 4
w2022-03-15 18:12:08 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@785bdece] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@599e1093]
w2022-03-15 18:12:08 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
w2022-03-15 18:12:08 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.Comment
w2022-03-15 18:12:08 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 18:12:08 DEBUG Import with entity name Comment
w2022-03-15 18:12:08 DEBUG Bind entity ru.edu.helpdesk.entity.Comment on table comment
w2022-03-15 18:12:08 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 18:12:08 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Comment] is safe
w2022-03-15 18:12:08 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Comment
w2022-03-15 18:12:08 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 18:12:08 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Comment:id]
w2022-03-15 18:12:08 DEBUG building SimpleValue for id
w2022-03-15 18:12:08 DEBUG Building property id
w2022-03-15 18:12:08 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 18:12:08 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=message, insertable=true, updatable=true, unique=false}
w2022-03-15 18:12:08 DEBUG MetadataSourceProcessor property message with lazy=false
w2022-03-15 18:12:08 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Comment:message]
w2022-03-15 18:12:08 DEBUG building SimpleValue for message
w2022-03-15 18:12:08 DEBUG Building property message
w2022-03-15 18:12:08 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 18:12:08 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=ticket, insertable=true, updatable=true, unique=false}
w2022-03-15 18:12:08 DEBUG Building property ticket
w2022-03-15 18:12:08 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 18:12:08 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=user, insertable=true, updatable=true, unique=false}
w2022-03-15 18:12:08 DEBUG Building property user
w2022-03-15 18:12:08 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 18:12:08 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 18:12:08 DEBUG Import with entity name Ticket
w2022-03-15 18:12:08 DEBUG Bind entity ru.edu.helpdesk.entity.Ticket on table ticket
w2022-03-15 18:12:08 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 18:12:08 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Ticket] is safe
w2022-03-15 18:12:08 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Ticket
w2022-03-15 18:12:08 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 18:12:08 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:id]
w2022-03-15 18:12:08 DEBUG building SimpleValue for id
w2022-03-15 18:12:08 DEBUG Building property id
w2022-03-15 18:12:08 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 18:12:08 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 18:12:08 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=client, insertable=true, updatable=true, unique=false}
w2022-03-15 18:12:08 DEBUG Building property client
w2022-03-15 18:12:08 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=status, insertable=true, updatable=true, unique=false}
w2022-03-15 18:12:08 DEBUG MetadataSourceProcessor property status with lazy=false
w2022-03-15 18:12:08 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:status]
w2022-03-15 18:12:08 DEBUG building SimpleValue for status
w2022-03-15 18:12:08 DEBUG Building property status
w2022-03-15 18:12:08 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 18:12:08 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=support, insertable=true, updatable=true, unique=false}
w2022-03-15 18:12:08 DEBUG Building property support
w2022-03-15 18:12:08 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=title, insertable=true, updatable=true, unique=false}
w2022-03-15 18:12:08 DEBUG MetadataSourceProcessor property title with lazy=false
w2022-03-15 18:12:08 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:title]
w2022-03-15 18:12:08 DEBUG building SimpleValue for title
w2022-03-15 18:12:08 DEBUG Building property title
w2022-03-15 18:12:08 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.User
w2022-03-15 18:12:08 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 18:12:08 DEBUG Import with entity name User
w2022-03-15 18:12:08 DEBUG Bind entity ru.edu.helpdesk.entity.User on table user
w2022-03-15 18:12:08 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 18:12:08 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.User] is safe
w2022-03-15 18:12:08 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.User
w2022-03-15 18:12:08 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 18:12:08 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:id]
w2022-03-15 18:12:08 DEBUG building SimpleValue for id
w2022-03-15 18:12:08 DEBUG Building property id
w2022-03-15 18:12:08 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 18:12:08 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
w2022-03-15 18:12:08 DEBUG MetadataSourceProcessor property firstName with lazy=false
w2022-03-15 18:12:08 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:firstName]
w2022-03-15 18:12:08 DEBUG building SimpleValue for firstName
w2022-03-15 18:12:08 DEBUG Building property firstName
w2022-03-15 18:12:08 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
w2022-03-15 18:12:08 DEBUG MetadataSourceProcessor property lastName with lazy=false
w2022-03-15 18:12:08 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:lastName]
w2022-03-15 18:12:08 DEBUG building SimpleValue for lastName
w2022-03-15 18:12:08 DEBUG Building property lastName
w2022-03-15 18:12:08 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=login, insertable=true, updatable=true, unique=false}
w2022-03-15 18:12:08 DEBUG MetadataSourceProcessor property login with lazy=false
w2022-03-15 18:12:08 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:login]
w2022-03-15 18:12:08 DEBUG building SimpleValue for login
w2022-03-15 18:12:08 DEBUG Building property login
w2022-03-15 18:12:08 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
w2022-03-15 18:12:08 DEBUG MetadataSourceProcessor property password with lazy=false
w2022-03-15 18:12:08 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:password]
w2022-03-15 18:12:08 DEBUG building SimpleValue for password
w2022-03-15 18:12:08 DEBUG Building property password
w2022-03-15 18:12:08 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=role, insertable=true, updatable=true, unique=false}
w2022-03-15 18:12:08 DEBUG MetadataSourceProcessor property role with lazy=false
w2022-03-15 18:12:08 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:role]
w2022-03-15 18:12:08 DEBUG building SimpleValue for role
w2022-03-15 18:12:08 DEBUG Building property role
w2022-03-15 18:12:08 DEBUG Starting fillSimpleValue for id
w2022-03-15 18:12:08 DEBUG Starting fillSimpleValue for message
w2022-03-15 18:12:08 DEBUG Starting fillSimpleValue for id
w2022-03-15 18:12:08 DEBUG Starting fillSimpleValue for status
w2022-03-15 18:12:08 DEBUG Starting fillSimpleValue for title
w2022-03-15 18:12:08 DEBUG Starting fillSimpleValue for id
w2022-03-15 18:12:08 DEBUG Starting fillSimpleValue for firstName
w2022-03-15 18:12:08 DEBUG Starting fillSimpleValue for lastName
w2022-03-15 18:12:08 DEBUG Starting fillSimpleValue for login
w2022-03-15 18:12:08 DEBUG Starting fillSimpleValue for password
w2022-03-15 18:12:08 DEBUG Starting fillSimpleValue for role
w2022-03-15 18:12:08 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [comment]
w2022-03-15 18:12:08 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [ticket]
w2022-03-15 18:12:08 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [user]
w2022-03-15 18:12:08 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 18:12:08 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 18:12:08 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 18:12:08 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 18:12:08 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 18:12:08 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 18:12:08 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 18:12:08 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 18:12:08 DEBUG Building session factory
w2022-03-15 18:12:08 DEBUG SessionFactory name : null
w2022-03-15 18:12:08 DEBUG Automatic flush during beforeCompletion(): enabled
w2022-03-15 18:12:08 DEBUG Automatic session close at end of transaction: disabled
w2022-03-15 18:12:08 DEBUG Statistics: disabled
w2022-03-15 18:12:08 DEBUG Deleted entity synthetic identifier rollback: disabled
w2022-03-15 18:12:08 DEBUG Default entity-mode: pojo
w2022-03-15 18:12:08 DEBUG Check Nullability in Core (should be disabled when Bean Validation is on): enabled
w2022-03-15 18:12:08 DEBUG Allow initialization of lazy state outside session : disabled
w2022-03-15 18:12:08 DEBUG Using BatchFetchStyle : LEGACY
w2022-03-15 18:12:08 DEBUG Default batch fetch size: -1
w2022-03-15 18:12:08 DEBUG Maximum outer join fetch depth: null
w2022-03-15 18:12:08 DEBUG Default null ordering: NONE
w2022-03-15 18:12:08 DEBUG Order SQL updates by primary key: disabled
w2022-03-15 18:12:08 DEBUG Order SQL inserts for batching: disabled
w2022-03-15 18:12:08 DEBUG multi-tenancy strategy : NONE
w2022-03-15 18:12:08 DEBUG JTA Track by Thread: enabled
w2022-03-15 18:12:08 DEBUG Query language substitutions: {}
w2022-03-15 18:12:08 DEBUG Named query checking : enabled
w2022-03-15 18:12:08 DEBUG Second-level cache: disabled
w2022-03-15 18:12:08 DEBUG Second-level query cache: disabled
w2022-03-15 18:12:08 DEBUG Second-level query cache factory: null
w2022-03-15 18:12:08 DEBUG Second-level cache region prefix: null
w2022-03-15 18:12:08 DEBUG Optimize second-level cache for minimal puts: disabled
w2022-03-15 18:12:08 DEBUG Structured second-level cache entries: disabled
w2022-03-15 18:12:08 DEBUG Second-level cache direct-reference entries: disabled
w2022-03-15 18:12:08 DEBUG Automatic eviction of collection cache: disabled
w2022-03-15 18:12:08 DEBUG JDBC batch size: 1
w2022-03-15 18:12:08 DEBUG JDBC batch updates for versioned data: enabled
w2022-03-15 18:12:08 DEBUG Scrollable result sets: disabled
w2022-03-15 18:12:08 DEBUG Wrap result sets: disabled
w2022-03-15 18:12:08 DEBUG JDBC3 getGeneratedKeys(): enabled
w2022-03-15 18:12:08 DEBUG JDBC result set fetch size: null
w2022-03-15 18:12:08 DEBUG Connection release mode: ON_CLOSE
w2022-03-15 18:12:08 DEBUG Generate SQL with comments: disabled
w2022-03-15 18:12:08 DEBUG JPA compliance - query : disabled
w2022-03-15 18:12:08 DEBUG JPA compliance - closed-handling : disabled
w2022-03-15 18:12:08 DEBUG JPA compliance - lists : disabled
w2022-03-15 18:12:08 DEBUG JPA compliance - transactions : disabled
w2022-03-15 18:12:08 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 18:12:08 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 18:12:08 DEBUG Session factory constructed with filter configurations : {}
w2022-03-15 18:12:08 DEBUG Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=true, java.specification.version=1.8, file.encoding.pkg=sun.io, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@36c97cba, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.SQLiteDialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\charsets.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\cldrdata.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\dnsns.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\jaccess.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\localedata.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\nashorn.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunec.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunmscapi.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\zipfs.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jce.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jfr.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jsse.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\management-agent.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\resources.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\rt.jar;C:\Users\Ольга\Desktop\Java\Project\Project1\helpdeskproject\target\classes;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\2.6.4\spring-boot-starter-data-jpa-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\2.6.4\spring-boot-starter-jdbc-2.6.4.jar;C:\Users\Ольга\.m2\repository\com\zaxxer\HikariCP\4.0.3\HikariCP-4.0.3.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-jdbc\5.3.16\spring-jdbc-5.3.16.jar;C:\Users\Ольга\.m2\repository\jakarta\transaction\jakarta.transaction-api\1.3.3\jakarta.transaction-api-1.3.3.jar;C:\Users\Ольга\.m2\repository\jakarta\persistence\jakarta.persistence-api\2.2.3\jakarta.persistence-api-2.2.3.jar;C:\Users\Ольга\.m2\repository\org\hibernate\hibernate-core\5.6.5.Final\hibernate-core-5.6.5.Final.jar;C:\Users\Ольга\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy\1.11.22\byte-buddy-1.11.22.jar;C:\Users\Ольга\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ольга\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Ольга\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.6\jaxb-runtime-2.3.6.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\txw2\2.3.6\txw2-2.3.6.jar;C:\Users\Ольга\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.12\istack-commons-runtime-3.0.12.jar;C:\Users\Ольга\.m2\repository\com\sun\activation\jakarta.activation\1.2.2\jakarta.activation-1.2.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\data\spring-data-jpa\2.6.2\spring-data-jpa-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\data\spring-data-commons\2.6.2\spring-data-commons-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-orm\5.3.16\spring-orm-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-context\5.3.16\spring-context-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-tx\5.3.16\spring-tx-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-beans\5.3.16\spring-beans-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-aspects\5.3.16\spring-aspects-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-security\2.6.4\spring-boot-starter-security-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter\2.6.4\spring-boot-starter-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-logging\2.6.4\spring-boot-starter-logging-2.6.4.jar;C:\Users\Ольга\.m2\repository\ch\qos\logback\logback-classic\1.2.10\logback-classic-1.2.10.jar;C:\Users\Ольга\.m2\repository\ch\qos\logback\logback-core\1.2.10\logback-core-1.2.10.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.17.1\log4j-to-slf4j-2.17.1.jar;C:\Users\Ольга\.m2\repository\org\slf4j\jul-to-slf4j\1.7.36\jul-to-slf4j-1.7.36.jar;C:\Users\Ольга\.m2\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;C:\Users\Ольга\.m2\repository\org\yaml\snakeyaml\1.29\snakeyaml-1.29.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-aop\5.3.16\spring-aop-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-config\5.6.2\spring-security-config-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-web\5.6.2\spring-security-web-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-expression\5.3.16\spring-expression-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-web\2.6.4\spring-boot-starter-web-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-json\2.6.4\spring-boot-starter-json-2.6.4.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.13.1\jackson-datatype-jdk8-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.13.1\jackson-datatype-jsr310-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.13.1\jackson-module-parameter-names-2.13.1.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\2.6.4\spring-boot-starter-tomcat-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.58\tomcat-embed-core-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\9.0.58\tomcat-embed-el-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.58\tomcat-embed-websocket-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-web\5.3.16\spring-web-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-webmvc\5.3.16\spring-webmvc-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-devtools\2.6.4\spring-boot-devtools-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot\2.6.4\spring-boot-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\2.6.4\spring-boot-autoconfigure-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\xerial\sqlite-jdbc\3.36.0.3\sqlite-jdbc-3.36.0.3.jar;C:\Users\Ольга\.m2\repository\com\zsoltfabok\sqlite-dialect\1.0\sqlite-dialect-1.0.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-aop\2.6.2\spring-boot-starter-aop-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\aspectj\aspectjweaver\1.9.7\aspectjweaver-1.9.7.jar;C:\Users\Ольга\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.3\jakarta.xml.bind-api-2.3.3.jar;C:\Users\Ольга\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.2\jakarta.activation-api-1.2.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-core\5.3.16\spring-core-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-jcl\5.3.16\spring-jcl-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-core\5.6.2\spring-security-core-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-crypto\5.6.2\spring-security-crypto-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\projectlombok\lombok\1.18.22\lombok-1.18.22.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\2.6.4\spring-boot-starter-thymeleaf-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\thymeleaf-spring5\3.0.15.RELEASE\thymeleaf-spring5-3.0.15.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\thymeleaf\3.0.15.RELEASE\thymeleaf-3.0.15.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\attoparser\attoparser\2.0.5.RELEASE\attoparser-2.0.5.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-java8time\3.0.4.RELEASE\thymeleaf-extras-java8time-3.0.4.RELEASE.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.1\jackson-databind-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.1\jackson-annotations-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.1\jackson-core-2.13.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-api\2.4.1\log4j-api-2.4.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-core\2.4.1\log4j-core-2.4.1.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.2\lib\idea_rt.jar, java.vm.vendor=Temurin, sun.arch.data.model=64, user.variant=, java.vendor.url=https://adoptium.net/, catalina.useNaming=false, user.timezone=Europe/Moscow, jakarta.persistence.sharedCache.mode=UNSPECIFIED, os.name=Windows 10, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), user.country=RU, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\bin, sun.java.command=ru.edu.helpdesk.HelpdeskApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@36719a91, com.sun.management.jmxremote=, javax.persistence.sharedCache.mode=UNSPECIFIED, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, user.home=C:\Users\Ольга, user.language=ru, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre, file.separator=\, spring.output.ansi.enabled=always, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, sun.boot.class.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\resources.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\rt.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\sunrsasign.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jsse.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jce.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\charsets.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jfr.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\classes, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_312-b07, user.name=Эльдорадо, spring.jmx.enabled=true, path.separator=;, os.version=10.0, java.endorsed.dirs=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\endorsed, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=default, spring.beaninfo.ignore=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=C:\Users\134E~1\AppData\Local\Temp\, catalina.home=C:\Users\Ольга\AppData\Local\Temp\tomcat.8080.202823417016126398, java.version=1.8.0_312, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\Ольга\Desktop\Java\Project\Project1\helpdeskproject, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=3180, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\Ольга\AppData\Local\Temp\tomcat.8080.202823417016126398, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@4e939bdb, java.library.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\windows\System32\OpenSSH\;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\Program Files\apache-maven-3.8.4\bin;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Ольга\AppData\Local\Microsoft\WindowsApps;C:\Users\Ольга\AppData\Local\Programs\Microsoft VS Code\bin;C:\SQLite;C:\Users\Ольга\AppData\Roaming\npm;C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.2\bin;;., java.vendor=Temurin, java.vm.info=mixed mode, java.vm.version=25.312-b07, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, java.ext.dirs=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext;C:\windows\Sun\Java\lib\ext, hibernate.connection.datasource=HikariDataSource (HikariPool-1), hibernate.hbm2ddl.import_files=data/import.sql, java.class.version=52.0}
w2022-03-15 18:12:08 DEBUG Skipping JACC integration as it was not enabled
w2022-03-15 18:12:08 DEBUG Using ORDINAL-based conversion for Enum ru.edu.helpdesk.entity.UserRole
w2022-03-15 18:12:08 DEBUG Using ORDINAL-based conversion for Enum ru.edu.helpdesk.entity.TicketStatus
w2022-03-15 18:12:08 DEBUG Instantiated session factory
w2022-03-15 18:12:08 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@785bdece] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3e14074f]
w2022-03-15 18:12:08 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.User] is safe
w2022-03-15 18:12:08 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.User
w2022-03-15 18:12:09 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:12:09 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:12:09 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:12:09 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:12:09 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Ticket] is safe
w2022-03-15 18:12:09 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Ticket
w2022-03-15 18:12:09 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:12:09 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:12:09 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:12:09 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:12:09 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:12:09 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:12:09 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:12:09 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:12:09 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Comment] is safe
w2022-03-15 18:12:09 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Comment
w2022-03-15 18:12:09 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:12:09 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:12:09 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:12:09 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:12:09 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.User
w2022-03-15 18:12:09 DEBUG  Version select: select id from user where id =?
w2022-03-15 18:12:09 DEBUG  Snapshot select: select user_.id, user_.first_name as first_na2_2_, user_.last_name as last_nam3_2_, user_.login as login4_2_, user_.password as password5_2_, user_.role as role6_2_ from user user_ where user_.id=?
w2022-03-15 18:12:09 DEBUG  Insert 0: insert into user (first_name, last_name, login, password, role, id) values (?, ?, ?, ?, ?, ?)
w2022-03-15 18:12:09 DEBUG  Update 0: update user set first_name=?, last_name=?, login=?, password=?, role=? where id=?
w2022-03-15 18:12:09 DEBUG  Delete 0: delete from user where id=?
w2022-03-15 18:12:09 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a400337]
w2022-03-15 18:12:09 DEBUG Visiting attribute path : firstName
w2022-03-15 18:12:09 DEBUG Visiting attribute path : lastName
w2022-03-15 18:12:09 DEBUG Visiting attribute path : login
w2022-03-15 18:12:09 DEBUG Visiting attribute path : password
w2022-03-15 18:12:09 DEBUG Visiting attribute path : role
w2022-03-15 18:12:09 DEBUG Building LoadPlan...
w2022-03-15 18:12:09 DEBUG processing queryspace <gen:0>
w2022-03-15 18:12:09 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.User)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

w2022-03-15 18:12:09 DEBUG Static select for entity ru.edu.helpdesk.entity.User [NONE]: select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 18:12:09 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.Ticket
w2022-03-15 18:12:09 DEBUG  Version select: select id from ticket where id =?
w2022-03-15 18:12:09 DEBUG  Snapshot select: select ticket_.id, ticket_.client_id as client_i4_1_, ticket_.status as status2_1_, ticket_.support_id as support_5_1_, ticket_.title as title3_1_ from ticket ticket_ where ticket_.id=?
w2022-03-15 18:12:09 DEBUG  Insert 0: insert into ticket (client_id, status, support_id, title, id) values (?, ?, ?, ?, ?)
w2022-03-15 18:12:09 DEBUG  Update 0: update ticket set client_id=?, status=?, support_id=?, title=? where id=?
w2022-03-15 18:12:09 DEBUG  Delete 0: delete from ticket where id=?
w2022-03-15 18:12:09 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37f3cc5e]
w2022-03-15 18:12:09 DEBUG Visiting attribute path : client
w2022-03-15 18:12:09 DEBUG Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31fa3b78]
w2022-03-15 18:12:09 DEBUG Visiting attribute path : client.firstName
w2022-03-15 18:12:09 DEBUG Visiting attribute path : client.lastName
w2022-03-15 18:12:09 DEBUG Visiting attribute path : client.login
w2022-03-15 18:12:09 DEBUG Visiting attribute path : client.password
w2022-03-15 18:12:09 DEBUG Visiting attribute path : client.role
w2022-03-15 18:12:09 DEBUG Visiting attribute path : status
w2022-03-15 18:12:09 DEBUG Visiting attribute path : support
w2022-03-15 18:12:09 DEBUG Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ef57c1b]
w2022-03-15 18:12:09 DEBUG Visiting attribute path : support.firstName
w2022-03-15 18:12:09 DEBUG Visiting attribute path : support.lastName
w2022-03-15 18:12:09 DEBUG Visiting attribute path : support.login
w2022-03-15 18:12:09 DEBUG Visiting attribute path : support.password
w2022-03-15 18:12:09 DEBUG Visiting attribute path : support.role
w2022-03-15 18:12:09 DEBUG Visiting attribute path : title
w2022-03-15 18:12:09 DEBUG Building LoadPlan...
w2022-03-15 18:12:09 DEBUG processing queryspace <gen:0>
w2022-03-15 18:12:09 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.Ticket)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.Ticket, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.Ticket)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:1>, path=ru.edu.helpdesk.entity.Ticket.client)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:2>, path=ru.edu.helpdesk.entity.Ticket.support)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.Ticket)
          - SQL table alias mapping - ticket0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(client)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
          - JOIN (JoinDefinedByMetadata(support)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user2_
                - alias suffix - 2_
                - suffixed key columns - {id1_2_2_}

w2022-03-15 18:12:09 DEBUG Static select for entity ru.edu.helpdesk.entity.Ticket [NONE]: select ticket0_.id as id1_1_0_, ticket0_.client_id as client_i4_1_0_, ticket0_.status as status2_1_0_, ticket0_.support_id as support_5_1_0_, ticket0_.title as title3_1_0_, user1_.id as id1_2_1_, user1_.first_name as first_na2_2_1_, user1_.last_name as last_nam3_2_1_, user1_.login as login4_2_1_, user1_.password as password5_2_1_, user1_.role as role6_2_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id left outer join user user2_ on ticket0_.support_id=user2_.id where ticket0_.id=?
w2022-03-15 18:12:09 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.Comment
w2022-03-15 18:12:09 DEBUG  Version select: select id from comment where id =?
w2022-03-15 18:12:09 DEBUG  Snapshot select: select comment_.id, comment_.message as message2_0_, comment_.ticket_id as ticket_i3_0_, comment_.user_id as user_id4_0_ from comment comment_ where comment_.id=?
w2022-03-15 18:12:09 DEBUG  Insert 0: insert into comment (message, ticket_id, user_id, id) values (?, ?, ?, ?)
w2022-03-15 18:12:09 DEBUG  Update 0: update comment set message=?, ticket_id=?, user_id=? where id=?
w2022-03-15 18:12:09 DEBUG  Delete 0: delete from comment where id=?
w2022-03-15 18:12:09 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1610cdd6]
w2022-03-15 18:12:09 DEBUG Visiting attribute path : message
w2022-03-15 18:12:09 DEBUG Visiting attribute path : ticket
w2022-03-15 18:12:09 DEBUG Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38bbaece]
w2022-03-15 18:12:09 DEBUG Visiting attribute path : ticket.client
w2022-03-15 18:12:09 DEBUG Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f146679]
w2022-03-15 18:12:09 DEBUG Visiting attribute path : ticket.client.firstName
w2022-03-15 18:12:09 DEBUG Visiting attribute path : ticket.client.lastName
w2022-03-15 18:12:09 DEBUG Visiting attribute path : ticket.client.login
w2022-03-15 18:12:09 DEBUG Visiting attribute path : ticket.client.password
w2022-03-15 18:12:09 DEBUG Visiting attribute path : ticket.client.role
w2022-03-15 18:12:09 DEBUG Visiting attribute path : ticket.status
w2022-03-15 18:12:09 DEBUG Visiting attribute path : ticket.support
w2022-03-15 18:12:09 DEBUG Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e377a90]
w2022-03-15 18:12:09 DEBUG Visiting attribute path : ticket.support.firstName
w2022-03-15 18:12:09 DEBUG Visiting attribute path : ticket.support.lastName
w2022-03-15 18:12:09 DEBUG Visiting attribute path : ticket.support.login
w2022-03-15 18:12:09 DEBUG Visiting attribute path : ticket.support.password
w2022-03-15 18:12:09 DEBUG Visiting attribute path : ticket.support.role
w2022-03-15 18:12:09 DEBUG Visiting attribute path : ticket.title
w2022-03-15 18:12:09 DEBUG Visiting attribute path : user
w2022-03-15 18:12:09 DEBUG Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e6b7f6e]
w2022-03-15 18:12:09 DEBUG Visiting attribute path : user.firstName
w2022-03-15 18:12:09 DEBUG Visiting attribute path : user.lastName
w2022-03-15 18:12:09 DEBUG Visiting attribute path : user.login
w2022-03-15 18:12:09 DEBUG Visiting attribute path : user.password
w2022-03-15 18:12:09 DEBUG Visiting attribute path : user.role
w2022-03-15 18:12:09 DEBUG Building LoadPlan...
w2022-03-15 18:12:09 DEBUG processing queryspace <gen:0>
w2022-03-15 18:12:09 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.Comment)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.Comment, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.Comment)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.Ticket, querySpaceUid=<gen:1>, path=ru.edu.helpdesk.entity.Comment.ticket)
             - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:2>, path=ru.edu.helpdesk.entity.Comment.ticket.client)
             - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:3>, path=ru.edu.helpdesk.entity.Comment.ticket.support)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:4>, path=ru.edu.helpdesk.entity.Comment.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(ticket)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ru.edu.helpdesk.entity.Ticket)
                - SQL table alias mapping - ticket1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(client)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=ru.edu.helpdesk.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}
                - JOIN (JoinDefinedByMetadata(support)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=ru.edu.helpdesk.entity.User)
                      - SQL table alias mapping - user3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_2_3_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user4_
                - alias suffix - 4_
                - suffixed key columns - {id1_2_4_}

w2022-03-15 18:12:09 DEBUG Static select for entity ru.edu.helpdesk.entity.Comment [NONE]: select comment0_.id as id1_0_0_, comment0_.message as message2_0_0_, comment0_.ticket_id as ticket_i3_0_0_, comment0_.user_id as user_id4_0_0_, ticket1_.id as id1_1_1_, ticket1_.client_id as client_i4_1_1_, ticket1_.status as status2_1_1_, ticket1_.support_id as support_5_1_1_, ticket1_.title as title3_1_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_, user3_.id as id1_2_3_, user3_.first_name as first_na2_2_3_, user3_.last_name as last_nam3_2_3_, user3_.login as login4_2_3_, user3_.password as password5_2_3_, user3_.role as role6_2_3_, user4_.id as id1_2_4_, user4_.first_name as first_na2_2_4_, user4_.last_name as last_nam3_2_4_, user4_.login as login4_2_4_, user4_.password as password5_2_4_, user4_.role as role6_2_4_ from comment comment0_ left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id left outer join user user2_ on ticket1_.client_id=user2_.id left outer join user user3_ on ticket1_.support_id=user3_.id left outer join user user4_ on comment0_.user_id=user4_.id where comment0_.id=?
w2022-03-15 18:12:09 DEBUG drop table if exists comment
w2022-03-15 18:12:09 DEBUG drop table if exists hibernate_sequence
w2022-03-15 18:12:09 DEBUG drop table if exists ticket
w2022-03-15 18:12:09 DEBUG drop table if exists user
w2022-03-15 18:12:09 DEBUG create table comment (id bigint not null, message varchar(255) not null, ticket_id bigint, user_id bigint, primary key (id))
w2022-03-15 18:12:09 DEBUG create table hibernate_sequence (next_val bigint)
w2022-03-15 18:12:09 DEBUG insert into hibernate_sequence values ( 1 )
w2022-03-15 18:12:09 DEBUG create table ticket (id bigint not null, status integer, title varchar(255) not null, client_id bigint, support_id bigint, primary key (id))
w2022-03-15 18:12:09 DEBUG create table user (id bigint not null, first_name varchar(255), last_name varchar(255), login varchar(255) not null, password varchar(255) not null, role integer, primary key (id))
w2022-03-15 18:12:09 INFO  HHH000476: Executing import script 'file:/C:/Users/%d0%9e%d0%bb%d1%8c%d0%b3%d0%b0/Desktop/Java/Project/Project1/helpdeskproject/target/classes/data/import.sql'
w2022-03-15 18:12:09 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (1, 'admin', 'admin', 'admin', 'admin', 0)
w2022-03-15 18:12:09 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (2, 'support', 'support', 'support', 'support', 1)
w2022-03-15 18:12:09 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (3, 'user1', 'user1', 'user1', 'user1', 2)
w2022-03-15 18:12:09 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (4, 'user2', 'user2', 'user2', 'user2', 2)
w2022-03-15 18:12:09 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (1, 1, 'Hello user1',1, 2)
w2022-03-15 18:12:09 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (2, 0, 'Title2', 1, NULL)
w2022-03-15 18:12:09 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (3, 0, 'Message user2', 4, NULL)
w2022-03-15 18:12:09 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (1, "comment ticket1", 1, 3)
w2022-03-15 18:12:09 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (2, "comment ticket2", 2, 3)
w2022-03-15 18:12:09 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (3, "comment ticket11", 1, 2)
w2022-03-15 18:12:09 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (4, "comment ticket111", 1, 2)
w2022-03-15 18:12:09 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (5, "comment ticket22", 2, 2)
w2022-03-15 18:12:09 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (6, "comment ticket3", 3, 4)
w2022-03-15 18:12:09 DEBUG UPDATE hibernate_sequence SET next_val = 8 WHERE next_val = 1
w2022-03-15 18:12:09 INFO  HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
w2022-03-15 18:12:09 DEBUG Checking 0 named HQL queries
w2022-03-15 18:12:09 DEBUG Checking 0 named SQL queries
w2022-03-15 18:12:09 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 18:12:09 DEBUG Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@525f44fd
w2022-03-15 18:12:09 DEBUG Registering SessionFactory: 60678c47-937c-494b-8b9c-598b0827004a (<unnamed>)
w2022-03-15 18:12:09 DEBUG Not binding SessionFactory to JNDI, no JNDI name configured
w2022-03-15 18:12:09 DEBUG Statistics initialized [enabled=false]
w2022-03-15 18:12:09 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 18:12:09 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 18:12:09 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 18:12:20 DEBUG Rendered criteria query -> select generatedAlias0 from Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 18:12:20 DEBUG QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@313dcc23
w2022-03-15 18:12:20 DEBUG parse() - HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 18:12:20 DEBUG throwQueryException() : no errors
w2022-03-15 18:12:20 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[IDENT] Node: 'ru'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'edu'
    |  |  |  |  |  |  \-[IDENT] Node: 'helpdesk'
    |  |  |  |  |  \-[IDENT] Node: 'entity'
    |  |  |  |  \-[IDENT] Node: 'Ticket'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'client'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias1'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

w2022-03-15 18:12:20 DEBUG select << begin [level=1, statement=select]
w2022-03-15 18:12:20 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.Ticket (generatedAlias0) -> ticket0_
w2022-03-15 18:12:20 DEBUG Resolved : generatedAlias0 -> ticket0_.id
w2022-03-15 18:12:20 DEBUG getDataType() : client -> org.hibernate.type.ManyToOneType(ru.edu.helpdesk.entity.User)
w2022-03-15 18:12:20 DEBUG dereferenceEntityJoin() : generating join for client in ru.edu.helpdesk.entity.Ticket (generatedAlias1) parent = [ {null} ]
w2022-03-15 18:12:20 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.User (generatedAlias1) -> user1_
w2022-03-15 18:12:20 DEBUG addJoinByPathMap() : generatedAlias0.client -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}
w2022-03-15 18:12:20 DEBUG Resolved : generatedAlias0.client -> ticket0_.client_id
w2022-03-15 18:12:20 DEBUG createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'user user1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Ticket.client,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}

w2022-03-15 18:12:20 DEBUG Resolved : generatedAlias0 -> ticket0_.id
w2022-03-15 18:12:20 DEBUG Resolved : generatedAlias1 -> user1_.id
w2022-03-15 18:12:20 DEBUG getDataType() : id -> org.hibernate.type.LongType@4fe3b32b
w2022-03-15 18:12:20 DEBUG Resolved : generatedAlias1.id -> user1_.id
w2022-03-15 18:12:20 DEBUG select : finishing up [level=1, statement=select]
w2022-03-15 18:12:20 DEBUG processQuery() :  ( SELECT ( {select clause} ticket0_.id ) ( FromClause{level=1} ( ticket ticket0_ user user1_ ) ) ( where ( = ( user1_.id user1_.id id ) ? ) ) )
w2022-03-15 18:12:20 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Ticket): [ticket]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.Ticket)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.User)
          | path: generatedAlias1.id
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.User)
          |  | originalText: generatedAlias1
          |  \-IdentNode
          |    persister: null
          |    originalText: id
          \-ParameterNode

w2022-03-15 18:12:20 DEBUG Using FROM fragment [ticket ticket0_]
w2022-03-15 18:12:20 DEBUG Using FROM fragment [left outer join user user1_ on ticket0_.client_id=user1_.id]
w2022-03-15 18:12:20 DEBUG select >> end [level=1, statement=select]
w2022-03-15 18:12:20 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (ticket,user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'ticket0_.id as id1_1_' {alias=generatedAlias0, className=ru.edu.helpdesk.entity.Ticket, tableAlias=ticket0_}
    |  \-[SQL_TOKEN] SqlFragment: 'ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[ticket0_, user1_], fromElementsByPath=[generatedAlias0.client], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'ticket ticket0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=ticket,tableAlias=ticket0_,origin=null,columns={,className=ru.edu.helpdesk.entity.Ticket}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join user user1_ on ticket0_.client_id=user1_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Ticket.client,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user1_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias1.id,tableAlias=user1_,className=ru.edu.helpdesk.entity.User,classAlias=generatedAlias1}
          |  +-[ALIAS_REF] IdentNode: 'user1_.id' {alias=generatedAlias1, className=ru.edu.helpdesk.entity.User, tableAlias=user1_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LongType@4fe3b32b}

w2022-03-15 18:12:20 DEBUG throwQueryException() : no errors
w2022-03-15 18:12:20 DEBUG HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 18:12:20 DEBUG SQL: select ticket0_.id as id1_1_, ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id where user1_.id=?
w2022-03-15 18:12:20 DEBUG throwQueryException() : no errors
w2022-03-15 18:12:20 DEBUG select ticket0_.id as id1_1_, ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id where user1_.id=?
w2022-03-15 18:12:20 DEBUG Result set row: 0
w2022-03-15 18:12:20 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 18:12:20 DEBUG Result set row: 1
w2022-03-15 18:12:20 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 18:12:20 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 18:12:20 DEBUG Processing attribute `client` : value = 1
w2022-03-15 18:12:20 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:20 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 18:12:20 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 18:12:20 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#1]
w2022-03-15 18:12:20 DEBUG Processing attribute `firstName` : value = admin
w2022-03-15 18:12:20 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:20 DEBUG Processing attribute `lastName` : value = admin
w2022-03-15 18:12:20 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:20 DEBUG Processing attribute `login` : value = admin
w2022-03-15 18:12:20 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:20 DEBUG Processing attribute `password` : value = admin
w2022-03-15 18:12:20 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:20 DEBUG Processing attribute `role` : value = ADMIN
w2022-03-15 18:12:20 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:20 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#1]
w2022-03-15 18:12:20 DEBUG Done entity load : ru.edu.helpdesk.entity.User#1
w2022-03-15 18:12:20 DEBUG Processing attribute `status` : value = WORKING
w2022-03-15 18:12:20 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:20 DEBUG Processing attribute `support` : value = 2
w2022-03-15 18:12:20 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:20 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 18:12:20 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 18:12:20 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#2]
w2022-03-15 18:12:20 DEBUG Processing attribute `firstName` : value = support
w2022-03-15 18:12:20 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:20 DEBUG Processing attribute `lastName` : value = support
w2022-03-15 18:12:20 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:20 DEBUG Processing attribute `login` : value = support
w2022-03-15 18:12:20 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:20 DEBUG Processing attribute `password` : value = support
w2022-03-15 18:12:20 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:20 DEBUG Processing attribute `role` : value = SUPPORT
w2022-03-15 18:12:20 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:20 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#2]
w2022-03-15 18:12:20 DEBUG Done entity load : ru.edu.helpdesk.entity.User#2
w2022-03-15 18:12:20 DEBUG Processing attribute `title` : value = Hello user1
w2022-03-15 18:12:20 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:20 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 18:12:20 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 18:12:20 DEBUG Processing attribute `client` : value = 1
w2022-03-15 18:12:20 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:20 DEBUG Processing attribute `status` : value = OPEN
w2022-03-15 18:12:20 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:20 DEBUG Processing attribute `support` : value = null
w2022-03-15 18:12:20 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:20 DEBUG Processing attribute `title` : value = Title2
w2022-03-15 18:12:20 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:20 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 18:12:41 DEBUG Logging Provider: org.jboss.logging.Log4j2LoggerProvider
w2022-03-15 18:12:41 DEBUG PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@afdfab4
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/%d0%9e%d0%bb%d1%8c%d0%b3%d0%b0/Desktop/Java/Project/Project1/helpdeskproject/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		ru.edu.helpdesk.entity.Comment
		ru.edu.helpdesk.entity.Ticket
		ru.edu.helpdesk.entity.User]
	Mapping files names []
	Properties []
w2022-03-15 18:12:41 DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
w2022-03-15 18:12:41 DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
w2022-03-15 18:12:41 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
w2022-03-15 18:12:41 INFO  HHH000412: Hibernate ORM core version 5.6.5.Final
w2022-03-15 18:12:41 DEBUG HHH000206: hibernate.properties not found
w2022-03-15 18:12:42 DEBUG Overriding existing service binding [org.hibernate.secure.spi.JaccService]
w2022-03-15 18:12:42 DEBUG Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
w2022-03-15 18:12:42 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
w2022-03-15 18:12:42 INFO  HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
w2022-03-15 18:12:42 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@7f47ecd3
w2022-03-15 18:12:42 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@7f47ecd3
w2022-03-15 18:12:42 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7f47ecd3
w2022-03-15 18:12:42 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3c7ecffd
w2022-03-15 18:12:42 DEBUG Adding type registration true_false -> org.hibernate.type.TrueFalseType@2c44e2a0
w2022-03-15 18:12:42 DEBUG Adding type registration yes_no -> org.hibernate.type.YesNoType@59e3895e
w2022-03-15 18:12:42 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@1a1f9e1
w2022-03-15 18:12:42 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@1a1f9e1
w2022-03-15 18:12:42 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1a1f9e1
w2022-03-15 18:12:42 DEBUG Adding type registration character -> org.hibernate.type.CharacterType@59cf67a0
w2022-03-15 18:12:42 DEBUG Adding type registration char -> org.hibernate.type.CharacterType@59cf67a0
w2022-03-15 18:12:42 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@59cf67a0
w2022-03-15 18:12:42 DEBUG Adding type registration short -> org.hibernate.type.ShortType@4f032ece
w2022-03-15 18:12:42 DEBUG Adding type registration short -> org.hibernate.type.ShortType@4f032ece
w2022-03-15 18:12:42 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4f032ece
w2022-03-15 18:12:42 DEBUG Adding type registration integer -> org.hibernate.type.IntegerType@7aa707bb
w2022-03-15 18:12:42 DEBUG Adding type registration int -> org.hibernate.type.IntegerType@7aa707bb
w2022-03-15 18:12:42 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7aa707bb
w2022-03-15 18:12:42 DEBUG Adding type registration long -> org.hibernate.type.LongType@83847d0
w2022-03-15 18:12:42 DEBUG Adding type registration long -> org.hibernate.type.LongType@83847d0
w2022-03-15 18:12:42 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.LongType@83847d0
w2022-03-15 18:12:42 DEBUG Adding type registration float -> org.hibernate.type.FloatType@7bd93b65
w2022-03-15 18:12:42 DEBUG Adding type registration float -> org.hibernate.type.FloatType@7bd93b65
w2022-03-15 18:12:42 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7bd93b65
w2022-03-15 18:12:42 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@2fb6b753
w2022-03-15 18:12:42 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@2fb6b753
w2022-03-15 18:12:42 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2fb6b753
w2022-03-15 18:12:42 DEBUG Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@51035c79
w2022-03-15 18:12:42 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@51035c79
w2022-03-15 18:12:42 DEBUG Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5129a12b
w2022-03-15 18:12:42 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5129a12b
w2022-03-15 18:12:42 DEBUG Adding type registration string -> org.hibernate.type.StringType@36d8a887
w2022-03-15 18:12:42 DEBUG Adding type registration java.lang.String -> org.hibernate.type.StringType@36d8a887
w2022-03-15 18:12:42 DEBUG Adding type registration nstring -> org.hibernate.type.StringNVarcharType@48bfb742
w2022-03-15 18:12:42 DEBUG Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3ea59c86
w2022-03-15 18:12:42 DEBUG Adding type registration url -> org.hibernate.type.UrlType@16cdad69
w2022-03-15 18:12:42 DEBUG Adding type registration java.net.URL -> org.hibernate.type.UrlType@16cdad69
w2022-03-15 18:12:42 DEBUG Adding type registration Duration -> org.hibernate.type.DurationType@16990d0
w2022-03-15 18:12:42 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.DurationType@16990d0
w2022-03-15 18:12:42 DEBUG Adding type registration Instant -> org.hibernate.type.InstantType@2b0afd13
w2022-03-15 18:12:42 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2b0afd13
w2022-03-15 18:12:42 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@63340091
w2022-03-15 18:12:42 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@63340091
w2022-03-15 18:12:42 DEBUG Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4e18e360
w2022-03-15 18:12:42 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4e18e360
w2022-03-15 18:12:42 DEBUG Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@6c524c55
w2022-03-15 18:12:42 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@6c524c55
w2022-03-15 18:12:42 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@67b20ea6
w2022-03-15 18:12:42 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@67b20ea6
w2022-03-15 18:12:42 DEBUG Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1ca0f36c
w2022-03-15 18:12:42 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1ca0f36c
w2022-03-15 18:12:42 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@35a933f2
w2022-03-15 18:12:42 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@35a933f2
w2022-03-15 18:12:42 DEBUG Adding type registration date -> org.hibernate.type.DateType@76e248f
w2022-03-15 18:12:42 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.DateType@76e248f
w2022-03-15 18:12:42 DEBUG Adding type registration time -> org.hibernate.type.TimeType@721223ac
w2022-03-15 18:12:42 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.TimeType@721223ac
w2022-03-15 18:12:42 DEBUG Adding type registration timestamp -> org.hibernate.type.TimestampType@25705ff0
w2022-03-15 18:12:42 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@25705ff0
w2022-03-15 18:12:42 DEBUG Adding type registration java.util.Date -> org.hibernate.type.TimestampType@25705ff0
w2022-03-15 18:12:42 DEBUG Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@41a0e079
w2022-03-15 18:12:42 DEBUG Adding type registration calendar -> org.hibernate.type.CalendarType@66aece18
w2022-03-15 18:12:42 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@66aece18
w2022-03-15 18:12:42 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@66aece18
w2022-03-15 18:12:42 DEBUG Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@c5ba451
w2022-03-15 18:12:42 DEBUG Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@868d9b
w2022-03-15 18:12:42 DEBUG Adding type registration locale -> org.hibernate.type.LocaleType@1de40c6d
w2022-03-15 18:12:42 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1de40c6d
w2022-03-15 18:12:42 DEBUG Adding type registration currency -> org.hibernate.type.CurrencyType@397b72f2
w2022-03-15 18:12:42 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@397b72f2
w2022-03-15 18:12:42 DEBUG Adding type registration timezone -> org.hibernate.type.TimeZoneType@31a9ee5f
w2022-03-15 18:12:42 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@31a9ee5f
w2022-03-15 18:12:42 DEBUG Adding type registration class -> org.hibernate.type.ClassType@9609950
w2022-03-15 18:12:42 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.ClassType@9609950
w2022-03-15 18:12:42 DEBUG Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@19d644ec
w2022-03-15 18:12:42 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@19d644ec
w2022-03-15 18:12:42 DEBUG Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5fda5f9f
w2022-03-15 18:12:42 DEBUG Adding type registration binary -> org.hibernate.type.BinaryType@29f3a550
w2022-03-15 18:12:42 DEBUG Adding type registration byte[] -> org.hibernate.type.BinaryType@29f3a550
w2022-03-15 18:12:42 DEBUG Adding type registration [B -> org.hibernate.type.BinaryType@29f3a550
w2022-03-15 18:12:42 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7fb837f9
w2022-03-15 18:12:42 DEBUG Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7fb837f9
w2022-03-15 18:12:42 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7fb837f9
w2022-03-15 18:12:42 DEBUG Adding type registration row_version -> org.hibernate.type.RowVersionType@11e0fecd
w2022-03-15 18:12:42 DEBUG Adding type registration image -> org.hibernate.type.ImageType@889984d
w2022-03-15 18:12:42 DEBUG Adding type registration characters -> org.hibernate.type.CharArrayType@758f3f8b
w2022-03-15 18:12:42 DEBUG Adding type registration char[] -> org.hibernate.type.CharArrayType@758f3f8b
w2022-03-15 18:12:42 DEBUG Adding type registration [C -> org.hibernate.type.CharArrayType@758f3f8b
w2022-03-15 18:12:42 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@d9c6558
w2022-03-15 18:12:42 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@d9c6558
w2022-03-15 18:12:42 DEBUG Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@d9c6558
w2022-03-15 18:12:42 DEBUG Adding type registration text -> org.hibernate.type.TextType@4085c281
w2022-03-15 18:12:42 DEBUG Adding type registration ntext -> org.hibernate.type.NTextType@5bcbfdb8
w2022-03-15 18:12:42 DEBUG Adding type registration blob -> org.hibernate.type.BlobType@68080fb0
w2022-03-15 18:12:42 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@68080fb0
w2022-03-15 18:12:42 DEBUG Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@249bfd4b
w2022-03-15 18:12:42 DEBUG Adding type registration clob -> org.hibernate.type.ClobType@472beea
w2022-03-15 18:12:42 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@472beea
w2022-03-15 18:12:42 DEBUG Adding type registration nclob -> org.hibernate.type.NClobType@4e595ea5
w2022-03-15 18:12:42 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4e595ea5
w2022-03-15 18:12:42 DEBUG Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@31222b4f
w2022-03-15 18:12:42 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@25d6a159
w2022-03-15 18:12:42 DEBUG Adding type registration serializable -> org.hibernate.type.SerializableType@1d9cdaf4
w2022-03-15 18:12:42 DEBUG Adding type registration object -> org.hibernate.type.ObjectType@55b864da
w2022-03-15 18:12:42 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@55b864da
w2022-03-15 18:12:42 DEBUG Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1fb87dd8
w2022-03-15 18:12:42 DEBUG Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@9b05441
w2022-03-15 18:12:42 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@225eae8d
w2022-03-15 18:12:42 DEBUG Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@46abcf9
w2022-03-15 18:12:42 DEBUG Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@58e04711
w2022-03-15 18:12:42 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@53f90210
w2022-03-15 18:12:42 DEBUG Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@404e424
w2022-03-15 18:12:42 DEBUG Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@55580d29
w2022-03-15 18:12:42 INFO  HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
w2022-03-15 18:12:42 DEBUG Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@2ade47ac] into BootstrapContext; was [null]
w2022-03-15 18:12:42 DEBUG ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@2ade47ac) [was null]
w2022-03-15 18:12:42 DEBUG Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@15af2d09] into BootstrapContext; was [null]
w2022-03-15 18:12:42 DEBUG Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@6c5d4854] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@5f1e064d]
w2022-03-15 18:12:42 DEBUG Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@2ade47ac]
w2022-03-15 18:12:42 DEBUG ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@2ade47ac]
w2022-03-15 18:12:42 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
w2022-03-15 18:12:42 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
w2022-03-15 18:12:42 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
w2022-03-15 18:12:42 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
w2022-03-15 18:12:42 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
w2022-03-15 18:12:42 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
w2022-03-15 18:12:42 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
w2022-03-15 18:12:42 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
w2022-03-15 18:12:42 DEBUG Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
w2022-03-15 18:12:42 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
w2022-03-15 18:12:42 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
w2022-03-15 18:12:42 DEBUG Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
w2022-03-15 18:12:42 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
w2022-03-15 18:12:42 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
w2022-03-15 18:12:42 DEBUG Database ->
       name : SQLite
    version : 3.36.0
      major : 3
      minor : 36
w2022-03-15 18:12:42 DEBUG Driver ->
       name : SQLite JDBC
    version : 3.36.0.3
      major : 3
      minor : 36
w2022-03-15 18:12:42 DEBUG JDBC version : 2.1
w2022-03-15 18:12:42 INFO  HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
w2022-03-15 18:12:42 DEBUG JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
w2022-03-15 18:12:42 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
w2022-03-15 18:12:42 DEBUG HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [2] less than 4
w2022-03-15 18:12:42 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@15f16bd4] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@70f343f7]
w2022-03-15 18:12:42 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
w2022-03-15 18:12:42 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.Comment
w2022-03-15 18:12:42 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 18:12:42 DEBUG Import with entity name Comment
w2022-03-15 18:12:42 DEBUG Bind entity ru.edu.helpdesk.entity.Comment on table comment
w2022-03-15 18:12:42 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 18:12:42 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Comment] is safe
w2022-03-15 18:12:42 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Comment
w2022-03-15 18:12:42 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 18:12:42 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Comment:id]
w2022-03-15 18:12:42 DEBUG building SimpleValue for id
w2022-03-15 18:12:42 DEBUG Building property id
w2022-03-15 18:12:42 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 18:12:42 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=message, insertable=true, updatable=true, unique=false}
w2022-03-15 18:12:42 DEBUG MetadataSourceProcessor property message with lazy=false
w2022-03-15 18:12:42 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Comment:message]
w2022-03-15 18:12:42 DEBUG building SimpleValue for message
w2022-03-15 18:12:42 DEBUG Building property message
w2022-03-15 18:12:42 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 18:12:42 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=ticket, insertable=true, updatable=true, unique=false}
w2022-03-15 18:12:42 DEBUG Building property ticket
w2022-03-15 18:12:42 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 18:12:42 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=user, insertable=true, updatable=true, unique=false}
w2022-03-15 18:12:42 DEBUG Building property user
w2022-03-15 18:12:42 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 18:12:42 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 18:12:42 DEBUG Import with entity name Ticket
w2022-03-15 18:12:42 DEBUG Bind entity ru.edu.helpdesk.entity.Ticket on table ticket
w2022-03-15 18:12:42 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 18:12:42 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Ticket] is safe
w2022-03-15 18:12:42 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Ticket
w2022-03-15 18:12:42 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 18:12:42 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:id]
w2022-03-15 18:12:42 DEBUG building SimpleValue for id
w2022-03-15 18:12:42 DEBUG Building property id
w2022-03-15 18:12:42 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 18:12:42 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 18:12:42 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=client, insertable=true, updatable=true, unique=false}
w2022-03-15 18:12:42 DEBUG Building property client
w2022-03-15 18:12:42 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=status, insertable=true, updatable=true, unique=false}
w2022-03-15 18:12:42 DEBUG MetadataSourceProcessor property status with lazy=false
w2022-03-15 18:12:42 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:status]
w2022-03-15 18:12:42 DEBUG building SimpleValue for status
w2022-03-15 18:12:42 DEBUG Building property status
w2022-03-15 18:12:42 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 18:12:42 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=support, insertable=true, updatable=true, unique=false}
w2022-03-15 18:12:42 DEBUG Building property support
w2022-03-15 18:12:42 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=title, insertable=true, updatable=true, unique=false}
w2022-03-15 18:12:42 DEBUG MetadataSourceProcessor property title with lazy=false
w2022-03-15 18:12:42 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:title]
w2022-03-15 18:12:42 DEBUG building SimpleValue for title
w2022-03-15 18:12:42 DEBUG Building property title
w2022-03-15 18:12:42 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.User
w2022-03-15 18:12:42 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 18:12:42 DEBUG Import with entity name User
w2022-03-15 18:12:42 DEBUG Bind entity ru.edu.helpdesk.entity.User on table user
w2022-03-15 18:12:42 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 18:12:42 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.User] is safe
w2022-03-15 18:12:42 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.User
w2022-03-15 18:12:42 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 18:12:42 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:id]
w2022-03-15 18:12:42 DEBUG building SimpleValue for id
w2022-03-15 18:12:42 DEBUG Building property id
w2022-03-15 18:12:42 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 18:12:42 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
w2022-03-15 18:12:42 DEBUG MetadataSourceProcessor property firstName with lazy=false
w2022-03-15 18:12:42 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:firstName]
w2022-03-15 18:12:42 DEBUG building SimpleValue for firstName
w2022-03-15 18:12:42 DEBUG Building property firstName
w2022-03-15 18:12:42 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
w2022-03-15 18:12:42 DEBUG MetadataSourceProcessor property lastName with lazy=false
w2022-03-15 18:12:42 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:lastName]
w2022-03-15 18:12:42 DEBUG building SimpleValue for lastName
w2022-03-15 18:12:42 DEBUG Building property lastName
w2022-03-15 18:12:42 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=login, insertable=true, updatable=true, unique=false}
w2022-03-15 18:12:42 DEBUG MetadataSourceProcessor property login with lazy=false
w2022-03-15 18:12:42 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:login]
w2022-03-15 18:12:42 DEBUG building SimpleValue for login
w2022-03-15 18:12:42 DEBUG Building property login
w2022-03-15 18:12:42 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
w2022-03-15 18:12:42 DEBUG MetadataSourceProcessor property password with lazy=false
w2022-03-15 18:12:42 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:password]
w2022-03-15 18:12:42 DEBUG building SimpleValue for password
w2022-03-15 18:12:42 DEBUG Building property password
w2022-03-15 18:12:42 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=role, insertable=true, updatable=true, unique=false}
w2022-03-15 18:12:42 DEBUG MetadataSourceProcessor property role with lazy=false
w2022-03-15 18:12:42 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:role]
w2022-03-15 18:12:42 DEBUG building SimpleValue for role
w2022-03-15 18:12:42 DEBUG Building property role
w2022-03-15 18:12:42 DEBUG Starting fillSimpleValue for id
w2022-03-15 18:12:42 DEBUG Starting fillSimpleValue for message
w2022-03-15 18:12:42 DEBUG Starting fillSimpleValue for id
w2022-03-15 18:12:42 DEBUG Starting fillSimpleValue for status
w2022-03-15 18:12:42 DEBUG Starting fillSimpleValue for title
w2022-03-15 18:12:42 DEBUG Starting fillSimpleValue for id
w2022-03-15 18:12:42 DEBUG Starting fillSimpleValue for firstName
w2022-03-15 18:12:42 DEBUG Starting fillSimpleValue for lastName
w2022-03-15 18:12:42 DEBUG Starting fillSimpleValue for login
w2022-03-15 18:12:42 DEBUG Starting fillSimpleValue for password
w2022-03-15 18:12:42 DEBUG Starting fillSimpleValue for role
w2022-03-15 18:12:42 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [comment]
w2022-03-15 18:12:42 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [ticket]
w2022-03-15 18:12:42 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [user]
w2022-03-15 18:12:42 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 18:12:42 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 18:12:42 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 18:12:42 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 18:12:42 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 18:12:42 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 18:12:42 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 18:12:42 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 18:12:42 DEBUG Building session factory
w2022-03-15 18:12:42 DEBUG SessionFactory name : null
w2022-03-15 18:12:42 DEBUG Automatic flush during beforeCompletion(): enabled
w2022-03-15 18:12:42 DEBUG Automatic session close at end of transaction: disabled
w2022-03-15 18:12:42 DEBUG Statistics: disabled
w2022-03-15 18:12:42 DEBUG Deleted entity synthetic identifier rollback: disabled
w2022-03-15 18:12:42 DEBUG Default entity-mode: pojo
w2022-03-15 18:12:42 DEBUG Check Nullability in Core (should be disabled when Bean Validation is on): enabled
w2022-03-15 18:12:42 DEBUG Allow initialization of lazy state outside session : disabled
w2022-03-15 18:12:42 DEBUG Using BatchFetchStyle : LEGACY
w2022-03-15 18:12:42 DEBUG Default batch fetch size: -1
w2022-03-15 18:12:42 DEBUG Maximum outer join fetch depth: null
w2022-03-15 18:12:42 DEBUG Default null ordering: NONE
w2022-03-15 18:12:42 DEBUG Order SQL updates by primary key: disabled
w2022-03-15 18:12:42 DEBUG Order SQL inserts for batching: disabled
w2022-03-15 18:12:42 DEBUG multi-tenancy strategy : NONE
w2022-03-15 18:12:42 DEBUG JTA Track by Thread: enabled
w2022-03-15 18:12:42 DEBUG Query language substitutions: {}
w2022-03-15 18:12:42 DEBUG Named query checking : enabled
w2022-03-15 18:12:42 DEBUG Second-level cache: disabled
w2022-03-15 18:12:42 DEBUG Second-level query cache: disabled
w2022-03-15 18:12:42 DEBUG Second-level query cache factory: null
w2022-03-15 18:12:42 DEBUG Second-level cache region prefix: null
w2022-03-15 18:12:42 DEBUG Optimize second-level cache for minimal puts: disabled
w2022-03-15 18:12:42 DEBUG Structured second-level cache entries: disabled
w2022-03-15 18:12:42 DEBUG Second-level cache direct-reference entries: disabled
w2022-03-15 18:12:42 DEBUG Automatic eviction of collection cache: disabled
w2022-03-15 18:12:42 DEBUG JDBC batch size: 1
w2022-03-15 18:12:42 DEBUG JDBC batch updates for versioned data: enabled
w2022-03-15 18:12:42 DEBUG Scrollable result sets: disabled
w2022-03-15 18:12:42 DEBUG Wrap result sets: disabled
w2022-03-15 18:12:42 DEBUG JDBC3 getGeneratedKeys(): enabled
w2022-03-15 18:12:42 DEBUG JDBC result set fetch size: null
w2022-03-15 18:12:42 DEBUG Connection release mode: ON_CLOSE
w2022-03-15 18:12:42 DEBUG Generate SQL with comments: disabled
w2022-03-15 18:12:42 DEBUG JPA compliance - query : disabled
w2022-03-15 18:12:42 DEBUG JPA compliance - closed-handling : disabled
w2022-03-15 18:12:42 DEBUG JPA compliance - lists : disabled
w2022-03-15 18:12:42 DEBUG JPA compliance - transactions : disabled
w2022-03-15 18:12:42 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 18:12:42 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 18:12:42 DEBUG Session factory constructed with filter configurations : {}
w2022-03-15 18:12:42 DEBUG Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=true, java.specification.version=1.8, file.encoding.pkg=sun.io, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@39f77c43, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.SQLiteDialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\charsets.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\cldrdata.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\dnsns.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\jaccess.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\localedata.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\nashorn.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunec.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunmscapi.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\zipfs.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jce.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jfr.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jsse.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\management-agent.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\resources.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\rt.jar;C:\Users\Ольга\Desktop\Java\Project\Project1\helpdeskproject\target\classes;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\2.6.4\spring-boot-starter-data-jpa-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\2.6.4\spring-boot-starter-jdbc-2.6.4.jar;C:\Users\Ольга\.m2\repository\com\zaxxer\HikariCP\4.0.3\HikariCP-4.0.3.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-jdbc\5.3.16\spring-jdbc-5.3.16.jar;C:\Users\Ольга\.m2\repository\jakarta\transaction\jakarta.transaction-api\1.3.3\jakarta.transaction-api-1.3.3.jar;C:\Users\Ольга\.m2\repository\jakarta\persistence\jakarta.persistence-api\2.2.3\jakarta.persistence-api-2.2.3.jar;C:\Users\Ольга\.m2\repository\org\hibernate\hibernate-core\5.6.5.Final\hibernate-core-5.6.5.Final.jar;C:\Users\Ольга\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy\1.11.22\byte-buddy-1.11.22.jar;C:\Users\Ольга\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ольга\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Ольга\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.6\jaxb-runtime-2.3.6.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\txw2\2.3.6\txw2-2.3.6.jar;C:\Users\Ольга\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.12\istack-commons-runtime-3.0.12.jar;C:\Users\Ольга\.m2\repository\com\sun\activation\jakarta.activation\1.2.2\jakarta.activation-1.2.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\data\spring-data-jpa\2.6.2\spring-data-jpa-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\data\spring-data-commons\2.6.2\spring-data-commons-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-orm\5.3.16\spring-orm-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-context\5.3.16\spring-context-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-tx\5.3.16\spring-tx-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-beans\5.3.16\spring-beans-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-aspects\5.3.16\spring-aspects-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-security\2.6.4\spring-boot-starter-security-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter\2.6.4\spring-boot-starter-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-logging\2.6.4\spring-boot-starter-logging-2.6.4.jar;C:\Users\Ольга\.m2\repository\ch\qos\logback\logback-classic\1.2.10\logback-classic-1.2.10.jar;C:\Users\Ольга\.m2\repository\ch\qos\logback\logback-core\1.2.10\logback-core-1.2.10.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.17.1\log4j-to-slf4j-2.17.1.jar;C:\Users\Ольга\.m2\repository\org\slf4j\jul-to-slf4j\1.7.36\jul-to-slf4j-1.7.36.jar;C:\Users\Ольга\.m2\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;C:\Users\Ольга\.m2\repository\org\yaml\snakeyaml\1.29\snakeyaml-1.29.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-aop\5.3.16\spring-aop-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-config\5.6.2\spring-security-config-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-web\5.6.2\spring-security-web-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-expression\5.3.16\spring-expression-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-web\2.6.4\spring-boot-starter-web-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-json\2.6.4\spring-boot-starter-json-2.6.4.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.13.1\jackson-datatype-jdk8-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.13.1\jackson-datatype-jsr310-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.13.1\jackson-module-parameter-names-2.13.1.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\2.6.4\spring-boot-starter-tomcat-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.58\tomcat-embed-core-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\9.0.58\tomcat-embed-el-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.58\tomcat-embed-websocket-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-web\5.3.16\spring-web-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-webmvc\5.3.16\spring-webmvc-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-devtools\2.6.4\spring-boot-devtools-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot\2.6.4\spring-boot-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\2.6.4\spring-boot-autoconfigure-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\xerial\sqlite-jdbc\3.36.0.3\sqlite-jdbc-3.36.0.3.jar;C:\Users\Ольга\.m2\repository\com\zsoltfabok\sqlite-dialect\1.0\sqlite-dialect-1.0.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-aop\2.6.2\spring-boot-starter-aop-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\aspectj\aspectjweaver\1.9.7\aspectjweaver-1.9.7.jar;C:\Users\Ольга\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.3\jakarta.xml.bind-api-2.3.3.jar;C:\Users\Ольга\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.2\jakarta.activation-api-1.2.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-core\5.3.16\spring-core-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-jcl\5.3.16\spring-jcl-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-core\5.6.2\spring-security-core-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-crypto\5.6.2\spring-security-crypto-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\projectlombok\lombok\1.18.22\lombok-1.18.22.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\2.6.4\spring-boot-starter-thymeleaf-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\thymeleaf-spring5\3.0.15.RELEASE\thymeleaf-spring5-3.0.15.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\thymeleaf\3.0.15.RELEASE\thymeleaf-3.0.15.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\attoparser\attoparser\2.0.5.RELEASE\attoparser-2.0.5.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-java8time\3.0.4.RELEASE\thymeleaf-extras-java8time-3.0.4.RELEASE.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.1\jackson-databind-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.1\jackson-annotations-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.1\jackson-core-2.13.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-api\2.4.1\log4j-api-2.4.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-core\2.4.1\log4j-core-2.4.1.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.2\lib\idea_rt.jar, java.vm.vendor=Temurin, sun.arch.data.model=64, user.variant=, java.vendor.url=https://adoptium.net/, catalina.useNaming=false, user.timezone=Europe/Moscow, jakarta.persistence.sharedCache.mode=UNSPECIFIED, os.name=Windows 10, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), user.country=RU, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\bin, sun.java.command=ru.edu.helpdesk.HelpdeskApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@44d0f24b, com.sun.management.jmxremote=, javax.persistence.sharedCache.mode=UNSPECIFIED, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, user.home=C:\Users\Ольга, user.language=ru, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre, file.separator=\, spring.output.ansi.enabled=always, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, sun.boot.class.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\resources.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\rt.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\sunrsasign.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jsse.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jce.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\charsets.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jfr.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\classes, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_312-b07, user.name=Эльдорадо, spring.jmx.enabled=true, path.separator=;, os.version=10.0, java.endorsed.dirs=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\endorsed, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=default, spring.beaninfo.ignore=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=C:\Users\134E~1\AppData\Local\Temp\, catalina.home=C:\Users\Ольга\AppData\Local\Temp\tomcat.8080.7308062182309422895, java.version=1.8.0_312, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\Ольга\Desktop\Java\Project\Project1\helpdeskproject, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=5820, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\Ольга\AppData\Local\Temp\tomcat.8080.7308062182309422895, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@5eeff0b6, java.library.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\windows\System32\OpenSSH\;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\Program Files\apache-maven-3.8.4\bin;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Ольга\AppData\Local\Microsoft\WindowsApps;C:\Users\Ольга\AppData\Local\Programs\Microsoft VS Code\bin;C:\SQLite;C:\Users\Ольга\AppData\Roaming\npm;C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.2\bin;;., java.vendor=Temurin, java.vm.info=mixed mode, java.vm.version=25.312-b07, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, java.ext.dirs=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext;C:\windows\Sun\Java\lib\ext, hibernate.connection.datasource=HikariDataSource (HikariPool-1), hibernate.hbm2ddl.import_files=data/import.sql, java.class.version=52.0}
w2022-03-15 18:12:42 DEBUG Skipping JACC integration as it was not enabled
w2022-03-15 18:12:42 DEBUG Using ORDINAL-based conversion for Enum ru.edu.helpdesk.entity.UserRole
w2022-03-15 18:12:42 DEBUG Using ORDINAL-based conversion for Enum ru.edu.helpdesk.entity.TicketStatus
w2022-03-15 18:12:42 DEBUG Instantiated session factory
w2022-03-15 18:12:42 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@15f16bd4] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@5c4d8732]
w2022-03-15 18:12:42 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.User] is safe
w2022-03-15 18:12:42 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.User
w2022-03-15 18:12:42 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:12:42 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:12:42 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:12:42 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:12:42 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Ticket] is safe
w2022-03-15 18:12:42 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Ticket
w2022-03-15 18:12:42 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:12:42 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:12:42 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:12:42 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:12:42 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:12:42 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:12:42 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:12:42 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:12:42 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Comment] is safe
w2022-03-15 18:12:42 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Comment
w2022-03-15 18:12:42 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:12:42 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:12:42 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:12:42 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:12:42 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.User
w2022-03-15 18:12:42 DEBUG  Version select: select id from user where id =?
w2022-03-15 18:12:42 DEBUG  Snapshot select: select user_.id, user_.first_name as first_na2_2_, user_.last_name as last_nam3_2_, user_.login as login4_2_, user_.password as password5_2_, user_.role as role6_2_ from user user_ where user_.id=?
w2022-03-15 18:12:42 DEBUG  Insert 0: insert into user (first_name, last_name, login, password, role, id) values (?, ?, ?, ?, ?, ?)
w2022-03-15 18:12:42 DEBUG  Update 0: update user set first_name=?, last_name=?, login=?, password=?, role=? where id=?
w2022-03-15 18:12:42 DEBUG  Delete 0: delete from user where id=?
w2022-03-15 18:12:42 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22aaf341]
w2022-03-15 18:12:42 DEBUG Visiting attribute path : firstName
w2022-03-15 18:12:42 DEBUG Visiting attribute path : lastName
w2022-03-15 18:12:42 DEBUG Visiting attribute path : login
w2022-03-15 18:12:42 DEBUG Visiting attribute path : password
w2022-03-15 18:12:42 DEBUG Visiting attribute path : role
w2022-03-15 18:12:42 DEBUG Building LoadPlan...
w2022-03-15 18:12:42 DEBUG processing queryspace <gen:0>
w2022-03-15 18:12:42 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.User)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

w2022-03-15 18:12:42 DEBUG Static select for entity ru.edu.helpdesk.entity.User [NONE]: select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 18:12:42 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.Ticket
w2022-03-15 18:12:42 DEBUG  Version select: select id from ticket where id =?
w2022-03-15 18:12:42 DEBUG  Snapshot select: select ticket_.id, ticket_.client_id as client_i4_1_, ticket_.status as status2_1_, ticket_.support_id as support_5_1_, ticket_.title as title3_1_ from ticket ticket_ where ticket_.id=?
w2022-03-15 18:12:42 DEBUG  Insert 0: insert into ticket (client_id, status, support_id, title, id) values (?, ?, ?, ?, ?)
w2022-03-15 18:12:42 DEBUG  Update 0: update ticket set client_id=?, status=?, support_id=?, title=? where id=?
w2022-03-15 18:12:42 DEBUG  Delete 0: delete from ticket where id=?
w2022-03-15 18:12:42 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@605c9a5]
w2022-03-15 18:12:42 DEBUG Visiting attribute path : client
w2022-03-15 18:12:42 DEBUG Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43c78f3a]
w2022-03-15 18:12:42 DEBUG Visiting attribute path : client.firstName
w2022-03-15 18:12:42 DEBUG Visiting attribute path : client.lastName
w2022-03-15 18:12:42 DEBUG Visiting attribute path : client.login
w2022-03-15 18:12:42 DEBUG Visiting attribute path : client.password
w2022-03-15 18:12:42 DEBUG Visiting attribute path : client.role
w2022-03-15 18:12:42 DEBUG Visiting attribute path : status
w2022-03-15 18:12:42 DEBUG Visiting attribute path : support
w2022-03-15 18:12:42 DEBUG Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f5391b0]
w2022-03-15 18:12:42 DEBUG Visiting attribute path : support.firstName
w2022-03-15 18:12:42 DEBUG Visiting attribute path : support.lastName
w2022-03-15 18:12:42 DEBUG Visiting attribute path : support.login
w2022-03-15 18:12:42 DEBUG Visiting attribute path : support.password
w2022-03-15 18:12:42 DEBUG Visiting attribute path : support.role
w2022-03-15 18:12:42 DEBUG Visiting attribute path : title
w2022-03-15 18:12:42 DEBUG Building LoadPlan...
w2022-03-15 18:12:42 DEBUG processing queryspace <gen:0>
w2022-03-15 18:12:42 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.Ticket)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.Ticket, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.Ticket)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:1>, path=ru.edu.helpdesk.entity.Ticket.client)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:2>, path=ru.edu.helpdesk.entity.Ticket.support)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.Ticket)
          - SQL table alias mapping - ticket0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(client)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
          - JOIN (JoinDefinedByMetadata(support)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user2_
                - alias suffix - 2_
                - suffixed key columns - {id1_2_2_}

w2022-03-15 18:12:42 DEBUG Static select for entity ru.edu.helpdesk.entity.Ticket [NONE]: select ticket0_.id as id1_1_0_, ticket0_.client_id as client_i4_1_0_, ticket0_.status as status2_1_0_, ticket0_.support_id as support_5_1_0_, ticket0_.title as title3_1_0_, user1_.id as id1_2_1_, user1_.first_name as first_na2_2_1_, user1_.last_name as last_nam3_2_1_, user1_.login as login4_2_1_, user1_.password as password5_2_1_, user1_.role as role6_2_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id left outer join user user2_ on ticket0_.support_id=user2_.id where ticket0_.id=?
w2022-03-15 18:12:42 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.Comment
w2022-03-15 18:12:42 DEBUG  Version select: select id from comment where id =?
w2022-03-15 18:12:42 DEBUG  Snapshot select: select comment_.id, comment_.message as message2_0_, comment_.ticket_id as ticket_i3_0_, comment_.user_id as user_id4_0_ from comment comment_ where comment_.id=?
w2022-03-15 18:12:42 DEBUG  Insert 0: insert into comment (message, ticket_id, user_id, id) values (?, ?, ?, ?)
w2022-03-15 18:12:42 DEBUG  Update 0: update comment set message=?, ticket_id=?, user_id=? where id=?
w2022-03-15 18:12:42 DEBUG  Delete 0: delete from comment where id=?
w2022-03-15 18:12:42 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8674d38]
w2022-03-15 18:12:42 DEBUG Visiting attribute path : message
w2022-03-15 18:12:42 DEBUG Visiting attribute path : ticket
w2022-03-15 18:12:42 DEBUG Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@289981ee]
w2022-03-15 18:12:42 DEBUG Visiting attribute path : ticket.client
w2022-03-15 18:12:42 DEBUG Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@658c1841]
w2022-03-15 18:12:42 DEBUG Visiting attribute path : ticket.client.firstName
w2022-03-15 18:12:42 DEBUG Visiting attribute path : ticket.client.lastName
w2022-03-15 18:12:42 DEBUG Visiting attribute path : ticket.client.login
w2022-03-15 18:12:42 DEBUG Visiting attribute path : ticket.client.password
w2022-03-15 18:12:42 DEBUG Visiting attribute path : ticket.client.role
w2022-03-15 18:12:42 DEBUG Visiting attribute path : ticket.status
w2022-03-15 18:12:42 DEBUG Visiting attribute path : ticket.support
w2022-03-15 18:12:42 DEBUG Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5385b937]
w2022-03-15 18:12:42 DEBUG Visiting attribute path : ticket.support.firstName
w2022-03-15 18:12:42 DEBUG Visiting attribute path : ticket.support.lastName
w2022-03-15 18:12:42 DEBUG Visiting attribute path : ticket.support.login
w2022-03-15 18:12:42 DEBUG Visiting attribute path : ticket.support.password
w2022-03-15 18:12:42 DEBUG Visiting attribute path : ticket.support.role
w2022-03-15 18:12:42 DEBUG Visiting attribute path : ticket.title
w2022-03-15 18:12:42 DEBUG Visiting attribute path : user
w2022-03-15 18:12:42 DEBUG Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a5c488]
w2022-03-15 18:12:42 DEBUG Visiting attribute path : user.firstName
w2022-03-15 18:12:42 DEBUG Visiting attribute path : user.lastName
w2022-03-15 18:12:42 DEBUG Visiting attribute path : user.login
w2022-03-15 18:12:42 DEBUG Visiting attribute path : user.password
w2022-03-15 18:12:42 DEBUG Visiting attribute path : user.role
w2022-03-15 18:12:42 DEBUG Building LoadPlan...
w2022-03-15 18:12:42 DEBUG processing queryspace <gen:0>
w2022-03-15 18:12:42 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.Comment)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.Comment, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.Comment)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.Ticket, querySpaceUid=<gen:1>, path=ru.edu.helpdesk.entity.Comment.ticket)
             - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:2>, path=ru.edu.helpdesk.entity.Comment.ticket.client)
             - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:3>, path=ru.edu.helpdesk.entity.Comment.ticket.support)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:4>, path=ru.edu.helpdesk.entity.Comment.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(ticket)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ru.edu.helpdesk.entity.Ticket)
                - SQL table alias mapping - ticket1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(client)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=ru.edu.helpdesk.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}
                - JOIN (JoinDefinedByMetadata(support)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=ru.edu.helpdesk.entity.User)
                      - SQL table alias mapping - user3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_2_3_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user4_
                - alias suffix - 4_
                - suffixed key columns - {id1_2_4_}

w2022-03-15 18:12:42 DEBUG Static select for entity ru.edu.helpdesk.entity.Comment [NONE]: select comment0_.id as id1_0_0_, comment0_.message as message2_0_0_, comment0_.ticket_id as ticket_i3_0_0_, comment0_.user_id as user_id4_0_0_, ticket1_.id as id1_1_1_, ticket1_.client_id as client_i4_1_1_, ticket1_.status as status2_1_1_, ticket1_.support_id as support_5_1_1_, ticket1_.title as title3_1_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_, user3_.id as id1_2_3_, user3_.first_name as first_na2_2_3_, user3_.last_name as last_nam3_2_3_, user3_.login as login4_2_3_, user3_.password as password5_2_3_, user3_.role as role6_2_3_, user4_.id as id1_2_4_, user4_.first_name as first_na2_2_4_, user4_.last_name as last_nam3_2_4_, user4_.login as login4_2_4_, user4_.password as password5_2_4_, user4_.role as role6_2_4_ from comment comment0_ left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id left outer join user user2_ on ticket1_.client_id=user2_.id left outer join user user3_ on ticket1_.support_id=user3_.id left outer join user user4_ on comment0_.user_id=user4_.id where comment0_.id=?
w2022-03-15 18:12:42 DEBUG drop table if exists comment
w2022-03-15 18:12:42 DEBUG drop table if exists hibernate_sequence
w2022-03-15 18:12:42 DEBUG drop table if exists ticket
w2022-03-15 18:12:42 DEBUG drop table if exists user
w2022-03-15 18:12:42 DEBUG create table comment (id bigint not null, message varchar(255) not null, ticket_id bigint, user_id bigint, primary key (id))
w2022-03-15 18:12:42 DEBUG create table hibernate_sequence (next_val bigint)
w2022-03-15 18:12:42 DEBUG insert into hibernate_sequence values ( 1 )
w2022-03-15 18:12:42 DEBUG create table ticket (id bigint not null, status integer, title varchar(255) not null, client_id bigint, support_id bigint, primary key (id))
w2022-03-15 18:12:42 DEBUG create table user (id bigint not null, first_name varchar(255), last_name varchar(255), login varchar(255) not null, password varchar(255) not null, role integer, primary key (id))
w2022-03-15 18:12:42 INFO  HHH000476: Executing import script 'file:/C:/Users/%d0%9e%d0%bb%d1%8c%d0%b3%d0%b0/Desktop/Java/Project/Project1/helpdeskproject/target/classes/data/import.sql'
w2022-03-15 18:12:42 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (1, 'admin', 'admin', 'admin', 'admin', 0)
w2022-03-15 18:12:42 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (2, 'support', 'support', 'support', 'support', 1)
w2022-03-15 18:12:42 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (3, 'user1', 'user1', 'user1', 'user1', 2)
w2022-03-15 18:12:42 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (4, 'user2', 'user2', 'user2', 'user2', 2)
w2022-03-15 18:12:42 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (1, 1, 'Hello user1',1, 2)
w2022-03-15 18:12:42 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (2, 0, 'Title2', 1, 2)
w2022-03-15 18:12:42 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (3, 0, 'Message user2', 4, NULL)
w2022-03-15 18:12:42 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (1, "comment ticket1", 1, 3)
w2022-03-15 18:12:42 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (2, "comment ticket2", 2, 3)
w2022-03-15 18:12:42 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (3, "comment ticket11", 1, 2)
w2022-03-15 18:12:42 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (4, "comment ticket111", 1, 2)
w2022-03-15 18:12:42 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (5, "comment ticket22", 2, 2)
w2022-03-15 18:12:42 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (6, "comment ticket3", 3, 4)
w2022-03-15 18:12:42 DEBUG UPDATE hibernate_sequence SET next_val = 8 WHERE next_val = 1
w2022-03-15 18:12:42 INFO  HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
w2022-03-15 18:12:42 DEBUG Checking 0 named HQL queries
w2022-03-15 18:12:42 DEBUG Checking 0 named SQL queries
w2022-03-15 18:12:42 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 18:12:42 DEBUG Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@492c9f91
w2022-03-15 18:12:42 DEBUG Registering SessionFactory: 66c7e203-331c-47d7-becf-ae96f6d1a747 (<unnamed>)
w2022-03-15 18:12:42 DEBUG Not binding SessionFactory to JNDI, no JNDI name configured
w2022-03-15 18:12:43 DEBUG Statistics initialized [enabled=false]
w2022-03-15 18:12:43 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 18:12:43 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 18:12:43 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 18:12:48 DEBUG Rendered criteria query -> select generatedAlias0 from Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 18:12:48 DEBUG QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@236f00be
w2022-03-15 18:12:48 DEBUG parse() - HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 18:12:48 DEBUG throwQueryException() : no errors
w2022-03-15 18:12:48 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[IDENT] Node: 'ru'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'edu'
    |  |  |  |  |  |  \-[IDENT] Node: 'helpdesk'
    |  |  |  |  |  \-[IDENT] Node: 'entity'
    |  |  |  |  \-[IDENT] Node: 'Ticket'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'client'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias1'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

w2022-03-15 18:12:48 DEBUG select << begin [level=1, statement=select]
w2022-03-15 18:12:48 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.Ticket (generatedAlias0) -> ticket0_
w2022-03-15 18:12:48 DEBUG Resolved : generatedAlias0 -> ticket0_.id
w2022-03-15 18:12:48 DEBUG getDataType() : client -> org.hibernate.type.ManyToOneType(ru.edu.helpdesk.entity.User)
w2022-03-15 18:12:48 DEBUG dereferenceEntityJoin() : generating join for client in ru.edu.helpdesk.entity.Ticket (generatedAlias1) parent = [ {null} ]
w2022-03-15 18:12:48 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.User (generatedAlias1) -> user1_
w2022-03-15 18:12:48 DEBUG addJoinByPathMap() : generatedAlias0.client -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}
w2022-03-15 18:12:48 DEBUG Resolved : generatedAlias0.client -> ticket0_.client_id
w2022-03-15 18:12:48 DEBUG createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'user user1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Ticket.client,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}

w2022-03-15 18:12:48 DEBUG Resolved : generatedAlias0 -> ticket0_.id
w2022-03-15 18:12:48 DEBUG Resolved : generatedAlias1 -> user1_.id
w2022-03-15 18:12:48 DEBUG getDataType() : id -> org.hibernate.type.LongType@83847d0
w2022-03-15 18:12:48 DEBUG Resolved : generatedAlias1.id -> user1_.id
w2022-03-15 18:12:48 DEBUG select : finishing up [level=1, statement=select]
w2022-03-15 18:12:48 DEBUG processQuery() :  ( SELECT ( {select clause} ticket0_.id ) ( FromClause{level=1} ( ticket ticket0_ user user1_ ) ) ( where ( = ( user1_.id user1_.id id ) ? ) ) )
w2022-03-15 18:12:48 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Ticket): [ticket]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.Ticket)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.User)
          | path: generatedAlias1.id
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.User)
          |  | originalText: generatedAlias1
          |  \-IdentNode
          |    persister: null
          |    originalText: id
          \-ParameterNode

w2022-03-15 18:12:48 DEBUG Using FROM fragment [ticket ticket0_]
w2022-03-15 18:12:48 DEBUG Using FROM fragment [left outer join user user1_ on ticket0_.client_id=user1_.id]
w2022-03-15 18:12:48 DEBUG select >> end [level=1, statement=select]
w2022-03-15 18:12:48 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (ticket,user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'ticket0_.id as id1_1_' {alias=generatedAlias0, className=ru.edu.helpdesk.entity.Ticket, tableAlias=ticket0_}
    |  \-[SQL_TOKEN] SqlFragment: 'ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[ticket0_, user1_], fromElementsByPath=[generatedAlias0.client], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'ticket ticket0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=ticket,tableAlias=ticket0_,origin=null,columns={,className=ru.edu.helpdesk.entity.Ticket}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join user user1_ on ticket0_.client_id=user1_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Ticket.client,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user1_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias1.id,tableAlias=user1_,className=ru.edu.helpdesk.entity.User,classAlias=generatedAlias1}
          |  +-[ALIAS_REF] IdentNode: 'user1_.id' {alias=generatedAlias1, className=ru.edu.helpdesk.entity.User, tableAlias=user1_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LongType@83847d0}

w2022-03-15 18:12:48 DEBUG throwQueryException() : no errors
w2022-03-15 18:12:48 DEBUG HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 18:12:48 DEBUG SQL: select ticket0_.id as id1_1_, ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id where user1_.id=?
w2022-03-15 18:12:48 DEBUG throwQueryException() : no errors
w2022-03-15 18:12:48 DEBUG select ticket0_.id as id1_1_, ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id where user1_.id=?
w2022-03-15 18:12:48 DEBUG Result set row: 0
w2022-03-15 18:12:48 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 18:12:48 DEBUG Result set row: 1
w2022-03-15 18:12:48 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 18:12:48 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 18:12:48 DEBUG Processing attribute `client` : value = 1
w2022-03-15 18:12:48 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:48 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 18:12:48 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 18:12:48 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#1]
w2022-03-15 18:12:48 DEBUG Processing attribute `firstName` : value = admin
w2022-03-15 18:12:48 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:48 DEBUG Processing attribute `lastName` : value = admin
w2022-03-15 18:12:48 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:48 DEBUG Processing attribute `login` : value = admin
w2022-03-15 18:12:48 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:48 DEBUG Processing attribute `password` : value = admin
w2022-03-15 18:12:48 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:48 DEBUG Processing attribute `role` : value = ADMIN
w2022-03-15 18:12:48 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:48 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#1]
w2022-03-15 18:12:48 DEBUG Done entity load : ru.edu.helpdesk.entity.User#1
w2022-03-15 18:12:48 DEBUG Processing attribute `status` : value = WORKING
w2022-03-15 18:12:48 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:48 DEBUG Processing attribute `support` : value = 2
w2022-03-15 18:12:48 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:48 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 18:12:48 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 18:12:48 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#2]
w2022-03-15 18:12:48 DEBUG Processing attribute `firstName` : value = support
w2022-03-15 18:12:48 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:48 DEBUG Processing attribute `lastName` : value = support
w2022-03-15 18:12:48 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:48 DEBUG Processing attribute `login` : value = support
w2022-03-15 18:12:48 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:48 DEBUG Processing attribute `password` : value = support
w2022-03-15 18:12:48 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:48 DEBUG Processing attribute `role` : value = SUPPORT
w2022-03-15 18:12:48 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:48 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#2]
w2022-03-15 18:12:48 DEBUG Done entity load : ru.edu.helpdesk.entity.User#2
w2022-03-15 18:12:48 DEBUG Processing attribute `title` : value = Hello user1
w2022-03-15 18:12:48 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:48 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 18:12:48 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 18:12:48 DEBUG Processing attribute `client` : value = 1
w2022-03-15 18:12:48 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:48 DEBUG Processing attribute `status` : value = OPEN
w2022-03-15 18:12:48 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:48 DEBUG Processing attribute `support` : value = 2
w2022-03-15 18:12:48 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:48 DEBUG Processing attribute `title` : value = Title2
w2022-03-15 18:12:48 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:48 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 18:12:52 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 18:12:52 DEBUG begin
w2022-03-15 18:12:52 DEBUG committing
w2022-03-15 18:12:52 DEBUG Rendered criteria query -> select generatedAlias0 from Comment as generatedAlias0 left join generatedAlias0.ticket as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 18:12:52 DEBUG parse() - HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Comment as generatedAlias0 left join generatedAlias0.ticket as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 18:12:52 DEBUG throwQueryException() : no errors
w2022-03-15 18:12:52 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[IDENT] Node: 'ru'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'edu'
    |  |  |  |  |  |  \-[IDENT] Node: 'helpdesk'
    |  |  |  |  |  \-[IDENT] Node: 'entity'
    |  |  |  |  \-[IDENT] Node: 'Comment'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'ticket'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias1'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

w2022-03-15 18:12:52 DEBUG select << begin [level=1, statement=select]
w2022-03-15 18:12:52 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.Comment (generatedAlias0) -> comment0_
w2022-03-15 18:12:52 DEBUG Resolved : generatedAlias0 -> comment0_.id
w2022-03-15 18:12:52 DEBUG getDataType() : ticket -> org.hibernate.type.ManyToOneType(ru.edu.helpdesk.entity.Ticket)
w2022-03-15 18:12:52 DEBUG dereferenceEntityJoin() : generating join for ticket in ru.edu.helpdesk.entity.Comment (generatedAlias1) parent = [ {null} ]
w2022-03-15 18:12:52 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.Ticket (generatedAlias1) -> ticket1_
w2022-03-15 18:12:52 DEBUG addJoinByPathMap() : generatedAlias0.ticket -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=ticket,tableAlias=ticket1_,origin=comment comment0_,columns={comment0_.ticket_id,className=ru.edu.helpdesk.entity.Ticket}}
w2022-03-15 18:12:52 DEBUG Resolved : generatedAlias0.ticket -> comment0_.ticket_id
w2022-03-15 18:12:52 DEBUG createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'ticket ticket1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Comment.ticket,tableName=ticket,tableAlias=ticket1_,origin=comment comment0_,columns={comment0_.ticket_id,className=ru.edu.helpdesk.entity.Ticket}}

w2022-03-15 18:12:52 DEBUG Resolved : generatedAlias0 -> comment0_.id
w2022-03-15 18:12:52 DEBUG Resolved : generatedAlias1 -> ticket1_.id
w2022-03-15 18:12:52 DEBUG getDataType() : id -> org.hibernate.type.LongType@83847d0
w2022-03-15 18:12:52 DEBUG Resolved : generatedAlias1.id -> ticket1_.id
w2022-03-15 18:12:52 DEBUG select : finishing up [level=1, statement=select]
w2022-03-15 18:12:52 DEBUG processQuery() :  ( SELECT ( {select clause} comment0_.id ) ( FromClause{level=1} ( comment comment0_ ticket ticket1_ ) ) ( where ( = ( ticket1_.id ticket1_.id id ) ? ) ) )
w2022-03-15 18:12:52 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Comment): [comment]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.Comment)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.Ticket)
          | path: generatedAlias1.id
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.Ticket)
          |  | originalText: generatedAlias1
          |  \-IdentNode
          |    persister: null
          |    originalText: id
          \-ParameterNode

w2022-03-15 18:12:52 DEBUG Using FROM fragment [comment comment0_]
w2022-03-15 18:12:52 DEBUG Using FROM fragment [left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id]
w2022-03-15 18:12:52 DEBUG select >> end [level=1, statement=select]
w2022-03-15 18:12:52 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (ticket,comment)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'comment0_.id as id1_0_' {alias=generatedAlias0, className=ru.edu.helpdesk.entity.Comment, tableAlias=comment0_}
    |  \-[SQL_TOKEN] SqlFragment: 'comment0_.message as message2_0_, comment0_.ticket_id as ticket_i3_0_, comment0_.user_id as user_id4_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[ticket1_, comment0_], fromElementsByPath=[generatedAlias0.ticket], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'comment comment0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=comment,tableAlias=comment0_,origin=null,columns={,className=ru.edu.helpdesk.entity.Comment}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Comment.ticket,tableName=ticket,tableAlias=ticket1_,origin=comment comment0_,columns={comment0_.ticket_id,className=ru.edu.helpdesk.entity.Ticket}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'ticket1_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias1.id,tableAlias=ticket1_,className=ru.edu.helpdesk.entity.Ticket,classAlias=generatedAlias1}
          |  +-[ALIAS_REF] IdentNode: 'ticket1_.id' {alias=generatedAlias1, className=ru.edu.helpdesk.entity.Ticket, tableAlias=ticket1_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LongType@83847d0}

w2022-03-15 18:12:52 DEBUG throwQueryException() : no errors
w2022-03-15 18:12:52 DEBUG HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Comment as generatedAlias0 left join generatedAlias0.ticket as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 18:12:52 DEBUG SQL: select comment0_.id as id1_0_, comment0_.message as message2_0_, comment0_.ticket_id as ticket_i3_0_, comment0_.user_id as user_id4_0_ from comment comment0_ left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id where ticket1_.id=?
w2022-03-15 18:12:52 DEBUG throwQueryException() : no errors
w2022-03-15 18:12:52 DEBUG select comment0_.id as id1_0_, comment0_.message as message2_0_, comment0_.ticket_id as ticket_i3_0_, comment0_.user_id as user_id4_0_ from comment comment0_ left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id where ticket1_.id=?
w2022-03-15 18:12:52 DEBUG Result set row: 0
w2022-03-15 18:12:52 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Comment#1]
w2022-03-15 18:12:52 DEBUG Result set row: 1
w2022-03-15 18:12:52 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Comment#3]
w2022-03-15 18:12:52 DEBUG Result set row: 2
w2022-03-15 18:12:52 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Comment#4]
w2022-03-15 18:12:52 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Comment#1]
w2022-03-15 18:12:52 DEBUG Processing attribute `message` : value = comment ticket1
w2022-03-15 18:12:52 DEBUG Attribute (`message`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:52 DEBUG Processing attribute `ticket` : value = 1
w2022-03-15 18:12:52 DEBUG Attribute (`ticket`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:52 DEBUG select ticket0_.id as id1_1_0_, ticket0_.client_id as client_i4_1_0_, ticket0_.status as status2_1_0_, ticket0_.support_id as support_5_1_0_, ticket0_.title as title3_1_0_, user1_.id as id1_2_1_, user1_.first_name as first_na2_2_1_, user1_.last_name as last_nam3_2_1_, user1_.login as login4_2_1_, user1_.password as password5_2_1_, user1_.role as role6_2_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id left outer join user user2_ on ticket0_.support_id=user2_.id where ticket0_.id=?
w2022-03-15 18:12:52 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 18:12:52 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 18:12:52 DEBUG Processing attribute `client` : value = 1
w2022-03-15 18:12:52 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:52 DEBUG Processing attribute `status` : value = WORKING
w2022-03-15 18:12:52 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:52 DEBUG Processing attribute `support` : value = 2
w2022-03-15 18:12:52 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:52 DEBUG Processing attribute `title` : value = Hello user1
w2022-03-15 18:12:52 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:52 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 18:12:52 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#1]
w2022-03-15 18:12:52 DEBUG Processing attribute `firstName` : value = admin
w2022-03-15 18:12:52 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:52 DEBUG Processing attribute `lastName` : value = admin
w2022-03-15 18:12:52 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:52 DEBUG Processing attribute `login` : value = admin
w2022-03-15 18:12:52 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:52 DEBUG Processing attribute `password` : value = admin
w2022-03-15 18:12:52 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:52 DEBUG Processing attribute `role` : value = ADMIN
w2022-03-15 18:12:52 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:52 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#1]
w2022-03-15 18:12:52 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#2]
w2022-03-15 18:12:52 DEBUG Processing attribute `firstName` : value = support
w2022-03-15 18:12:52 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:52 DEBUG Processing attribute `lastName` : value = support
w2022-03-15 18:12:52 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:52 DEBUG Processing attribute `login` : value = support
w2022-03-15 18:12:52 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:52 DEBUG Processing attribute `password` : value = support
w2022-03-15 18:12:52 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:52 DEBUG Processing attribute `role` : value = SUPPORT
w2022-03-15 18:12:52 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:52 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#2]
w2022-03-15 18:12:52 DEBUG Done entity load : ru.edu.helpdesk.entity.Ticket#1
w2022-03-15 18:12:52 DEBUG Processing attribute `user` : value = 3
w2022-03-15 18:12:52 DEBUG Attribute (`user`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:52 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 18:12:52 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 18:12:52 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#3]
w2022-03-15 18:12:52 DEBUG Processing attribute `firstName` : value = user1
w2022-03-15 18:12:52 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:52 DEBUG Processing attribute `lastName` : value = user1
w2022-03-15 18:12:52 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:52 DEBUG Processing attribute `login` : value = user1
w2022-03-15 18:12:52 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:52 DEBUG Processing attribute `password` : value = user1
w2022-03-15 18:12:52 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:52 DEBUG Processing attribute `role` : value = USER
w2022-03-15 18:12:52 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:52 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#3]
w2022-03-15 18:12:52 DEBUG Done entity load : ru.edu.helpdesk.entity.User#3
w2022-03-15 18:12:52 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Comment#1]
w2022-03-15 18:12:52 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Comment#3]
w2022-03-15 18:12:52 DEBUG Processing attribute `message` : value = comment ticket11
w2022-03-15 18:12:52 DEBUG Attribute (`message`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:52 DEBUG Processing attribute `ticket` : value = 1
w2022-03-15 18:12:52 DEBUG Attribute (`ticket`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:52 DEBUG Processing attribute `user` : value = 2
w2022-03-15 18:12:52 DEBUG Attribute (`user`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:52 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Comment#3]
w2022-03-15 18:12:52 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Comment#4]
w2022-03-15 18:12:52 DEBUG Processing attribute `message` : value = comment ticket111
w2022-03-15 18:12:52 DEBUG Attribute (`message`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:52 DEBUG Processing attribute `ticket` : value = 1
w2022-03-15 18:12:52 DEBUG Attribute (`ticket`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:52 DEBUG Processing attribute `user` : value = 2
w2022-03-15 18:12:52 DEBUG Attribute (`user`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:52 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Comment#4]
w2022-03-15 18:12:54 DEBUG Rendered criteria query -> select generatedAlias0 from Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 18:12:54 DEBUG select ticket0_.id as id1_1_, ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id where user1_.id=?
w2022-03-15 18:12:54 DEBUG Result set row: 0
w2022-03-15 18:12:54 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 18:12:54 DEBUG Result set row: 1
w2022-03-15 18:12:54 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 18:12:54 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 18:12:54 DEBUG Processing attribute `client` : value = 1
w2022-03-15 18:12:54 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:54 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 18:12:54 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 18:12:54 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#1]
w2022-03-15 18:12:54 DEBUG Processing attribute `firstName` : value = admin
w2022-03-15 18:12:54 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:54 DEBUG Processing attribute `lastName` : value = admin
w2022-03-15 18:12:54 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:54 DEBUG Processing attribute `login` : value = admin
w2022-03-15 18:12:54 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:54 DEBUG Processing attribute `password` : value = admin
w2022-03-15 18:12:54 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:54 DEBUG Processing attribute `role` : value = ADMIN
w2022-03-15 18:12:54 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:54 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#1]
w2022-03-15 18:12:54 DEBUG Done entity load : ru.edu.helpdesk.entity.User#1
w2022-03-15 18:12:54 DEBUG Processing attribute `status` : value = WORKING
w2022-03-15 18:12:54 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:54 DEBUG Processing attribute `support` : value = 2
w2022-03-15 18:12:54 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:54 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 18:12:54 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 18:12:54 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#2]
w2022-03-15 18:12:54 DEBUG Processing attribute `firstName` : value = support
w2022-03-15 18:12:54 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:54 DEBUG Processing attribute `lastName` : value = support
w2022-03-15 18:12:54 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:54 DEBUG Processing attribute `login` : value = support
w2022-03-15 18:12:54 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:54 DEBUG Processing attribute `password` : value = support
w2022-03-15 18:12:54 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:54 DEBUG Processing attribute `role` : value = SUPPORT
w2022-03-15 18:12:54 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:54 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#2]
w2022-03-15 18:12:54 DEBUG Done entity load : ru.edu.helpdesk.entity.User#2
w2022-03-15 18:12:54 DEBUG Processing attribute `title` : value = Hello user1
w2022-03-15 18:12:54 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:54 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 18:12:54 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 18:12:54 DEBUG Processing attribute `client` : value = 1
w2022-03-15 18:12:54 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:54 DEBUG Processing attribute `status` : value = OPEN
w2022-03-15 18:12:54 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:54 DEBUG Processing attribute `support` : value = 2
w2022-03-15 18:12:54 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:54 DEBUG Processing attribute `title` : value = Title2
w2022-03-15 18:12:54 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:54 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 18:12:56 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 18:12:56 DEBUG begin
w2022-03-15 18:12:56 DEBUG committing
w2022-03-15 18:12:56 DEBUG Rendered criteria query -> select generatedAlias0 from Comment as generatedAlias0 left join generatedAlias0.ticket as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 18:12:56 DEBUG select comment0_.id as id1_0_, comment0_.message as message2_0_, comment0_.ticket_id as ticket_i3_0_, comment0_.user_id as user_id4_0_ from comment comment0_ left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id where ticket1_.id=?
w2022-03-15 18:12:56 DEBUG Result set row: 0
w2022-03-15 18:12:56 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Comment#2]
w2022-03-15 18:12:56 DEBUG Result set row: 1
w2022-03-15 18:12:56 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Comment#5]
w2022-03-15 18:12:56 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Comment#2]
w2022-03-15 18:12:56 DEBUG Processing attribute `message` : value = comment ticket2
w2022-03-15 18:12:56 DEBUG Attribute (`message`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:56 DEBUG Processing attribute `ticket` : value = 2
w2022-03-15 18:12:56 DEBUG Attribute (`ticket`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:56 DEBUG select ticket0_.id as id1_1_0_, ticket0_.client_id as client_i4_1_0_, ticket0_.status as status2_1_0_, ticket0_.support_id as support_5_1_0_, ticket0_.title as title3_1_0_, user1_.id as id1_2_1_, user1_.first_name as first_na2_2_1_, user1_.last_name as last_nam3_2_1_, user1_.login as login4_2_1_, user1_.password as password5_2_1_, user1_.role as role6_2_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id left outer join user user2_ on ticket0_.support_id=user2_.id where ticket0_.id=?
w2022-03-15 18:12:56 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 18:12:56 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 18:12:56 DEBUG Processing attribute `client` : value = 1
w2022-03-15 18:12:56 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:56 DEBUG Processing attribute `status` : value = OPEN
w2022-03-15 18:12:56 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:56 DEBUG Processing attribute `support` : value = 2
w2022-03-15 18:12:56 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:56 DEBUG Processing attribute `title` : value = Title2
w2022-03-15 18:12:56 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:56 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 18:12:56 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#1]
w2022-03-15 18:12:56 DEBUG Processing attribute `firstName` : value = admin
w2022-03-15 18:12:56 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:56 DEBUG Processing attribute `lastName` : value = admin
w2022-03-15 18:12:56 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:56 DEBUG Processing attribute `login` : value = admin
w2022-03-15 18:12:56 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:56 DEBUG Processing attribute `password` : value = admin
w2022-03-15 18:12:56 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:56 DEBUG Processing attribute `role` : value = ADMIN
w2022-03-15 18:12:56 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:56 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#1]
w2022-03-15 18:12:56 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#2]
w2022-03-15 18:12:56 DEBUG Processing attribute `firstName` : value = support
w2022-03-15 18:12:56 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:56 DEBUG Processing attribute `lastName` : value = support
w2022-03-15 18:12:56 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:56 DEBUG Processing attribute `login` : value = support
w2022-03-15 18:12:56 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:56 DEBUG Processing attribute `password` : value = support
w2022-03-15 18:12:56 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:56 DEBUG Processing attribute `role` : value = SUPPORT
w2022-03-15 18:12:56 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:56 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#2]
w2022-03-15 18:12:56 DEBUG Done entity load : ru.edu.helpdesk.entity.Ticket#2
w2022-03-15 18:12:56 DEBUG Processing attribute `user` : value = 3
w2022-03-15 18:12:56 DEBUG Attribute (`user`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:56 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 18:12:56 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 18:12:56 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#3]
w2022-03-15 18:12:56 DEBUG Processing attribute `firstName` : value = user1
w2022-03-15 18:12:56 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:56 DEBUG Processing attribute `lastName` : value = user1
w2022-03-15 18:12:56 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:56 DEBUG Processing attribute `login` : value = user1
w2022-03-15 18:12:56 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:56 DEBUG Processing attribute `password` : value = user1
w2022-03-15 18:12:56 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:56 DEBUG Processing attribute `role` : value = USER
w2022-03-15 18:12:56 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:56 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#3]
w2022-03-15 18:12:56 DEBUG Done entity load : ru.edu.helpdesk.entity.User#3
w2022-03-15 18:12:56 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Comment#2]
w2022-03-15 18:12:56 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Comment#5]
w2022-03-15 18:12:56 DEBUG Processing attribute `message` : value = comment ticket22
w2022-03-15 18:12:56 DEBUG Attribute (`message`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:56 DEBUG Processing attribute `ticket` : value = 2
w2022-03-15 18:12:56 DEBUG Attribute (`ticket`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:56 DEBUG Processing attribute `user` : value = 2
w2022-03-15 18:12:56 DEBUG Attribute (`user`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:56 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Comment#5]
w2022-03-15 18:12:57 DEBUG Rendered criteria query -> select generatedAlias0 from Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 18:12:57 DEBUG select ticket0_.id as id1_1_, ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id where user1_.id=?
w2022-03-15 18:12:57 DEBUG Result set row: 0
w2022-03-15 18:12:57 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 18:12:57 DEBUG Result set row: 1
w2022-03-15 18:12:57 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 18:12:57 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 18:12:57 DEBUG Processing attribute `client` : value = 1
w2022-03-15 18:12:57 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:57 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 18:12:57 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 18:12:57 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#1]
w2022-03-15 18:12:57 DEBUG Processing attribute `firstName` : value = admin
w2022-03-15 18:12:57 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:57 DEBUG Processing attribute `lastName` : value = admin
w2022-03-15 18:12:57 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:57 DEBUG Processing attribute `login` : value = admin
w2022-03-15 18:12:57 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:57 DEBUG Processing attribute `password` : value = admin
w2022-03-15 18:12:57 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:57 DEBUG Processing attribute `role` : value = ADMIN
w2022-03-15 18:12:57 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:57 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#1]
w2022-03-15 18:12:57 DEBUG Done entity load : ru.edu.helpdesk.entity.User#1
w2022-03-15 18:12:57 DEBUG Processing attribute `status` : value = WORKING
w2022-03-15 18:12:57 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:57 DEBUG Processing attribute `support` : value = 2
w2022-03-15 18:12:57 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:57 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 18:12:57 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 18:12:57 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#2]
w2022-03-15 18:12:57 DEBUG Processing attribute `firstName` : value = support
w2022-03-15 18:12:57 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:57 DEBUG Processing attribute `lastName` : value = support
w2022-03-15 18:12:57 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:57 DEBUG Processing attribute `login` : value = support
w2022-03-15 18:12:57 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:57 DEBUG Processing attribute `password` : value = support
w2022-03-15 18:12:57 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:57 DEBUG Processing attribute `role` : value = SUPPORT
w2022-03-15 18:12:57 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:57 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#2]
w2022-03-15 18:12:57 DEBUG Done entity load : ru.edu.helpdesk.entity.User#2
w2022-03-15 18:12:57 DEBUG Processing attribute `title` : value = Hello user1
w2022-03-15 18:12:57 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:57 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 18:12:57 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 18:12:57 DEBUG Processing attribute `client` : value = 1
w2022-03-15 18:12:57 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:57 DEBUG Processing attribute `status` : value = OPEN
w2022-03-15 18:12:57 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:57 DEBUG Processing attribute `support` : value = 2
w2022-03-15 18:12:57 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:57 DEBUG Processing attribute `title` : value = Title2
w2022-03-15 18:12:57 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 18:12:57 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 18:14:28 DEBUG Rendered criteria query -> select generatedAlias0 from Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 18:14:28 DEBUG select ticket0_.id as id1_1_, ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id where user1_.id=?
w2022-03-15 18:14:28 DEBUG Result set row: 0
w2022-03-15 18:14:28 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 18:14:28 DEBUG Result set row: 1
w2022-03-15 18:14:28 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 18:14:28 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 18:14:28 DEBUG Processing attribute `client` : value = 1
w2022-03-15 18:14:28 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 18:14:28 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 18:14:28 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 18:14:28 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#1]
w2022-03-15 18:14:28 DEBUG Processing attribute `firstName` : value = admin
w2022-03-15 18:14:28 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:14:28 DEBUG Processing attribute `lastName` : value = admin
w2022-03-15 18:14:28 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:14:28 DEBUG Processing attribute `login` : value = admin
w2022-03-15 18:14:28 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 18:14:28 DEBUG Processing attribute `password` : value = admin
w2022-03-15 18:14:28 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 18:14:28 DEBUG Processing attribute `role` : value = ADMIN
w2022-03-15 18:14:28 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 18:14:28 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#1]
w2022-03-15 18:14:28 DEBUG Done entity load : ru.edu.helpdesk.entity.User#1
w2022-03-15 18:14:28 DEBUG Processing attribute `status` : value = WORKING
w2022-03-15 18:14:28 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 18:14:28 DEBUG Processing attribute `support` : value = 2
w2022-03-15 18:14:28 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 18:14:28 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 18:14:28 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 18:14:28 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#2]
w2022-03-15 18:14:28 DEBUG Processing attribute `firstName` : value = support
w2022-03-15 18:14:28 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:14:28 DEBUG Processing attribute `lastName` : value = support
w2022-03-15 18:14:28 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:14:28 DEBUG Processing attribute `login` : value = support
w2022-03-15 18:14:28 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 18:14:28 DEBUG Processing attribute `password` : value = support
w2022-03-15 18:14:28 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 18:14:28 DEBUG Processing attribute `role` : value = SUPPORT
w2022-03-15 18:14:28 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 18:14:28 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#2]
w2022-03-15 18:14:28 DEBUG Done entity load : ru.edu.helpdesk.entity.User#2
w2022-03-15 18:14:28 DEBUG Processing attribute `title` : value = Hello user1
w2022-03-15 18:14:28 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 18:14:28 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 18:14:28 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 18:14:28 DEBUG Processing attribute `client` : value = 1
w2022-03-15 18:14:28 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 18:14:28 DEBUG Processing attribute `status` : value = OPEN
w2022-03-15 18:14:28 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 18:14:28 DEBUG Processing attribute `support` : value = 2
w2022-03-15 18:14:28 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 18:14:28 DEBUG Processing attribute `title` : value = Title2
w2022-03-15 18:14:28 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 18:14:28 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 18:14:45 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 18:14:45 DEBUG begin
w2022-03-15 18:14:45 DEBUG committing
w2022-03-15 18:14:45 DEBUG Rendered criteria query -> select generatedAlias0 from Comment as generatedAlias0 left join generatedAlias0.ticket as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 18:14:45 DEBUG select comment0_.id as id1_0_, comment0_.message as message2_0_, comment0_.ticket_id as ticket_i3_0_, comment0_.user_id as user_id4_0_ from comment comment0_ left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id where ticket1_.id=?
w2022-03-15 18:14:45 DEBUG Result set row: 0
w2022-03-15 18:14:45 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Comment#2]
w2022-03-15 18:14:45 DEBUG Result set row: 1
w2022-03-15 18:14:45 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Comment#5]
w2022-03-15 18:14:45 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Comment#2]
w2022-03-15 18:14:45 DEBUG Processing attribute `message` : value = comment ticket2
w2022-03-15 18:14:45 DEBUG Attribute (`message`)  - enhanced for lazy-loading? - false
w2022-03-15 18:14:45 DEBUG Processing attribute `ticket` : value = 2
w2022-03-15 18:14:45 DEBUG Attribute (`ticket`)  - enhanced for lazy-loading? - false
w2022-03-15 18:14:45 DEBUG select ticket0_.id as id1_1_0_, ticket0_.client_id as client_i4_1_0_, ticket0_.status as status2_1_0_, ticket0_.support_id as support_5_1_0_, ticket0_.title as title3_1_0_, user1_.id as id1_2_1_, user1_.first_name as first_na2_2_1_, user1_.last_name as last_nam3_2_1_, user1_.login as login4_2_1_, user1_.password as password5_2_1_, user1_.role as role6_2_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id left outer join user user2_ on ticket0_.support_id=user2_.id where ticket0_.id=?
w2022-03-15 18:14:45 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 18:14:45 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 18:14:45 DEBUG Processing attribute `client` : value = 1
w2022-03-15 18:14:45 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 18:14:45 DEBUG Processing attribute `status` : value = OPEN
w2022-03-15 18:14:45 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 18:14:45 DEBUG Processing attribute `support` : value = 2
w2022-03-15 18:14:45 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 18:14:45 DEBUG Processing attribute `title` : value = Title2
w2022-03-15 18:14:45 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 18:14:45 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 18:14:45 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#1]
w2022-03-15 18:14:45 DEBUG Processing attribute `firstName` : value = admin
w2022-03-15 18:14:45 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:14:45 DEBUG Processing attribute `lastName` : value = admin
w2022-03-15 18:14:45 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:14:45 DEBUG Processing attribute `login` : value = admin
w2022-03-15 18:14:45 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 18:14:45 DEBUG Processing attribute `password` : value = admin
w2022-03-15 18:14:45 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 18:14:45 DEBUG Processing attribute `role` : value = ADMIN
w2022-03-15 18:14:45 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 18:14:45 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#1]
w2022-03-15 18:14:45 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#2]
w2022-03-15 18:14:45 DEBUG Processing attribute `firstName` : value = support
w2022-03-15 18:14:45 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:14:45 DEBUG Processing attribute `lastName` : value = support
w2022-03-15 18:14:45 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:14:45 DEBUG Processing attribute `login` : value = support
w2022-03-15 18:14:45 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 18:14:45 DEBUG Processing attribute `password` : value = support
w2022-03-15 18:14:45 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 18:14:45 DEBUG Processing attribute `role` : value = SUPPORT
w2022-03-15 18:14:45 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 18:14:45 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#2]
w2022-03-15 18:14:45 DEBUG Done entity load : ru.edu.helpdesk.entity.Ticket#2
w2022-03-15 18:14:45 DEBUG Processing attribute `user` : value = 3
w2022-03-15 18:14:45 DEBUG Attribute (`user`)  - enhanced for lazy-loading? - false
w2022-03-15 18:14:45 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 18:14:45 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 18:14:45 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#3]
w2022-03-15 18:14:45 DEBUG Processing attribute `firstName` : value = user1
w2022-03-15 18:14:45 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:14:45 DEBUG Processing attribute `lastName` : value = user1
w2022-03-15 18:14:45 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:14:45 DEBUG Processing attribute `login` : value = user1
w2022-03-15 18:14:45 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 18:14:45 DEBUG Processing attribute `password` : value = user1
w2022-03-15 18:14:45 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 18:14:45 DEBUG Processing attribute `role` : value = USER
w2022-03-15 18:14:45 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 18:14:45 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#3]
w2022-03-15 18:14:45 DEBUG Done entity load : ru.edu.helpdesk.entity.User#3
w2022-03-15 18:14:45 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Comment#2]
w2022-03-15 18:14:45 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Comment#5]
w2022-03-15 18:14:45 DEBUG Processing attribute `message` : value = comment ticket22
w2022-03-15 18:14:45 DEBUG Attribute (`message`)  - enhanced for lazy-loading? - false
w2022-03-15 18:14:45 DEBUG Processing attribute `ticket` : value = 2
w2022-03-15 18:14:45 DEBUG Attribute (`ticket`)  - enhanced for lazy-loading? - false
w2022-03-15 18:14:45 DEBUG Processing attribute `user` : value = 2
w2022-03-15 18:14:45 DEBUG Attribute (`user`)  - enhanced for lazy-loading? - false
w2022-03-15 18:14:45 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Comment#5]
w2022-03-15 18:23:35 DEBUG Logging Provider: org.jboss.logging.Log4j2LoggerProvider
w2022-03-15 18:23:35 DEBUG PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@7aa52917
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/%d0%9e%d0%bb%d1%8c%d0%b3%d0%b0/Desktop/Java/Project/Project1/helpdeskproject/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		ru.edu.helpdesk.entity.Comment
		ru.edu.helpdesk.entity.Ticket
		ru.edu.helpdesk.entity.User]
	Mapping files names []
	Properties []
w2022-03-15 18:23:35 DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
w2022-03-15 18:23:35 DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
w2022-03-15 18:23:35 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
w2022-03-15 18:23:35 INFO  HHH000412: Hibernate ORM core version 5.6.5.Final
w2022-03-15 18:23:35 DEBUG HHH000206: hibernate.properties not found
w2022-03-15 18:23:35 DEBUG Overriding existing service binding [org.hibernate.secure.spi.JaccService]
w2022-03-15 18:23:35 DEBUG Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
w2022-03-15 18:23:35 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
w2022-03-15 18:23:35 INFO  HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
w2022-03-15 18:23:35 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@362edd0a
w2022-03-15 18:23:35 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@362edd0a
w2022-03-15 18:23:35 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@362edd0a
w2022-03-15 18:23:35 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7d113337
w2022-03-15 18:23:35 DEBUG Adding type registration true_false -> org.hibernate.type.TrueFalseType@6f6c0414
w2022-03-15 18:23:35 DEBUG Adding type registration yes_no -> org.hibernate.type.YesNoType@22066f41
w2022-03-15 18:23:35 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@25fac090
w2022-03-15 18:23:35 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@25fac090
w2022-03-15 18:23:35 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@25fac090
w2022-03-15 18:23:35 DEBUG Adding type registration character -> org.hibernate.type.CharacterType@6ec2c5
w2022-03-15 18:23:35 DEBUG Adding type registration char -> org.hibernate.type.CharacterType@6ec2c5
w2022-03-15 18:23:35 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6ec2c5
w2022-03-15 18:23:35 DEBUG Adding type registration short -> org.hibernate.type.ShortType@12cfd7ce
w2022-03-15 18:23:35 DEBUG Adding type registration short -> org.hibernate.type.ShortType@12cfd7ce
w2022-03-15 18:23:35 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.ShortType@12cfd7ce
w2022-03-15 18:23:35 DEBUG Adding type registration integer -> org.hibernate.type.IntegerType@3b2bce48
w2022-03-15 18:23:35 DEBUG Adding type registration int -> org.hibernate.type.IntegerType@3b2bce48
w2022-03-15 18:23:35 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3b2bce48
w2022-03-15 18:23:35 DEBUG Adding type registration long -> org.hibernate.type.LongType@24fc305f
w2022-03-15 18:23:35 DEBUG Adding type registration long -> org.hibernate.type.LongType@24fc305f
w2022-03-15 18:23:35 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.LongType@24fc305f
w2022-03-15 18:23:35 DEBUG Adding type registration float -> org.hibernate.type.FloatType@56d0b486
w2022-03-15 18:23:35 DEBUG Adding type registration float -> org.hibernate.type.FloatType@56d0b486
w2022-03-15 18:23:35 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.FloatType@56d0b486
w2022-03-15 18:23:35 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@7d8d58b8
w2022-03-15 18:23:35 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@7d8d58b8
w2022-03-15 18:23:35 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7d8d58b8
w2022-03-15 18:23:35 DEBUG Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@63ba126c
w2022-03-15 18:23:35 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@63ba126c
w2022-03-15 18:23:35 DEBUG Adding type registration big_integer -> org.hibernate.type.BigIntegerType@552d07a9
w2022-03-15 18:23:35 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@552d07a9
w2022-03-15 18:23:35 DEBUG Adding type registration string -> org.hibernate.type.StringType@3689d97f
w2022-03-15 18:23:35 DEBUG Adding type registration java.lang.String -> org.hibernate.type.StringType@3689d97f
w2022-03-15 18:23:35 DEBUG Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7b7a578
w2022-03-15 18:23:35 DEBUG Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5aa43de3
w2022-03-15 18:23:35 DEBUG Adding type registration url -> org.hibernate.type.UrlType@3ab28cbc
w2022-03-15 18:23:35 DEBUG Adding type registration java.net.URL -> org.hibernate.type.UrlType@3ab28cbc
w2022-03-15 18:23:35 DEBUG Adding type registration Duration -> org.hibernate.type.DurationType@a42ed55
w2022-03-15 18:23:35 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.DurationType@a42ed55
w2022-03-15 18:23:35 DEBUG Adding type registration Instant -> org.hibernate.type.InstantType@733b2c92
w2022-03-15 18:23:35 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.InstantType@733b2c92
w2022-03-15 18:23:35 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1f410e36
w2022-03-15 18:23:35 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1f410e36
w2022-03-15 18:23:35 DEBUG Adding type registration LocalDate -> org.hibernate.type.LocalDateType@22d333d5
w2022-03-15 18:23:35 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@22d333d5
w2022-03-15 18:23:35 DEBUG Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@48e0fb9
w2022-03-15 18:23:35 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@48e0fb9
w2022-03-15 18:23:35 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2ccbb1f7
w2022-03-15 18:23:35 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2ccbb1f7
w2022-03-15 18:23:35 DEBUG Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@48dab76b
w2022-03-15 18:23:35 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@48dab76b
w2022-03-15 18:23:35 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@239efcb7
w2022-03-15 18:23:35 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@239efcb7
w2022-03-15 18:23:35 DEBUG Adding type registration date -> org.hibernate.type.DateType@3edd217f
w2022-03-15 18:23:35 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.DateType@3edd217f
w2022-03-15 18:23:35 DEBUG Adding type registration time -> org.hibernate.type.TimeType@4913655b
w2022-03-15 18:23:35 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4913655b
w2022-03-15 18:23:35 DEBUG Adding type registration timestamp -> org.hibernate.type.TimestampType@234f846
w2022-03-15 18:23:35 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@234f846
w2022-03-15 18:23:35 DEBUG Adding type registration java.util.Date -> org.hibernate.type.TimestampType@234f846
w2022-03-15 18:23:35 DEBUG Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4b05c7e6
w2022-03-15 18:23:35 DEBUG Adding type registration calendar -> org.hibernate.type.CalendarType@556f356e
w2022-03-15 18:23:35 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@556f356e
w2022-03-15 18:23:35 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@556f356e
w2022-03-15 18:23:35 DEBUG Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@e0811eb
w2022-03-15 18:23:35 DEBUG Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@3cb3f31d
w2022-03-15 18:23:35 DEBUG Adding type registration locale -> org.hibernate.type.LocaleType@50e426a
w2022-03-15 18:23:35 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@50e426a
w2022-03-15 18:23:35 DEBUG Adding type registration currency -> org.hibernate.type.CurrencyType@567cb79
w2022-03-15 18:23:35 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@567cb79
w2022-03-15 18:23:35 DEBUG Adding type registration timezone -> org.hibernate.type.TimeZoneType@451efef8
w2022-03-15 18:23:35 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@451efef8
w2022-03-15 18:23:35 DEBUG Adding type registration class -> org.hibernate.type.ClassType@50a36034
w2022-03-15 18:23:35 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.ClassType@50a36034
w2022-03-15 18:23:35 DEBUG Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7feb6aaf
w2022-03-15 18:23:35 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7feb6aaf
w2022-03-15 18:23:35 DEBUG Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@47624f1c
w2022-03-15 18:23:35 DEBUG Adding type registration binary -> org.hibernate.type.BinaryType@1a6625cf
w2022-03-15 18:23:35 DEBUG Adding type registration byte[] -> org.hibernate.type.BinaryType@1a6625cf
w2022-03-15 18:23:35 DEBUG Adding type registration [B -> org.hibernate.type.BinaryType@1a6625cf
w2022-03-15 18:23:35 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@28ab6c7b
w2022-03-15 18:23:35 DEBUG Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@28ab6c7b
w2022-03-15 18:23:35 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@28ab6c7b
w2022-03-15 18:23:36 DEBUG Adding type registration row_version -> org.hibernate.type.RowVersionType@350a846
w2022-03-15 18:23:36 DEBUG Adding type registration image -> org.hibernate.type.ImageType@7fe994ae
w2022-03-15 18:23:36 DEBUG Adding type registration characters -> org.hibernate.type.CharArrayType@10380f3e
w2022-03-15 18:23:36 DEBUG Adding type registration char[] -> org.hibernate.type.CharArrayType@10380f3e
w2022-03-15 18:23:36 DEBUG Adding type registration [C -> org.hibernate.type.CharArrayType@10380f3e
w2022-03-15 18:23:36 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@bd7b8bf
w2022-03-15 18:23:36 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@bd7b8bf
w2022-03-15 18:23:36 DEBUG Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@bd7b8bf
w2022-03-15 18:23:36 DEBUG Adding type registration text -> org.hibernate.type.TextType@16eec75
w2022-03-15 18:23:36 DEBUG Adding type registration ntext -> org.hibernate.type.NTextType@3aca79ea
w2022-03-15 18:23:36 DEBUG Adding type registration blob -> org.hibernate.type.BlobType@1ff4c880
w2022-03-15 18:23:36 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1ff4c880
w2022-03-15 18:23:36 DEBUG Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1a009173
w2022-03-15 18:23:36 DEBUG Adding type registration clob -> org.hibernate.type.ClobType@681e1cd6
w2022-03-15 18:23:36 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@681e1cd6
w2022-03-15 18:23:36 DEBUG Adding type registration nclob -> org.hibernate.type.NClobType@714febd2
w2022-03-15 18:23:36 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@714febd2
w2022-03-15 18:23:36 DEBUG Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@48390971
w2022-03-15 18:23:36 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@159d5dcc
w2022-03-15 18:23:36 DEBUG Adding type registration serializable -> org.hibernate.type.SerializableType@28dc495f
w2022-03-15 18:23:36 DEBUG Adding type registration object -> org.hibernate.type.ObjectType@114cfc1c
w2022-03-15 18:23:36 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@114cfc1c
w2022-03-15 18:23:36 DEBUG Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@13308feb
w2022-03-15 18:23:36 DEBUG Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@65ea2d8d
w2022-03-15 18:23:36 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1523d79f
w2022-03-15 18:23:36 DEBUG Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2e9c0478
w2022-03-15 18:23:36 DEBUG Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@39c48997
w2022-03-15 18:23:36 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@df65d67
w2022-03-15 18:23:36 DEBUG Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6e2ec69
w2022-03-15 18:23:36 DEBUG Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@48138709
w2022-03-15 18:23:36 INFO  HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
w2022-03-15 18:23:36 DEBUG Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@75a33372] into BootstrapContext; was [null]
w2022-03-15 18:23:36 DEBUG ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@75a33372) [was null]
w2022-03-15 18:23:36 DEBUG Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@60033847] into BootstrapContext; was [null]
w2022-03-15 18:23:36 DEBUG Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@13d2b2b7] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@1f6c2b6e]
w2022-03-15 18:23:36 DEBUG Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@75a33372]
w2022-03-15 18:23:36 DEBUG ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@75a33372]
w2022-03-15 18:23:36 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
w2022-03-15 18:23:36 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
w2022-03-15 18:23:36 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
w2022-03-15 18:23:36 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
w2022-03-15 18:23:36 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
w2022-03-15 18:23:36 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
w2022-03-15 18:23:36 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
w2022-03-15 18:23:36 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
w2022-03-15 18:23:36 DEBUG Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
w2022-03-15 18:23:36 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
w2022-03-15 18:23:36 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
w2022-03-15 18:23:36 DEBUG Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
w2022-03-15 18:23:36 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
w2022-03-15 18:23:36 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
w2022-03-15 18:23:36 DEBUG Database ->
       name : SQLite
    version : 3.36.0
      major : 3
      minor : 36
w2022-03-15 18:23:36 DEBUG Driver ->
       name : SQLite JDBC
    version : 3.36.0.3
      major : 3
      minor : 36
w2022-03-15 18:23:36 DEBUG JDBC version : 2.1
w2022-03-15 18:23:36 INFO  HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
w2022-03-15 18:23:36 DEBUG JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
w2022-03-15 18:23:36 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
w2022-03-15 18:23:36 DEBUG HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [2] less than 4
w2022-03-15 18:23:36 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@64d09606] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@154d13d0]
w2022-03-15 18:23:36 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
w2022-03-15 18:23:36 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.Comment
w2022-03-15 18:23:36 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 18:23:36 DEBUG Import with entity name Comment
w2022-03-15 18:23:36 DEBUG Bind entity ru.edu.helpdesk.entity.Comment on table comment
w2022-03-15 18:23:36 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 18:23:36 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Comment] is safe
w2022-03-15 18:23:36 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Comment
w2022-03-15 18:23:36 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 18:23:36 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Comment:id]
w2022-03-15 18:23:36 DEBUG building SimpleValue for id
w2022-03-15 18:23:36 DEBUG Building property id
w2022-03-15 18:23:36 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 18:23:36 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=message, insertable=true, updatable=true, unique=false}
w2022-03-15 18:23:36 DEBUG MetadataSourceProcessor property message with lazy=false
w2022-03-15 18:23:36 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Comment:message]
w2022-03-15 18:23:36 DEBUG building SimpleValue for message
w2022-03-15 18:23:36 DEBUG Building property message
w2022-03-15 18:23:36 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 18:23:36 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=ticket, insertable=true, updatable=true, unique=false}
w2022-03-15 18:23:36 DEBUG Building property ticket
w2022-03-15 18:23:36 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 18:23:36 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=user, insertable=true, updatable=true, unique=false}
w2022-03-15 18:23:36 DEBUG Building property user
w2022-03-15 18:23:36 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 18:23:36 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 18:23:36 DEBUG Import with entity name Ticket
w2022-03-15 18:23:36 DEBUG Bind entity ru.edu.helpdesk.entity.Ticket on table ticket
w2022-03-15 18:23:36 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 18:23:36 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Ticket] is safe
w2022-03-15 18:23:36 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Ticket
w2022-03-15 18:23:36 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 18:23:36 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:id]
w2022-03-15 18:23:36 DEBUG building SimpleValue for id
w2022-03-15 18:23:36 DEBUG Building property id
w2022-03-15 18:23:36 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 18:23:36 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 18:23:36 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=client, insertable=true, updatable=true, unique=false}
w2022-03-15 18:23:36 DEBUG Building property client
w2022-03-15 18:23:36 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=status, insertable=true, updatable=true, unique=false}
w2022-03-15 18:23:36 DEBUG MetadataSourceProcessor property status with lazy=false
w2022-03-15 18:23:36 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:status]
w2022-03-15 18:23:36 DEBUG building SimpleValue for status
w2022-03-15 18:23:36 DEBUG Building property status
w2022-03-15 18:23:36 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 18:23:36 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=support, insertable=true, updatable=true, unique=false}
w2022-03-15 18:23:36 DEBUG Building property support
w2022-03-15 18:23:36 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=title, insertable=true, updatable=true, unique=false}
w2022-03-15 18:23:36 DEBUG MetadataSourceProcessor property title with lazy=false
w2022-03-15 18:23:36 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:title]
w2022-03-15 18:23:36 DEBUG building SimpleValue for title
w2022-03-15 18:23:36 DEBUG Building property title
w2022-03-15 18:23:36 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.User
w2022-03-15 18:23:36 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 18:23:36 DEBUG Import with entity name User
w2022-03-15 18:23:36 DEBUG Bind entity ru.edu.helpdesk.entity.User on table user
w2022-03-15 18:23:36 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 18:23:36 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.User] is safe
w2022-03-15 18:23:36 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.User
w2022-03-15 18:23:36 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 18:23:36 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:id]
w2022-03-15 18:23:36 DEBUG building SimpleValue for id
w2022-03-15 18:23:36 DEBUG Building property id
w2022-03-15 18:23:36 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 18:23:36 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
w2022-03-15 18:23:36 DEBUG MetadataSourceProcessor property firstName with lazy=false
w2022-03-15 18:23:36 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:firstName]
w2022-03-15 18:23:36 DEBUG building SimpleValue for firstName
w2022-03-15 18:23:36 DEBUG Building property firstName
w2022-03-15 18:23:36 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
w2022-03-15 18:23:36 DEBUG MetadataSourceProcessor property lastName with lazy=false
w2022-03-15 18:23:36 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:lastName]
w2022-03-15 18:23:36 DEBUG building SimpleValue for lastName
w2022-03-15 18:23:36 DEBUG Building property lastName
w2022-03-15 18:23:36 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=login, insertable=true, updatable=true, unique=false}
w2022-03-15 18:23:36 DEBUG MetadataSourceProcessor property login with lazy=false
w2022-03-15 18:23:36 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:login]
w2022-03-15 18:23:36 DEBUG building SimpleValue for login
w2022-03-15 18:23:36 DEBUG Building property login
w2022-03-15 18:23:36 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
w2022-03-15 18:23:36 DEBUG MetadataSourceProcessor property password with lazy=false
w2022-03-15 18:23:36 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:password]
w2022-03-15 18:23:36 DEBUG building SimpleValue for password
w2022-03-15 18:23:36 DEBUG Building property password
w2022-03-15 18:23:36 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=role, insertable=true, updatable=true, unique=false}
w2022-03-15 18:23:36 DEBUG MetadataSourceProcessor property role with lazy=false
w2022-03-15 18:23:36 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:role]
w2022-03-15 18:23:36 DEBUG building SimpleValue for role
w2022-03-15 18:23:36 DEBUG Building property role
w2022-03-15 18:23:36 DEBUG Starting fillSimpleValue for id
w2022-03-15 18:23:36 DEBUG Starting fillSimpleValue for message
w2022-03-15 18:23:36 DEBUG Starting fillSimpleValue for id
w2022-03-15 18:23:36 DEBUG Starting fillSimpleValue for status
w2022-03-15 18:23:36 DEBUG Starting fillSimpleValue for title
w2022-03-15 18:23:36 DEBUG Starting fillSimpleValue for id
w2022-03-15 18:23:36 DEBUG Starting fillSimpleValue for firstName
w2022-03-15 18:23:36 DEBUG Starting fillSimpleValue for lastName
w2022-03-15 18:23:36 DEBUG Starting fillSimpleValue for login
w2022-03-15 18:23:36 DEBUG Starting fillSimpleValue for password
w2022-03-15 18:23:36 DEBUG Starting fillSimpleValue for role
w2022-03-15 18:23:36 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [comment]
w2022-03-15 18:23:36 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [ticket]
w2022-03-15 18:23:36 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [user]
w2022-03-15 18:23:36 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 18:23:36 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 18:23:36 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 18:23:36 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 18:23:36 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 18:23:36 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 18:23:36 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 18:23:36 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 18:23:36 DEBUG Building session factory
w2022-03-15 18:23:36 DEBUG SessionFactory name : null
w2022-03-15 18:23:36 DEBUG Automatic flush during beforeCompletion(): enabled
w2022-03-15 18:23:36 DEBUG Automatic session close at end of transaction: disabled
w2022-03-15 18:23:36 DEBUG Statistics: disabled
w2022-03-15 18:23:36 DEBUG Deleted entity synthetic identifier rollback: disabled
w2022-03-15 18:23:36 DEBUG Default entity-mode: pojo
w2022-03-15 18:23:36 DEBUG Check Nullability in Core (should be disabled when Bean Validation is on): enabled
w2022-03-15 18:23:36 DEBUG Allow initialization of lazy state outside session : disabled
w2022-03-15 18:23:36 DEBUG Using BatchFetchStyle : LEGACY
w2022-03-15 18:23:36 DEBUG Default batch fetch size: -1
w2022-03-15 18:23:36 DEBUG Maximum outer join fetch depth: null
w2022-03-15 18:23:36 DEBUG Default null ordering: NONE
w2022-03-15 18:23:36 DEBUG Order SQL updates by primary key: disabled
w2022-03-15 18:23:36 DEBUG Order SQL inserts for batching: disabled
w2022-03-15 18:23:36 DEBUG multi-tenancy strategy : NONE
w2022-03-15 18:23:36 DEBUG JTA Track by Thread: enabled
w2022-03-15 18:23:36 DEBUG Query language substitutions: {}
w2022-03-15 18:23:36 DEBUG Named query checking : enabled
w2022-03-15 18:23:36 DEBUG Second-level cache: disabled
w2022-03-15 18:23:36 DEBUG Second-level query cache: disabled
w2022-03-15 18:23:36 DEBUG Second-level query cache factory: null
w2022-03-15 18:23:36 DEBUG Second-level cache region prefix: null
w2022-03-15 18:23:36 DEBUG Optimize second-level cache for minimal puts: disabled
w2022-03-15 18:23:36 DEBUG Structured second-level cache entries: disabled
w2022-03-15 18:23:36 DEBUG Second-level cache direct-reference entries: disabled
w2022-03-15 18:23:36 DEBUG Automatic eviction of collection cache: disabled
w2022-03-15 18:23:36 DEBUG JDBC batch size: 1
w2022-03-15 18:23:36 DEBUG JDBC batch updates for versioned data: enabled
w2022-03-15 18:23:36 DEBUG Scrollable result sets: disabled
w2022-03-15 18:23:36 DEBUG Wrap result sets: disabled
w2022-03-15 18:23:36 DEBUG JDBC3 getGeneratedKeys(): enabled
w2022-03-15 18:23:36 DEBUG JDBC result set fetch size: null
w2022-03-15 18:23:36 DEBUG Connection release mode: ON_CLOSE
w2022-03-15 18:23:36 DEBUG Generate SQL with comments: disabled
w2022-03-15 18:23:36 DEBUG JPA compliance - query : disabled
w2022-03-15 18:23:36 DEBUG JPA compliance - closed-handling : disabled
w2022-03-15 18:23:36 DEBUG JPA compliance - lists : disabled
w2022-03-15 18:23:36 DEBUG JPA compliance - transactions : disabled
w2022-03-15 18:23:36 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 18:23:36 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 18:23:36 DEBUG Session factory constructed with filter configurations : {}
w2022-03-15 18:23:36 DEBUG Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=true, java.specification.version=1.8, file.encoding.pkg=sun.io, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@78ee624, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.SQLiteDialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\charsets.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\cldrdata.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\dnsns.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\jaccess.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\localedata.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\nashorn.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunec.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunmscapi.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\zipfs.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jce.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jfr.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jsse.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\management-agent.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\resources.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\rt.jar;C:\Users\Ольга\Desktop\Java\Project\Project1\helpdeskproject\target\classes;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\2.6.4\spring-boot-starter-data-jpa-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\2.6.4\spring-boot-starter-jdbc-2.6.4.jar;C:\Users\Ольга\.m2\repository\com\zaxxer\HikariCP\4.0.3\HikariCP-4.0.3.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-jdbc\5.3.16\spring-jdbc-5.3.16.jar;C:\Users\Ольга\.m2\repository\jakarta\transaction\jakarta.transaction-api\1.3.3\jakarta.transaction-api-1.3.3.jar;C:\Users\Ольга\.m2\repository\jakarta\persistence\jakarta.persistence-api\2.2.3\jakarta.persistence-api-2.2.3.jar;C:\Users\Ольга\.m2\repository\org\hibernate\hibernate-core\5.6.5.Final\hibernate-core-5.6.5.Final.jar;C:\Users\Ольга\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy\1.11.22\byte-buddy-1.11.22.jar;C:\Users\Ольга\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ольга\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Ольга\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.6\jaxb-runtime-2.3.6.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\txw2\2.3.6\txw2-2.3.6.jar;C:\Users\Ольга\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.12\istack-commons-runtime-3.0.12.jar;C:\Users\Ольга\.m2\repository\com\sun\activation\jakarta.activation\1.2.2\jakarta.activation-1.2.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\data\spring-data-jpa\2.6.2\spring-data-jpa-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\data\spring-data-commons\2.6.2\spring-data-commons-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-orm\5.3.16\spring-orm-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-context\5.3.16\spring-context-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-tx\5.3.16\spring-tx-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-beans\5.3.16\spring-beans-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-aspects\5.3.16\spring-aspects-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-security\2.6.4\spring-boot-starter-security-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter\2.6.4\spring-boot-starter-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-logging\2.6.4\spring-boot-starter-logging-2.6.4.jar;C:\Users\Ольга\.m2\repository\ch\qos\logback\logback-classic\1.2.10\logback-classic-1.2.10.jar;C:\Users\Ольга\.m2\repository\ch\qos\logback\logback-core\1.2.10\logback-core-1.2.10.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.17.1\log4j-to-slf4j-2.17.1.jar;C:\Users\Ольга\.m2\repository\org\slf4j\jul-to-slf4j\1.7.36\jul-to-slf4j-1.7.36.jar;C:\Users\Ольга\.m2\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;C:\Users\Ольга\.m2\repository\org\yaml\snakeyaml\1.29\snakeyaml-1.29.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-aop\5.3.16\spring-aop-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-config\5.6.2\spring-security-config-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-web\5.6.2\spring-security-web-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-expression\5.3.16\spring-expression-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-web\2.6.4\spring-boot-starter-web-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-json\2.6.4\spring-boot-starter-json-2.6.4.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.13.1\jackson-datatype-jdk8-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.13.1\jackson-datatype-jsr310-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.13.1\jackson-module-parameter-names-2.13.1.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\2.6.4\spring-boot-starter-tomcat-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.58\tomcat-embed-core-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\9.0.58\tomcat-embed-el-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.58\tomcat-embed-websocket-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-web\5.3.16\spring-web-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-webmvc\5.3.16\spring-webmvc-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-devtools\2.6.4\spring-boot-devtools-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot\2.6.4\spring-boot-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\2.6.4\spring-boot-autoconfigure-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\xerial\sqlite-jdbc\3.36.0.3\sqlite-jdbc-3.36.0.3.jar;C:\Users\Ольга\.m2\repository\com\zsoltfabok\sqlite-dialect\1.0\sqlite-dialect-1.0.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-aop\2.6.2\spring-boot-starter-aop-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\aspectj\aspectjweaver\1.9.7\aspectjweaver-1.9.7.jar;C:\Users\Ольга\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.3\jakarta.xml.bind-api-2.3.3.jar;C:\Users\Ольга\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.2\jakarta.activation-api-1.2.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-core\5.3.16\spring-core-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-jcl\5.3.16\spring-jcl-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-core\5.6.2\spring-security-core-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-crypto\5.6.2\spring-security-crypto-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\projectlombok\lombok\1.18.22\lombok-1.18.22.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\2.6.4\spring-boot-starter-thymeleaf-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\thymeleaf-spring5\3.0.15.RELEASE\thymeleaf-spring5-3.0.15.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\thymeleaf\3.0.15.RELEASE\thymeleaf-3.0.15.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\attoparser\attoparser\2.0.5.RELEASE\attoparser-2.0.5.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-java8time\3.0.4.RELEASE\thymeleaf-extras-java8time-3.0.4.RELEASE.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.1\jackson-databind-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.1\jackson-annotations-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.1\jackson-core-2.13.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-api\2.4.1\log4j-api-2.4.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-core\2.4.1\log4j-core-2.4.1.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.2\lib\idea_rt.jar, java.vm.vendor=Temurin, sun.arch.data.model=64, user.variant=, java.vendor.url=https://adoptium.net/, catalina.useNaming=false, user.timezone=Europe/Moscow, jakarta.persistence.sharedCache.mode=UNSPECIFIED, os.name=Windows 10, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), user.country=RU, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\bin, sun.java.command=ru.edu.helpdesk.HelpdeskApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@2912e8b5, com.sun.management.jmxremote=, javax.persistence.sharedCache.mode=UNSPECIFIED, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, user.home=C:\Users\Ольга, user.language=ru, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre, file.separator=\, spring.output.ansi.enabled=always, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, sun.boot.class.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\resources.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\rt.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\sunrsasign.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jsse.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jce.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\charsets.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jfr.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\classes, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_312-b07, user.name=Эльдорадо, spring.jmx.enabled=true, path.separator=;, os.version=10.0, java.endorsed.dirs=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\endorsed, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=default, spring.beaninfo.ignore=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=C:\Users\134E~1\AppData\Local\Temp\, catalina.home=C:\Users\Ольга\AppData\Local\Temp\tomcat.8080.7677249530559721533, java.version=1.8.0_312, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\Ольга\Desktop\Java\Project\Project1\helpdeskproject, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=32, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\Ольга\AppData\Local\Temp\tomcat.8080.7677249530559721533, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@5fa64013, java.library.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\windows\System32\OpenSSH\;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\Program Files\apache-maven-3.8.4\bin;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Ольга\AppData\Local\Microsoft\WindowsApps;C:\Users\Ольга\AppData\Local\Programs\Microsoft VS Code\bin;C:\SQLite;C:\Users\Ольга\AppData\Roaming\npm;C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.2\bin;;., java.vendor=Temurin, java.vm.info=mixed mode, java.vm.version=25.312-b07, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, java.ext.dirs=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext;C:\windows\Sun\Java\lib\ext, hibernate.connection.datasource=HikariDataSource (HikariPool-1), hibernate.hbm2ddl.import_files=data/import.sql, java.class.version=52.0}
w2022-03-15 18:23:36 DEBUG Skipping JACC integration as it was not enabled
w2022-03-15 18:23:36 DEBUG Using ORDINAL-based conversion for Enum ru.edu.helpdesk.entity.UserRole
w2022-03-15 18:23:36 DEBUG Using ORDINAL-based conversion for Enum ru.edu.helpdesk.entity.TicketStatus
w2022-03-15 18:23:36 DEBUG Instantiated session factory
w2022-03-15 18:23:36 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@64d09606] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@4f3a250f]
w2022-03-15 18:23:36 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.User] is safe
w2022-03-15 18:23:36 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.User
w2022-03-15 18:23:36 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:23:36 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:23:36 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:23:36 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:23:36 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Ticket] is safe
w2022-03-15 18:23:36 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Ticket
w2022-03-15 18:23:36 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:23:36 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:23:36 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:23:36 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:23:36 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:23:36 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:23:36 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:23:36 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:23:36 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Comment] is safe
w2022-03-15 18:23:36 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Comment
w2022-03-15 18:23:36 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:23:36 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:23:36 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:23:36 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:23:36 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.User
w2022-03-15 18:23:36 DEBUG  Version select: select id from user where id =?
w2022-03-15 18:23:36 DEBUG  Snapshot select: select user_.id, user_.first_name as first_na2_2_, user_.last_name as last_nam3_2_, user_.login as login4_2_, user_.password as password5_2_, user_.role as role6_2_ from user user_ where user_.id=?
w2022-03-15 18:23:36 DEBUG  Insert 0: insert into user (first_name, last_name, login, password, role, id) values (?, ?, ?, ?, ?, ?)
w2022-03-15 18:23:36 DEBUG  Update 0: update user set first_name=?, last_name=?, login=?, password=?, role=? where id=?
w2022-03-15 18:23:36 DEBUG  Delete 0: delete from user where id=?
w2022-03-15 18:23:36 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11d4cea3]
w2022-03-15 18:23:36 DEBUG Visiting attribute path : firstName
w2022-03-15 18:23:36 DEBUG Visiting attribute path : lastName
w2022-03-15 18:23:36 DEBUG Visiting attribute path : login
w2022-03-15 18:23:36 DEBUG Visiting attribute path : password
w2022-03-15 18:23:36 DEBUG Visiting attribute path : role
w2022-03-15 18:23:36 DEBUG Building LoadPlan...
w2022-03-15 18:23:36 DEBUG processing queryspace <gen:0>
w2022-03-15 18:23:36 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.User)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

w2022-03-15 18:23:36 DEBUG Static select for entity ru.edu.helpdesk.entity.User [NONE]: select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 18:23:36 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.Ticket
w2022-03-15 18:23:36 DEBUG  Version select: select id from ticket where id =?
w2022-03-15 18:23:36 DEBUG  Snapshot select: select ticket_.id, ticket_.client_id as client_i4_1_, ticket_.status as status2_1_, ticket_.support_id as support_5_1_, ticket_.title as title3_1_ from ticket ticket_ where ticket_.id=?
w2022-03-15 18:23:36 DEBUG  Insert 0: insert into ticket (client_id, status, support_id, title, id) values (?, ?, ?, ?, ?)
w2022-03-15 18:23:36 DEBUG  Update 0: update ticket set client_id=?, status=?, support_id=?, title=? where id=?
w2022-03-15 18:23:36 DEBUG  Delete 0: delete from ticket where id=?
w2022-03-15 18:23:36 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a1954a2]
w2022-03-15 18:23:36 DEBUG Visiting attribute path : client
w2022-03-15 18:23:36 DEBUG Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4263c6df]
w2022-03-15 18:23:36 DEBUG Visiting attribute path : client.firstName
w2022-03-15 18:23:36 DEBUG Visiting attribute path : client.lastName
w2022-03-15 18:23:36 DEBUG Visiting attribute path : client.login
w2022-03-15 18:23:36 DEBUG Visiting attribute path : client.password
w2022-03-15 18:23:36 DEBUG Visiting attribute path : client.role
w2022-03-15 18:23:36 DEBUG Visiting attribute path : status
w2022-03-15 18:23:36 DEBUG Visiting attribute path : support
w2022-03-15 18:23:36 DEBUG Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b335620]
w2022-03-15 18:23:36 DEBUG Visiting attribute path : support.firstName
w2022-03-15 18:23:36 DEBUG Visiting attribute path : support.lastName
w2022-03-15 18:23:36 DEBUG Visiting attribute path : support.login
w2022-03-15 18:23:36 DEBUG Visiting attribute path : support.password
w2022-03-15 18:23:36 DEBUG Visiting attribute path : support.role
w2022-03-15 18:23:36 DEBUG Visiting attribute path : title
w2022-03-15 18:23:36 DEBUG Building LoadPlan...
w2022-03-15 18:23:36 DEBUG processing queryspace <gen:0>
w2022-03-15 18:23:36 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.Ticket)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.Ticket, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.Ticket)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:1>, path=ru.edu.helpdesk.entity.Ticket.client)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:2>, path=ru.edu.helpdesk.entity.Ticket.support)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.Ticket)
          - SQL table alias mapping - ticket0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(client)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
          - JOIN (JoinDefinedByMetadata(support)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user2_
                - alias suffix - 2_
                - suffixed key columns - {id1_2_2_}

w2022-03-15 18:23:36 DEBUG Static select for entity ru.edu.helpdesk.entity.Ticket [NONE]: select ticket0_.id as id1_1_0_, ticket0_.client_id as client_i4_1_0_, ticket0_.status as status2_1_0_, ticket0_.support_id as support_5_1_0_, ticket0_.title as title3_1_0_, user1_.id as id1_2_1_, user1_.first_name as first_na2_2_1_, user1_.last_name as last_nam3_2_1_, user1_.login as login4_2_1_, user1_.password as password5_2_1_, user1_.role as role6_2_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id left outer join user user2_ on ticket0_.support_id=user2_.id where ticket0_.id=?
w2022-03-15 18:23:36 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.Comment
w2022-03-15 18:23:36 DEBUG  Version select: select id from comment where id =?
w2022-03-15 18:23:36 DEBUG  Snapshot select: select comment_.id, comment_.message as message2_0_, comment_.ticket_id as ticket_i3_0_, comment_.user_id as user_id4_0_ from comment comment_ where comment_.id=?
w2022-03-15 18:23:36 DEBUG  Insert 0: insert into comment (message, ticket_id, user_id, id) values (?, ?, ?, ?)
w2022-03-15 18:23:36 DEBUG  Update 0: update comment set message=?, ticket_id=?, user_id=? where id=?
w2022-03-15 18:23:36 DEBUG  Delete 0: delete from comment where id=?
w2022-03-15 18:23:36 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20fa09a3]
w2022-03-15 18:23:36 DEBUG Visiting attribute path : message
w2022-03-15 18:23:36 DEBUG Visiting attribute path : ticket
w2022-03-15 18:23:36 DEBUG Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71b1d240]
w2022-03-15 18:23:36 DEBUG Visiting attribute path : ticket.client
w2022-03-15 18:23:36 DEBUG Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2687b76f]
w2022-03-15 18:23:36 DEBUG Visiting attribute path : ticket.client.firstName
w2022-03-15 18:23:36 DEBUG Visiting attribute path : ticket.client.lastName
w2022-03-15 18:23:36 DEBUG Visiting attribute path : ticket.client.login
w2022-03-15 18:23:36 DEBUG Visiting attribute path : ticket.client.password
w2022-03-15 18:23:36 DEBUG Visiting attribute path : ticket.client.role
w2022-03-15 18:23:36 DEBUG Visiting attribute path : ticket.status
w2022-03-15 18:23:36 DEBUG Visiting attribute path : ticket.support
w2022-03-15 18:23:36 DEBUG Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@448ec5c9]
w2022-03-15 18:23:36 DEBUG Visiting attribute path : ticket.support.firstName
w2022-03-15 18:23:36 DEBUG Visiting attribute path : ticket.support.lastName
w2022-03-15 18:23:36 DEBUG Visiting attribute path : ticket.support.login
w2022-03-15 18:23:36 DEBUG Visiting attribute path : ticket.support.password
w2022-03-15 18:23:36 DEBUG Visiting attribute path : ticket.support.role
w2022-03-15 18:23:36 DEBUG Visiting attribute path : ticket.title
w2022-03-15 18:23:36 DEBUG Visiting attribute path : user
w2022-03-15 18:23:36 DEBUG Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9e79786]
w2022-03-15 18:23:36 DEBUG Visiting attribute path : user.firstName
w2022-03-15 18:23:36 DEBUG Visiting attribute path : user.lastName
w2022-03-15 18:23:36 DEBUG Visiting attribute path : user.login
w2022-03-15 18:23:36 DEBUG Visiting attribute path : user.password
w2022-03-15 18:23:36 DEBUG Visiting attribute path : user.role
w2022-03-15 18:23:36 DEBUG Building LoadPlan...
w2022-03-15 18:23:36 DEBUG processing queryspace <gen:0>
w2022-03-15 18:23:36 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.Comment)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.Comment, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.Comment)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.Ticket, querySpaceUid=<gen:1>, path=ru.edu.helpdesk.entity.Comment.ticket)
             - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:2>, path=ru.edu.helpdesk.entity.Comment.ticket.client)
             - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:3>, path=ru.edu.helpdesk.entity.Comment.ticket.support)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:4>, path=ru.edu.helpdesk.entity.Comment.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(ticket)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ru.edu.helpdesk.entity.Ticket)
                - SQL table alias mapping - ticket1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(client)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=ru.edu.helpdesk.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}
                - JOIN (JoinDefinedByMetadata(support)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=ru.edu.helpdesk.entity.User)
                      - SQL table alias mapping - user3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_2_3_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user4_
                - alias suffix - 4_
                - suffixed key columns - {id1_2_4_}

w2022-03-15 18:23:36 DEBUG Static select for entity ru.edu.helpdesk.entity.Comment [NONE]: select comment0_.id as id1_0_0_, comment0_.message as message2_0_0_, comment0_.ticket_id as ticket_i3_0_0_, comment0_.user_id as user_id4_0_0_, ticket1_.id as id1_1_1_, ticket1_.client_id as client_i4_1_1_, ticket1_.status as status2_1_1_, ticket1_.support_id as support_5_1_1_, ticket1_.title as title3_1_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_, user3_.id as id1_2_3_, user3_.first_name as first_na2_2_3_, user3_.last_name as last_nam3_2_3_, user3_.login as login4_2_3_, user3_.password as password5_2_3_, user3_.role as role6_2_3_, user4_.id as id1_2_4_, user4_.first_name as first_na2_2_4_, user4_.last_name as last_nam3_2_4_, user4_.login as login4_2_4_, user4_.password as password5_2_4_, user4_.role as role6_2_4_ from comment comment0_ left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id left outer join user user2_ on ticket1_.client_id=user2_.id left outer join user user3_ on ticket1_.support_id=user3_.id left outer join user user4_ on comment0_.user_id=user4_.id where comment0_.id=?
w2022-03-15 18:23:36 DEBUG drop table if exists comment
w2022-03-15 18:23:36 DEBUG drop table if exists hibernate_sequence
w2022-03-15 18:23:36 DEBUG drop table if exists ticket
w2022-03-15 18:23:36 DEBUG drop table if exists user
w2022-03-15 18:23:36 DEBUG create table comment (id bigint not null, message varchar(255) not null, ticket_id bigint, user_id bigint, primary key (id))
w2022-03-15 18:23:36 DEBUG create table hibernate_sequence (next_val bigint)
w2022-03-15 18:23:36 DEBUG insert into hibernate_sequence values ( 1 )
w2022-03-15 18:23:36 DEBUG create table ticket (id bigint not null, status integer, title varchar(255) not null, client_id bigint, support_id bigint, primary key (id))
w2022-03-15 18:23:36 DEBUG create table user (id bigint not null, first_name varchar(255), last_name varchar(255), login varchar(255) not null, password varchar(255) not null, role integer, primary key (id))
w2022-03-15 18:23:36 INFO  HHH000476: Executing import script 'file:/C:/Users/%d0%9e%d0%bb%d1%8c%d0%b3%d0%b0/Desktop/Java/Project/Project1/helpdeskproject/target/classes/data/import.sql'
w2022-03-15 18:23:36 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (1, 'admin', 'admin', 'admin', 'admin', 0)
w2022-03-15 18:23:36 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (2, 'support', 'support', 'support', 'support', 1)
w2022-03-15 18:23:36 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (3, 'user1', 'user1', 'user1', 'user1', 2)
w2022-03-15 18:23:36 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (4, 'user2', 'user2', 'user2', 'user2', 2)
w2022-03-15 18:23:36 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (1, 1, 'Hello user1',1, 2)
w2022-03-15 18:23:36 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (2, 0, 'Title2', 1, 2)
w2022-03-15 18:23:36 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (3, 0, 'Message user2', 4, NULL)
w2022-03-15 18:23:36 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (1, "comment ticket1", 1, 3)
w2022-03-15 18:23:36 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (2, "comment ticket2", 2, 3)
w2022-03-15 18:23:36 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (3, "comment ticket11", 1, 2)
w2022-03-15 18:23:36 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (4, "comment ticket111", 1, 2)
w2022-03-15 18:23:36 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (5, "comment ticket22", 2, 2)
w2022-03-15 18:23:36 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (6, "comment ticket3", 3, 4)
w2022-03-15 18:23:36 DEBUG UPDATE hibernate_sequence SET next_val = 8 WHERE next_val = 1
w2022-03-15 18:23:36 INFO  HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
w2022-03-15 18:23:36 DEBUG Checking 0 named HQL queries
w2022-03-15 18:23:36 DEBUG Checking 0 named SQL queries
w2022-03-15 18:23:36 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 18:23:36 DEBUG Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1e147a52
w2022-03-15 18:23:36 DEBUG Registering SessionFactory: 2370f44b-c90c-4e93-ae58-12b658449dc9 (<unnamed>)
w2022-03-15 18:23:36 DEBUG Not binding SessionFactory to JNDI, no JNDI name configured
w2022-03-15 18:23:36 DEBUG Statistics initialized [enabled=false]
w2022-03-15 18:23:36 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 18:23:36 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 18:23:36 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 18:23:48 DEBUG Rendered criteria query -> select generatedAlias0 from Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 18:23:48 DEBUG QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@504f4343
w2022-03-15 18:23:48 DEBUG parse() - HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 18:23:48 DEBUG throwQueryException() : no errors
w2022-03-15 18:23:48 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[IDENT] Node: 'ru'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'edu'
    |  |  |  |  |  |  \-[IDENT] Node: 'helpdesk'
    |  |  |  |  |  \-[IDENT] Node: 'entity'
    |  |  |  |  \-[IDENT] Node: 'Ticket'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'client'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias1'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

w2022-03-15 18:23:48 DEBUG select << begin [level=1, statement=select]
w2022-03-15 18:23:48 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.Ticket (generatedAlias0) -> ticket0_
w2022-03-15 18:23:48 DEBUG Resolved : generatedAlias0 -> ticket0_.id
w2022-03-15 18:23:48 DEBUG getDataType() : client -> org.hibernate.type.ManyToOneType(ru.edu.helpdesk.entity.User)
w2022-03-15 18:23:48 DEBUG dereferenceEntityJoin() : generating join for client in ru.edu.helpdesk.entity.Ticket (generatedAlias1) parent = [ {null} ]
w2022-03-15 18:23:48 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.User (generatedAlias1) -> user1_
w2022-03-15 18:23:48 DEBUG addJoinByPathMap() : generatedAlias0.client -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}
w2022-03-15 18:23:48 DEBUG Resolved : generatedAlias0.client -> ticket0_.client_id
w2022-03-15 18:23:48 DEBUG createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'user user1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Ticket.client,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}

w2022-03-15 18:23:48 DEBUG Resolved : generatedAlias0 -> ticket0_.id
w2022-03-15 18:23:48 DEBUG Resolved : generatedAlias1 -> user1_.id
w2022-03-15 18:23:48 DEBUG getDataType() : id -> org.hibernate.type.LongType@24fc305f
w2022-03-15 18:23:48 DEBUG Resolved : generatedAlias1.id -> user1_.id
w2022-03-15 18:23:48 DEBUG select : finishing up [level=1, statement=select]
w2022-03-15 18:23:48 DEBUG processQuery() :  ( SELECT ( {select clause} ticket0_.id ) ( FromClause{level=1} ( ticket ticket0_ user user1_ ) ) ( where ( = ( user1_.id user1_.id id ) ? ) ) )
w2022-03-15 18:23:48 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Ticket): [ticket]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.Ticket)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.User)
          | path: generatedAlias1.id
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.User)
          |  | originalText: generatedAlias1
          |  \-IdentNode
          |    persister: null
          |    originalText: id
          \-ParameterNode

w2022-03-15 18:23:48 DEBUG Using FROM fragment [ticket ticket0_]
w2022-03-15 18:23:48 DEBUG Using FROM fragment [left outer join user user1_ on ticket0_.client_id=user1_.id]
w2022-03-15 18:23:48 DEBUG select >> end [level=1, statement=select]
w2022-03-15 18:23:48 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (ticket,user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'ticket0_.id as id1_1_' {alias=generatedAlias0, className=ru.edu.helpdesk.entity.Ticket, tableAlias=ticket0_}
    |  \-[SQL_TOKEN] SqlFragment: 'ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[ticket0_, user1_], fromElementsByPath=[generatedAlias0.client], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'ticket ticket0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=ticket,tableAlias=ticket0_,origin=null,columns={,className=ru.edu.helpdesk.entity.Ticket}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join user user1_ on ticket0_.client_id=user1_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Ticket.client,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user1_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias1.id,tableAlias=user1_,className=ru.edu.helpdesk.entity.User,classAlias=generatedAlias1}
          |  +-[ALIAS_REF] IdentNode: 'user1_.id' {alias=generatedAlias1, className=ru.edu.helpdesk.entity.User, tableAlias=user1_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LongType@24fc305f}

w2022-03-15 18:23:48 DEBUG throwQueryException() : no errors
w2022-03-15 18:23:48 DEBUG HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 18:23:48 DEBUG SQL: select ticket0_.id as id1_1_, ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id where user1_.id=?
w2022-03-15 18:23:48 DEBUG throwQueryException() : no errors
w2022-03-15 18:23:48 DEBUG select ticket0_.id as id1_1_, ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id where user1_.id=?
w2022-03-15 18:23:48 DEBUG Result set row: 0
w2022-03-15 18:23:48 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 18:23:48 DEBUG Result set row: 1
w2022-03-15 18:23:48 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 18:23:48 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 18:23:48 DEBUG Processing attribute `client` : value = 1
w2022-03-15 18:23:48 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 18:23:48 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 18:23:48 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 18:23:48 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#1]
w2022-03-15 18:23:48 DEBUG Processing attribute `firstName` : value = admin
w2022-03-15 18:23:48 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:23:48 DEBUG Processing attribute `lastName` : value = admin
w2022-03-15 18:23:48 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:23:48 DEBUG Processing attribute `login` : value = admin
w2022-03-15 18:23:48 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 18:23:48 DEBUG Processing attribute `password` : value = admin
w2022-03-15 18:23:48 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 18:23:48 DEBUG Processing attribute `role` : value = ADMIN
w2022-03-15 18:23:48 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 18:23:48 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#1]
w2022-03-15 18:23:48 DEBUG Done entity load : ru.edu.helpdesk.entity.User#1
w2022-03-15 18:23:48 DEBUG Processing attribute `status` : value = WORKING
w2022-03-15 18:23:48 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 18:23:48 DEBUG Processing attribute `support` : value = 2
w2022-03-15 18:23:48 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 18:23:48 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 18:23:48 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 18:23:48 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#2]
w2022-03-15 18:23:48 DEBUG Processing attribute `firstName` : value = support
w2022-03-15 18:23:48 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:23:48 DEBUG Processing attribute `lastName` : value = support
w2022-03-15 18:23:48 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:23:48 DEBUG Processing attribute `login` : value = support
w2022-03-15 18:23:48 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 18:23:48 DEBUG Processing attribute `password` : value = support
w2022-03-15 18:23:48 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 18:23:48 DEBUG Processing attribute `role` : value = SUPPORT
w2022-03-15 18:23:48 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 18:23:48 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#2]
w2022-03-15 18:23:48 DEBUG Done entity load : ru.edu.helpdesk.entity.User#2
w2022-03-15 18:23:48 DEBUG Processing attribute `title` : value = Hello user1
w2022-03-15 18:23:48 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 18:23:48 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 18:23:48 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 18:23:48 DEBUG Processing attribute `client` : value = 1
w2022-03-15 18:23:48 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 18:23:48 DEBUG Processing attribute `status` : value = OPEN
w2022-03-15 18:23:48 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 18:23:48 DEBUG Processing attribute `support` : value = 2
w2022-03-15 18:23:48 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 18:23:48 DEBUG Processing attribute `title` : value = Title2
w2022-03-15 18:23:48 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 18:23:48 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 18:24:02 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 18:24:02 DEBUG begin
w2022-03-15 18:24:02 DEBUG committing
w2022-03-15 18:24:02 DEBUG Rendered criteria query -> select generatedAlias0 from Comment as generatedAlias0 left join generatedAlias0.ticket as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 18:24:02 DEBUG parse() - HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Comment as generatedAlias0 left join generatedAlias0.ticket as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 18:24:02 DEBUG throwQueryException() : no errors
w2022-03-15 18:24:02 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[IDENT] Node: 'ru'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'edu'
    |  |  |  |  |  |  \-[IDENT] Node: 'helpdesk'
    |  |  |  |  |  \-[IDENT] Node: 'entity'
    |  |  |  |  \-[IDENT] Node: 'Comment'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'ticket'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias1'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

w2022-03-15 18:24:02 DEBUG select << begin [level=1, statement=select]
w2022-03-15 18:24:02 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.Comment (generatedAlias0) -> comment0_
w2022-03-15 18:24:02 DEBUG Resolved : generatedAlias0 -> comment0_.id
w2022-03-15 18:24:02 DEBUG getDataType() : ticket -> org.hibernate.type.ManyToOneType(ru.edu.helpdesk.entity.Ticket)
w2022-03-15 18:24:02 DEBUG dereferenceEntityJoin() : generating join for ticket in ru.edu.helpdesk.entity.Comment (generatedAlias1) parent = [ {null} ]
w2022-03-15 18:24:02 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.Ticket (generatedAlias1) -> ticket1_
w2022-03-15 18:24:02 DEBUG addJoinByPathMap() : generatedAlias0.ticket -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=ticket,tableAlias=ticket1_,origin=comment comment0_,columns={comment0_.ticket_id,className=ru.edu.helpdesk.entity.Ticket}}
w2022-03-15 18:24:02 DEBUG Resolved : generatedAlias0.ticket -> comment0_.ticket_id
w2022-03-15 18:24:02 DEBUG createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'ticket ticket1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Comment.ticket,tableName=ticket,tableAlias=ticket1_,origin=comment comment0_,columns={comment0_.ticket_id,className=ru.edu.helpdesk.entity.Ticket}}

w2022-03-15 18:24:02 DEBUG Resolved : generatedAlias0 -> comment0_.id
w2022-03-15 18:24:02 DEBUG Resolved : generatedAlias1 -> ticket1_.id
w2022-03-15 18:24:02 DEBUG getDataType() : id -> org.hibernate.type.LongType@24fc305f
w2022-03-15 18:24:02 DEBUG Resolved : generatedAlias1.id -> ticket1_.id
w2022-03-15 18:24:02 DEBUG select : finishing up [level=1, statement=select]
w2022-03-15 18:24:02 DEBUG processQuery() :  ( SELECT ( {select clause} comment0_.id ) ( FromClause{level=1} ( comment comment0_ ticket ticket1_ ) ) ( where ( = ( ticket1_.id ticket1_.id id ) ? ) ) )
w2022-03-15 18:24:02 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Comment): [comment]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.Comment)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.Ticket)
          | path: generatedAlias1.id
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.Ticket)
          |  | originalText: generatedAlias1
          |  \-IdentNode
          |    persister: null
          |    originalText: id
          \-ParameterNode

w2022-03-15 18:24:02 DEBUG Using FROM fragment [comment comment0_]
w2022-03-15 18:24:02 DEBUG Using FROM fragment [left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id]
w2022-03-15 18:24:02 DEBUG select >> end [level=1, statement=select]
w2022-03-15 18:24:02 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (ticket,comment)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'comment0_.id as id1_0_' {alias=generatedAlias0, className=ru.edu.helpdesk.entity.Comment, tableAlias=comment0_}
    |  \-[SQL_TOKEN] SqlFragment: 'comment0_.message as message2_0_, comment0_.ticket_id as ticket_i3_0_, comment0_.user_id as user_id4_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[ticket1_, comment0_], fromElementsByPath=[generatedAlias0.ticket], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'comment comment0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=comment,tableAlias=comment0_,origin=null,columns={,className=ru.edu.helpdesk.entity.Comment}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Comment.ticket,tableName=ticket,tableAlias=ticket1_,origin=comment comment0_,columns={comment0_.ticket_id,className=ru.edu.helpdesk.entity.Ticket}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'ticket1_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias1.id,tableAlias=ticket1_,className=ru.edu.helpdesk.entity.Ticket,classAlias=generatedAlias1}
          |  +-[ALIAS_REF] IdentNode: 'ticket1_.id' {alias=generatedAlias1, className=ru.edu.helpdesk.entity.Ticket, tableAlias=ticket1_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LongType@24fc305f}

w2022-03-15 18:24:02 DEBUG throwQueryException() : no errors
w2022-03-15 18:24:02 DEBUG HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Comment as generatedAlias0 left join generatedAlias0.ticket as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 18:24:02 DEBUG SQL: select comment0_.id as id1_0_, comment0_.message as message2_0_, comment0_.ticket_id as ticket_i3_0_, comment0_.user_id as user_id4_0_ from comment comment0_ left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id where ticket1_.id=?
w2022-03-15 18:24:02 DEBUG throwQueryException() : no errors
w2022-03-15 18:24:02 DEBUG select comment0_.id as id1_0_, comment0_.message as message2_0_, comment0_.ticket_id as ticket_i3_0_, comment0_.user_id as user_id4_0_ from comment comment0_ left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id where ticket1_.id=?
w2022-03-15 18:24:02 DEBUG Result set row: 0
w2022-03-15 18:24:02 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Comment#1]
w2022-03-15 18:24:02 DEBUG Result set row: 1
w2022-03-15 18:24:02 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Comment#3]
w2022-03-15 18:24:02 DEBUG Result set row: 2
w2022-03-15 18:24:02 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Comment#4]
w2022-03-15 18:24:02 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Comment#1]
w2022-03-15 18:24:02 DEBUG Processing attribute `message` : value = comment ticket1
w2022-03-15 18:24:02 DEBUG Attribute (`message`)  - enhanced for lazy-loading? - false
w2022-03-15 18:24:02 DEBUG Processing attribute `ticket` : value = 1
w2022-03-15 18:24:02 DEBUG Attribute (`ticket`)  - enhanced for lazy-loading? - false
w2022-03-15 18:24:02 DEBUG select ticket0_.id as id1_1_0_, ticket0_.client_id as client_i4_1_0_, ticket0_.status as status2_1_0_, ticket0_.support_id as support_5_1_0_, ticket0_.title as title3_1_0_, user1_.id as id1_2_1_, user1_.first_name as first_na2_2_1_, user1_.last_name as last_nam3_2_1_, user1_.login as login4_2_1_, user1_.password as password5_2_1_, user1_.role as role6_2_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id left outer join user user2_ on ticket0_.support_id=user2_.id where ticket0_.id=?
w2022-03-15 18:24:02 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 18:24:02 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 18:24:02 DEBUG Processing attribute `client` : value = 1
w2022-03-15 18:24:02 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 18:24:02 DEBUG Processing attribute `status` : value = WORKING
w2022-03-15 18:24:02 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 18:24:02 DEBUG Processing attribute `support` : value = 2
w2022-03-15 18:24:02 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 18:24:02 DEBUG Processing attribute `title` : value = Hello user1
w2022-03-15 18:24:02 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 18:24:02 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 18:24:02 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#1]
w2022-03-15 18:24:02 DEBUG Processing attribute `firstName` : value = admin
w2022-03-15 18:24:02 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:24:02 DEBUG Processing attribute `lastName` : value = admin
w2022-03-15 18:24:02 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:24:02 DEBUG Processing attribute `login` : value = admin
w2022-03-15 18:24:02 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 18:24:02 DEBUG Processing attribute `password` : value = admin
w2022-03-15 18:24:02 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 18:24:02 DEBUG Processing attribute `role` : value = ADMIN
w2022-03-15 18:24:02 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 18:24:02 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#1]
w2022-03-15 18:24:02 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#2]
w2022-03-15 18:24:02 DEBUG Processing attribute `firstName` : value = support
w2022-03-15 18:24:02 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:24:02 DEBUG Processing attribute `lastName` : value = support
w2022-03-15 18:24:02 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:24:02 DEBUG Processing attribute `login` : value = support
w2022-03-15 18:24:02 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 18:24:02 DEBUG Processing attribute `password` : value = support
w2022-03-15 18:24:02 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 18:24:02 DEBUG Processing attribute `role` : value = SUPPORT
w2022-03-15 18:24:02 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 18:24:02 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#2]
w2022-03-15 18:24:02 DEBUG Done entity load : ru.edu.helpdesk.entity.Ticket#1
w2022-03-15 18:24:02 DEBUG Processing attribute `user` : value = 3
w2022-03-15 18:24:02 DEBUG Attribute (`user`)  - enhanced for lazy-loading? - false
w2022-03-15 18:24:02 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 18:24:02 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 18:24:02 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#3]
w2022-03-15 18:24:02 DEBUG Processing attribute `firstName` : value = user1
w2022-03-15 18:24:02 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:24:02 DEBUG Processing attribute `lastName` : value = user1
w2022-03-15 18:24:02 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:24:02 DEBUG Processing attribute `login` : value = user1
w2022-03-15 18:24:02 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 18:24:02 DEBUG Processing attribute `password` : value = user1
w2022-03-15 18:24:02 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 18:24:02 DEBUG Processing attribute `role` : value = USER
w2022-03-15 18:24:02 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 18:24:02 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#3]
w2022-03-15 18:24:02 DEBUG Done entity load : ru.edu.helpdesk.entity.User#3
w2022-03-15 18:24:02 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Comment#1]
w2022-03-15 18:24:02 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Comment#3]
w2022-03-15 18:24:02 DEBUG Processing attribute `message` : value = comment ticket11
w2022-03-15 18:24:02 DEBUG Attribute (`message`)  - enhanced for lazy-loading? - false
w2022-03-15 18:24:02 DEBUG Processing attribute `ticket` : value = 1
w2022-03-15 18:24:02 DEBUG Attribute (`ticket`)  - enhanced for lazy-loading? - false
w2022-03-15 18:24:02 DEBUG Processing attribute `user` : value = 2
w2022-03-15 18:24:02 DEBUG Attribute (`user`)  - enhanced for lazy-loading? - false
w2022-03-15 18:24:02 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Comment#3]
w2022-03-15 18:24:02 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Comment#4]
w2022-03-15 18:24:02 DEBUG Processing attribute `message` : value = comment ticket111
w2022-03-15 18:24:02 DEBUG Attribute (`message`)  - enhanced for lazy-loading? - false
w2022-03-15 18:24:02 DEBUG Processing attribute `ticket` : value = 1
w2022-03-15 18:24:02 DEBUG Attribute (`ticket`)  - enhanced for lazy-loading? - false
w2022-03-15 18:24:02 DEBUG Processing attribute `user` : value = 2
w2022-03-15 18:24:02 DEBUG Attribute (`user`)  - enhanced for lazy-loading? - false
w2022-03-15 18:24:02 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Comment#4]
w2022-03-15 18:24:07 DEBUG Rendered criteria query -> select generatedAlias0 from Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 18:24:07 DEBUG select ticket0_.id as id1_1_, ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id where user1_.id=?
w2022-03-15 18:24:07 DEBUG Result set row: 0
w2022-03-15 18:24:07 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 18:24:07 DEBUG Result set row: 1
w2022-03-15 18:24:07 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 18:24:07 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 18:24:07 DEBUG Processing attribute `client` : value = 1
w2022-03-15 18:24:07 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 18:24:07 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 18:24:07 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 18:24:07 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#1]
w2022-03-15 18:24:07 DEBUG Processing attribute `firstName` : value = admin
w2022-03-15 18:24:07 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:24:07 DEBUG Processing attribute `lastName` : value = admin
w2022-03-15 18:24:07 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:24:07 DEBUG Processing attribute `login` : value = admin
w2022-03-15 18:24:07 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 18:24:07 DEBUG Processing attribute `password` : value = admin
w2022-03-15 18:24:07 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 18:24:07 DEBUG Processing attribute `role` : value = ADMIN
w2022-03-15 18:24:07 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 18:24:07 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#1]
w2022-03-15 18:24:07 DEBUG Done entity load : ru.edu.helpdesk.entity.User#1
w2022-03-15 18:24:07 DEBUG Processing attribute `status` : value = WORKING
w2022-03-15 18:24:07 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 18:24:07 DEBUG Processing attribute `support` : value = 2
w2022-03-15 18:24:07 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 18:24:07 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 18:24:07 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 18:24:07 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#2]
w2022-03-15 18:24:07 DEBUG Processing attribute `firstName` : value = support
w2022-03-15 18:24:07 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:24:07 DEBUG Processing attribute `lastName` : value = support
w2022-03-15 18:24:07 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:24:07 DEBUG Processing attribute `login` : value = support
w2022-03-15 18:24:07 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 18:24:07 DEBUG Processing attribute `password` : value = support
w2022-03-15 18:24:07 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 18:24:07 DEBUG Processing attribute `role` : value = SUPPORT
w2022-03-15 18:24:07 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 18:24:07 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#2]
w2022-03-15 18:24:07 DEBUG Done entity load : ru.edu.helpdesk.entity.User#2
w2022-03-15 18:24:07 DEBUG Processing attribute `title` : value = Hello user1
w2022-03-15 18:24:07 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 18:24:07 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 18:24:07 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 18:24:07 DEBUG Processing attribute `client` : value = 1
w2022-03-15 18:24:07 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 18:24:07 DEBUG Processing attribute `status` : value = OPEN
w2022-03-15 18:24:07 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 18:24:07 DEBUG Processing attribute `support` : value = 2
w2022-03-15 18:24:07 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 18:24:07 DEBUG Processing attribute `title` : value = Title2
w2022-03-15 18:24:07 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 18:24:07 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 18:29:39 DEBUG Logging Provider: org.jboss.logging.Log4j2LoggerProvider
w2022-03-15 18:29:39 DEBUG PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@afdfab4
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/%d0%9e%d0%bb%d1%8c%d0%b3%d0%b0/Desktop/Java/Project/Project1/helpdeskproject/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		ru.edu.helpdesk.entity.Comment
		ru.edu.helpdesk.entity.Ticket
		ru.edu.helpdesk.entity.User]
	Mapping files names []
	Properties []
w2022-03-15 18:29:39 DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
w2022-03-15 18:29:39 DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
w2022-03-15 18:29:39 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
w2022-03-15 18:29:39 INFO  HHH000412: Hibernate ORM core version 5.6.5.Final
w2022-03-15 18:29:39 DEBUG HHH000206: hibernate.properties not found
w2022-03-15 18:29:40 DEBUG Overriding existing service binding [org.hibernate.secure.spi.JaccService]
w2022-03-15 18:29:40 DEBUG Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
w2022-03-15 18:29:40 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
w2022-03-15 18:29:40 INFO  HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
w2022-03-15 18:29:40 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@52b93120
w2022-03-15 18:29:40 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@52b93120
w2022-03-15 18:29:40 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@52b93120
w2022-03-15 18:29:40 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1d6f89f5
w2022-03-15 18:29:40 DEBUG Adding type registration true_false -> org.hibernate.type.TrueFalseType@1a1f9e1
w2022-03-15 18:29:40 DEBUG Adding type registration yes_no -> org.hibernate.type.YesNoType@30e8a98d
w2022-03-15 18:29:40 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@4f032ece
w2022-03-15 18:29:40 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@4f032ece
w2022-03-15 18:29:40 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4f032ece
w2022-03-15 18:29:40 DEBUG Adding type registration character -> org.hibernate.type.CharacterType@7aa707bb
w2022-03-15 18:29:40 DEBUG Adding type registration char -> org.hibernate.type.CharacterType@7aa707bb
w2022-03-15 18:29:40 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7aa707bb
w2022-03-15 18:29:40 DEBUG Adding type registration short -> org.hibernate.type.ShortType@83847d0
w2022-03-15 18:29:40 DEBUG Adding type registration short -> org.hibernate.type.ShortType@83847d0
w2022-03-15 18:29:40 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.ShortType@83847d0
w2022-03-15 18:29:40 DEBUG Adding type registration integer -> org.hibernate.type.IntegerType@7bd93b65
w2022-03-15 18:29:40 DEBUG Adding type registration int -> org.hibernate.type.IntegerType@7bd93b65
w2022-03-15 18:29:40 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7bd93b65
w2022-03-15 18:29:40 DEBUG Adding type registration long -> org.hibernate.type.LongType@2fb6b753
w2022-03-15 18:29:40 DEBUG Adding type registration long -> org.hibernate.type.LongType@2fb6b753
w2022-03-15 18:29:40 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.LongType@2fb6b753
w2022-03-15 18:29:40 DEBUG Adding type registration float -> org.hibernate.type.FloatType@51035c79
w2022-03-15 18:29:40 DEBUG Adding type registration float -> org.hibernate.type.FloatType@51035c79
w2022-03-15 18:29:40 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.FloatType@51035c79
w2022-03-15 18:29:40 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@5129a12b
w2022-03-15 18:29:40 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@5129a12b
w2022-03-15 18:29:40 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5129a12b
w2022-03-15 18:29:40 DEBUG Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@36d8a887
w2022-03-15 18:29:40 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@36d8a887
w2022-03-15 18:29:40 DEBUG Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3ac53b7c
w2022-03-15 18:29:40 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3ac53b7c
w2022-03-15 18:29:40 DEBUG Adding type registration string -> org.hibernate.type.StringType@3437e2d9
w2022-03-15 18:29:40 DEBUG Adding type registration java.lang.String -> org.hibernate.type.StringType@3437e2d9
w2022-03-15 18:29:40 DEBUG Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6b25a49a
w2022-03-15 18:29:40 DEBUG Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@16990d0
w2022-03-15 18:29:40 DEBUG Adding type registration url -> org.hibernate.type.UrlType@2b0afd13
w2022-03-15 18:29:40 DEBUG Adding type registration java.net.URL -> org.hibernate.type.UrlType@2b0afd13
w2022-03-15 18:29:40 DEBUG Adding type registration Duration -> org.hibernate.type.DurationType@63340091
w2022-03-15 18:29:40 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.DurationType@63340091
w2022-03-15 18:29:40 DEBUG Adding type registration Instant -> org.hibernate.type.InstantType@4e18e360
w2022-03-15 18:29:40 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.InstantType@4e18e360
w2022-03-15 18:29:40 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@6c524c55
w2022-03-15 18:29:40 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@6c524c55
w2022-03-15 18:29:40 DEBUG Adding type registration LocalDate -> org.hibernate.type.LocalDateType@67b20ea6
w2022-03-15 18:29:40 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@67b20ea6
w2022-03-15 18:29:40 DEBUG Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1ca0f36c
w2022-03-15 18:29:40 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1ca0f36c
w2022-03-15 18:29:40 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@772d1b84
w2022-03-15 18:29:40 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@772d1b84
w2022-03-15 18:29:40 DEBUG Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4b836141
w2022-03-15 18:29:40 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4b836141
w2022-03-15 18:29:40 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@768150a8
w2022-03-15 18:29:40 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@768150a8
w2022-03-15 18:29:40 DEBUG Adding type registration date -> org.hibernate.type.DateType@75fdd2b6
w2022-03-15 18:29:40 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.DateType@75fdd2b6
w2022-03-15 18:29:40 DEBUG Adding type registration time -> org.hibernate.type.TimeType@41a0e079
w2022-03-15 18:29:40 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.TimeType@41a0e079
w2022-03-15 18:29:40 DEBUG Adding type registration timestamp -> org.hibernate.type.TimestampType@66aece18
w2022-03-15 18:29:40 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@66aece18
w2022-03-15 18:29:40 DEBUG Adding type registration java.util.Date -> org.hibernate.type.TimestampType@66aece18
w2022-03-15 18:29:40 DEBUG Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@40ddf205
w2022-03-15 18:29:40 DEBUG Adding type registration calendar -> org.hibernate.type.CalendarType@868d9b
w2022-03-15 18:29:40 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@868d9b
w2022-03-15 18:29:40 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@868d9b
w2022-03-15 18:29:40 DEBUG Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1de40c6d
w2022-03-15 18:29:40 DEBUG Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@397b72f2
w2022-03-15 18:29:40 DEBUG Adding type registration locale -> org.hibernate.type.LocaleType@31a9ee5f
w2022-03-15 18:29:40 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@31a9ee5f
w2022-03-15 18:29:40 DEBUG Adding type registration currency -> org.hibernate.type.CurrencyType@9609950
w2022-03-15 18:29:40 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@9609950
w2022-03-15 18:29:40 DEBUG Adding type registration timezone -> org.hibernate.type.TimeZoneType@19d644ec
w2022-03-15 18:29:40 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@19d644ec
w2022-03-15 18:29:40 DEBUG Adding type registration class -> org.hibernate.type.ClassType@62bf0c55
w2022-03-15 18:29:40 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.ClassType@62bf0c55
w2022-03-15 18:29:40 DEBUG Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@29f3a550
w2022-03-15 18:29:40 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@29f3a550
w2022-03-15 18:29:40 DEBUG Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@71bfeec7
w2022-03-15 18:29:40 DEBUG Adding type registration binary -> org.hibernate.type.BinaryType@11e0fecd
w2022-03-15 18:29:40 DEBUG Adding type registration byte[] -> org.hibernate.type.BinaryType@11e0fecd
w2022-03-15 18:29:40 DEBUG Adding type registration [B -> org.hibernate.type.BinaryType@11e0fecd
w2022-03-15 18:29:40 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@62d6cb4d
w2022-03-15 18:29:40 DEBUG Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@62d6cb4d
w2022-03-15 18:29:40 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@62d6cb4d
w2022-03-15 18:29:40 DEBUG Adding type registration row_version -> org.hibernate.type.RowVersionType@7d788d8b
w2022-03-15 18:29:40 DEBUG Adding type registration image -> org.hibernate.type.ImageType@d9c6558
w2022-03-15 18:29:40 DEBUG Adding type registration characters -> org.hibernate.type.CharArrayType@1778dd0f
w2022-03-15 18:29:40 DEBUG Adding type registration char[] -> org.hibernate.type.CharArrayType@1778dd0f
w2022-03-15 18:29:40 DEBUG Adding type registration [C -> org.hibernate.type.CharArrayType@1778dd0f
w2022-03-15 18:29:40 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@200120ee
w2022-03-15 18:29:40 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@200120ee
w2022-03-15 18:29:40 DEBUG Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@200120ee
w2022-03-15 18:29:40 DEBUG Adding type registration text -> org.hibernate.type.TextType@68080fb0
w2022-03-15 18:29:40 DEBUG Adding type registration ntext -> org.hibernate.type.NTextType@249bfd4b
w2022-03-15 18:29:40 DEBUG Adding type registration blob -> org.hibernate.type.BlobType@472beea
w2022-03-15 18:29:40 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@472beea
w2022-03-15 18:29:40 DEBUG Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@679b8ffa
w2022-03-15 18:29:40 DEBUG Adding type registration clob -> org.hibernate.type.ClobType@31222b4f
w2022-03-15 18:29:40 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@31222b4f
w2022-03-15 18:29:40 DEBUG Adding type registration nclob -> org.hibernate.type.NClobType@1452780a
w2022-03-15 18:29:40 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1452780a
w2022-03-15 18:29:40 DEBUG Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@28c93f80
w2022-03-15 18:29:40 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5dff8c8
w2022-03-15 18:29:40 DEBUG Adding type registration serializable -> org.hibernate.type.SerializableType@647cf603
w2022-03-15 18:29:40 DEBUG Adding type registration object -> org.hibernate.type.ObjectType@55580d29
w2022-03-15 18:29:40 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@55580d29
w2022-03-15 18:29:40 DEBUG Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@372e8940
w2022-03-15 18:29:40 DEBUG Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@228afbc9
w2022-03-15 18:29:40 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7d0d4734
w2022-03-15 18:29:40 DEBUG Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2aa3e372
w2022-03-15 18:29:40 DEBUG Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@69841bef
w2022-03-15 18:29:40 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1c25e1a5
w2022-03-15 18:29:40 DEBUG Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@b0631f2
w2022-03-15 18:29:40 DEBUG Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3e0bfb93
w2022-03-15 18:29:40 INFO  HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
w2022-03-15 18:29:40 DEBUG Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@8c589c] into BootstrapContext; was [null]
w2022-03-15 18:29:40 DEBUG ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@8c589c) [was null]
w2022-03-15 18:29:40 DEBUG Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@2b4bf013] into BootstrapContext; was [null]
w2022-03-15 18:29:40 DEBUG Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@7546b93b] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@ab022a9]
w2022-03-15 18:29:40 DEBUG Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@8c589c]
w2022-03-15 18:29:40 DEBUG ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@8c589c]
w2022-03-15 18:29:40 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
w2022-03-15 18:29:40 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
w2022-03-15 18:29:40 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
w2022-03-15 18:29:40 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
w2022-03-15 18:29:40 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
w2022-03-15 18:29:40 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
w2022-03-15 18:29:40 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
w2022-03-15 18:29:40 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
w2022-03-15 18:29:40 DEBUG Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
w2022-03-15 18:29:40 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
w2022-03-15 18:29:40 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
w2022-03-15 18:29:40 DEBUG Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
w2022-03-15 18:29:40 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
w2022-03-15 18:29:40 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
w2022-03-15 18:29:40 DEBUG Database ->
       name : SQLite
    version : 3.36.0
      major : 3
      minor : 36
w2022-03-15 18:29:40 DEBUG Driver ->
       name : SQLite JDBC
    version : 3.36.0.3
      major : 3
      minor : 36
w2022-03-15 18:29:40 DEBUG JDBC version : 2.1
w2022-03-15 18:29:40 INFO  HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
w2022-03-15 18:29:40 DEBUG JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
w2022-03-15 18:29:40 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
w2022-03-15 18:29:40 DEBUG HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [2] less than 4
w2022-03-15 18:29:40 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2f2fbdd8] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@48b59d3e]
w2022-03-15 18:29:40 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
w2022-03-15 18:29:40 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.Comment
w2022-03-15 18:29:40 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 18:29:40 DEBUG Import with entity name Comment
w2022-03-15 18:29:40 DEBUG Bind entity ru.edu.helpdesk.entity.Comment on table comment
w2022-03-15 18:29:40 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 18:29:40 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Comment] is safe
w2022-03-15 18:29:40 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Comment
w2022-03-15 18:29:40 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 18:29:40 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Comment:id]
w2022-03-15 18:29:40 DEBUG building SimpleValue for id
w2022-03-15 18:29:40 DEBUG Building property id
w2022-03-15 18:29:40 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 18:29:40 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=message, insertable=true, updatable=true, unique=false}
w2022-03-15 18:29:40 DEBUG MetadataSourceProcessor property message with lazy=false
w2022-03-15 18:29:40 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Comment:message]
w2022-03-15 18:29:40 DEBUG building SimpleValue for message
w2022-03-15 18:29:40 DEBUG Building property message
w2022-03-15 18:29:40 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 18:29:40 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=ticket, insertable=true, updatable=true, unique=false}
w2022-03-15 18:29:40 DEBUG Building property ticket
w2022-03-15 18:29:40 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 18:29:40 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=user, insertable=true, updatable=true, unique=false}
w2022-03-15 18:29:40 DEBUG Building property user
w2022-03-15 18:29:40 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 18:29:40 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 18:29:40 DEBUG Import with entity name Ticket
w2022-03-15 18:29:40 DEBUG Bind entity ru.edu.helpdesk.entity.Ticket on table ticket
w2022-03-15 18:29:40 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 18:29:40 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Ticket] is safe
w2022-03-15 18:29:40 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Ticket
w2022-03-15 18:29:40 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 18:29:40 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:id]
w2022-03-15 18:29:40 DEBUG building SimpleValue for id
w2022-03-15 18:29:40 DEBUG Building property id
w2022-03-15 18:29:40 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 18:29:40 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 18:29:40 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=client, insertable=true, updatable=true, unique=false}
w2022-03-15 18:29:40 DEBUG Building property client
w2022-03-15 18:29:40 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=status, insertable=true, updatable=true, unique=false}
w2022-03-15 18:29:40 DEBUG MetadataSourceProcessor property status with lazy=false
w2022-03-15 18:29:40 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:status]
w2022-03-15 18:29:40 DEBUG building SimpleValue for status
w2022-03-15 18:29:40 DEBUG Building property status
w2022-03-15 18:29:40 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 18:29:40 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=support, insertable=true, updatable=true, unique=false}
w2022-03-15 18:29:40 DEBUG Building property support
w2022-03-15 18:29:40 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=title, insertable=true, updatable=true, unique=false}
w2022-03-15 18:29:40 DEBUG MetadataSourceProcessor property title with lazy=false
w2022-03-15 18:29:40 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:title]
w2022-03-15 18:29:40 DEBUG building SimpleValue for title
w2022-03-15 18:29:40 DEBUG Building property title
w2022-03-15 18:29:40 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.User
w2022-03-15 18:29:40 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 18:29:40 DEBUG Import with entity name User
w2022-03-15 18:29:40 DEBUG Bind entity ru.edu.helpdesk.entity.User on table user
w2022-03-15 18:29:40 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 18:29:40 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.User] is safe
w2022-03-15 18:29:40 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.User
w2022-03-15 18:29:40 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 18:29:40 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:id]
w2022-03-15 18:29:40 DEBUG building SimpleValue for id
w2022-03-15 18:29:40 DEBUG Building property id
w2022-03-15 18:29:40 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 18:29:40 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
w2022-03-15 18:29:40 DEBUG MetadataSourceProcessor property firstName with lazy=false
w2022-03-15 18:29:40 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:firstName]
w2022-03-15 18:29:40 DEBUG building SimpleValue for firstName
w2022-03-15 18:29:40 DEBUG Building property firstName
w2022-03-15 18:29:40 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
w2022-03-15 18:29:40 DEBUG MetadataSourceProcessor property lastName with lazy=false
w2022-03-15 18:29:40 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:lastName]
w2022-03-15 18:29:40 DEBUG building SimpleValue for lastName
w2022-03-15 18:29:40 DEBUG Building property lastName
w2022-03-15 18:29:40 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=login, insertable=true, updatable=true, unique=false}
w2022-03-15 18:29:40 DEBUG MetadataSourceProcessor property login with lazy=false
w2022-03-15 18:29:40 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:login]
w2022-03-15 18:29:40 DEBUG building SimpleValue for login
w2022-03-15 18:29:40 DEBUG Building property login
w2022-03-15 18:29:40 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
w2022-03-15 18:29:40 DEBUG MetadataSourceProcessor property password with lazy=false
w2022-03-15 18:29:40 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:password]
w2022-03-15 18:29:40 DEBUG building SimpleValue for password
w2022-03-15 18:29:40 DEBUG Building property password
w2022-03-15 18:29:40 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=role, insertable=true, updatable=true, unique=false}
w2022-03-15 18:29:40 DEBUG MetadataSourceProcessor property role with lazy=false
w2022-03-15 18:29:40 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:role]
w2022-03-15 18:29:40 DEBUG building SimpleValue for role
w2022-03-15 18:29:40 DEBUG Building property role
w2022-03-15 18:29:40 DEBUG Starting fillSimpleValue for id
w2022-03-15 18:29:40 DEBUG Starting fillSimpleValue for message
w2022-03-15 18:29:40 DEBUG Starting fillSimpleValue for id
w2022-03-15 18:29:40 DEBUG Starting fillSimpleValue for status
w2022-03-15 18:29:40 DEBUG Starting fillSimpleValue for title
w2022-03-15 18:29:40 DEBUG Starting fillSimpleValue for id
w2022-03-15 18:29:40 DEBUG Starting fillSimpleValue for firstName
w2022-03-15 18:29:40 DEBUG Starting fillSimpleValue for lastName
w2022-03-15 18:29:40 DEBUG Starting fillSimpleValue for login
w2022-03-15 18:29:40 DEBUG Starting fillSimpleValue for password
w2022-03-15 18:29:40 DEBUG Starting fillSimpleValue for role
w2022-03-15 18:29:40 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [comment]
w2022-03-15 18:29:40 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [ticket]
w2022-03-15 18:29:40 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [user]
w2022-03-15 18:29:40 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 18:29:40 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 18:29:40 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 18:29:40 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 18:29:40 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 18:29:40 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 18:29:40 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 18:29:40 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 18:29:40 DEBUG Building session factory
w2022-03-15 18:29:40 DEBUG SessionFactory name : null
w2022-03-15 18:29:40 DEBUG Automatic flush during beforeCompletion(): enabled
w2022-03-15 18:29:40 DEBUG Automatic session close at end of transaction: disabled
w2022-03-15 18:29:40 DEBUG Statistics: disabled
w2022-03-15 18:29:40 DEBUG Deleted entity synthetic identifier rollback: disabled
w2022-03-15 18:29:40 DEBUG Default entity-mode: pojo
w2022-03-15 18:29:40 DEBUG Check Nullability in Core (should be disabled when Bean Validation is on): enabled
w2022-03-15 18:29:40 DEBUG Allow initialization of lazy state outside session : disabled
w2022-03-15 18:29:40 DEBUG Using BatchFetchStyle : LEGACY
w2022-03-15 18:29:40 DEBUG Default batch fetch size: -1
w2022-03-15 18:29:40 DEBUG Maximum outer join fetch depth: null
w2022-03-15 18:29:40 DEBUG Default null ordering: NONE
w2022-03-15 18:29:40 DEBUG Order SQL updates by primary key: disabled
w2022-03-15 18:29:40 DEBUG Order SQL inserts for batching: disabled
w2022-03-15 18:29:40 DEBUG multi-tenancy strategy : NONE
w2022-03-15 18:29:40 DEBUG JTA Track by Thread: enabled
w2022-03-15 18:29:40 DEBUG Query language substitutions: {}
w2022-03-15 18:29:40 DEBUG Named query checking : enabled
w2022-03-15 18:29:40 DEBUG Second-level cache: disabled
w2022-03-15 18:29:40 DEBUG Second-level query cache: disabled
w2022-03-15 18:29:40 DEBUG Second-level query cache factory: null
w2022-03-15 18:29:40 DEBUG Second-level cache region prefix: null
w2022-03-15 18:29:40 DEBUG Optimize second-level cache for minimal puts: disabled
w2022-03-15 18:29:40 DEBUG Structured second-level cache entries: disabled
w2022-03-15 18:29:40 DEBUG Second-level cache direct-reference entries: disabled
w2022-03-15 18:29:40 DEBUG Automatic eviction of collection cache: disabled
w2022-03-15 18:29:40 DEBUG JDBC batch size: 1
w2022-03-15 18:29:40 DEBUG JDBC batch updates for versioned data: enabled
w2022-03-15 18:29:40 DEBUG Scrollable result sets: disabled
w2022-03-15 18:29:40 DEBUG Wrap result sets: disabled
w2022-03-15 18:29:40 DEBUG JDBC3 getGeneratedKeys(): enabled
w2022-03-15 18:29:40 DEBUG JDBC result set fetch size: null
w2022-03-15 18:29:40 DEBUG Connection release mode: ON_CLOSE
w2022-03-15 18:29:40 DEBUG Generate SQL with comments: disabled
w2022-03-15 18:29:40 DEBUG JPA compliance - query : disabled
w2022-03-15 18:29:40 DEBUG JPA compliance - closed-handling : disabled
w2022-03-15 18:29:40 DEBUG JPA compliance - lists : disabled
w2022-03-15 18:29:40 DEBUG JPA compliance - transactions : disabled
w2022-03-15 18:29:40 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 18:29:40 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 18:29:40 DEBUG Session factory constructed with filter configurations : {}
w2022-03-15 18:29:40 DEBUG Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=true, java.specification.version=1.8, file.encoding.pkg=sun.io, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@1a8961ba, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.SQLiteDialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\charsets.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\cldrdata.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\dnsns.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\jaccess.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\localedata.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\nashorn.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunec.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunmscapi.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\zipfs.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jce.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jfr.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jsse.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\management-agent.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\resources.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\rt.jar;C:\Users\Ольга\Desktop\Java\Project\Project1\helpdeskproject\target\classes;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\2.6.4\spring-boot-starter-data-jpa-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\2.6.4\spring-boot-starter-jdbc-2.6.4.jar;C:\Users\Ольга\.m2\repository\com\zaxxer\HikariCP\4.0.3\HikariCP-4.0.3.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-jdbc\5.3.16\spring-jdbc-5.3.16.jar;C:\Users\Ольга\.m2\repository\jakarta\transaction\jakarta.transaction-api\1.3.3\jakarta.transaction-api-1.3.3.jar;C:\Users\Ольга\.m2\repository\jakarta\persistence\jakarta.persistence-api\2.2.3\jakarta.persistence-api-2.2.3.jar;C:\Users\Ольга\.m2\repository\org\hibernate\hibernate-core\5.6.5.Final\hibernate-core-5.6.5.Final.jar;C:\Users\Ольга\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy\1.11.22\byte-buddy-1.11.22.jar;C:\Users\Ольга\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ольга\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Ольга\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.6\jaxb-runtime-2.3.6.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\txw2\2.3.6\txw2-2.3.6.jar;C:\Users\Ольга\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.12\istack-commons-runtime-3.0.12.jar;C:\Users\Ольга\.m2\repository\com\sun\activation\jakarta.activation\1.2.2\jakarta.activation-1.2.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\data\spring-data-jpa\2.6.2\spring-data-jpa-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\data\spring-data-commons\2.6.2\spring-data-commons-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-orm\5.3.16\spring-orm-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-context\5.3.16\spring-context-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-tx\5.3.16\spring-tx-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-beans\5.3.16\spring-beans-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-aspects\5.3.16\spring-aspects-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-security\2.6.4\spring-boot-starter-security-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter\2.6.4\spring-boot-starter-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-logging\2.6.4\spring-boot-starter-logging-2.6.4.jar;C:\Users\Ольга\.m2\repository\ch\qos\logback\logback-classic\1.2.10\logback-classic-1.2.10.jar;C:\Users\Ольга\.m2\repository\ch\qos\logback\logback-core\1.2.10\logback-core-1.2.10.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.17.1\log4j-to-slf4j-2.17.1.jar;C:\Users\Ольга\.m2\repository\org\slf4j\jul-to-slf4j\1.7.36\jul-to-slf4j-1.7.36.jar;C:\Users\Ольга\.m2\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;C:\Users\Ольга\.m2\repository\org\yaml\snakeyaml\1.29\snakeyaml-1.29.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-aop\5.3.16\spring-aop-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-config\5.6.2\spring-security-config-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-web\5.6.2\spring-security-web-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-expression\5.3.16\spring-expression-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-web\2.6.4\spring-boot-starter-web-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-json\2.6.4\spring-boot-starter-json-2.6.4.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.13.1\jackson-datatype-jdk8-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.13.1\jackson-datatype-jsr310-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.13.1\jackson-module-parameter-names-2.13.1.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\2.6.4\spring-boot-starter-tomcat-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.58\tomcat-embed-core-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\9.0.58\tomcat-embed-el-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.58\tomcat-embed-websocket-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-web\5.3.16\spring-web-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-webmvc\5.3.16\spring-webmvc-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-devtools\2.6.4\spring-boot-devtools-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot\2.6.4\spring-boot-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\2.6.4\spring-boot-autoconfigure-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\xerial\sqlite-jdbc\3.36.0.3\sqlite-jdbc-3.36.0.3.jar;C:\Users\Ольга\.m2\repository\com\zsoltfabok\sqlite-dialect\1.0\sqlite-dialect-1.0.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-aop\2.6.2\spring-boot-starter-aop-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\aspectj\aspectjweaver\1.9.7\aspectjweaver-1.9.7.jar;C:\Users\Ольга\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.3\jakarta.xml.bind-api-2.3.3.jar;C:\Users\Ольга\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.2\jakarta.activation-api-1.2.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-core\5.3.16\spring-core-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-jcl\5.3.16\spring-jcl-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-core\5.6.2\spring-security-core-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-crypto\5.6.2\spring-security-crypto-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\projectlombok\lombok\1.18.22\lombok-1.18.22.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\2.6.4\spring-boot-starter-thymeleaf-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\thymeleaf-spring5\3.0.15.RELEASE\thymeleaf-spring5-3.0.15.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\thymeleaf\3.0.15.RELEASE\thymeleaf-3.0.15.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\attoparser\attoparser\2.0.5.RELEASE\attoparser-2.0.5.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-java8time\3.0.4.RELEASE\thymeleaf-extras-java8time-3.0.4.RELEASE.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.1\jackson-databind-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.1\jackson-annotations-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.1\jackson-core-2.13.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-api\2.4.1\log4j-api-2.4.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-core\2.4.1\log4j-core-2.4.1.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.2\lib\idea_rt.jar, java.vm.vendor=Temurin, sun.arch.data.model=64, user.variant=, java.vendor.url=https://adoptium.net/, catalina.useNaming=false, user.timezone=Europe/Moscow, jakarta.persistence.sharedCache.mode=UNSPECIFIED, os.name=Windows 10, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), user.country=RU, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\bin, sun.java.command=ru.edu.helpdesk.HelpdeskApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@2e1e5416, com.sun.management.jmxremote=, javax.persistence.sharedCache.mode=UNSPECIFIED, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, user.home=C:\Users\Ольга, user.language=ru, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre, file.separator=\, spring.output.ansi.enabled=always, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, sun.boot.class.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\resources.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\rt.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\sunrsasign.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jsse.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jce.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\charsets.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jfr.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\classes, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_312-b07, user.name=Эльдорадо, spring.jmx.enabled=true, path.separator=;, os.version=10.0, java.endorsed.dirs=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\endorsed, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=default, spring.beaninfo.ignore=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=C:\Users\134E~1\AppData\Local\Temp\, catalina.home=C:\Users\Ольга\AppData\Local\Temp\tomcat.8080.2853860736444840694, java.version=1.8.0_312, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\Ольга\Desktop\Java\Project\Project1\helpdeskproject, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=9776, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\Ольга\AppData\Local\Temp\tomcat.8080.2853860736444840694, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@723fc16c, java.library.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\windows\System32\OpenSSH\;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\Program Files\apache-maven-3.8.4\bin;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Ольга\AppData\Local\Microsoft\WindowsApps;C:\Users\Ольга\AppData\Local\Programs\Microsoft VS Code\bin;C:\SQLite;C:\Users\Ольга\AppData\Roaming\npm;C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.2\bin;;., java.vendor=Temurin, java.vm.info=mixed mode, java.vm.version=25.312-b07, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, java.ext.dirs=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext;C:\windows\Sun\Java\lib\ext, hibernate.connection.datasource=HikariDataSource (HikariPool-1), hibernate.hbm2ddl.import_files=data/import.sql, java.class.version=52.0}
w2022-03-15 18:29:40 DEBUG Skipping JACC integration as it was not enabled
w2022-03-15 18:29:40 DEBUG Using ORDINAL-based conversion for Enum ru.edu.helpdesk.entity.UserRole
w2022-03-15 18:29:40 DEBUG Using ORDINAL-based conversion for Enum ru.edu.helpdesk.entity.TicketStatus
w2022-03-15 18:29:40 DEBUG Instantiated session factory
w2022-03-15 18:29:40 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2f2fbdd8] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6bdb6924]
w2022-03-15 18:29:40 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.User] is safe
w2022-03-15 18:29:40 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.User
w2022-03-15 18:29:40 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:29:40 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:29:40 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:29:40 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:29:40 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Ticket] is safe
w2022-03-15 18:29:40 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Ticket
w2022-03-15 18:29:40 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:29:40 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:29:40 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:29:40 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:29:40 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:29:40 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:29:40 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:29:40 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:29:40 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Comment] is safe
w2022-03-15 18:29:40 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Comment
w2022-03-15 18:29:40 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:29:40 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:29:40 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:29:40 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:29:40 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.User
w2022-03-15 18:29:40 DEBUG  Version select: select id from user where id =?
w2022-03-15 18:29:40 DEBUG  Snapshot select: select user_.id, user_.first_name as first_na2_2_, user_.last_name as last_nam3_2_, user_.login as login4_2_, user_.password as password5_2_, user_.role as role6_2_ from user user_ where user_.id=?
w2022-03-15 18:29:40 DEBUG  Insert 0: insert into user (first_name, last_name, login, password, role, id) values (?, ?, ?, ?, ?, ?)
w2022-03-15 18:29:40 DEBUG  Update 0: update user set first_name=?, last_name=?, login=?, password=?, role=? where id=?
w2022-03-15 18:29:40 DEBUG  Delete 0: delete from user where id=?
w2022-03-15 18:29:40 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7791203d]
w2022-03-15 18:29:40 DEBUG Visiting attribute path : firstName
w2022-03-15 18:29:40 DEBUG Visiting attribute path : lastName
w2022-03-15 18:29:40 DEBUG Visiting attribute path : login
w2022-03-15 18:29:40 DEBUG Visiting attribute path : password
w2022-03-15 18:29:40 DEBUG Visiting attribute path : role
w2022-03-15 18:29:40 DEBUG Building LoadPlan...
w2022-03-15 18:29:40 DEBUG processing queryspace <gen:0>
w2022-03-15 18:29:40 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.User)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

w2022-03-15 18:29:40 DEBUG Static select for entity ru.edu.helpdesk.entity.User [NONE]: select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 18:29:40 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.Ticket
w2022-03-15 18:29:40 DEBUG  Version select: select id from ticket where id =?
w2022-03-15 18:29:40 DEBUG  Snapshot select: select ticket_.id, ticket_.client_id as client_i4_1_, ticket_.status as status2_1_, ticket_.support_id as support_5_1_, ticket_.title as title3_1_ from ticket ticket_ where ticket_.id=?
w2022-03-15 18:29:40 DEBUG  Insert 0: insert into ticket (client_id, status, support_id, title, id) values (?, ?, ?, ?, ?)
w2022-03-15 18:29:40 DEBUG  Update 0: update ticket set client_id=?, status=?, support_id=?, title=? where id=?
w2022-03-15 18:29:40 DEBUG  Delete 0: delete from ticket where id=?
w2022-03-15 18:29:40 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ee78c3f]
w2022-03-15 18:29:40 DEBUG Visiting attribute path : client
w2022-03-15 18:29:40 DEBUG Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60f6a7bd]
w2022-03-15 18:29:40 DEBUG Visiting attribute path : client.firstName
w2022-03-15 18:29:40 DEBUG Visiting attribute path : client.lastName
w2022-03-15 18:29:40 DEBUG Visiting attribute path : client.login
w2022-03-15 18:29:40 DEBUG Visiting attribute path : client.password
w2022-03-15 18:29:40 DEBUG Visiting attribute path : client.role
w2022-03-15 18:29:40 DEBUG Visiting attribute path : status
w2022-03-15 18:29:40 DEBUG Visiting attribute path : support
w2022-03-15 18:29:40 DEBUG Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8674d38]
w2022-03-15 18:29:40 DEBUG Visiting attribute path : support.firstName
w2022-03-15 18:29:40 DEBUG Visiting attribute path : support.lastName
w2022-03-15 18:29:40 DEBUG Visiting attribute path : support.login
w2022-03-15 18:29:40 DEBUG Visiting attribute path : support.password
w2022-03-15 18:29:40 DEBUG Visiting attribute path : support.role
w2022-03-15 18:29:40 DEBUG Visiting attribute path : title
w2022-03-15 18:29:40 DEBUG Building LoadPlan...
w2022-03-15 18:29:40 DEBUG processing queryspace <gen:0>
w2022-03-15 18:29:40 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.Ticket)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.Ticket, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.Ticket)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:1>, path=ru.edu.helpdesk.entity.Ticket.client)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:2>, path=ru.edu.helpdesk.entity.Ticket.support)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.Ticket)
          - SQL table alias mapping - ticket0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(client)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
          - JOIN (JoinDefinedByMetadata(support)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user2_
                - alias suffix - 2_
                - suffixed key columns - {id1_2_2_}

w2022-03-15 18:29:40 DEBUG Static select for entity ru.edu.helpdesk.entity.Ticket [NONE]: select ticket0_.id as id1_1_0_, ticket0_.client_id as client_i4_1_0_, ticket0_.status as status2_1_0_, ticket0_.support_id as support_5_1_0_, ticket0_.title as title3_1_0_, user1_.id as id1_2_1_, user1_.first_name as first_na2_2_1_, user1_.last_name as last_nam3_2_1_, user1_.login as login4_2_1_, user1_.password as password5_2_1_, user1_.role as role6_2_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id left outer join user user2_ on ticket0_.support_id=user2_.id where ticket0_.id=?
w2022-03-15 18:29:40 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.Comment
w2022-03-15 18:29:40 DEBUG  Version select: select id from comment where id =?
w2022-03-15 18:29:40 DEBUG  Snapshot select: select comment_.id, comment_.message as message2_0_, comment_.ticket_id as ticket_i3_0_, comment_.user_id as user_id4_0_ from comment comment_ where comment_.id=?
w2022-03-15 18:29:40 DEBUG  Insert 0: insert into comment (message, ticket_id, user_id, id) values (?, ?, ?, ?)
w2022-03-15 18:29:40 DEBUG  Update 0: update comment set message=?, ticket_id=?, user_id=? where id=?
w2022-03-15 18:29:40 DEBUG  Delete 0: delete from comment where id=?
w2022-03-15 18:29:40 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@722f41a7]
w2022-03-15 18:29:40 DEBUG Visiting attribute path : message
w2022-03-15 18:29:40 DEBUG Visiting attribute path : ticket
w2022-03-15 18:29:40 DEBUG Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d4948cc]
w2022-03-15 18:29:40 DEBUG Visiting attribute path : ticket.client
w2022-03-15 18:29:40 DEBUG Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41f2e78f]
w2022-03-15 18:29:40 DEBUG Visiting attribute path : ticket.client.firstName
w2022-03-15 18:29:40 DEBUG Visiting attribute path : ticket.client.lastName
w2022-03-15 18:29:40 DEBUG Visiting attribute path : ticket.client.login
w2022-03-15 18:29:40 DEBUG Visiting attribute path : ticket.client.password
w2022-03-15 18:29:40 DEBUG Visiting attribute path : ticket.client.role
w2022-03-15 18:29:40 DEBUG Visiting attribute path : ticket.status
w2022-03-15 18:29:40 DEBUG Visiting attribute path : ticket.support
w2022-03-15 18:29:40 DEBUG Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a0de548]
w2022-03-15 18:29:40 DEBUG Visiting attribute path : ticket.support.firstName
w2022-03-15 18:29:40 DEBUG Visiting attribute path : ticket.support.lastName
w2022-03-15 18:29:40 DEBUG Visiting attribute path : ticket.support.login
w2022-03-15 18:29:40 DEBUG Visiting attribute path : ticket.support.password
w2022-03-15 18:29:40 DEBUG Visiting attribute path : ticket.support.role
w2022-03-15 18:29:40 DEBUG Visiting attribute path : ticket.title
w2022-03-15 18:29:40 DEBUG Visiting attribute path : user
w2022-03-15 18:29:40 DEBUG Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@606ab3d8]
w2022-03-15 18:29:40 DEBUG Visiting attribute path : user.firstName
w2022-03-15 18:29:40 DEBUG Visiting attribute path : user.lastName
w2022-03-15 18:29:40 DEBUG Visiting attribute path : user.login
w2022-03-15 18:29:40 DEBUG Visiting attribute path : user.password
w2022-03-15 18:29:40 DEBUG Visiting attribute path : user.role
w2022-03-15 18:29:40 DEBUG Building LoadPlan...
w2022-03-15 18:29:40 DEBUG processing queryspace <gen:0>
w2022-03-15 18:29:40 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.Comment)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.Comment, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.Comment)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.Ticket, querySpaceUid=<gen:1>, path=ru.edu.helpdesk.entity.Comment.ticket)
             - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:2>, path=ru.edu.helpdesk.entity.Comment.ticket.client)
             - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:3>, path=ru.edu.helpdesk.entity.Comment.ticket.support)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:4>, path=ru.edu.helpdesk.entity.Comment.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(ticket)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ru.edu.helpdesk.entity.Ticket)
                - SQL table alias mapping - ticket1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(client)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=ru.edu.helpdesk.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}
                - JOIN (JoinDefinedByMetadata(support)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=ru.edu.helpdesk.entity.User)
                      - SQL table alias mapping - user3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_2_3_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user4_
                - alias suffix - 4_
                - suffixed key columns - {id1_2_4_}

w2022-03-15 18:29:40 DEBUG Static select for entity ru.edu.helpdesk.entity.Comment [NONE]: select comment0_.id as id1_0_0_, comment0_.message as message2_0_0_, comment0_.ticket_id as ticket_i3_0_0_, comment0_.user_id as user_id4_0_0_, ticket1_.id as id1_1_1_, ticket1_.client_id as client_i4_1_1_, ticket1_.status as status2_1_1_, ticket1_.support_id as support_5_1_1_, ticket1_.title as title3_1_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_, user3_.id as id1_2_3_, user3_.first_name as first_na2_2_3_, user3_.last_name as last_nam3_2_3_, user3_.login as login4_2_3_, user3_.password as password5_2_3_, user3_.role as role6_2_3_, user4_.id as id1_2_4_, user4_.first_name as first_na2_2_4_, user4_.last_name as last_nam3_2_4_, user4_.login as login4_2_4_, user4_.password as password5_2_4_, user4_.role as role6_2_4_ from comment comment0_ left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id left outer join user user2_ on ticket1_.client_id=user2_.id left outer join user user3_ on ticket1_.support_id=user3_.id left outer join user user4_ on comment0_.user_id=user4_.id where comment0_.id=?
w2022-03-15 18:29:40 DEBUG drop table if exists comment
w2022-03-15 18:29:40 DEBUG drop table if exists hibernate_sequence
w2022-03-15 18:29:40 DEBUG drop table if exists ticket
w2022-03-15 18:29:40 DEBUG drop table if exists user
w2022-03-15 18:29:40 DEBUG create table comment (id bigint not null, message varchar(255) not null, ticket_id bigint, user_id bigint, primary key (id))
w2022-03-15 18:29:40 DEBUG create table hibernate_sequence (next_val bigint)
w2022-03-15 18:29:40 DEBUG insert into hibernate_sequence values ( 1 )
w2022-03-15 18:29:40 DEBUG create table ticket (id bigint not null, status integer, title varchar(255) not null, client_id bigint, support_id bigint, primary key (id))
w2022-03-15 18:29:40 DEBUG create table user (id bigint not null, first_name varchar(255), last_name varchar(255), login varchar(255) not null, password varchar(255) not null, role integer, primary key (id))
w2022-03-15 18:29:40 INFO  HHH000476: Executing import script 'file:/C:/Users/%d0%9e%d0%bb%d1%8c%d0%b3%d0%b0/Desktop/Java/Project/Project1/helpdeskproject/target/classes/data/import.sql'
w2022-03-15 18:29:40 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (1, 'admin', 'admin', 'admin', 'admin', 0)
w2022-03-15 18:29:40 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (2, 'support', 'support', 'support', 'support', 1)
w2022-03-15 18:29:40 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (3, 'user1', 'user1', 'user1', 'user1', 2)
w2022-03-15 18:29:40 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (4, 'user2', 'user2', 'user2', 'user2', 2)
w2022-03-15 18:29:40 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (1, 1, 'Hello user1',1, 2)
w2022-03-15 18:29:40 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (2, 0, 'Title2', 1, 2)
w2022-03-15 18:29:40 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (3, 0, 'Message user2', 4, NULL)
w2022-03-15 18:29:40 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (1, "comment ticket1", 1, 3)
w2022-03-15 18:29:40 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (2, "comment ticket2", 2, 3)
w2022-03-15 18:29:40 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (3, "comment ticket11", 1, 2)
w2022-03-15 18:29:40 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (4, "comment ticket111", 1, 2)
w2022-03-15 18:29:40 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (5, "comment ticket22", 2, 2)
w2022-03-15 18:29:40 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (6, "comment ticket3", 3, 4)
w2022-03-15 18:29:40 DEBUG UPDATE hibernate_sequence SET next_val = 8 WHERE next_val = 1
w2022-03-15 18:29:40 INFO  HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
w2022-03-15 18:29:40 DEBUG Checking 0 named HQL queries
w2022-03-15 18:29:40 DEBUG Checking 0 named SQL queries
w2022-03-15 18:29:40 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 18:29:40 DEBUG Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@66a34ab6
w2022-03-15 18:29:40 DEBUG Registering SessionFactory: ff7cab00-f20a-473a-b8d1-a0f7851c3dcc (<unnamed>)
w2022-03-15 18:29:40 DEBUG Not binding SessionFactory to JNDI, no JNDI name configured
w2022-03-15 18:29:40 DEBUG Statistics initialized [enabled=false]
w2022-03-15 18:29:40 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 18:29:40 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 18:29:40 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 18:29:51 DEBUG Rendered criteria query -> select generatedAlias0 from Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 18:29:51 DEBUG QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@5b062683
w2022-03-15 18:29:51 DEBUG parse() - HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 18:29:51 DEBUG throwQueryException() : no errors
w2022-03-15 18:29:51 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[IDENT] Node: 'ru'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'edu'
    |  |  |  |  |  |  \-[IDENT] Node: 'helpdesk'
    |  |  |  |  |  \-[IDENT] Node: 'entity'
    |  |  |  |  \-[IDENT] Node: 'Ticket'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'client'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias1'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

w2022-03-15 18:29:51 DEBUG select << begin [level=1, statement=select]
w2022-03-15 18:29:51 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.Ticket (generatedAlias0) -> ticket0_
w2022-03-15 18:29:51 DEBUG Resolved : generatedAlias0 -> ticket0_.id
w2022-03-15 18:29:51 DEBUG getDataType() : client -> org.hibernate.type.ManyToOneType(ru.edu.helpdesk.entity.User)
w2022-03-15 18:29:51 DEBUG dereferenceEntityJoin() : generating join for client in ru.edu.helpdesk.entity.Ticket (generatedAlias1) parent = [ {null} ]
w2022-03-15 18:29:51 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.User (generatedAlias1) -> user1_
w2022-03-15 18:29:51 DEBUG addJoinByPathMap() : generatedAlias0.client -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}
w2022-03-15 18:29:51 DEBUG Resolved : generatedAlias0.client -> ticket0_.client_id
w2022-03-15 18:29:51 DEBUG createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'user user1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Ticket.client,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}

w2022-03-15 18:29:51 DEBUG Resolved : generatedAlias0 -> ticket0_.id
w2022-03-15 18:29:51 DEBUG Resolved : generatedAlias1 -> user1_.id
w2022-03-15 18:29:51 DEBUG getDataType() : id -> org.hibernate.type.LongType@2fb6b753
w2022-03-15 18:29:51 DEBUG Resolved : generatedAlias1.id -> user1_.id
w2022-03-15 18:29:51 DEBUG select : finishing up [level=1, statement=select]
w2022-03-15 18:29:51 DEBUG processQuery() :  ( SELECT ( {select clause} ticket0_.id ) ( FromClause{level=1} ( ticket ticket0_ user user1_ ) ) ( where ( = ( user1_.id user1_.id id ) ? ) ) )
w2022-03-15 18:29:51 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Ticket): [ticket]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.Ticket)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.User)
          | path: generatedAlias1.id
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.User)
          |  | originalText: generatedAlias1
          |  \-IdentNode
          |    persister: null
          |    originalText: id
          \-ParameterNode

w2022-03-15 18:29:51 DEBUG Using FROM fragment [ticket ticket0_]
w2022-03-15 18:29:51 DEBUG Using FROM fragment [left outer join user user1_ on ticket0_.client_id=user1_.id]
w2022-03-15 18:29:51 DEBUG select >> end [level=1, statement=select]
w2022-03-15 18:29:51 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (ticket,user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'ticket0_.id as id1_1_' {alias=generatedAlias0, className=ru.edu.helpdesk.entity.Ticket, tableAlias=ticket0_}
    |  \-[SQL_TOKEN] SqlFragment: 'ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[ticket0_, user1_], fromElementsByPath=[generatedAlias0.client], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'ticket ticket0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=ticket,tableAlias=ticket0_,origin=null,columns={,className=ru.edu.helpdesk.entity.Ticket}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join user user1_ on ticket0_.client_id=user1_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Ticket.client,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user1_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias1.id,tableAlias=user1_,className=ru.edu.helpdesk.entity.User,classAlias=generatedAlias1}
          |  +-[ALIAS_REF] IdentNode: 'user1_.id' {alias=generatedAlias1, className=ru.edu.helpdesk.entity.User, tableAlias=user1_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LongType@2fb6b753}

w2022-03-15 18:29:51 DEBUG throwQueryException() : no errors
w2022-03-15 18:29:51 DEBUG HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 18:29:51 DEBUG SQL: select ticket0_.id as id1_1_, ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id where user1_.id=?
w2022-03-15 18:29:51 DEBUG throwQueryException() : no errors
w2022-03-15 18:29:51 DEBUG select ticket0_.id as id1_1_, ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id where user1_.id=?
w2022-03-15 18:29:51 DEBUG Result set row: 0
w2022-03-15 18:29:51 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 18:29:51 DEBUG Result set row: 1
w2022-03-15 18:29:51 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 18:29:51 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 18:29:51 DEBUG Processing attribute `client` : value = 1
w2022-03-15 18:29:51 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 18:29:51 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 18:29:51 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 18:29:51 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#1]
w2022-03-15 18:29:51 DEBUG Processing attribute `firstName` : value = admin
w2022-03-15 18:29:51 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:29:51 DEBUG Processing attribute `lastName` : value = admin
w2022-03-15 18:29:51 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:29:51 DEBUG Processing attribute `login` : value = admin
w2022-03-15 18:29:51 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 18:29:51 DEBUG Processing attribute `password` : value = admin
w2022-03-15 18:29:51 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 18:29:51 DEBUG Processing attribute `role` : value = ADMIN
w2022-03-15 18:29:51 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 18:29:51 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#1]
w2022-03-15 18:29:51 DEBUG Done entity load : ru.edu.helpdesk.entity.User#1
w2022-03-15 18:29:51 DEBUG Processing attribute `status` : value = WORKING
w2022-03-15 18:29:51 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 18:29:51 DEBUG Processing attribute `support` : value = 2
w2022-03-15 18:29:51 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 18:29:51 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 18:29:51 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 18:29:51 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#2]
w2022-03-15 18:29:51 DEBUG Processing attribute `firstName` : value = support
w2022-03-15 18:29:51 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:29:51 DEBUG Processing attribute `lastName` : value = support
w2022-03-15 18:29:51 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:29:51 DEBUG Processing attribute `login` : value = support
w2022-03-15 18:29:51 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 18:29:51 DEBUG Processing attribute `password` : value = support
w2022-03-15 18:29:51 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 18:29:51 DEBUG Processing attribute `role` : value = SUPPORT
w2022-03-15 18:29:51 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 18:29:51 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#2]
w2022-03-15 18:29:51 DEBUG Done entity load : ru.edu.helpdesk.entity.User#2
w2022-03-15 18:29:51 DEBUG Processing attribute `title` : value = Hello user1
w2022-03-15 18:29:51 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 18:29:51 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 18:29:51 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 18:29:51 DEBUG Processing attribute `client` : value = 1
w2022-03-15 18:29:51 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 18:29:51 DEBUG Processing attribute `status` : value = OPEN
w2022-03-15 18:29:51 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 18:29:51 DEBUG Processing attribute `support` : value = 2
w2022-03-15 18:29:51 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 18:29:51 DEBUG Processing attribute `title` : value = Title2
w2022-03-15 18:29:51 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 18:29:51 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 18:29:54 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 18:29:54 DEBUG begin
w2022-03-15 18:29:54 DEBUG committing
w2022-03-15 18:29:54 DEBUG Rendered criteria query -> select generatedAlias0 from Comment as generatedAlias0 left join generatedAlias0.ticket as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 18:29:54 DEBUG parse() - HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Comment as generatedAlias0 left join generatedAlias0.ticket as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 18:29:54 DEBUG throwQueryException() : no errors
w2022-03-15 18:29:54 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[IDENT] Node: 'ru'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'edu'
    |  |  |  |  |  |  \-[IDENT] Node: 'helpdesk'
    |  |  |  |  |  \-[IDENT] Node: 'entity'
    |  |  |  |  \-[IDENT] Node: 'Comment'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'ticket'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias1'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

w2022-03-15 18:29:54 DEBUG select << begin [level=1, statement=select]
w2022-03-15 18:29:54 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.Comment (generatedAlias0) -> comment0_
w2022-03-15 18:29:54 DEBUG Resolved : generatedAlias0 -> comment0_.id
w2022-03-15 18:29:54 DEBUG getDataType() : ticket -> org.hibernate.type.ManyToOneType(ru.edu.helpdesk.entity.Ticket)
w2022-03-15 18:29:54 DEBUG dereferenceEntityJoin() : generating join for ticket in ru.edu.helpdesk.entity.Comment (generatedAlias1) parent = [ {null} ]
w2022-03-15 18:29:54 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.Ticket (generatedAlias1) -> ticket1_
w2022-03-15 18:29:54 DEBUG addJoinByPathMap() : generatedAlias0.ticket -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=ticket,tableAlias=ticket1_,origin=comment comment0_,columns={comment0_.ticket_id,className=ru.edu.helpdesk.entity.Ticket}}
w2022-03-15 18:29:54 DEBUG Resolved : generatedAlias0.ticket -> comment0_.ticket_id
w2022-03-15 18:29:54 DEBUG createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'ticket ticket1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Comment.ticket,tableName=ticket,tableAlias=ticket1_,origin=comment comment0_,columns={comment0_.ticket_id,className=ru.edu.helpdesk.entity.Ticket}}

w2022-03-15 18:29:54 DEBUG Resolved : generatedAlias0 -> comment0_.id
w2022-03-15 18:29:54 DEBUG Resolved : generatedAlias1 -> ticket1_.id
w2022-03-15 18:29:54 DEBUG getDataType() : id -> org.hibernate.type.LongType@2fb6b753
w2022-03-15 18:29:54 DEBUG Resolved : generatedAlias1.id -> ticket1_.id
w2022-03-15 18:29:54 DEBUG select : finishing up [level=1, statement=select]
w2022-03-15 18:29:54 DEBUG processQuery() :  ( SELECT ( {select clause} comment0_.id ) ( FromClause{level=1} ( comment comment0_ ticket ticket1_ ) ) ( where ( = ( ticket1_.id ticket1_.id id ) ? ) ) )
w2022-03-15 18:29:54 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Comment): [comment]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.Comment)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.Ticket)
          | path: generatedAlias1.id
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.Ticket)
          |  | originalText: generatedAlias1
          |  \-IdentNode
          |    persister: null
          |    originalText: id
          \-ParameterNode

w2022-03-15 18:29:54 DEBUG Using FROM fragment [comment comment0_]
w2022-03-15 18:29:54 DEBUG Using FROM fragment [left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id]
w2022-03-15 18:29:54 DEBUG select >> end [level=1, statement=select]
w2022-03-15 18:29:54 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (ticket,comment)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'comment0_.id as id1_0_' {alias=generatedAlias0, className=ru.edu.helpdesk.entity.Comment, tableAlias=comment0_}
    |  \-[SQL_TOKEN] SqlFragment: 'comment0_.message as message2_0_, comment0_.ticket_id as ticket_i3_0_, comment0_.user_id as user_id4_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[ticket1_, comment0_], fromElementsByPath=[generatedAlias0.ticket], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'comment comment0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=comment,tableAlias=comment0_,origin=null,columns={,className=ru.edu.helpdesk.entity.Comment}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Comment.ticket,tableName=ticket,tableAlias=ticket1_,origin=comment comment0_,columns={comment0_.ticket_id,className=ru.edu.helpdesk.entity.Ticket}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'ticket1_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias1.id,tableAlias=ticket1_,className=ru.edu.helpdesk.entity.Ticket,classAlias=generatedAlias1}
          |  +-[ALIAS_REF] IdentNode: 'ticket1_.id' {alias=generatedAlias1, className=ru.edu.helpdesk.entity.Ticket, tableAlias=ticket1_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LongType@2fb6b753}

w2022-03-15 18:29:54 DEBUG throwQueryException() : no errors
w2022-03-15 18:29:54 DEBUG HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Comment as generatedAlias0 left join generatedAlias0.ticket as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 18:29:54 DEBUG SQL: select comment0_.id as id1_0_, comment0_.message as message2_0_, comment0_.ticket_id as ticket_i3_0_, comment0_.user_id as user_id4_0_ from comment comment0_ left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id where ticket1_.id=?
w2022-03-15 18:29:54 DEBUG throwQueryException() : no errors
w2022-03-15 18:29:54 DEBUG select comment0_.id as id1_0_, comment0_.message as message2_0_, comment0_.ticket_id as ticket_i3_0_, comment0_.user_id as user_id4_0_ from comment comment0_ left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id where ticket1_.id=?
w2022-03-15 18:29:54 DEBUG Result set row: 0
w2022-03-15 18:29:54 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Comment#1]
w2022-03-15 18:29:54 DEBUG Result set row: 1
w2022-03-15 18:29:54 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Comment#3]
w2022-03-15 18:29:54 DEBUG Result set row: 2
w2022-03-15 18:29:54 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Comment#4]
w2022-03-15 18:29:54 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Comment#1]
w2022-03-15 18:29:54 DEBUG Processing attribute `message` : value = comment ticket1
w2022-03-15 18:29:54 DEBUG Attribute (`message`)  - enhanced for lazy-loading? - false
w2022-03-15 18:29:54 DEBUG Processing attribute `ticket` : value = 1
w2022-03-15 18:29:54 DEBUG Attribute (`ticket`)  - enhanced for lazy-loading? - false
w2022-03-15 18:29:54 DEBUG select ticket0_.id as id1_1_0_, ticket0_.client_id as client_i4_1_0_, ticket0_.status as status2_1_0_, ticket0_.support_id as support_5_1_0_, ticket0_.title as title3_1_0_, user1_.id as id1_2_1_, user1_.first_name as first_na2_2_1_, user1_.last_name as last_nam3_2_1_, user1_.login as login4_2_1_, user1_.password as password5_2_1_, user1_.role as role6_2_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id left outer join user user2_ on ticket0_.support_id=user2_.id where ticket0_.id=?
w2022-03-15 18:29:54 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 18:29:54 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 18:29:54 DEBUG Processing attribute `client` : value = 1
w2022-03-15 18:29:54 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 18:29:54 DEBUG Processing attribute `status` : value = WORKING
w2022-03-15 18:29:54 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 18:29:54 DEBUG Processing attribute `support` : value = 2
w2022-03-15 18:29:54 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 18:29:54 DEBUG Processing attribute `title` : value = Hello user1
w2022-03-15 18:29:54 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 18:29:54 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 18:29:54 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#1]
w2022-03-15 18:29:54 DEBUG Processing attribute `firstName` : value = admin
w2022-03-15 18:29:54 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:29:54 DEBUG Processing attribute `lastName` : value = admin
w2022-03-15 18:29:54 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:29:54 DEBUG Processing attribute `login` : value = admin
w2022-03-15 18:29:54 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 18:29:54 DEBUG Processing attribute `password` : value = admin
w2022-03-15 18:29:54 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 18:29:54 DEBUG Processing attribute `role` : value = ADMIN
w2022-03-15 18:29:54 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 18:29:54 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#1]
w2022-03-15 18:29:54 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#2]
w2022-03-15 18:29:54 DEBUG Processing attribute `firstName` : value = support
w2022-03-15 18:29:54 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:29:54 DEBUG Processing attribute `lastName` : value = support
w2022-03-15 18:29:54 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:29:54 DEBUG Processing attribute `login` : value = support
w2022-03-15 18:29:54 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 18:29:54 DEBUG Processing attribute `password` : value = support
w2022-03-15 18:29:54 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 18:29:54 DEBUG Processing attribute `role` : value = SUPPORT
w2022-03-15 18:29:54 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 18:29:54 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#2]
w2022-03-15 18:29:54 DEBUG Done entity load : ru.edu.helpdesk.entity.Ticket#1
w2022-03-15 18:29:54 DEBUG Processing attribute `user` : value = 3
w2022-03-15 18:29:54 DEBUG Attribute (`user`)  - enhanced for lazy-loading? - false
w2022-03-15 18:29:54 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 18:29:54 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 18:29:54 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#3]
w2022-03-15 18:29:54 DEBUG Processing attribute `firstName` : value = user1
w2022-03-15 18:29:54 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:29:54 DEBUG Processing attribute `lastName` : value = user1
w2022-03-15 18:29:54 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:29:54 DEBUG Processing attribute `login` : value = user1
w2022-03-15 18:29:54 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 18:29:54 DEBUG Processing attribute `password` : value = user1
w2022-03-15 18:29:54 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 18:29:54 DEBUG Processing attribute `role` : value = USER
w2022-03-15 18:29:54 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 18:29:54 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#3]
w2022-03-15 18:29:54 DEBUG Done entity load : ru.edu.helpdesk.entity.User#3
w2022-03-15 18:29:54 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Comment#1]
w2022-03-15 18:29:54 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Comment#3]
w2022-03-15 18:29:54 DEBUG Processing attribute `message` : value = comment ticket11
w2022-03-15 18:29:54 DEBUG Attribute (`message`)  - enhanced for lazy-loading? - false
w2022-03-15 18:29:54 DEBUG Processing attribute `ticket` : value = 1
w2022-03-15 18:29:54 DEBUG Attribute (`ticket`)  - enhanced for lazy-loading? - false
w2022-03-15 18:29:54 DEBUG Processing attribute `user` : value = 2
w2022-03-15 18:29:54 DEBUG Attribute (`user`)  - enhanced for lazy-loading? - false
w2022-03-15 18:29:54 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Comment#3]
w2022-03-15 18:29:54 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Comment#4]
w2022-03-15 18:29:54 DEBUG Processing attribute `message` : value = comment ticket111
w2022-03-15 18:29:54 DEBUG Attribute (`message`)  - enhanced for lazy-loading? - false
w2022-03-15 18:29:54 DEBUG Processing attribute `ticket` : value = 1
w2022-03-15 18:29:54 DEBUG Attribute (`ticket`)  - enhanced for lazy-loading? - false
w2022-03-15 18:29:54 DEBUG Processing attribute `user` : value = 2
w2022-03-15 18:29:54 DEBUG Attribute (`user`)  - enhanced for lazy-loading? - false
w2022-03-15 18:29:54 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Comment#4]
w2022-03-15 18:31:16 DEBUG Logging Provider: org.jboss.logging.Log4j2LoggerProvider
w2022-03-15 18:31:16 DEBUG PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@6c202846
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/%d0%9e%d0%bb%d1%8c%d0%b3%d0%b0/Desktop/Java/Project/Project1/helpdeskproject/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		ru.edu.helpdesk.entity.Comment
		ru.edu.helpdesk.entity.Ticket
		ru.edu.helpdesk.entity.User]
	Mapping files names []
	Properties []
w2022-03-15 18:31:16 DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
w2022-03-15 18:31:16 DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
w2022-03-15 18:31:16 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
w2022-03-15 18:31:16 INFO  HHH000412: Hibernate ORM core version 5.6.5.Final
w2022-03-15 18:31:16 DEBUG HHH000206: hibernate.properties not found
w2022-03-15 18:31:16 DEBUG Overriding existing service binding [org.hibernate.secure.spi.JaccService]
w2022-03-15 18:31:16 DEBUG Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
w2022-03-15 18:31:16 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
w2022-03-15 18:31:16 INFO  HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
w2022-03-15 18:31:16 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@4e0f6019
w2022-03-15 18:31:16 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@4e0f6019
w2022-03-15 18:31:16 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4e0f6019
w2022-03-15 18:31:16 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5896879f
w2022-03-15 18:31:16 DEBUG Adding type registration true_false -> org.hibernate.type.TrueFalseType@7e2e875
w2022-03-15 18:31:16 DEBUG Adding type registration yes_no -> org.hibernate.type.YesNoType@226821b1
w2022-03-15 18:31:16 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@4ca058d0
w2022-03-15 18:31:16 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@4ca058d0
w2022-03-15 18:31:16 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4ca058d0
w2022-03-15 18:31:16 DEBUG Adding type registration character -> org.hibernate.type.CharacterType@13b33076
w2022-03-15 18:31:16 DEBUG Adding type registration char -> org.hibernate.type.CharacterType@13b33076
w2022-03-15 18:31:16 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@13b33076
w2022-03-15 18:31:16 DEBUG Adding type registration short -> org.hibernate.type.ShortType@51a5d1cc
w2022-03-15 18:31:16 DEBUG Adding type registration short -> org.hibernate.type.ShortType@51a5d1cc
w2022-03-15 18:31:16 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.ShortType@51a5d1cc
w2022-03-15 18:31:16 DEBUG Adding type registration integer -> org.hibernate.type.IntegerType@5c343b43
w2022-03-15 18:31:16 DEBUG Adding type registration int -> org.hibernate.type.IntegerType@5c343b43
w2022-03-15 18:31:16 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5c343b43
w2022-03-15 18:31:16 DEBUG Adding type registration long -> org.hibernate.type.LongType@4c32479b
w2022-03-15 18:31:16 DEBUG Adding type registration long -> org.hibernate.type.LongType@4c32479b
w2022-03-15 18:31:16 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.LongType@4c32479b
w2022-03-15 18:31:16 DEBUG Adding type registration float -> org.hibernate.type.FloatType@fe1722b
w2022-03-15 18:31:16 DEBUG Adding type registration float -> org.hibernate.type.FloatType@fe1722b
w2022-03-15 18:31:16 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.FloatType@fe1722b
w2022-03-15 18:31:16 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@3bcf2da6
w2022-03-15 18:31:16 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@3bcf2da6
w2022-03-15 18:31:16 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3bcf2da6
w2022-03-15 18:31:16 DEBUG Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1ff35a2c
w2022-03-15 18:31:16 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1ff35a2c
w2022-03-15 18:31:16 DEBUG Adding type registration big_integer -> org.hibernate.type.BigIntegerType@35876f1d
w2022-03-15 18:31:16 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@35876f1d
w2022-03-15 18:31:16 DEBUG Adding type registration string -> org.hibernate.type.StringType@7c6cdbaf
w2022-03-15 18:31:16 DEBUG Adding type registration java.lang.String -> org.hibernate.type.StringType@7c6cdbaf
w2022-03-15 18:31:16 DEBUG Adding type registration nstring -> org.hibernate.type.StringNVarcharType@582ef0f5
w2022-03-15 18:31:16 DEBUG Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@72ffeac2
w2022-03-15 18:31:16 DEBUG Adding type registration url -> org.hibernate.type.UrlType@d0839ba
w2022-03-15 18:31:16 DEBUG Adding type registration java.net.URL -> org.hibernate.type.UrlType@d0839ba
w2022-03-15 18:31:16 DEBUG Adding type registration Duration -> org.hibernate.type.DurationType@3b9ae356
w2022-03-15 18:31:16 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.DurationType@3b9ae356
w2022-03-15 18:31:16 DEBUG Adding type registration Instant -> org.hibernate.type.InstantType@77cda614
w2022-03-15 18:31:16 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.InstantType@77cda614
w2022-03-15 18:31:16 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3e4f686b
w2022-03-15 18:31:16 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3e4f686b
w2022-03-15 18:31:16 DEBUG Adding type registration LocalDate -> org.hibernate.type.LocalDateType@21e30d9a
w2022-03-15 18:31:16 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@21e30d9a
w2022-03-15 18:31:16 DEBUG Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1aec8af1
w2022-03-15 18:31:16 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1aec8af1
w2022-03-15 18:31:16 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6eb9a92b
w2022-03-15 18:31:16 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6eb9a92b
w2022-03-15 18:31:16 DEBUG Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@7bbaebee
w2022-03-15 18:31:16 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@7bbaebee
w2022-03-15 18:31:16 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6143315a
w2022-03-15 18:31:16 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6143315a
w2022-03-15 18:31:16 DEBUG Adding type registration date -> org.hibernate.type.DateType@480d13b7
w2022-03-15 18:31:16 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.DateType@480d13b7
w2022-03-15 18:31:16 DEBUG Adding type registration time -> org.hibernate.type.TimeType@2562a2d2
w2022-03-15 18:31:16 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2562a2d2
w2022-03-15 18:31:16 DEBUG Adding type registration timestamp -> org.hibernate.type.TimestampType@56689c7c
w2022-03-15 18:31:16 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@56689c7c
w2022-03-15 18:31:16 DEBUG Adding type registration java.util.Date -> org.hibernate.type.TimestampType@56689c7c
w2022-03-15 18:31:16 DEBUG Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@298f2db2
w2022-03-15 18:31:16 DEBUG Adding type registration calendar -> org.hibernate.type.CalendarType@24bcb1a2
w2022-03-15 18:31:16 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@24bcb1a2
w2022-03-15 18:31:16 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@24bcb1a2
w2022-03-15 18:31:16 DEBUG Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@587213bb
w2022-03-15 18:31:16 DEBUG Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@31d1d62b
w2022-03-15 18:31:16 DEBUG Adding type registration locale -> org.hibernate.type.LocaleType@6f317db3
w2022-03-15 18:31:16 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6f317db3
w2022-03-15 18:31:16 DEBUG Adding type registration currency -> org.hibernate.type.CurrencyType@18f72d9a
w2022-03-15 18:31:16 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@18f72d9a
w2022-03-15 18:31:16 DEBUG Adding type registration timezone -> org.hibernate.type.TimeZoneType@730c95b3
w2022-03-15 18:31:16 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@730c95b3
w2022-03-15 18:31:16 DEBUG Adding type registration class -> org.hibernate.type.ClassType@5ca21884
w2022-03-15 18:31:16 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5ca21884
w2022-03-15 18:31:16 DEBUG Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@671d076c
w2022-03-15 18:31:16 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@671d076c
w2022-03-15 18:31:16 DEBUG Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@59dd1c39
w2022-03-15 18:31:16 DEBUG Adding type registration binary -> org.hibernate.type.BinaryType@9da3194
w2022-03-15 18:31:16 DEBUG Adding type registration byte[] -> org.hibernate.type.BinaryType@9da3194
w2022-03-15 18:31:16 DEBUG Adding type registration [B -> org.hibernate.type.BinaryType@9da3194
w2022-03-15 18:31:16 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@948213a
w2022-03-15 18:31:16 DEBUG Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@948213a
w2022-03-15 18:31:16 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@948213a
w2022-03-15 18:31:16 DEBUG Adding type registration row_version -> org.hibernate.type.RowVersionType@40f37ecb
w2022-03-15 18:31:16 DEBUG Adding type registration image -> org.hibernate.type.ImageType@37bb6480
w2022-03-15 18:31:16 DEBUG Adding type registration characters -> org.hibernate.type.CharArrayType@46b2956f
w2022-03-15 18:31:16 DEBUG Adding type registration char[] -> org.hibernate.type.CharArrayType@46b2956f
w2022-03-15 18:31:16 DEBUG Adding type registration [C -> org.hibernate.type.CharArrayType@46b2956f
w2022-03-15 18:31:16 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@13be02d
w2022-03-15 18:31:16 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@13be02d
w2022-03-15 18:31:16 DEBUG Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@13be02d
w2022-03-15 18:31:16 DEBUG Adding type registration text -> org.hibernate.type.TextType@622f474
w2022-03-15 18:31:16 DEBUG Adding type registration ntext -> org.hibernate.type.NTextType@427aa83f
w2022-03-15 18:31:16 DEBUG Adding type registration blob -> org.hibernate.type.BlobType@7063e097
w2022-03-15 18:31:16 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7063e097
w2022-03-15 18:31:16 DEBUG Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@58e3df84
w2022-03-15 18:31:16 DEBUG Adding type registration clob -> org.hibernate.type.ClobType@25ccdbbb
w2022-03-15 18:31:16 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@25ccdbbb
w2022-03-15 18:31:16 DEBUG Adding type registration nclob -> org.hibernate.type.NClobType@4750ee79
w2022-03-15 18:31:16 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4750ee79
w2022-03-15 18:31:16 DEBUG Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@19705547
w2022-03-15 18:31:16 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@674b70e0
w2022-03-15 18:31:16 DEBUG Adding type registration serializable -> org.hibernate.type.SerializableType@317d9ff4
w2022-03-15 18:31:16 DEBUG Adding type registration object -> org.hibernate.type.ObjectType@50c7aa2f
w2022-03-15 18:31:16 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@50c7aa2f
w2022-03-15 18:31:16 DEBUG Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@64616923
w2022-03-15 18:31:16 DEBUG Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@99a3152
w2022-03-15 18:31:16 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@282dd317
w2022-03-15 18:31:16 DEBUG Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3d45e289
w2022-03-15 18:31:16 DEBUG Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5282bc73
w2022-03-15 18:31:16 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@aca17d0
w2022-03-15 18:31:16 DEBUG Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4cb9d8f5
w2022-03-15 18:31:16 DEBUG Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5efa2a41
w2022-03-15 18:31:16 INFO  HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
w2022-03-15 18:31:16 DEBUG Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@17b5ac3e] into BootstrapContext; was [null]
w2022-03-15 18:31:16 DEBUG ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@17b5ac3e) [was null]
w2022-03-15 18:31:16 DEBUG Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@2f338a65] into BootstrapContext; was [null]
w2022-03-15 18:31:16 DEBUG Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@2508b83b] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@4c615f66]
w2022-03-15 18:31:16 DEBUG Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@17b5ac3e]
w2022-03-15 18:31:16 DEBUG ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@17b5ac3e]
w2022-03-15 18:31:16 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
w2022-03-15 18:31:16 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
w2022-03-15 18:31:16 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
w2022-03-15 18:31:16 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
w2022-03-15 18:31:16 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
w2022-03-15 18:31:16 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
w2022-03-15 18:31:16 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
w2022-03-15 18:31:16 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
w2022-03-15 18:31:16 DEBUG Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
w2022-03-15 18:31:16 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
w2022-03-15 18:31:16 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
w2022-03-15 18:31:16 DEBUG Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
w2022-03-15 18:31:16 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
w2022-03-15 18:31:16 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
w2022-03-15 18:31:16 DEBUG Database ->
       name : SQLite
    version : 3.36.0
      major : 3
      minor : 36
w2022-03-15 18:31:16 DEBUG Driver ->
       name : SQLite JDBC
    version : 3.36.0.3
      major : 3
      minor : 36
w2022-03-15 18:31:16 DEBUG JDBC version : 2.1
w2022-03-15 18:31:16 INFO  HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
w2022-03-15 18:31:16 DEBUG JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
w2022-03-15 18:31:16 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
w2022-03-15 18:31:16 DEBUG HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [2] less than 4
w2022-03-15 18:31:16 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@40c8c736] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@33e19c0d]
w2022-03-15 18:31:16 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
w2022-03-15 18:31:16 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.Comment
w2022-03-15 18:31:16 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 18:31:16 DEBUG Import with entity name Comment
w2022-03-15 18:31:16 DEBUG Bind entity ru.edu.helpdesk.entity.Comment on table comment
w2022-03-15 18:31:16 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 18:31:16 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Comment] is safe
w2022-03-15 18:31:16 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Comment
w2022-03-15 18:31:16 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 18:31:16 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Comment:id]
w2022-03-15 18:31:16 DEBUG building SimpleValue for id
w2022-03-15 18:31:16 DEBUG Building property id
w2022-03-15 18:31:16 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 18:31:16 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=message, insertable=true, updatable=true, unique=false}
w2022-03-15 18:31:16 DEBUG MetadataSourceProcessor property message with lazy=false
w2022-03-15 18:31:16 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Comment:message]
w2022-03-15 18:31:16 DEBUG building SimpleValue for message
w2022-03-15 18:31:16 DEBUG Building property message
w2022-03-15 18:31:16 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 18:31:16 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=ticket, insertable=true, updatable=true, unique=false}
w2022-03-15 18:31:16 DEBUG Building property ticket
w2022-03-15 18:31:16 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 18:31:16 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=user, insertable=true, updatable=true, unique=false}
w2022-03-15 18:31:16 DEBUG Building property user
w2022-03-15 18:31:16 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 18:31:16 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 18:31:16 DEBUG Import with entity name Ticket
w2022-03-15 18:31:16 DEBUG Bind entity ru.edu.helpdesk.entity.Ticket on table ticket
w2022-03-15 18:31:16 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 18:31:16 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Ticket] is safe
w2022-03-15 18:31:16 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Ticket
w2022-03-15 18:31:16 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 18:31:16 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:id]
w2022-03-15 18:31:16 DEBUG building SimpleValue for id
w2022-03-15 18:31:16 DEBUG Building property id
w2022-03-15 18:31:16 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 18:31:16 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 18:31:16 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=client, insertable=true, updatable=true, unique=false}
w2022-03-15 18:31:16 DEBUG Building property client
w2022-03-15 18:31:16 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=status, insertable=true, updatable=true, unique=false}
w2022-03-15 18:31:16 DEBUG MetadataSourceProcessor property status with lazy=false
w2022-03-15 18:31:16 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:status]
w2022-03-15 18:31:16 DEBUG building SimpleValue for status
w2022-03-15 18:31:16 DEBUG Building property status
w2022-03-15 18:31:16 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 18:31:16 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=support, insertable=true, updatable=true, unique=false}
w2022-03-15 18:31:16 DEBUG Building property support
w2022-03-15 18:31:16 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=title, insertable=true, updatable=true, unique=false}
w2022-03-15 18:31:16 DEBUG MetadataSourceProcessor property title with lazy=false
w2022-03-15 18:31:16 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:title]
w2022-03-15 18:31:16 DEBUG building SimpleValue for title
w2022-03-15 18:31:16 DEBUG Building property title
w2022-03-15 18:31:16 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.User
w2022-03-15 18:31:16 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 18:31:16 DEBUG Import with entity name User
w2022-03-15 18:31:16 DEBUG Bind entity ru.edu.helpdesk.entity.User on table user
w2022-03-15 18:31:16 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 18:31:16 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.User] is safe
w2022-03-15 18:31:16 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.User
w2022-03-15 18:31:16 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 18:31:16 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:id]
w2022-03-15 18:31:16 DEBUG building SimpleValue for id
w2022-03-15 18:31:16 DEBUG Building property id
w2022-03-15 18:31:16 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 18:31:16 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
w2022-03-15 18:31:16 DEBUG MetadataSourceProcessor property firstName with lazy=false
w2022-03-15 18:31:16 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:firstName]
w2022-03-15 18:31:16 DEBUG building SimpleValue for firstName
w2022-03-15 18:31:16 DEBUG Building property firstName
w2022-03-15 18:31:16 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
w2022-03-15 18:31:16 DEBUG MetadataSourceProcessor property lastName with lazy=false
w2022-03-15 18:31:16 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:lastName]
w2022-03-15 18:31:16 DEBUG building SimpleValue for lastName
w2022-03-15 18:31:16 DEBUG Building property lastName
w2022-03-15 18:31:16 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=login, insertable=true, updatable=true, unique=false}
w2022-03-15 18:31:16 DEBUG MetadataSourceProcessor property login with lazy=false
w2022-03-15 18:31:16 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:login]
w2022-03-15 18:31:16 DEBUG building SimpleValue for login
w2022-03-15 18:31:16 DEBUG Building property login
w2022-03-15 18:31:16 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
w2022-03-15 18:31:16 DEBUG MetadataSourceProcessor property password with lazy=false
w2022-03-15 18:31:16 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:password]
w2022-03-15 18:31:16 DEBUG building SimpleValue for password
w2022-03-15 18:31:16 DEBUG Building property password
w2022-03-15 18:31:16 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=role, insertable=true, updatable=true, unique=false}
w2022-03-15 18:31:16 DEBUG MetadataSourceProcessor property role with lazy=false
w2022-03-15 18:31:16 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:role]
w2022-03-15 18:31:16 DEBUG building SimpleValue for role
w2022-03-15 18:31:16 DEBUG Building property role
w2022-03-15 18:31:16 DEBUG Starting fillSimpleValue for id
w2022-03-15 18:31:16 DEBUG Starting fillSimpleValue for message
w2022-03-15 18:31:16 DEBUG Starting fillSimpleValue for id
w2022-03-15 18:31:16 DEBUG Starting fillSimpleValue for status
w2022-03-15 18:31:16 DEBUG Starting fillSimpleValue for title
w2022-03-15 18:31:16 DEBUG Starting fillSimpleValue for id
w2022-03-15 18:31:16 DEBUG Starting fillSimpleValue for firstName
w2022-03-15 18:31:16 DEBUG Starting fillSimpleValue for lastName
w2022-03-15 18:31:16 DEBUG Starting fillSimpleValue for login
w2022-03-15 18:31:16 DEBUG Starting fillSimpleValue for password
w2022-03-15 18:31:16 DEBUG Starting fillSimpleValue for role
w2022-03-15 18:31:16 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [comment]
w2022-03-15 18:31:16 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [ticket]
w2022-03-15 18:31:16 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [user]
w2022-03-15 18:31:16 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 18:31:16 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 18:31:16 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 18:31:16 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 18:31:16 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 18:31:16 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 18:31:16 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 18:31:16 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 18:31:16 DEBUG Building session factory
w2022-03-15 18:31:16 DEBUG SessionFactory name : null
w2022-03-15 18:31:16 DEBUG Automatic flush during beforeCompletion(): enabled
w2022-03-15 18:31:16 DEBUG Automatic session close at end of transaction: disabled
w2022-03-15 18:31:16 DEBUG Statistics: disabled
w2022-03-15 18:31:16 DEBUG Deleted entity synthetic identifier rollback: disabled
w2022-03-15 18:31:16 DEBUG Default entity-mode: pojo
w2022-03-15 18:31:16 DEBUG Check Nullability in Core (should be disabled when Bean Validation is on): enabled
w2022-03-15 18:31:16 DEBUG Allow initialization of lazy state outside session : disabled
w2022-03-15 18:31:16 DEBUG Using BatchFetchStyle : LEGACY
w2022-03-15 18:31:16 DEBUG Default batch fetch size: -1
w2022-03-15 18:31:16 DEBUG Maximum outer join fetch depth: null
w2022-03-15 18:31:16 DEBUG Default null ordering: NONE
w2022-03-15 18:31:16 DEBUG Order SQL updates by primary key: disabled
w2022-03-15 18:31:16 DEBUG Order SQL inserts for batching: disabled
w2022-03-15 18:31:16 DEBUG multi-tenancy strategy : NONE
w2022-03-15 18:31:16 DEBUG JTA Track by Thread: enabled
w2022-03-15 18:31:16 DEBUG Query language substitutions: {}
w2022-03-15 18:31:16 DEBUG Named query checking : enabled
w2022-03-15 18:31:16 DEBUG Second-level cache: disabled
w2022-03-15 18:31:16 DEBUG Second-level query cache: disabled
w2022-03-15 18:31:16 DEBUG Second-level query cache factory: null
w2022-03-15 18:31:16 DEBUG Second-level cache region prefix: null
w2022-03-15 18:31:16 DEBUG Optimize second-level cache for minimal puts: disabled
w2022-03-15 18:31:16 DEBUG Structured second-level cache entries: disabled
w2022-03-15 18:31:16 DEBUG Second-level cache direct-reference entries: disabled
w2022-03-15 18:31:16 DEBUG Automatic eviction of collection cache: disabled
w2022-03-15 18:31:16 DEBUG JDBC batch size: 1
w2022-03-15 18:31:16 DEBUG JDBC batch updates for versioned data: enabled
w2022-03-15 18:31:16 DEBUG Scrollable result sets: disabled
w2022-03-15 18:31:16 DEBUG Wrap result sets: disabled
w2022-03-15 18:31:16 DEBUG JDBC3 getGeneratedKeys(): enabled
w2022-03-15 18:31:16 DEBUG JDBC result set fetch size: null
w2022-03-15 18:31:16 DEBUG Connection release mode: ON_CLOSE
w2022-03-15 18:31:16 DEBUG Generate SQL with comments: disabled
w2022-03-15 18:31:16 DEBUG JPA compliance - query : disabled
w2022-03-15 18:31:16 DEBUG JPA compliance - closed-handling : disabled
w2022-03-15 18:31:16 DEBUG JPA compliance - lists : disabled
w2022-03-15 18:31:16 DEBUG JPA compliance - transactions : disabled
w2022-03-15 18:31:16 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 18:31:16 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 18:31:16 DEBUG Session factory constructed with filter configurations : {}
w2022-03-15 18:31:16 DEBUG Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=true, java.specification.version=1.8, file.encoding.pkg=sun.io, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@20a0d230, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.SQLiteDialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\charsets.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\cldrdata.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\dnsns.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\jaccess.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\localedata.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\nashorn.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunec.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunmscapi.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\zipfs.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jce.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jfr.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jsse.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\management-agent.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\resources.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\rt.jar;C:\Users\Ольга\Desktop\Java\Project\Project1\helpdeskproject\target\classes;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\2.6.4\spring-boot-starter-data-jpa-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\2.6.4\spring-boot-starter-jdbc-2.6.4.jar;C:\Users\Ольга\.m2\repository\com\zaxxer\HikariCP\4.0.3\HikariCP-4.0.3.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-jdbc\5.3.16\spring-jdbc-5.3.16.jar;C:\Users\Ольга\.m2\repository\jakarta\transaction\jakarta.transaction-api\1.3.3\jakarta.transaction-api-1.3.3.jar;C:\Users\Ольга\.m2\repository\jakarta\persistence\jakarta.persistence-api\2.2.3\jakarta.persistence-api-2.2.3.jar;C:\Users\Ольга\.m2\repository\org\hibernate\hibernate-core\5.6.5.Final\hibernate-core-5.6.5.Final.jar;C:\Users\Ольга\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy\1.11.22\byte-buddy-1.11.22.jar;C:\Users\Ольга\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ольга\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Ольга\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.6\jaxb-runtime-2.3.6.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\txw2\2.3.6\txw2-2.3.6.jar;C:\Users\Ольга\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.12\istack-commons-runtime-3.0.12.jar;C:\Users\Ольга\.m2\repository\com\sun\activation\jakarta.activation\1.2.2\jakarta.activation-1.2.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\data\spring-data-jpa\2.6.2\spring-data-jpa-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\data\spring-data-commons\2.6.2\spring-data-commons-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-orm\5.3.16\spring-orm-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-context\5.3.16\spring-context-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-tx\5.3.16\spring-tx-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-beans\5.3.16\spring-beans-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-aspects\5.3.16\spring-aspects-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-security\2.6.4\spring-boot-starter-security-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter\2.6.4\spring-boot-starter-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-logging\2.6.4\spring-boot-starter-logging-2.6.4.jar;C:\Users\Ольга\.m2\repository\ch\qos\logback\logback-classic\1.2.10\logback-classic-1.2.10.jar;C:\Users\Ольга\.m2\repository\ch\qos\logback\logback-core\1.2.10\logback-core-1.2.10.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.17.1\log4j-to-slf4j-2.17.1.jar;C:\Users\Ольга\.m2\repository\org\slf4j\jul-to-slf4j\1.7.36\jul-to-slf4j-1.7.36.jar;C:\Users\Ольга\.m2\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;C:\Users\Ольга\.m2\repository\org\yaml\snakeyaml\1.29\snakeyaml-1.29.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-aop\5.3.16\spring-aop-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-config\5.6.2\spring-security-config-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-web\5.6.2\spring-security-web-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-expression\5.3.16\spring-expression-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-web\2.6.4\spring-boot-starter-web-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-json\2.6.4\spring-boot-starter-json-2.6.4.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.13.1\jackson-datatype-jdk8-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.13.1\jackson-datatype-jsr310-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.13.1\jackson-module-parameter-names-2.13.1.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\2.6.4\spring-boot-starter-tomcat-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.58\tomcat-embed-core-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\9.0.58\tomcat-embed-el-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.58\tomcat-embed-websocket-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-web\5.3.16\spring-web-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-webmvc\5.3.16\spring-webmvc-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-devtools\2.6.4\spring-boot-devtools-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot\2.6.4\spring-boot-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\2.6.4\spring-boot-autoconfigure-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\xerial\sqlite-jdbc\3.36.0.3\sqlite-jdbc-3.36.0.3.jar;C:\Users\Ольга\.m2\repository\com\zsoltfabok\sqlite-dialect\1.0\sqlite-dialect-1.0.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-aop\2.6.2\spring-boot-starter-aop-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\aspectj\aspectjweaver\1.9.7\aspectjweaver-1.9.7.jar;C:\Users\Ольга\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.3\jakarta.xml.bind-api-2.3.3.jar;C:\Users\Ольга\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.2\jakarta.activation-api-1.2.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-core\5.3.16\spring-core-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-jcl\5.3.16\spring-jcl-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-core\5.6.2\spring-security-core-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-crypto\5.6.2\spring-security-crypto-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\projectlombok\lombok\1.18.22\lombok-1.18.22.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\2.6.4\spring-boot-starter-thymeleaf-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\thymeleaf-spring5\3.0.15.RELEASE\thymeleaf-spring5-3.0.15.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\thymeleaf\3.0.15.RELEASE\thymeleaf-3.0.15.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\attoparser\attoparser\2.0.5.RELEASE\attoparser-2.0.5.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-java8time\3.0.4.RELEASE\thymeleaf-extras-java8time-3.0.4.RELEASE.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.1\jackson-databind-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.1\jackson-annotations-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.1\jackson-core-2.13.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-api\2.4.1\log4j-api-2.4.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-core\2.4.1\log4j-core-2.4.1.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.2\lib\idea_rt.jar, java.vm.vendor=Temurin, sun.arch.data.model=64, user.variant=, java.vendor.url=https://adoptium.net/, catalina.useNaming=false, user.timezone=Europe/Moscow, jakarta.persistence.sharedCache.mode=UNSPECIFIED, os.name=Windows 10, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), user.country=RU, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\bin, sun.java.command=ru.edu.helpdesk.HelpdeskApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@62af140f, com.sun.management.jmxremote=, javax.persistence.sharedCache.mode=UNSPECIFIED, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, user.home=C:\Users\Ольга, user.language=ru, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre, file.separator=\, spring.output.ansi.enabled=always, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, sun.boot.class.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\resources.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\rt.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\sunrsasign.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jsse.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jce.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\charsets.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jfr.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\classes, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_312-b07, user.name=Эльдорадо, spring.jmx.enabled=true, path.separator=;, os.version=10.0, java.endorsed.dirs=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\endorsed, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=default, spring.beaninfo.ignore=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=C:\Users\134E~1\AppData\Local\Temp\, catalina.home=C:\Users\Ольга\AppData\Local\Temp\tomcat.8080.6471775385156747036, java.version=1.8.0_312, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\Ольга\Desktop\Java\Project\Project1\helpdeskproject, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=16432, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\Ольга\AppData\Local\Temp\tomcat.8080.6471775385156747036, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@22017883, java.library.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\windows\System32\OpenSSH\;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\Program Files\apache-maven-3.8.4\bin;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Ольга\AppData\Local\Microsoft\WindowsApps;C:\Users\Ольга\AppData\Local\Programs\Microsoft VS Code\bin;C:\SQLite;C:\Users\Ольга\AppData\Roaming\npm;C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.2\bin;;., java.vendor=Temurin, java.vm.info=mixed mode, java.vm.version=25.312-b07, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, java.ext.dirs=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext;C:\windows\Sun\Java\lib\ext, hibernate.connection.datasource=HikariDataSource (HikariPool-1), hibernate.hbm2ddl.import_files=data/import.sql, java.class.version=52.0}
w2022-03-15 18:31:16 DEBUG Skipping JACC integration as it was not enabled
w2022-03-15 18:31:16 DEBUG Using ORDINAL-based conversion for Enum ru.edu.helpdesk.entity.UserRole
w2022-03-15 18:31:16 DEBUG Using ORDINAL-based conversion for Enum ru.edu.helpdesk.entity.TicketStatus
w2022-03-15 18:31:16 DEBUG Instantiated session factory
w2022-03-15 18:31:16 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@40c8c736] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@4dca282e]
w2022-03-15 18:31:16 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.User] is safe
w2022-03-15 18:31:16 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.User
w2022-03-15 18:31:16 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:31:16 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:31:16 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:31:16 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:31:16 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Ticket] is safe
w2022-03-15 18:31:16 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Ticket
w2022-03-15 18:31:16 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:31:16 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:31:16 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:31:16 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:31:16 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:31:16 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:31:16 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:31:16 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:31:16 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Comment] is safe
w2022-03-15 18:31:16 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Comment
w2022-03-15 18:31:16 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:31:16 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:31:16 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:31:16 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 18:31:16 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.User
w2022-03-15 18:31:16 DEBUG  Version select: select id from user where id =?
w2022-03-15 18:31:16 DEBUG  Snapshot select: select user_.id, user_.first_name as first_na2_2_, user_.last_name as last_nam3_2_, user_.login as login4_2_, user_.password as password5_2_, user_.role as role6_2_ from user user_ where user_.id=?
w2022-03-15 18:31:16 DEBUG  Insert 0: insert into user (first_name, last_name, login, password, role, id) values (?, ?, ?, ?, ?, ?)
w2022-03-15 18:31:16 DEBUG  Update 0: update user set first_name=?, last_name=?, login=?, password=?, role=? where id=?
w2022-03-15 18:31:16 DEBUG  Delete 0: delete from user where id=?
w2022-03-15 18:31:16 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11cf133b]
w2022-03-15 18:31:16 DEBUG Visiting attribute path : firstName
w2022-03-15 18:31:16 DEBUG Visiting attribute path : lastName
w2022-03-15 18:31:16 DEBUG Visiting attribute path : login
w2022-03-15 18:31:16 DEBUG Visiting attribute path : password
w2022-03-15 18:31:16 DEBUG Visiting attribute path : role
w2022-03-15 18:31:16 DEBUG Building LoadPlan...
w2022-03-15 18:31:16 DEBUG processing queryspace <gen:0>
w2022-03-15 18:31:16 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.User)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

w2022-03-15 18:31:16 DEBUG Static select for entity ru.edu.helpdesk.entity.User [NONE]: select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 18:31:16 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.Ticket
w2022-03-15 18:31:16 DEBUG  Version select: select id from ticket where id =?
w2022-03-15 18:31:16 DEBUG  Snapshot select: select ticket_.id, ticket_.client_id as client_i4_1_, ticket_.status as status2_1_, ticket_.support_id as support_5_1_, ticket_.title as title3_1_ from ticket ticket_ where ticket_.id=?
w2022-03-15 18:31:16 DEBUG  Insert 0: insert into ticket (client_id, status, support_id, title, id) values (?, ?, ?, ?, ?)
w2022-03-15 18:31:16 DEBUG  Update 0: update ticket set client_id=?, status=?, support_id=?, title=? where id=?
w2022-03-15 18:31:16 DEBUG  Delete 0: delete from ticket where id=?
w2022-03-15 18:31:16 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@358e16f6]
w2022-03-15 18:31:16 DEBUG Visiting attribute path : client
w2022-03-15 18:31:16 DEBUG Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@649a5e85]
w2022-03-15 18:31:16 DEBUG Visiting attribute path : client.firstName
w2022-03-15 18:31:16 DEBUG Visiting attribute path : client.lastName
w2022-03-15 18:31:16 DEBUG Visiting attribute path : client.login
w2022-03-15 18:31:16 DEBUG Visiting attribute path : client.password
w2022-03-15 18:31:16 DEBUG Visiting attribute path : client.role
w2022-03-15 18:31:16 DEBUG Visiting attribute path : status
w2022-03-15 18:31:16 DEBUG Visiting attribute path : support
w2022-03-15 18:31:16 DEBUG Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53b38e07]
w2022-03-15 18:31:16 DEBUG Visiting attribute path : support.firstName
w2022-03-15 18:31:16 DEBUG Visiting attribute path : support.lastName
w2022-03-15 18:31:16 DEBUG Visiting attribute path : support.login
w2022-03-15 18:31:16 DEBUG Visiting attribute path : support.password
w2022-03-15 18:31:16 DEBUG Visiting attribute path : support.role
w2022-03-15 18:31:16 DEBUG Visiting attribute path : title
w2022-03-15 18:31:16 DEBUG Building LoadPlan...
w2022-03-15 18:31:16 DEBUG processing queryspace <gen:0>
w2022-03-15 18:31:16 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.Ticket)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.Ticket, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.Ticket)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:1>, path=ru.edu.helpdesk.entity.Ticket.client)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:2>, path=ru.edu.helpdesk.entity.Ticket.support)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.Ticket)
          - SQL table alias mapping - ticket0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(client)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
          - JOIN (JoinDefinedByMetadata(support)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user2_
                - alias suffix - 2_
                - suffixed key columns - {id1_2_2_}

w2022-03-15 18:31:16 DEBUG Static select for entity ru.edu.helpdesk.entity.Ticket [NONE]: select ticket0_.id as id1_1_0_, ticket0_.client_id as client_i4_1_0_, ticket0_.status as status2_1_0_, ticket0_.support_id as support_5_1_0_, ticket0_.title as title3_1_0_, user1_.id as id1_2_1_, user1_.first_name as first_na2_2_1_, user1_.last_name as last_nam3_2_1_, user1_.login as login4_2_1_, user1_.password as password5_2_1_, user1_.role as role6_2_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id left outer join user user2_ on ticket0_.support_id=user2_.id where ticket0_.id=?
w2022-03-15 18:31:16 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.Comment
w2022-03-15 18:31:16 DEBUG  Version select: select id from comment where id =?
w2022-03-15 18:31:16 DEBUG  Snapshot select: select comment_.id, comment_.message as message2_0_, comment_.ticket_id as ticket_i3_0_, comment_.user_id as user_id4_0_ from comment comment_ where comment_.id=?
w2022-03-15 18:31:16 DEBUG  Insert 0: insert into comment (message, ticket_id, user_id, id) values (?, ?, ?, ?)
w2022-03-15 18:31:16 DEBUG  Update 0: update comment set message=?, ticket_id=?, user_id=? where id=?
w2022-03-15 18:31:16 DEBUG  Delete 0: delete from comment where id=?
w2022-03-15 18:31:16 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46302c3e]
w2022-03-15 18:31:16 DEBUG Visiting attribute path : message
w2022-03-15 18:31:16 DEBUG Visiting attribute path : ticket
w2022-03-15 18:31:16 DEBUG Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b64d80]
w2022-03-15 18:31:16 DEBUG Visiting attribute path : ticket.client
w2022-03-15 18:31:16 DEBUG Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c55735e]
w2022-03-15 18:31:16 DEBUG Visiting attribute path : ticket.client.firstName
w2022-03-15 18:31:16 DEBUG Visiting attribute path : ticket.client.lastName
w2022-03-15 18:31:16 DEBUG Visiting attribute path : ticket.client.login
w2022-03-15 18:31:16 DEBUG Visiting attribute path : ticket.client.password
w2022-03-15 18:31:16 DEBUG Visiting attribute path : ticket.client.role
w2022-03-15 18:31:16 DEBUG Visiting attribute path : ticket.status
w2022-03-15 18:31:16 DEBUG Visiting attribute path : ticket.support
w2022-03-15 18:31:16 DEBUG Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6cfcfbd1]
w2022-03-15 18:31:16 DEBUG Visiting attribute path : ticket.support.firstName
w2022-03-15 18:31:16 DEBUG Visiting attribute path : ticket.support.lastName
w2022-03-15 18:31:16 DEBUG Visiting attribute path : ticket.support.login
w2022-03-15 18:31:16 DEBUG Visiting attribute path : ticket.support.password
w2022-03-15 18:31:16 DEBUG Visiting attribute path : ticket.support.role
w2022-03-15 18:31:16 DEBUG Visiting attribute path : ticket.title
w2022-03-15 18:31:16 DEBUG Visiting attribute path : user
w2022-03-15 18:31:16 DEBUG Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f1d379e]
w2022-03-15 18:31:16 DEBUG Visiting attribute path : user.firstName
w2022-03-15 18:31:16 DEBUG Visiting attribute path : user.lastName
w2022-03-15 18:31:16 DEBUG Visiting attribute path : user.login
w2022-03-15 18:31:16 DEBUG Visiting attribute path : user.password
w2022-03-15 18:31:16 DEBUG Visiting attribute path : user.role
w2022-03-15 18:31:16 DEBUG Building LoadPlan...
w2022-03-15 18:31:16 DEBUG processing queryspace <gen:0>
w2022-03-15 18:31:16 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.Comment)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.Comment, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.Comment)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.Ticket, querySpaceUid=<gen:1>, path=ru.edu.helpdesk.entity.Comment.ticket)
             - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:2>, path=ru.edu.helpdesk.entity.Comment.ticket.client)
             - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:3>, path=ru.edu.helpdesk.entity.Comment.ticket.support)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:4>, path=ru.edu.helpdesk.entity.Comment.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(ticket)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ru.edu.helpdesk.entity.Ticket)
                - SQL table alias mapping - ticket1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(client)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=ru.edu.helpdesk.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}
                - JOIN (JoinDefinedByMetadata(support)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=ru.edu.helpdesk.entity.User)
                      - SQL table alias mapping - user3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_2_3_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user4_
                - alias suffix - 4_
                - suffixed key columns - {id1_2_4_}

w2022-03-15 18:31:16 DEBUG Static select for entity ru.edu.helpdesk.entity.Comment [NONE]: select comment0_.id as id1_0_0_, comment0_.message as message2_0_0_, comment0_.ticket_id as ticket_i3_0_0_, comment0_.user_id as user_id4_0_0_, ticket1_.id as id1_1_1_, ticket1_.client_id as client_i4_1_1_, ticket1_.status as status2_1_1_, ticket1_.support_id as support_5_1_1_, ticket1_.title as title3_1_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_, user3_.id as id1_2_3_, user3_.first_name as first_na2_2_3_, user3_.last_name as last_nam3_2_3_, user3_.login as login4_2_3_, user3_.password as password5_2_3_, user3_.role as role6_2_3_, user4_.id as id1_2_4_, user4_.first_name as first_na2_2_4_, user4_.last_name as last_nam3_2_4_, user4_.login as login4_2_4_, user4_.password as password5_2_4_, user4_.role as role6_2_4_ from comment comment0_ left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id left outer join user user2_ on ticket1_.client_id=user2_.id left outer join user user3_ on ticket1_.support_id=user3_.id left outer join user user4_ on comment0_.user_id=user4_.id where comment0_.id=?
w2022-03-15 18:31:16 DEBUG drop table if exists comment
w2022-03-15 18:31:16 DEBUG drop table if exists hibernate_sequence
w2022-03-15 18:31:16 DEBUG drop table if exists ticket
w2022-03-15 18:31:16 DEBUG drop table if exists user
w2022-03-15 18:31:16 DEBUG create table comment (id bigint not null, message varchar(255) not null, ticket_id bigint, user_id bigint, primary key (id))
w2022-03-15 18:31:16 DEBUG create table hibernate_sequence (next_val bigint)
w2022-03-15 18:31:16 DEBUG insert into hibernate_sequence values ( 1 )
w2022-03-15 18:31:16 DEBUG create table ticket (id bigint not null, status integer, title varchar(255) not null, client_id bigint, support_id bigint, primary key (id))
w2022-03-15 18:31:16 DEBUG create table user (id bigint not null, first_name varchar(255), last_name varchar(255), login varchar(255) not null, password varchar(255) not null, role integer, primary key (id))
w2022-03-15 18:31:16 INFO  HHH000476: Executing import script 'file:/C:/Users/%d0%9e%d0%bb%d1%8c%d0%b3%d0%b0/Desktop/Java/Project/Project1/helpdeskproject/target/classes/data/import.sql'
w2022-03-15 18:31:16 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (1, 'admin', 'admin', 'admin', 'admin', 0)
w2022-03-15 18:31:16 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (2, 'support', 'support', 'support', 'support', 1)
w2022-03-15 18:31:16 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (3, 'user1', 'user1', 'user1', 'user1', 2)
w2022-03-15 18:31:16 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (4, 'user2', 'user2', 'user2', 'user2', 2)
w2022-03-15 18:31:16 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (1, 1, 'Hello user1',1, 2)
w2022-03-15 18:31:16 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (2, 0, 'Title2', 1, 2)
w2022-03-15 18:31:16 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (3, 0, 'Message user2', 4, NULL)
w2022-03-15 18:31:16 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (1, "comment ticket1", 1, 3)
w2022-03-15 18:31:16 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (2, "comment ticket2", 2, 3)
w2022-03-15 18:31:16 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (3, "comment ticket11", 1, 2)
w2022-03-15 18:31:16 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (4, "comment ticket111", 1, 2)
w2022-03-15 18:31:16 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (5, "comment ticket22", 2, 2)
w2022-03-15 18:31:16 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (6, "comment ticket3", 3, 4)
w2022-03-15 18:31:16 DEBUG UPDATE hibernate_sequence SET next_val = 8 WHERE next_val = 1
w2022-03-15 18:31:16 INFO  HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
w2022-03-15 18:31:16 DEBUG Checking 0 named HQL queries
w2022-03-15 18:31:16 DEBUG Checking 0 named SQL queries
w2022-03-15 18:31:16 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 18:31:16 DEBUG Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@244bab71
w2022-03-15 18:31:16 DEBUG Registering SessionFactory: 2d2041eb-eadf-4547-ae33-422d63bbf226 (<unnamed>)
w2022-03-15 18:31:16 DEBUG Not binding SessionFactory to JNDI, no JNDI name configured
w2022-03-15 18:31:16 DEBUG Statistics initialized [enabled=false]
w2022-03-15 18:31:17 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 18:31:17 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 18:31:17 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 18:31:24 DEBUG Rendered criteria query -> select generatedAlias0 from Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 18:31:24 DEBUG QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@7ae3a162
w2022-03-15 18:31:24 DEBUG parse() - HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 18:31:24 DEBUG throwQueryException() : no errors
w2022-03-15 18:31:24 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[IDENT] Node: 'ru'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'edu'
    |  |  |  |  |  |  \-[IDENT] Node: 'helpdesk'
    |  |  |  |  |  \-[IDENT] Node: 'entity'
    |  |  |  |  \-[IDENT] Node: 'Ticket'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'client'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias1'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

w2022-03-15 18:31:24 DEBUG select << begin [level=1, statement=select]
w2022-03-15 18:31:24 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.Ticket (generatedAlias0) -> ticket0_
w2022-03-15 18:31:24 DEBUG Resolved : generatedAlias0 -> ticket0_.id
w2022-03-15 18:31:24 DEBUG getDataType() : client -> org.hibernate.type.ManyToOneType(ru.edu.helpdesk.entity.User)
w2022-03-15 18:31:24 DEBUG dereferenceEntityJoin() : generating join for client in ru.edu.helpdesk.entity.Ticket (generatedAlias1) parent = [ {null} ]
w2022-03-15 18:31:24 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.User (generatedAlias1) -> user1_
w2022-03-15 18:31:24 DEBUG addJoinByPathMap() : generatedAlias0.client -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}
w2022-03-15 18:31:24 DEBUG Resolved : generatedAlias0.client -> ticket0_.client_id
w2022-03-15 18:31:24 DEBUG createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'user user1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Ticket.client,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}

w2022-03-15 18:31:24 DEBUG Resolved : generatedAlias0 -> ticket0_.id
w2022-03-15 18:31:24 DEBUG Resolved : generatedAlias1 -> user1_.id
w2022-03-15 18:31:24 DEBUG getDataType() : id -> org.hibernate.type.LongType@4c32479b
w2022-03-15 18:31:24 DEBUG Resolved : generatedAlias1.id -> user1_.id
w2022-03-15 18:31:24 DEBUG select : finishing up [level=1, statement=select]
w2022-03-15 18:31:24 DEBUG processQuery() :  ( SELECT ( {select clause} ticket0_.id ) ( FromClause{level=1} ( ticket ticket0_ user user1_ ) ) ( where ( = ( user1_.id user1_.id id ) ? ) ) )
w2022-03-15 18:31:24 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Ticket): [ticket]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.Ticket)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.User)
          | path: generatedAlias1.id
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.User)
          |  | originalText: generatedAlias1
          |  \-IdentNode
          |    persister: null
          |    originalText: id
          \-ParameterNode

w2022-03-15 18:31:24 DEBUG Using FROM fragment [ticket ticket0_]
w2022-03-15 18:31:24 DEBUG Using FROM fragment [left outer join user user1_ on ticket0_.client_id=user1_.id]
w2022-03-15 18:31:24 DEBUG select >> end [level=1, statement=select]
w2022-03-15 18:31:24 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (ticket,user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'ticket0_.id as id1_1_' {alias=generatedAlias0, className=ru.edu.helpdesk.entity.Ticket, tableAlias=ticket0_}
    |  \-[SQL_TOKEN] SqlFragment: 'ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[ticket0_, user1_], fromElementsByPath=[generatedAlias0.client], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'ticket ticket0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=ticket,tableAlias=ticket0_,origin=null,columns={,className=ru.edu.helpdesk.entity.Ticket}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join user user1_ on ticket0_.client_id=user1_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Ticket.client,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user1_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias1.id,tableAlias=user1_,className=ru.edu.helpdesk.entity.User,classAlias=generatedAlias1}
          |  +-[ALIAS_REF] IdentNode: 'user1_.id' {alias=generatedAlias1, className=ru.edu.helpdesk.entity.User, tableAlias=user1_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LongType@4c32479b}

w2022-03-15 18:31:24 DEBUG throwQueryException() : no errors
w2022-03-15 18:31:24 DEBUG HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 18:31:24 DEBUG SQL: select ticket0_.id as id1_1_, ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id where user1_.id=?
w2022-03-15 18:31:24 DEBUG throwQueryException() : no errors
w2022-03-15 18:31:24 DEBUG select ticket0_.id as id1_1_, ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id where user1_.id=?
w2022-03-15 18:31:24 DEBUG Result set row: 0
w2022-03-15 18:31:24 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 18:31:24 DEBUG Result set row: 1
w2022-03-15 18:31:24 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 18:31:24 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 18:31:24 DEBUG Processing attribute `client` : value = 1
w2022-03-15 18:31:24 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 18:31:24 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 18:31:24 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 18:31:24 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#1]
w2022-03-15 18:31:24 DEBUG Processing attribute `firstName` : value = admin
w2022-03-15 18:31:24 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:31:24 DEBUG Processing attribute `lastName` : value = admin
w2022-03-15 18:31:24 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:31:24 DEBUG Processing attribute `login` : value = admin
w2022-03-15 18:31:24 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 18:31:24 DEBUG Processing attribute `password` : value = admin
w2022-03-15 18:31:24 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 18:31:24 DEBUG Processing attribute `role` : value = ADMIN
w2022-03-15 18:31:24 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 18:31:24 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#1]
w2022-03-15 18:31:24 DEBUG Done entity load : ru.edu.helpdesk.entity.User#1
w2022-03-15 18:31:24 DEBUG Processing attribute `status` : value = WORKING
w2022-03-15 18:31:24 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 18:31:24 DEBUG Processing attribute `support` : value = 2
w2022-03-15 18:31:24 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 18:31:24 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 18:31:24 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 18:31:24 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#2]
w2022-03-15 18:31:24 DEBUG Processing attribute `firstName` : value = support
w2022-03-15 18:31:24 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:31:24 DEBUG Processing attribute `lastName` : value = support
w2022-03-15 18:31:24 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:31:24 DEBUG Processing attribute `login` : value = support
w2022-03-15 18:31:24 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 18:31:24 DEBUG Processing attribute `password` : value = support
w2022-03-15 18:31:24 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 18:31:24 DEBUG Processing attribute `role` : value = SUPPORT
w2022-03-15 18:31:24 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 18:31:24 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#2]
w2022-03-15 18:31:24 DEBUG Done entity load : ru.edu.helpdesk.entity.User#2
w2022-03-15 18:31:24 DEBUG Processing attribute `title` : value = Hello user1
w2022-03-15 18:31:24 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 18:31:24 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 18:31:24 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 18:31:24 DEBUG Processing attribute `client` : value = 1
w2022-03-15 18:31:24 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 18:31:24 DEBUG Processing attribute `status` : value = OPEN
w2022-03-15 18:31:24 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 18:31:24 DEBUG Processing attribute `support` : value = 2
w2022-03-15 18:31:24 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 18:31:24 DEBUG Processing attribute `title` : value = Title2
w2022-03-15 18:31:24 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 18:31:24 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 18:31:26 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 18:31:26 DEBUG begin
w2022-03-15 18:31:26 DEBUG committing
w2022-03-15 18:31:26 DEBUG Rendered criteria query -> select generatedAlias0 from Comment as generatedAlias0 left join generatedAlias0.ticket as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 18:31:26 DEBUG parse() - HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Comment as generatedAlias0 left join generatedAlias0.ticket as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 18:31:26 DEBUG throwQueryException() : no errors
w2022-03-15 18:31:26 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[IDENT] Node: 'ru'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'edu'
    |  |  |  |  |  |  \-[IDENT] Node: 'helpdesk'
    |  |  |  |  |  \-[IDENT] Node: 'entity'
    |  |  |  |  \-[IDENT] Node: 'Comment'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'ticket'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias1'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

w2022-03-15 18:31:26 DEBUG select << begin [level=1, statement=select]
w2022-03-15 18:31:26 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.Comment (generatedAlias0) -> comment0_
w2022-03-15 18:31:26 DEBUG Resolved : generatedAlias0 -> comment0_.id
w2022-03-15 18:31:26 DEBUG getDataType() : ticket -> org.hibernate.type.ManyToOneType(ru.edu.helpdesk.entity.Ticket)
w2022-03-15 18:31:26 DEBUG dereferenceEntityJoin() : generating join for ticket in ru.edu.helpdesk.entity.Comment (generatedAlias1) parent = [ {null} ]
w2022-03-15 18:31:26 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.Ticket (generatedAlias1) -> ticket1_
w2022-03-15 18:31:26 DEBUG addJoinByPathMap() : generatedAlias0.ticket -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=ticket,tableAlias=ticket1_,origin=comment comment0_,columns={comment0_.ticket_id,className=ru.edu.helpdesk.entity.Ticket}}
w2022-03-15 18:31:26 DEBUG Resolved : generatedAlias0.ticket -> comment0_.ticket_id
w2022-03-15 18:31:26 DEBUG createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'ticket ticket1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Comment.ticket,tableName=ticket,tableAlias=ticket1_,origin=comment comment0_,columns={comment0_.ticket_id,className=ru.edu.helpdesk.entity.Ticket}}

w2022-03-15 18:31:26 DEBUG Resolved : generatedAlias0 -> comment0_.id
w2022-03-15 18:31:26 DEBUG Resolved : generatedAlias1 -> ticket1_.id
w2022-03-15 18:31:26 DEBUG getDataType() : id -> org.hibernate.type.LongType@4c32479b
w2022-03-15 18:31:26 DEBUG Resolved : generatedAlias1.id -> ticket1_.id
w2022-03-15 18:31:26 DEBUG select : finishing up [level=1, statement=select]
w2022-03-15 18:31:26 DEBUG processQuery() :  ( SELECT ( {select clause} comment0_.id ) ( FromClause{level=1} ( comment comment0_ ticket ticket1_ ) ) ( where ( = ( ticket1_.id ticket1_.id id ) ? ) ) )
w2022-03-15 18:31:26 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Comment): [comment]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.Comment)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.Ticket)
          | path: generatedAlias1.id
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.Ticket)
          |  | originalText: generatedAlias1
          |  \-IdentNode
          |    persister: null
          |    originalText: id
          \-ParameterNode

w2022-03-15 18:31:26 DEBUG Using FROM fragment [comment comment0_]
w2022-03-15 18:31:26 DEBUG Using FROM fragment [left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id]
w2022-03-15 18:31:26 DEBUG select >> end [level=1, statement=select]
w2022-03-15 18:31:26 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (ticket,comment)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'comment0_.id as id1_0_' {alias=generatedAlias0, className=ru.edu.helpdesk.entity.Comment, tableAlias=comment0_}
    |  \-[SQL_TOKEN] SqlFragment: 'comment0_.message as message2_0_, comment0_.ticket_id as ticket_i3_0_, comment0_.user_id as user_id4_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[ticket1_, comment0_], fromElementsByPath=[generatedAlias0.ticket], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'comment comment0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=comment,tableAlias=comment0_,origin=null,columns={,className=ru.edu.helpdesk.entity.Comment}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Comment.ticket,tableName=ticket,tableAlias=ticket1_,origin=comment comment0_,columns={comment0_.ticket_id,className=ru.edu.helpdesk.entity.Ticket}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'ticket1_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias1.id,tableAlias=ticket1_,className=ru.edu.helpdesk.entity.Ticket,classAlias=generatedAlias1}
          |  +-[ALIAS_REF] IdentNode: 'ticket1_.id' {alias=generatedAlias1, className=ru.edu.helpdesk.entity.Ticket, tableAlias=ticket1_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LongType@4c32479b}

w2022-03-15 18:31:26 DEBUG throwQueryException() : no errors
w2022-03-15 18:31:26 DEBUG HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Comment as generatedAlias0 left join generatedAlias0.ticket as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 18:31:26 DEBUG SQL: select comment0_.id as id1_0_, comment0_.message as message2_0_, comment0_.ticket_id as ticket_i3_0_, comment0_.user_id as user_id4_0_ from comment comment0_ left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id where ticket1_.id=?
w2022-03-15 18:31:26 DEBUG throwQueryException() : no errors
w2022-03-15 18:31:26 DEBUG select comment0_.id as id1_0_, comment0_.message as message2_0_, comment0_.ticket_id as ticket_i3_0_, comment0_.user_id as user_id4_0_ from comment comment0_ left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id where ticket1_.id=?
w2022-03-15 18:31:26 DEBUG Result set row: 0
w2022-03-15 18:31:26 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Comment#1]
w2022-03-15 18:31:26 DEBUG Result set row: 1
w2022-03-15 18:31:26 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Comment#3]
w2022-03-15 18:31:26 DEBUG Result set row: 2
w2022-03-15 18:31:26 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Comment#4]
w2022-03-15 18:31:26 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Comment#1]
w2022-03-15 18:31:26 DEBUG Processing attribute `message` : value = comment ticket1
w2022-03-15 18:31:26 DEBUG Attribute (`message`)  - enhanced for lazy-loading? - false
w2022-03-15 18:31:26 DEBUG Processing attribute `ticket` : value = 1
w2022-03-15 18:31:26 DEBUG Attribute (`ticket`)  - enhanced for lazy-loading? - false
w2022-03-15 18:31:26 DEBUG select ticket0_.id as id1_1_0_, ticket0_.client_id as client_i4_1_0_, ticket0_.status as status2_1_0_, ticket0_.support_id as support_5_1_0_, ticket0_.title as title3_1_0_, user1_.id as id1_2_1_, user1_.first_name as first_na2_2_1_, user1_.last_name as last_nam3_2_1_, user1_.login as login4_2_1_, user1_.password as password5_2_1_, user1_.role as role6_2_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id left outer join user user2_ on ticket0_.support_id=user2_.id where ticket0_.id=?
w2022-03-15 18:31:26 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 18:31:26 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 18:31:26 DEBUG Processing attribute `client` : value = 1
w2022-03-15 18:31:26 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 18:31:26 DEBUG Processing attribute `status` : value = WORKING
w2022-03-15 18:31:26 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 18:31:26 DEBUG Processing attribute `support` : value = 2
w2022-03-15 18:31:26 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 18:31:26 DEBUG Processing attribute `title` : value = Hello user1
w2022-03-15 18:31:26 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 18:31:26 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 18:31:26 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#1]
w2022-03-15 18:31:26 DEBUG Processing attribute `firstName` : value = admin
w2022-03-15 18:31:26 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:31:26 DEBUG Processing attribute `lastName` : value = admin
w2022-03-15 18:31:26 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:31:26 DEBUG Processing attribute `login` : value = admin
w2022-03-15 18:31:26 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 18:31:26 DEBUG Processing attribute `password` : value = admin
w2022-03-15 18:31:26 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 18:31:26 DEBUG Processing attribute `role` : value = ADMIN
w2022-03-15 18:31:26 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 18:31:26 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#1]
w2022-03-15 18:31:26 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#2]
w2022-03-15 18:31:26 DEBUG Processing attribute `firstName` : value = support
w2022-03-15 18:31:26 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:31:26 DEBUG Processing attribute `lastName` : value = support
w2022-03-15 18:31:26 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:31:26 DEBUG Processing attribute `login` : value = support
w2022-03-15 18:31:26 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 18:31:26 DEBUG Processing attribute `password` : value = support
w2022-03-15 18:31:26 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 18:31:26 DEBUG Processing attribute `role` : value = SUPPORT
w2022-03-15 18:31:26 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 18:31:26 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#2]
w2022-03-15 18:31:26 DEBUG Done entity load : ru.edu.helpdesk.entity.Ticket#1
w2022-03-15 18:31:26 DEBUG Processing attribute `user` : value = 3
w2022-03-15 18:31:26 DEBUG Attribute (`user`)  - enhanced for lazy-loading? - false
w2022-03-15 18:31:26 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 18:31:26 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 18:31:26 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#3]
w2022-03-15 18:31:26 DEBUG Processing attribute `firstName` : value = user1
w2022-03-15 18:31:26 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:31:26 DEBUG Processing attribute `lastName` : value = user1
w2022-03-15 18:31:26 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 18:31:26 DEBUG Processing attribute `login` : value = user1
w2022-03-15 18:31:26 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 18:31:26 DEBUG Processing attribute `password` : value = user1
w2022-03-15 18:31:26 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 18:31:26 DEBUG Processing attribute `role` : value = USER
w2022-03-15 18:31:26 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 18:31:26 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#3]
w2022-03-15 18:31:26 DEBUG Done entity load : ru.edu.helpdesk.entity.User#3
w2022-03-15 18:31:26 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Comment#1]
w2022-03-15 18:31:26 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Comment#3]
w2022-03-15 18:31:26 DEBUG Processing attribute `message` : value = comment ticket11
w2022-03-15 18:31:26 DEBUG Attribute (`message`)  - enhanced for lazy-loading? - false
w2022-03-15 18:31:26 DEBUG Processing attribute `ticket` : value = 1
w2022-03-15 18:31:26 DEBUG Attribute (`ticket`)  - enhanced for lazy-loading? - false
w2022-03-15 18:31:26 DEBUG Processing attribute `user` : value = 2
w2022-03-15 18:31:26 DEBUG Attribute (`user`)  - enhanced for lazy-loading? - false
w2022-03-15 18:31:26 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Comment#3]
w2022-03-15 18:31:26 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Comment#4]
w2022-03-15 18:31:26 DEBUG Processing attribute `message` : value = comment ticket111
w2022-03-15 18:31:26 DEBUG Attribute (`message`)  - enhanced for lazy-loading? - false
w2022-03-15 18:31:26 DEBUG Processing attribute `ticket` : value = 1
w2022-03-15 18:31:26 DEBUG Attribute (`ticket`)  - enhanced for lazy-loading? - false
w2022-03-15 18:31:26 DEBUG Processing attribute `user` : value = 2
w2022-03-15 18:31:26 DEBUG Attribute (`user`)  - enhanced for lazy-loading? - false
w2022-03-15 18:31:26 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Comment#4]
w2022-03-15 20:09:04 DEBUG Logging Provider: org.jboss.logging.Log4j2LoggerProvider
w2022-03-15 20:09:04 DEBUG PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@543dee1a
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/%d0%9e%d0%bb%d1%8c%d0%b3%d0%b0/Desktop/Java/Project/Project1/helpdeskproject/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		ru.edu.helpdesk.entity.Comment
		ru.edu.helpdesk.entity.Ticket
		ru.edu.helpdesk.entity.User]
	Mapping files names []
	Properties []
w2022-03-15 20:09:04 DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
w2022-03-15 20:09:04 DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
w2022-03-15 20:09:04 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
w2022-03-15 20:09:04 INFO  HHH000412: Hibernate ORM core version 5.6.5.Final
w2022-03-15 20:09:04 DEBUG HHH000206: hibernate.properties not found
w2022-03-15 20:09:04 DEBUG Overriding existing service binding [org.hibernate.secure.spi.JaccService]
w2022-03-15 20:09:04 DEBUG Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
w2022-03-15 20:09:04 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
w2022-03-15 20:09:04 INFO  HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
w2022-03-15 20:09:04 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@7574d136
w2022-03-15 20:09:04 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@7574d136
w2022-03-15 20:09:04 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7574d136
w2022-03-15 20:09:04 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@775079a8
w2022-03-15 20:09:04 DEBUG Adding type registration true_false -> org.hibernate.type.TrueFalseType@1c7a5412
w2022-03-15 20:09:04 DEBUG Adding type registration yes_no -> org.hibernate.type.YesNoType@2e922bd8
w2022-03-15 20:09:04 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@46472044
w2022-03-15 20:09:04 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@46472044
w2022-03-15 20:09:04 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@46472044
w2022-03-15 20:09:04 DEBUG Adding type registration character -> org.hibernate.type.CharacterType@4163e5c1
w2022-03-15 20:09:04 DEBUG Adding type registration char -> org.hibernate.type.CharacterType@4163e5c1
w2022-03-15 20:09:04 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4163e5c1
w2022-03-15 20:09:04 DEBUG Adding type registration short -> org.hibernate.type.ShortType@4a487bb1
w2022-03-15 20:09:04 DEBUG Adding type registration short -> org.hibernate.type.ShortType@4a487bb1
w2022-03-15 20:09:04 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4a487bb1
w2022-03-15 20:09:04 DEBUG Adding type registration integer -> org.hibernate.type.IntegerType@68e82e9a
w2022-03-15 20:09:04 DEBUG Adding type registration int -> org.hibernate.type.IntegerType@68e82e9a
w2022-03-15 20:09:04 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@68e82e9a
w2022-03-15 20:09:04 DEBUG Adding type registration long -> org.hibernate.type.LongType@5a72f32b
w2022-03-15 20:09:04 DEBUG Adding type registration long -> org.hibernate.type.LongType@5a72f32b
w2022-03-15 20:09:04 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.LongType@5a72f32b
w2022-03-15 20:09:04 DEBUG Adding type registration float -> org.hibernate.type.FloatType@461c6103
w2022-03-15 20:09:04 DEBUG Adding type registration float -> org.hibernate.type.FloatType@461c6103
w2022-03-15 20:09:04 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.FloatType@461c6103
w2022-03-15 20:09:04 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@11feda4a
w2022-03-15 20:09:04 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@11feda4a
w2022-03-15 20:09:04 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@11feda4a
w2022-03-15 20:09:04 DEBUG Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@68d27b6c
w2022-03-15 20:09:04 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@68d27b6c
w2022-03-15 20:09:04 DEBUG Adding type registration big_integer -> org.hibernate.type.BigIntegerType@69ac3bb0
w2022-03-15 20:09:04 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@69ac3bb0
w2022-03-15 20:09:04 DEBUG Adding type registration string -> org.hibernate.type.StringType@68f12ba9
w2022-03-15 20:09:04 DEBUG Adding type registration java.lang.String -> org.hibernate.type.StringType@68f12ba9
w2022-03-15 20:09:04 DEBUG Adding type registration nstring -> org.hibernate.type.StringNVarcharType@60b25648
w2022-03-15 20:09:04 DEBUG Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6705ecd3
w2022-03-15 20:09:04 DEBUG Adding type registration url -> org.hibernate.type.UrlType@40b1810e
w2022-03-15 20:09:04 DEBUG Adding type registration java.net.URL -> org.hibernate.type.UrlType@40b1810e
w2022-03-15 20:09:04 DEBUG Adding type registration Duration -> org.hibernate.type.DurationType@2644aac9
w2022-03-15 20:09:04 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2644aac9
w2022-03-15 20:09:04 DEBUG Adding type registration Instant -> org.hibernate.type.InstantType@6f0e412
w2022-03-15 20:09:04 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6f0e412
w2022-03-15 20:09:04 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@33a0a75
w2022-03-15 20:09:04 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@33a0a75
w2022-03-15 20:09:04 DEBUG Adding type registration LocalDate -> org.hibernate.type.LocalDateType@ee127d9
w2022-03-15 20:09:04 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@ee127d9
w2022-03-15 20:09:04 DEBUG Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@39a73d8c
w2022-03-15 20:09:04 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@39a73d8c
w2022-03-15 20:09:04 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@63ebbbe0
w2022-03-15 20:09:04 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@63ebbbe0
w2022-03-15 20:09:04 DEBUG Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@7e095364
w2022-03-15 20:09:04 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@7e095364
w2022-03-15 20:09:04 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@15539f1d
w2022-03-15 20:09:04 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@15539f1d
w2022-03-15 20:09:04 DEBUG Adding type registration date -> org.hibernate.type.DateType@1870fd20
w2022-03-15 20:09:04 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.DateType@1870fd20
w2022-03-15 20:09:04 DEBUG Adding type registration time -> org.hibernate.type.TimeType@3ef93cd1
w2022-03-15 20:09:04 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3ef93cd1
w2022-03-15 20:09:04 DEBUG Adding type registration timestamp -> org.hibernate.type.TimestampType@1fb096ef
w2022-03-15 20:09:04 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1fb096ef
w2022-03-15 20:09:04 DEBUG Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1fb096ef
w2022-03-15 20:09:04 DEBUG Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@70298caf
w2022-03-15 20:09:04 DEBUG Adding type registration calendar -> org.hibernate.type.CalendarType@7912474d
w2022-03-15 20:09:04 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7912474d
w2022-03-15 20:09:04 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7912474d
w2022-03-15 20:09:04 DEBUG Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@50e1b5d2
w2022-03-15 20:09:04 DEBUG Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@1f600a30
w2022-03-15 20:09:04 DEBUG Adding type registration locale -> org.hibernate.type.LocaleType@2257689f
w2022-03-15 20:09:04 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2257689f
w2022-03-15 20:09:04 DEBUG Adding type registration currency -> org.hibernate.type.CurrencyType@430f5c6e
w2022-03-15 20:09:04 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@430f5c6e
w2022-03-15 20:09:04 DEBUG Adding type registration timezone -> org.hibernate.type.TimeZoneType@104dfa69
w2022-03-15 20:09:04 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@104dfa69
w2022-03-15 20:09:04 DEBUG Adding type registration class -> org.hibernate.type.ClassType@41dc6f57
w2022-03-15 20:09:04 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.ClassType@41dc6f57
w2022-03-15 20:09:04 DEBUG Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2fcbb42
w2022-03-15 20:09:04 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2fcbb42
w2022-03-15 20:09:04 DEBUG Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@601e29d9
w2022-03-15 20:09:04 DEBUG Adding type registration binary -> org.hibernate.type.BinaryType@4daba84d
w2022-03-15 20:09:04 DEBUG Adding type registration byte[] -> org.hibernate.type.BinaryType@4daba84d
w2022-03-15 20:09:04 DEBUG Adding type registration [B -> org.hibernate.type.BinaryType@4daba84d
w2022-03-15 20:09:04 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@21191319
w2022-03-15 20:09:04 DEBUG Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@21191319
w2022-03-15 20:09:04 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@21191319
w2022-03-15 20:09:04 DEBUG Adding type registration row_version -> org.hibernate.type.RowVersionType@1f262707
w2022-03-15 20:09:04 DEBUG Adding type registration image -> org.hibernate.type.ImageType@77aa7e4c
w2022-03-15 20:09:04 DEBUG Adding type registration characters -> org.hibernate.type.CharArrayType@4b061504
w2022-03-15 20:09:04 DEBUG Adding type registration char[] -> org.hibernate.type.CharArrayType@4b061504
w2022-03-15 20:09:04 DEBUG Adding type registration [C -> org.hibernate.type.CharArrayType@4b061504
w2022-03-15 20:09:04 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@541a35bc
w2022-03-15 20:09:04 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@541a35bc
w2022-03-15 20:09:04 DEBUG Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@541a35bc
w2022-03-15 20:09:04 DEBUG Adding type registration text -> org.hibernate.type.TextType@4f6a00a7
w2022-03-15 20:09:04 DEBUG Adding type registration ntext -> org.hibernate.type.NTextType@3bf42b0c
w2022-03-15 20:09:04 DEBUG Adding type registration blob -> org.hibernate.type.BlobType@dccf4d7
w2022-03-15 20:09:04 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@dccf4d7
w2022-03-15 20:09:04 DEBUG Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2df6c339
w2022-03-15 20:09:04 DEBUG Adding type registration clob -> org.hibernate.type.ClobType@559d0a06
w2022-03-15 20:09:04 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@559d0a06
w2022-03-15 20:09:04 DEBUG Adding type registration nclob -> org.hibernate.type.NClobType@2b0565da
w2022-03-15 20:09:04 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2b0565da
w2022-03-15 20:09:04 DEBUG Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@480ff2ae
w2022-03-15 20:09:04 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@139ae24c
w2022-03-15 20:09:04 DEBUG Adding type registration serializable -> org.hibernate.type.SerializableType@2ee40179
w2022-03-15 20:09:04 DEBUG Adding type registration object -> org.hibernate.type.ObjectType@21890e61
w2022-03-15 20:09:04 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@21890e61
w2022-03-15 20:09:04 DEBUG Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@357a598c
w2022-03-15 20:09:04 DEBUG Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5c69a344
w2022-03-15 20:09:04 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@37e07788
w2022-03-15 20:09:04 DEBUG Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5cd577df
w2022-03-15 20:09:04 DEBUG Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3b84e3f0
w2022-03-15 20:09:04 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2a661447
w2022-03-15 20:09:04 DEBUG Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1e8e6ab4
w2022-03-15 20:09:04 DEBUG Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@69928d35
w2022-03-15 20:09:04 INFO  HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
w2022-03-15 20:09:04 DEBUG Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@68560049] into BootstrapContext; was [null]
w2022-03-15 20:09:04 DEBUG ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@68560049) [was null]
w2022-03-15 20:09:04 DEBUG Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@11f38c94] into BootstrapContext; was [null]
w2022-03-15 20:09:04 DEBUG Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@39d3e170] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@574537b7]
w2022-03-15 20:09:04 DEBUG Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@68560049]
w2022-03-15 20:09:04 DEBUG ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@68560049]
w2022-03-15 20:09:04 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
w2022-03-15 20:09:04 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
w2022-03-15 20:09:04 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
w2022-03-15 20:09:04 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
w2022-03-15 20:09:04 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
w2022-03-15 20:09:04 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
w2022-03-15 20:09:04 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
w2022-03-15 20:09:04 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
w2022-03-15 20:09:04 DEBUG Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
w2022-03-15 20:09:04 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
w2022-03-15 20:09:04 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
w2022-03-15 20:09:04 DEBUG Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
w2022-03-15 20:09:04 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
w2022-03-15 20:09:04 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
w2022-03-15 20:09:04 DEBUG Database ->
       name : SQLite
    version : 3.36.0
      major : 3
      minor : 36
w2022-03-15 20:09:04 DEBUG Driver ->
       name : SQLite JDBC
    version : 3.36.0.3
      major : 3
      minor : 36
w2022-03-15 20:09:04 DEBUG JDBC version : 2.1
w2022-03-15 20:09:04 INFO  HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
w2022-03-15 20:09:04 DEBUG JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
w2022-03-15 20:09:04 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
w2022-03-15 20:09:04 DEBUG HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [2] less than 4
w2022-03-15 20:09:04 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1faedc43] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7d001a8a]
w2022-03-15 20:09:04 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
w2022-03-15 20:09:04 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.Comment
w2022-03-15 20:09:04 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 20:09:04 DEBUG Import with entity name Comment
w2022-03-15 20:09:04 DEBUG Bind entity ru.edu.helpdesk.entity.Comment on table comment
w2022-03-15 20:09:04 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 20:09:04 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Comment] is safe
w2022-03-15 20:09:04 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Comment
w2022-03-15 20:09:04 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 20:09:04 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Comment:id]
w2022-03-15 20:09:04 DEBUG building SimpleValue for id
w2022-03-15 20:09:04 DEBUG Building property id
w2022-03-15 20:09:04 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 20:09:04 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=message, insertable=true, updatable=true, unique=false}
w2022-03-15 20:09:04 DEBUG MetadataSourceProcessor property message with lazy=false
w2022-03-15 20:09:04 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Comment:message]
w2022-03-15 20:09:04 DEBUG building SimpleValue for message
w2022-03-15 20:09:04 DEBUG Building property message
w2022-03-15 20:09:04 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 20:09:04 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=ticket, insertable=true, updatable=true, unique=false}
w2022-03-15 20:09:04 DEBUG Building property ticket
w2022-03-15 20:09:04 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 20:09:04 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=user, insertable=true, updatable=true, unique=false}
w2022-03-15 20:09:04 DEBUG Building property user
w2022-03-15 20:09:04 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 20:09:04 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 20:09:04 DEBUG Import with entity name Ticket
w2022-03-15 20:09:04 DEBUG Bind entity ru.edu.helpdesk.entity.Ticket on table ticket
w2022-03-15 20:09:04 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 20:09:04 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Ticket] is safe
w2022-03-15 20:09:04 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Ticket
w2022-03-15 20:09:04 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 20:09:04 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:id]
w2022-03-15 20:09:04 DEBUG building SimpleValue for id
w2022-03-15 20:09:04 DEBUG Building property id
w2022-03-15 20:09:04 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 20:09:04 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 20:09:04 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=client, insertable=true, updatable=true, unique=false}
w2022-03-15 20:09:04 DEBUG Building property client
w2022-03-15 20:09:04 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=status, insertable=true, updatable=true, unique=false}
w2022-03-15 20:09:04 DEBUG MetadataSourceProcessor property status with lazy=false
w2022-03-15 20:09:04 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:status]
w2022-03-15 20:09:04 DEBUG building SimpleValue for status
w2022-03-15 20:09:04 DEBUG Building property status
w2022-03-15 20:09:04 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 20:09:04 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=support, insertable=true, updatable=true, unique=false}
w2022-03-15 20:09:04 DEBUG Building property support
w2022-03-15 20:09:04 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=title, insertable=true, updatable=true, unique=false}
w2022-03-15 20:09:04 DEBUG MetadataSourceProcessor property title with lazy=false
w2022-03-15 20:09:04 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:title]
w2022-03-15 20:09:04 DEBUG building SimpleValue for title
w2022-03-15 20:09:04 DEBUG Building property title
w2022-03-15 20:09:04 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.User
w2022-03-15 20:09:04 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 20:09:04 DEBUG Import with entity name User
w2022-03-15 20:09:04 DEBUG Bind entity ru.edu.helpdesk.entity.User on table user
w2022-03-15 20:09:04 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 20:09:04 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.User] is safe
w2022-03-15 20:09:04 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.User
w2022-03-15 20:09:04 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 20:09:04 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:id]
w2022-03-15 20:09:04 DEBUG building SimpleValue for id
w2022-03-15 20:09:04 DEBUG Building property id
w2022-03-15 20:09:04 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 20:09:04 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
w2022-03-15 20:09:04 DEBUG MetadataSourceProcessor property firstName with lazy=false
w2022-03-15 20:09:04 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:firstName]
w2022-03-15 20:09:04 DEBUG building SimpleValue for firstName
w2022-03-15 20:09:04 DEBUG Building property firstName
w2022-03-15 20:09:04 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
w2022-03-15 20:09:04 DEBUG MetadataSourceProcessor property lastName with lazy=false
w2022-03-15 20:09:04 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:lastName]
w2022-03-15 20:09:04 DEBUG building SimpleValue for lastName
w2022-03-15 20:09:04 DEBUG Building property lastName
w2022-03-15 20:09:04 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=login, insertable=true, updatable=true, unique=false}
w2022-03-15 20:09:04 DEBUG MetadataSourceProcessor property login with lazy=false
w2022-03-15 20:09:04 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:login]
w2022-03-15 20:09:04 DEBUG building SimpleValue for login
w2022-03-15 20:09:04 DEBUG Building property login
w2022-03-15 20:09:04 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
w2022-03-15 20:09:04 DEBUG MetadataSourceProcessor property password with lazy=false
w2022-03-15 20:09:04 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:password]
w2022-03-15 20:09:04 DEBUG building SimpleValue for password
w2022-03-15 20:09:04 DEBUG Building property password
w2022-03-15 20:09:04 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=role, insertable=true, updatable=true, unique=false}
w2022-03-15 20:09:04 DEBUG MetadataSourceProcessor property role with lazy=false
w2022-03-15 20:09:04 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:role]
w2022-03-15 20:09:04 DEBUG building SimpleValue for role
w2022-03-15 20:09:04 DEBUG Building property role
w2022-03-15 20:09:04 DEBUG Starting fillSimpleValue for id
w2022-03-15 20:09:04 DEBUG Starting fillSimpleValue for message
w2022-03-15 20:09:04 DEBUG Starting fillSimpleValue for id
w2022-03-15 20:09:04 DEBUG Starting fillSimpleValue for status
w2022-03-15 20:09:04 DEBUG Starting fillSimpleValue for title
w2022-03-15 20:09:04 DEBUG Starting fillSimpleValue for id
w2022-03-15 20:09:04 DEBUG Starting fillSimpleValue for firstName
w2022-03-15 20:09:04 DEBUG Starting fillSimpleValue for lastName
w2022-03-15 20:09:04 DEBUG Starting fillSimpleValue for login
w2022-03-15 20:09:04 DEBUG Starting fillSimpleValue for password
w2022-03-15 20:09:04 DEBUG Starting fillSimpleValue for role
w2022-03-15 20:09:04 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [comment]
w2022-03-15 20:09:04 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [ticket]
w2022-03-15 20:09:04 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [user]
w2022-03-15 20:09:04 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 20:09:04 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 20:09:04 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 20:09:04 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 20:09:04 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 20:09:04 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 20:09:04 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 20:09:04 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 20:09:04 DEBUG Building session factory
w2022-03-15 20:09:04 DEBUG SessionFactory name : null
w2022-03-15 20:09:04 DEBUG Automatic flush during beforeCompletion(): enabled
w2022-03-15 20:09:04 DEBUG Automatic session close at end of transaction: disabled
w2022-03-15 20:09:04 DEBUG Statistics: disabled
w2022-03-15 20:09:04 DEBUG Deleted entity synthetic identifier rollback: disabled
w2022-03-15 20:09:04 DEBUG Default entity-mode: pojo
w2022-03-15 20:09:04 DEBUG Check Nullability in Core (should be disabled when Bean Validation is on): enabled
w2022-03-15 20:09:04 DEBUG Allow initialization of lazy state outside session : disabled
w2022-03-15 20:09:04 DEBUG Using BatchFetchStyle : LEGACY
w2022-03-15 20:09:04 DEBUG Default batch fetch size: -1
w2022-03-15 20:09:04 DEBUG Maximum outer join fetch depth: null
w2022-03-15 20:09:04 DEBUG Default null ordering: NONE
w2022-03-15 20:09:04 DEBUG Order SQL updates by primary key: disabled
w2022-03-15 20:09:04 DEBUG Order SQL inserts for batching: disabled
w2022-03-15 20:09:04 DEBUG multi-tenancy strategy : NONE
w2022-03-15 20:09:04 DEBUG JTA Track by Thread: enabled
w2022-03-15 20:09:04 DEBUG Query language substitutions: {}
w2022-03-15 20:09:04 DEBUG Named query checking : enabled
w2022-03-15 20:09:04 DEBUG Second-level cache: disabled
w2022-03-15 20:09:04 DEBUG Second-level query cache: disabled
w2022-03-15 20:09:04 DEBUG Second-level query cache factory: null
w2022-03-15 20:09:04 DEBUG Second-level cache region prefix: null
w2022-03-15 20:09:04 DEBUG Optimize second-level cache for minimal puts: disabled
w2022-03-15 20:09:04 DEBUG Structured second-level cache entries: disabled
w2022-03-15 20:09:04 DEBUG Second-level cache direct-reference entries: disabled
w2022-03-15 20:09:04 DEBUG Automatic eviction of collection cache: disabled
w2022-03-15 20:09:04 DEBUG JDBC batch size: 1
w2022-03-15 20:09:04 DEBUG JDBC batch updates for versioned data: enabled
w2022-03-15 20:09:04 DEBUG Scrollable result sets: disabled
w2022-03-15 20:09:04 DEBUG Wrap result sets: disabled
w2022-03-15 20:09:04 DEBUG JDBC3 getGeneratedKeys(): enabled
w2022-03-15 20:09:04 DEBUG JDBC result set fetch size: null
w2022-03-15 20:09:04 DEBUG Connection release mode: ON_CLOSE
w2022-03-15 20:09:04 DEBUG Generate SQL with comments: disabled
w2022-03-15 20:09:04 DEBUG JPA compliance - query : disabled
w2022-03-15 20:09:04 DEBUG JPA compliance - closed-handling : disabled
w2022-03-15 20:09:04 DEBUG JPA compliance - lists : disabled
w2022-03-15 20:09:04 DEBUG JPA compliance - transactions : disabled
w2022-03-15 20:09:04 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 20:09:04 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 20:09:04 DEBUG Session factory constructed with filter configurations : {}
w2022-03-15 20:09:04 DEBUG Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=true, java.specification.version=1.8, file.encoding.pkg=sun.io, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@753a14e5, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.SQLiteDialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\charsets.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\cldrdata.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\dnsns.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\jaccess.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\localedata.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\nashorn.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunec.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunmscapi.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\zipfs.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jce.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jfr.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jsse.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\management-agent.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\resources.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\rt.jar;C:\Users\Ольга\Desktop\Java\Project\Project1\helpdeskproject\target\classes;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\2.6.4\spring-boot-starter-data-jpa-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\2.6.4\spring-boot-starter-jdbc-2.6.4.jar;C:\Users\Ольга\.m2\repository\com\zaxxer\HikariCP\4.0.3\HikariCP-4.0.3.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-jdbc\5.3.16\spring-jdbc-5.3.16.jar;C:\Users\Ольга\.m2\repository\jakarta\transaction\jakarta.transaction-api\1.3.3\jakarta.transaction-api-1.3.3.jar;C:\Users\Ольга\.m2\repository\jakarta\persistence\jakarta.persistence-api\2.2.3\jakarta.persistence-api-2.2.3.jar;C:\Users\Ольга\.m2\repository\org\hibernate\hibernate-core\5.6.5.Final\hibernate-core-5.6.5.Final.jar;C:\Users\Ольга\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy\1.11.22\byte-buddy-1.11.22.jar;C:\Users\Ольга\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ольга\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Ольга\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.6\jaxb-runtime-2.3.6.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\txw2\2.3.6\txw2-2.3.6.jar;C:\Users\Ольга\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.12\istack-commons-runtime-3.0.12.jar;C:\Users\Ольга\.m2\repository\com\sun\activation\jakarta.activation\1.2.2\jakarta.activation-1.2.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\data\spring-data-jpa\2.6.2\spring-data-jpa-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\data\spring-data-commons\2.6.2\spring-data-commons-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-orm\5.3.16\spring-orm-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-context\5.3.16\spring-context-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-tx\5.3.16\spring-tx-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-beans\5.3.16\spring-beans-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-aspects\5.3.16\spring-aspects-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-security\2.6.4\spring-boot-starter-security-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter\2.6.4\spring-boot-starter-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-logging\2.6.4\spring-boot-starter-logging-2.6.4.jar;C:\Users\Ольга\.m2\repository\ch\qos\logback\logback-classic\1.2.10\logback-classic-1.2.10.jar;C:\Users\Ольга\.m2\repository\ch\qos\logback\logback-core\1.2.10\logback-core-1.2.10.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.17.1\log4j-to-slf4j-2.17.1.jar;C:\Users\Ольга\.m2\repository\org\slf4j\jul-to-slf4j\1.7.36\jul-to-slf4j-1.7.36.jar;C:\Users\Ольга\.m2\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;C:\Users\Ольга\.m2\repository\org\yaml\snakeyaml\1.29\snakeyaml-1.29.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-aop\5.3.16\spring-aop-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-config\5.6.2\spring-security-config-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-web\5.6.2\spring-security-web-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-expression\5.3.16\spring-expression-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-web\2.6.4\spring-boot-starter-web-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-json\2.6.4\spring-boot-starter-json-2.6.4.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.13.1\jackson-datatype-jdk8-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.13.1\jackson-datatype-jsr310-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.13.1\jackson-module-parameter-names-2.13.1.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\2.6.4\spring-boot-starter-tomcat-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.58\tomcat-embed-core-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\9.0.58\tomcat-embed-el-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.58\tomcat-embed-websocket-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-web\5.3.16\spring-web-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-webmvc\5.3.16\spring-webmvc-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-devtools\2.6.4\spring-boot-devtools-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot\2.6.4\spring-boot-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\2.6.4\spring-boot-autoconfigure-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\xerial\sqlite-jdbc\3.36.0.3\sqlite-jdbc-3.36.0.3.jar;C:\Users\Ольга\.m2\repository\com\zsoltfabok\sqlite-dialect\1.0\sqlite-dialect-1.0.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-aop\2.6.2\spring-boot-starter-aop-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\aspectj\aspectjweaver\1.9.7\aspectjweaver-1.9.7.jar;C:\Users\Ольга\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.3\jakarta.xml.bind-api-2.3.3.jar;C:\Users\Ольга\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.2\jakarta.activation-api-1.2.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-core\5.3.16\spring-core-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-jcl\5.3.16\spring-jcl-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-core\5.6.2\spring-security-core-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-crypto\5.6.2\spring-security-crypto-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\projectlombok\lombok\1.18.22\lombok-1.18.22.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\2.6.4\spring-boot-starter-thymeleaf-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\thymeleaf-spring5\3.0.15.RELEASE\thymeleaf-spring5-3.0.15.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\thymeleaf\3.0.15.RELEASE\thymeleaf-3.0.15.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\attoparser\attoparser\2.0.5.RELEASE\attoparser-2.0.5.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-java8time\3.0.4.RELEASE\thymeleaf-extras-java8time-3.0.4.RELEASE.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.1\jackson-databind-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.1\jackson-annotations-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.1\jackson-core-2.13.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-api\2.4.1\log4j-api-2.4.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-core\2.4.1\log4j-core-2.4.1.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.2\lib\idea_rt.jar, java.vm.vendor=Temurin, sun.arch.data.model=64, user.variant=, java.vendor.url=https://adoptium.net/, catalina.useNaming=false, user.timezone=Europe/Moscow, jakarta.persistence.sharedCache.mode=UNSPECIFIED, os.name=Windows 10, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), user.country=RU, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\bin, sun.java.command=ru.edu.helpdesk.HelpdeskApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@186b923f, com.sun.management.jmxremote=, javax.persistence.sharedCache.mode=UNSPECIFIED, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, user.home=C:\Users\Ольга, user.language=ru, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre, file.separator=\, spring.output.ansi.enabled=always, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, sun.boot.class.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\resources.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\rt.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\sunrsasign.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jsse.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jce.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\charsets.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jfr.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\classes, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_312-b07, user.name=Эльдорадо, spring.jmx.enabled=true, path.separator=;, os.version=10.0, java.endorsed.dirs=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\endorsed, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=default, spring.beaninfo.ignore=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=C:\Users\134E~1\AppData\Local\Temp\, catalina.home=C:\Users\Ольга\AppData\Local\Temp\tomcat.8080.4866436963058345728, java.version=1.8.0_312, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\Ольга\Desktop\Java\Project\Project1\helpdeskproject, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=3372, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\Ольга\AppData\Local\Temp\tomcat.8080.4866436963058345728, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@2df0c0ad, java.library.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\windows\System32\OpenSSH\;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\Program Files\apache-maven-3.8.4\bin;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Ольга\AppData\Local\Microsoft\WindowsApps;C:\Users\Ольга\AppData\Local\Programs\Microsoft VS Code\bin;C:\SQLite;C:\Users\Ольга\AppData\Roaming\npm;C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.2\bin;;., java.vendor=Temurin, java.vm.info=mixed mode, java.vm.version=25.312-b07, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, java.ext.dirs=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext;C:\windows\Sun\Java\lib\ext, hibernate.connection.datasource=HikariDataSource (HikariPool-1), hibernate.hbm2ddl.import_files=data/import.sql, java.class.version=52.0}
w2022-03-15 20:09:04 DEBUG Skipping JACC integration as it was not enabled
w2022-03-15 20:09:04 DEBUG Using ORDINAL-based conversion for Enum ru.edu.helpdesk.entity.UserRole
w2022-03-15 20:09:04 DEBUG Using ORDINAL-based conversion for Enum ru.edu.helpdesk.entity.TicketStatus
w2022-03-15 20:09:04 DEBUG Instantiated session factory
w2022-03-15 20:09:04 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1faedc43] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@41ec29f8]
w2022-03-15 20:09:05 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.User] is safe
w2022-03-15 20:09:05 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.User
w2022-03-15 20:09:05 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 20:09:05 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 20:09:05 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 20:09:05 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 20:09:05 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Ticket] is safe
w2022-03-15 20:09:05 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Ticket
w2022-03-15 20:09:05 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 20:09:05 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 20:09:05 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 20:09:05 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 20:09:05 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 20:09:05 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 20:09:05 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 20:09:05 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 20:09:05 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Comment] is safe
w2022-03-15 20:09:05 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Comment
w2022-03-15 20:09:05 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 20:09:05 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 20:09:05 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 20:09:05 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 20:09:05 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.User
w2022-03-15 20:09:05 DEBUG  Version select: select id from user where id =?
w2022-03-15 20:09:05 DEBUG  Snapshot select: select user_.id, user_.first_name as first_na2_2_, user_.last_name as last_nam3_2_, user_.login as login4_2_, user_.password as password5_2_, user_.role as role6_2_ from user user_ where user_.id=?
w2022-03-15 20:09:05 DEBUG  Insert 0: insert into user (first_name, last_name, login, password, role, id) values (?, ?, ?, ?, ?, ?)
w2022-03-15 20:09:05 DEBUG  Update 0: update user set first_name=?, last_name=?, login=?, password=?, role=? where id=?
w2022-03-15 20:09:05 DEBUG  Delete 0: delete from user where id=?
w2022-03-15 20:09:05 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e2cb7d1]
w2022-03-15 20:09:05 DEBUG Visiting attribute path : firstName
w2022-03-15 20:09:05 DEBUG Visiting attribute path : lastName
w2022-03-15 20:09:05 DEBUG Visiting attribute path : login
w2022-03-15 20:09:05 DEBUG Visiting attribute path : password
w2022-03-15 20:09:05 DEBUG Visiting attribute path : role
w2022-03-15 20:09:05 DEBUG Building LoadPlan...
w2022-03-15 20:09:05 DEBUG processing queryspace <gen:0>
w2022-03-15 20:09:05 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.User)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

w2022-03-15 20:09:05 DEBUG Static select for entity ru.edu.helpdesk.entity.User [NONE]: select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 20:09:05 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.Ticket
w2022-03-15 20:09:05 DEBUG  Version select: select id from ticket where id =?
w2022-03-15 20:09:05 DEBUG  Snapshot select: select ticket_.id, ticket_.client_id as client_i4_1_, ticket_.status as status2_1_, ticket_.support_id as support_5_1_, ticket_.title as title3_1_ from ticket ticket_ where ticket_.id=?
w2022-03-15 20:09:05 DEBUG  Insert 0: insert into ticket (client_id, status, support_id, title, id) values (?, ?, ?, ?, ?)
w2022-03-15 20:09:05 DEBUG  Update 0: update ticket set client_id=?, status=?, support_id=?, title=? where id=?
w2022-03-15 20:09:05 DEBUG  Delete 0: delete from ticket where id=?
w2022-03-15 20:09:05 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d85898f]
w2022-03-15 20:09:05 DEBUG Visiting attribute path : client
w2022-03-15 20:09:05 DEBUG Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a3843fd]
w2022-03-15 20:09:05 DEBUG Visiting attribute path : client.firstName
w2022-03-15 20:09:05 DEBUG Visiting attribute path : client.lastName
w2022-03-15 20:09:05 DEBUG Visiting attribute path : client.login
w2022-03-15 20:09:05 DEBUG Visiting attribute path : client.password
w2022-03-15 20:09:05 DEBUG Visiting attribute path : client.role
w2022-03-15 20:09:05 DEBUG Visiting attribute path : status
w2022-03-15 20:09:05 DEBUG Visiting attribute path : support
w2022-03-15 20:09:05 DEBUG Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45ef3520]
w2022-03-15 20:09:05 DEBUG Visiting attribute path : support.firstName
w2022-03-15 20:09:05 DEBUG Visiting attribute path : support.lastName
w2022-03-15 20:09:05 DEBUG Visiting attribute path : support.login
w2022-03-15 20:09:05 DEBUG Visiting attribute path : support.password
w2022-03-15 20:09:05 DEBUG Visiting attribute path : support.role
w2022-03-15 20:09:05 DEBUG Visiting attribute path : title
w2022-03-15 20:09:05 DEBUG Building LoadPlan...
w2022-03-15 20:09:05 DEBUG processing queryspace <gen:0>
w2022-03-15 20:09:05 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.Ticket)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.Ticket, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.Ticket)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:1>, path=ru.edu.helpdesk.entity.Ticket.client)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:2>, path=ru.edu.helpdesk.entity.Ticket.support)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.Ticket)
          - SQL table alias mapping - ticket0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(client)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
          - JOIN (JoinDefinedByMetadata(support)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user2_
                - alias suffix - 2_
                - suffixed key columns - {id1_2_2_}

w2022-03-15 20:09:05 DEBUG Static select for entity ru.edu.helpdesk.entity.Ticket [NONE]: select ticket0_.id as id1_1_0_, ticket0_.client_id as client_i4_1_0_, ticket0_.status as status2_1_0_, ticket0_.support_id as support_5_1_0_, ticket0_.title as title3_1_0_, user1_.id as id1_2_1_, user1_.first_name as first_na2_2_1_, user1_.last_name as last_nam3_2_1_, user1_.login as login4_2_1_, user1_.password as password5_2_1_, user1_.role as role6_2_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id left outer join user user2_ on ticket0_.support_id=user2_.id where ticket0_.id=?
w2022-03-15 20:09:05 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.Comment
w2022-03-15 20:09:05 DEBUG  Version select: select id from comment where id =?
w2022-03-15 20:09:05 DEBUG  Snapshot select: select comment_.id, comment_.message as message2_0_, comment_.ticket_id as ticket_i3_0_, comment_.user_id as user_id4_0_ from comment comment_ where comment_.id=?
w2022-03-15 20:09:05 DEBUG  Insert 0: insert into comment (message, ticket_id, user_id, id) values (?, ?, ?, ?)
w2022-03-15 20:09:05 DEBUG  Update 0: update comment set message=?, ticket_id=?, user_id=? where id=?
w2022-03-15 20:09:05 DEBUG  Delete 0: delete from comment where id=?
w2022-03-15 20:09:05 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5942153]
w2022-03-15 20:09:05 DEBUG Visiting attribute path : message
w2022-03-15 20:09:05 DEBUG Visiting attribute path : ticket
w2022-03-15 20:09:05 DEBUG Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ca087d9]
w2022-03-15 20:09:05 DEBUG Visiting attribute path : ticket.client
w2022-03-15 20:09:05 DEBUG Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5eccb2ee]
w2022-03-15 20:09:05 DEBUG Visiting attribute path : ticket.client.firstName
w2022-03-15 20:09:05 DEBUG Visiting attribute path : ticket.client.lastName
w2022-03-15 20:09:05 DEBUG Visiting attribute path : ticket.client.login
w2022-03-15 20:09:05 DEBUG Visiting attribute path : ticket.client.password
w2022-03-15 20:09:05 DEBUG Visiting attribute path : ticket.client.role
w2022-03-15 20:09:05 DEBUG Visiting attribute path : ticket.status
w2022-03-15 20:09:05 DEBUG Visiting attribute path : ticket.support
w2022-03-15 20:09:05 DEBUG Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@465699f6]
w2022-03-15 20:09:05 DEBUG Visiting attribute path : ticket.support.firstName
w2022-03-15 20:09:05 DEBUG Visiting attribute path : ticket.support.lastName
w2022-03-15 20:09:05 DEBUG Visiting attribute path : ticket.support.login
w2022-03-15 20:09:05 DEBUG Visiting attribute path : ticket.support.password
w2022-03-15 20:09:05 DEBUG Visiting attribute path : ticket.support.role
w2022-03-15 20:09:05 DEBUG Visiting attribute path : ticket.title
w2022-03-15 20:09:05 DEBUG Visiting attribute path : user
w2022-03-15 20:09:05 DEBUG Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33dcf787]
w2022-03-15 20:09:05 DEBUG Visiting attribute path : user.firstName
w2022-03-15 20:09:05 DEBUG Visiting attribute path : user.lastName
w2022-03-15 20:09:05 DEBUG Visiting attribute path : user.login
w2022-03-15 20:09:05 DEBUG Visiting attribute path : user.password
w2022-03-15 20:09:05 DEBUG Visiting attribute path : user.role
w2022-03-15 20:09:05 DEBUG Building LoadPlan...
w2022-03-15 20:09:05 DEBUG processing queryspace <gen:0>
w2022-03-15 20:09:05 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.Comment)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.Comment, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.Comment)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.Ticket, querySpaceUid=<gen:1>, path=ru.edu.helpdesk.entity.Comment.ticket)
             - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:2>, path=ru.edu.helpdesk.entity.Comment.ticket.client)
             - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:3>, path=ru.edu.helpdesk.entity.Comment.ticket.support)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:4>, path=ru.edu.helpdesk.entity.Comment.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(ticket)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ru.edu.helpdesk.entity.Ticket)
                - SQL table alias mapping - ticket1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(client)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=ru.edu.helpdesk.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}
                - JOIN (JoinDefinedByMetadata(support)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=ru.edu.helpdesk.entity.User)
                      - SQL table alias mapping - user3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_2_3_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user4_
                - alias suffix - 4_
                - suffixed key columns - {id1_2_4_}

w2022-03-15 20:09:05 DEBUG Static select for entity ru.edu.helpdesk.entity.Comment [NONE]: select comment0_.id as id1_0_0_, comment0_.message as message2_0_0_, comment0_.ticket_id as ticket_i3_0_0_, comment0_.user_id as user_id4_0_0_, ticket1_.id as id1_1_1_, ticket1_.client_id as client_i4_1_1_, ticket1_.status as status2_1_1_, ticket1_.support_id as support_5_1_1_, ticket1_.title as title3_1_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_, user3_.id as id1_2_3_, user3_.first_name as first_na2_2_3_, user3_.last_name as last_nam3_2_3_, user3_.login as login4_2_3_, user3_.password as password5_2_3_, user3_.role as role6_2_3_, user4_.id as id1_2_4_, user4_.first_name as first_na2_2_4_, user4_.last_name as last_nam3_2_4_, user4_.login as login4_2_4_, user4_.password as password5_2_4_, user4_.role as role6_2_4_ from comment comment0_ left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id left outer join user user2_ on ticket1_.client_id=user2_.id left outer join user user3_ on ticket1_.support_id=user3_.id left outer join user user4_ on comment0_.user_id=user4_.id where comment0_.id=?
w2022-03-15 20:09:05 DEBUG drop table if exists comment
w2022-03-15 20:09:05 DEBUG drop table if exists hibernate_sequence
w2022-03-15 20:09:05 DEBUG drop table if exists ticket
w2022-03-15 20:09:05 DEBUG drop table if exists user
w2022-03-15 20:09:05 DEBUG create table comment (id bigint not null, message varchar(255) not null, ticket_id bigint, user_id bigint, primary key (id))
w2022-03-15 20:09:05 DEBUG create table hibernate_sequence (next_val bigint)
w2022-03-15 20:09:05 DEBUG insert into hibernate_sequence values ( 1 )
w2022-03-15 20:09:05 DEBUG create table ticket (id bigint not null, status integer, title varchar(255) not null, client_id bigint, support_id bigint, primary key (id))
w2022-03-15 20:09:05 DEBUG create table user (id bigint not null, first_name varchar(255), last_name varchar(255), login varchar(255) not null, password varchar(255) not null, role integer, primary key (id))
w2022-03-15 20:09:05 INFO  HHH000476: Executing import script 'file:/C:/Users/%d0%9e%d0%bb%d1%8c%d0%b3%d0%b0/Desktop/Java/Project/Project1/helpdeskproject/target/classes/data/import.sql'
w2022-03-15 20:09:05 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (1, 'admin', 'admin', 'admin', 'admin', 0)
w2022-03-15 20:09:05 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (2, 'support', 'support', 'support', 'support', 1)
w2022-03-15 20:09:05 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (3, 'user1', 'user1', 'user1', 'user1', 2)
w2022-03-15 20:09:05 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (4, 'user2', 'user2', 'user2', 'user2', 2)
w2022-03-15 20:09:05 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (1, 1, 'Hello user1',1, 2)
w2022-03-15 20:09:05 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (2, 0, 'Title2', 1, 2)
w2022-03-15 20:09:05 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (3, 0, 'Message user2', 4, NULL)
w2022-03-15 20:09:05 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (1, "comment ticket1", 1, 3)
w2022-03-15 20:09:05 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (2, "comment ticket2", 2, 3)
w2022-03-15 20:09:05 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (3, "comment ticket11", 1, 2)
w2022-03-15 20:09:05 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (4, "comment ticket111", 1, 2)
w2022-03-15 20:09:05 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (5, "comment ticket22", 2, 2)
w2022-03-15 20:09:05 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (6, "comment ticket3", 3, 4)
w2022-03-15 20:09:05 DEBUG UPDATE hibernate_sequence SET next_val = 8 WHERE next_val = 1
w2022-03-15 20:09:05 INFO  HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
w2022-03-15 20:09:05 DEBUG Checking 0 named HQL queries
w2022-03-15 20:09:05 DEBUG Checking 0 named SQL queries
w2022-03-15 20:09:05 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 20:09:05 DEBUG Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@180e3493
w2022-03-15 20:09:05 DEBUG Registering SessionFactory: 13d0b753-4a30-4264-b9a5-5c54845a43cc (<unnamed>)
w2022-03-15 20:09:05 DEBUG Not binding SessionFactory to JNDI, no JNDI name configured
w2022-03-15 20:09:05 DEBUG Statistics initialized [enabled=false]
w2022-03-15 20:09:05 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 20:09:05 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 20:09:05 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 20:09:15 DEBUG Rendered criteria query -> select generatedAlias0 from Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 20:09:15 DEBUG QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@7ad2a4f0
w2022-03-15 20:09:15 DEBUG parse() - HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 20:09:15 DEBUG throwQueryException() : no errors
w2022-03-15 20:09:15 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[IDENT] Node: 'ru'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'edu'
    |  |  |  |  |  |  \-[IDENT] Node: 'helpdesk'
    |  |  |  |  |  \-[IDENT] Node: 'entity'
    |  |  |  |  \-[IDENT] Node: 'Ticket'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'client'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias1'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

w2022-03-15 20:09:15 DEBUG select << begin [level=1, statement=select]
w2022-03-15 20:09:15 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.Ticket (generatedAlias0) -> ticket0_
w2022-03-15 20:09:15 DEBUG Resolved : generatedAlias0 -> ticket0_.id
w2022-03-15 20:09:15 DEBUG getDataType() : client -> org.hibernate.type.ManyToOneType(ru.edu.helpdesk.entity.User)
w2022-03-15 20:09:15 DEBUG dereferenceEntityJoin() : generating join for client in ru.edu.helpdesk.entity.Ticket (generatedAlias1) parent = [ {null} ]
w2022-03-15 20:09:15 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.User (generatedAlias1) -> user1_
w2022-03-15 20:09:15 DEBUG addJoinByPathMap() : generatedAlias0.client -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}
w2022-03-15 20:09:15 DEBUG Resolved : generatedAlias0.client -> ticket0_.client_id
w2022-03-15 20:09:15 DEBUG createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'user user1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Ticket.client,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}

w2022-03-15 20:09:15 DEBUG Resolved : generatedAlias0 -> ticket0_.id
w2022-03-15 20:09:15 DEBUG Resolved : generatedAlias1 -> user1_.id
w2022-03-15 20:09:15 DEBUG getDataType() : id -> org.hibernate.type.LongType@5a72f32b
w2022-03-15 20:09:15 DEBUG Resolved : generatedAlias1.id -> user1_.id
w2022-03-15 20:09:15 DEBUG select : finishing up [level=1, statement=select]
w2022-03-15 20:09:15 DEBUG processQuery() :  ( SELECT ( {select clause} ticket0_.id ) ( FromClause{level=1} ( ticket ticket0_ user user1_ ) ) ( where ( = ( user1_.id user1_.id id ) ? ) ) )
w2022-03-15 20:09:15 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Ticket): [ticket]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.Ticket)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.User)
          | path: generatedAlias1.id
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.User)
          |  | originalText: generatedAlias1
          |  \-IdentNode
          |    persister: null
          |    originalText: id
          \-ParameterNode

w2022-03-15 20:09:15 DEBUG Using FROM fragment [ticket ticket0_]
w2022-03-15 20:09:15 DEBUG Using FROM fragment [left outer join user user1_ on ticket0_.client_id=user1_.id]
w2022-03-15 20:09:15 DEBUG select >> end [level=1, statement=select]
w2022-03-15 20:09:15 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (ticket,user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'ticket0_.id as id1_1_' {alias=generatedAlias0, className=ru.edu.helpdesk.entity.Ticket, tableAlias=ticket0_}
    |  \-[SQL_TOKEN] SqlFragment: 'ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[ticket0_, user1_], fromElementsByPath=[generatedAlias0.client], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'ticket ticket0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=ticket,tableAlias=ticket0_,origin=null,columns={,className=ru.edu.helpdesk.entity.Ticket}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join user user1_ on ticket0_.client_id=user1_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Ticket.client,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user1_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias1.id,tableAlias=user1_,className=ru.edu.helpdesk.entity.User,classAlias=generatedAlias1}
          |  +-[ALIAS_REF] IdentNode: 'user1_.id' {alias=generatedAlias1, className=ru.edu.helpdesk.entity.User, tableAlias=user1_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LongType@5a72f32b}

w2022-03-15 20:09:15 DEBUG throwQueryException() : no errors
w2022-03-15 20:09:15 DEBUG HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 20:09:15 DEBUG SQL: select ticket0_.id as id1_1_, ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id where user1_.id=?
w2022-03-15 20:09:15 DEBUG throwQueryException() : no errors
w2022-03-15 20:09:15 DEBUG select ticket0_.id as id1_1_, ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id where user1_.id=?
w2022-03-15 20:09:15 DEBUG Result set row: 0
w2022-03-15 20:09:15 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 20:09:15 DEBUG Result set row: 1
w2022-03-15 20:09:15 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 20:09:15 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 20:09:15 DEBUG Processing attribute `client` : value = 1
w2022-03-15 20:09:15 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 20:09:15 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 20:09:15 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 20:09:15 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#1]
w2022-03-15 20:09:15 DEBUG Processing attribute `firstName` : value = admin
w2022-03-15 20:09:15 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 20:09:15 DEBUG Processing attribute `lastName` : value = admin
w2022-03-15 20:09:15 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 20:09:15 DEBUG Processing attribute `login` : value = admin
w2022-03-15 20:09:15 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 20:09:15 DEBUG Processing attribute `password` : value = admin
w2022-03-15 20:09:15 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 20:09:15 DEBUG Processing attribute `role` : value = ADMIN
w2022-03-15 20:09:15 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 20:09:15 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#1]
w2022-03-15 20:09:15 DEBUG Done entity load : ru.edu.helpdesk.entity.User#1
w2022-03-15 20:09:15 DEBUG Processing attribute `status` : value = WORKING
w2022-03-15 20:09:15 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 20:09:15 DEBUG Processing attribute `support` : value = 2
w2022-03-15 20:09:15 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 20:09:15 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 20:09:15 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 20:09:15 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#2]
w2022-03-15 20:09:15 DEBUG Processing attribute `firstName` : value = support
w2022-03-15 20:09:15 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 20:09:15 DEBUG Processing attribute `lastName` : value = support
w2022-03-15 20:09:15 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 20:09:15 DEBUG Processing attribute `login` : value = support
w2022-03-15 20:09:15 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 20:09:15 DEBUG Processing attribute `password` : value = support
w2022-03-15 20:09:15 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 20:09:15 DEBUG Processing attribute `role` : value = SUPPORT
w2022-03-15 20:09:15 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 20:09:15 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#2]
w2022-03-15 20:09:15 DEBUG Done entity load : ru.edu.helpdesk.entity.User#2
w2022-03-15 20:09:15 DEBUG Processing attribute `title` : value = Hello user1
w2022-03-15 20:09:15 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 20:09:15 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 20:09:15 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 20:09:15 DEBUG Processing attribute `client` : value = 1
w2022-03-15 20:09:15 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 20:09:15 DEBUG Processing attribute `status` : value = OPEN
w2022-03-15 20:09:15 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 20:09:15 DEBUG Processing attribute `support` : value = 2
w2022-03-15 20:09:15 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 20:09:15 DEBUG Processing attribute `title` : value = Title2
w2022-03-15 20:09:15 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 20:09:15 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 20:09:54 DEBUG Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.login=:param0
w2022-03-15 20:09:54 DEBUG parse() - HQL: select generatedAlias0 from ru.edu.helpdesk.entity.User as generatedAlias0 where generatedAlias0.login=:param0
w2022-03-15 20:09:54 DEBUG throwQueryException() : no errors
w2022-03-15 20:09:54 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'ru'
    |  |     |  |  |  |  \-[IDENT] Node: 'edu'
    |  |     |  |  |  \-[IDENT] Node: 'helpdesk'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'login'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

w2022-03-15 20:09:54 DEBUG select << begin [level=1, statement=select]
w2022-03-15 20:09:54 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.User (generatedAlias0) -> user0_
w2022-03-15 20:09:54 DEBUG Resolved : generatedAlias0 -> user0_.id
w2022-03-15 20:09:54 DEBUG Resolved : generatedAlias0 -> user0_.id
w2022-03-15 20:09:54 DEBUG getDataType() : login -> org.hibernate.type.StringType@68f12ba9
w2022-03-15 20:09:54 DEBUG Resolved : generatedAlias0.login -> user0_.login
w2022-03-15 20:09:54 DEBUG select : finishing up [level=1, statement=select]
w2022-03-15 20:09:54 DEBUG processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) ( where ( = ( user0_.login user0_.id login ) ? ) ) )
w2022-03-15 20:09:54 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity User): [user]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.User)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.User)
          | path: generatedAlias0.login
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.User)
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    originalText: login
          \-ParameterNode

w2022-03-15 20:09:54 DEBUG Using FROM fragment [user user0_]
w2022-03-15 20:09:54 DEBUG select >> end [level=1, statement=select]
w2022-03-15 20:09:54 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_2_' {alias=generatedAlias0, className=ru.edu.helpdesk.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.first_name as first_na2_2_, user0_.last_name as last_nam3_2_, user0_.login as login4_2_, user0_.password as password5_2_, user0_.role as role6_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=ru.edu.helpdesk.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.login' {propertyName=login,dereferenceType=PRIMITIVE,getPropertyPath=login,path=generatedAlias0.login,tableAlias=user0_,className=ru.edu.helpdesk.entity.User,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=generatedAlias0, className=ru.edu.helpdesk.entity.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'login' {originalText=login}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@68f12ba9}

w2022-03-15 20:09:54 DEBUG throwQueryException() : no errors
w2022-03-15 20:09:54 DEBUG HQL: select generatedAlias0 from ru.edu.helpdesk.entity.User as generatedAlias0 where generatedAlias0.login=:param0
w2022-03-15 20:09:54 DEBUG SQL: select user0_.id as id1_2_, user0_.first_name as first_na2_2_, user0_.last_name as last_nam3_2_, user0_.login as login4_2_, user0_.password as password5_2_, user0_.role as role6_2_ from user user0_ where user0_.login=?
w2022-03-15 20:09:54 DEBUG throwQueryException() : no errors
w2022-03-15 20:09:54 DEBUG select user0_.id as id1_2_, user0_.first_name as first_na2_2_, user0_.last_name as last_nam3_2_, user0_.login as login4_2_, user0_.password as password5_2_, user0_.role as role6_2_ from user user0_ where user0_.login=?
w2022-03-15 20:09:54 DEBUG Result set row: 0
w2022-03-15 20:09:54 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.User#1]
w2022-03-15 20:09:54 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#1]
w2022-03-15 20:09:54 DEBUG Processing attribute `firstName` : value = admin
w2022-03-15 20:09:54 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 20:09:54 DEBUG Processing attribute `lastName` : value = admin
w2022-03-15 20:09:54 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 20:09:54 DEBUG Processing attribute `login` : value = admin
w2022-03-15 20:09:54 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 20:09:54 DEBUG Processing attribute `password` : value = admin
w2022-03-15 20:09:54 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 20:09:54 DEBUG Processing attribute `role` : value = ADMIN
w2022-03-15 20:09:54 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 20:09:54 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#1]
w2022-03-15 20:09:54 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 20:09:54 DEBUG begin
w2022-03-15 20:09:54 DEBUG committing
w2022-03-15 20:09:54 DEBUG Rendered criteria query -> select generatedAlias0 from Comment as generatedAlias0 left join generatedAlias0.ticket as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 20:09:54 DEBUG parse() - HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Comment as generatedAlias0 left join generatedAlias0.ticket as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 20:09:54 DEBUG throwQueryException() : no errors
w2022-03-15 20:09:54 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[IDENT] Node: 'ru'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'edu'
    |  |  |  |  |  |  \-[IDENT] Node: 'helpdesk'
    |  |  |  |  |  \-[IDENT] Node: 'entity'
    |  |  |  |  \-[IDENT] Node: 'Comment'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'ticket'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias1'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

w2022-03-15 20:09:54 DEBUG select << begin [level=1, statement=select]
w2022-03-15 20:09:54 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.Comment (generatedAlias0) -> comment0_
w2022-03-15 20:09:54 DEBUG Resolved : generatedAlias0 -> comment0_.id
w2022-03-15 20:09:54 DEBUG getDataType() : ticket -> org.hibernate.type.ManyToOneType(ru.edu.helpdesk.entity.Ticket)
w2022-03-15 20:09:54 DEBUG dereferenceEntityJoin() : generating join for ticket in ru.edu.helpdesk.entity.Comment (generatedAlias1) parent = [ {null} ]
w2022-03-15 20:09:54 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.Ticket (generatedAlias1) -> ticket1_
w2022-03-15 20:09:54 DEBUG addJoinByPathMap() : generatedAlias0.ticket -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=ticket,tableAlias=ticket1_,origin=comment comment0_,columns={comment0_.ticket_id,className=ru.edu.helpdesk.entity.Ticket}}
w2022-03-15 20:09:54 DEBUG Resolved : generatedAlias0.ticket -> comment0_.ticket_id
w2022-03-15 20:09:54 DEBUG createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'ticket ticket1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Comment.ticket,tableName=ticket,tableAlias=ticket1_,origin=comment comment0_,columns={comment0_.ticket_id,className=ru.edu.helpdesk.entity.Ticket}}

w2022-03-15 20:09:54 DEBUG Resolved : generatedAlias0 -> comment0_.id
w2022-03-15 20:09:54 DEBUG Resolved : generatedAlias1 -> ticket1_.id
w2022-03-15 20:09:54 DEBUG getDataType() : id -> org.hibernate.type.LongType@5a72f32b
w2022-03-15 20:09:54 DEBUG Resolved : generatedAlias1.id -> ticket1_.id
w2022-03-15 20:09:54 DEBUG select : finishing up [level=1, statement=select]
w2022-03-15 20:09:54 DEBUG processQuery() :  ( SELECT ( {select clause} comment0_.id ) ( FromClause{level=1} ( comment comment0_ ticket ticket1_ ) ) ( where ( = ( ticket1_.id ticket1_.id id ) ? ) ) )
w2022-03-15 20:09:54 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Comment): [comment]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.Comment)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.Ticket)
          | path: generatedAlias1.id
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.Ticket)
          |  | originalText: generatedAlias1
          |  \-IdentNode
          |    persister: null
          |    originalText: id
          \-ParameterNode

w2022-03-15 20:09:54 DEBUG Using FROM fragment [comment comment0_]
w2022-03-15 20:09:54 DEBUG Using FROM fragment [left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id]
w2022-03-15 20:09:54 DEBUG select >> end [level=1, statement=select]
w2022-03-15 20:09:54 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (ticket,comment)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'comment0_.id as id1_0_' {alias=generatedAlias0, className=ru.edu.helpdesk.entity.Comment, tableAlias=comment0_}
    |  \-[SQL_TOKEN] SqlFragment: 'comment0_.message as message2_0_, comment0_.ticket_id as ticket_i3_0_, comment0_.user_id as user_id4_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[ticket1_, comment0_], fromElementsByPath=[generatedAlias0.ticket], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'comment comment0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=comment,tableAlias=comment0_,origin=null,columns={,className=ru.edu.helpdesk.entity.Comment}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Comment.ticket,tableName=ticket,tableAlias=ticket1_,origin=comment comment0_,columns={comment0_.ticket_id,className=ru.edu.helpdesk.entity.Ticket}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'ticket1_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias1.id,tableAlias=ticket1_,className=ru.edu.helpdesk.entity.Ticket,classAlias=generatedAlias1}
          |  +-[ALIAS_REF] IdentNode: 'ticket1_.id' {alias=generatedAlias1, className=ru.edu.helpdesk.entity.Ticket, tableAlias=ticket1_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LongType@5a72f32b}

w2022-03-15 20:09:54 DEBUG throwQueryException() : no errors
w2022-03-15 20:09:54 DEBUG HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Comment as generatedAlias0 left join generatedAlias0.ticket as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 20:09:54 DEBUG SQL: select comment0_.id as id1_0_, comment0_.message as message2_0_, comment0_.ticket_id as ticket_i3_0_, comment0_.user_id as user_id4_0_ from comment comment0_ left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id where ticket1_.id=?
w2022-03-15 20:09:54 DEBUG throwQueryException() : no errors
w2022-03-15 20:09:54 DEBUG select comment0_.id as id1_0_, comment0_.message as message2_0_, comment0_.ticket_id as ticket_i3_0_, comment0_.user_id as user_id4_0_ from comment comment0_ left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id where ticket1_.id=?
w2022-03-15 20:09:54 DEBUG Result set row: 0
w2022-03-15 20:09:54 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Comment#1]
w2022-03-15 20:09:54 DEBUG Result set row: 1
w2022-03-15 20:09:54 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Comment#3]
w2022-03-15 20:09:54 DEBUG Result set row: 2
w2022-03-15 20:09:54 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Comment#4]
w2022-03-15 20:09:54 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Comment#1]
w2022-03-15 20:09:54 DEBUG Processing attribute `message` : value = comment ticket1
w2022-03-15 20:09:54 DEBUG Attribute (`message`)  - enhanced for lazy-loading? - false
w2022-03-15 20:09:54 DEBUG Processing attribute `ticket` : value = 1
w2022-03-15 20:09:54 DEBUG Attribute (`ticket`)  - enhanced for lazy-loading? - false
w2022-03-15 20:09:54 DEBUG select ticket0_.id as id1_1_0_, ticket0_.client_id as client_i4_1_0_, ticket0_.status as status2_1_0_, ticket0_.support_id as support_5_1_0_, ticket0_.title as title3_1_0_, user1_.id as id1_2_1_, user1_.first_name as first_na2_2_1_, user1_.last_name as last_nam3_2_1_, user1_.login as login4_2_1_, user1_.password as password5_2_1_, user1_.role as role6_2_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id left outer join user user2_ on ticket0_.support_id=user2_.id where ticket0_.id=?
w2022-03-15 20:09:54 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 20:09:54 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 20:09:54 DEBUG Processing attribute `client` : value = 1
w2022-03-15 20:09:54 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 20:09:54 DEBUG Processing attribute `status` : value = WORKING
w2022-03-15 20:09:54 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 20:09:54 DEBUG Processing attribute `support` : value = 2
w2022-03-15 20:09:54 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 20:09:54 DEBUG Processing attribute `title` : value = Hello user1
w2022-03-15 20:09:54 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 20:09:54 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 20:09:54 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#1]
w2022-03-15 20:09:54 DEBUG Processing attribute `firstName` : value = admin
w2022-03-15 20:09:54 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 20:09:54 DEBUG Processing attribute `lastName` : value = admin
w2022-03-15 20:09:54 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 20:09:54 DEBUG Processing attribute `login` : value = admin
w2022-03-15 20:09:54 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 20:09:54 DEBUG Processing attribute `password` : value = admin
w2022-03-15 20:09:54 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 20:09:54 DEBUG Processing attribute `role` : value = ADMIN
w2022-03-15 20:09:54 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 20:09:54 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#1]
w2022-03-15 20:09:54 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#2]
w2022-03-15 20:09:54 DEBUG Processing attribute `firstName` : value = support
w2022-03-15 20:09:54 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 20:09:54 DEBUG Processing attribute `lastName` : value = support
w2022-03-15 20:09:54 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 20:09:54 DEBUG Processing attribute `login` : value = support
w2022-03-15 20:09:54 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 20:09:54 DEBUG Processing attribute `password` : value = support
w2022-03-15 20:09:54 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 20:09:54 DEBUG Processing attribute `role` : value = SUPPORT
w2022-03-15 20:09:54 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 20:09:54 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#2]
w2022-03-15 20:09:54 DEBUG Done entity load : ru.edu.helpdesk.entity.Ticket#1
w2022-03-15 20:09:54 DEBUG Processing attribute `user` : value = 3
w2022-03-15 20:09:54 DEBUG Attribute (`user`)  - enhanced for lazy-loading? - false
w2022-03-15 20:09:54 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 20:09:54 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 20:09:54 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#3]
w2022-03-15 20:09:54 DEBUG Processing attribute `firstName` : value = user1
w2022-03-15 20:09:54 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 20:09:54 DEBUG Processing attribute `lastName` : value = user1
w2022-03-15 20:09:54 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 20:09:54 DEBUG Processing attribute `login` : value = user1
w2022-03-15 20:09:54 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 20:09:54 DEBUG Processing attribute `password` : value = user1
w2022-03-15 20:09:54 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 20:09:54 DEBUG Processing attribute `role` : value = USER
w2022-03-15 20:09:54 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 20:09:54 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#3]
w2022-03-15 20:09:54 DEBUG Done entity load : ru.edu.helpdesk.entity.User#3
w2022-03-15 20:09:54 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Comment#1]
w2022-03-15 20:09:54 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Comment#3]
w2022-03-15 20:09:54 DEBUG Processing attribute `message` : value = comment ticket11
w2022-03-15 20:09:54 DEBUG Attribute (`message`)  - enhanced for lazy-loading? - false
w2022-03-15 20:09:54 DEBUG Processing attribute `ticket` : value = 1
w2022-03-15 20:09:54 DEBUG Attribute (`ticket`)  - enhanced for lazy-loading? - false
w2022-03-15 20:09:54 DEBUG Processing attribute `user` : value = 2
w2022-03-15 20:09:54 DEBUG Attribute (`user`)  - enhanced for lazy-loading? - false
w2022-03-15 20:09:54 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Comment#3]
w2022-03-15 20:09:54 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Comment#4]
w2022-03-15 20:09:54 DEBUG Processing attribute `message` : value = comment ticket111
w2022-03-15 20:09:54 DEBUG Attribute (`message`)  - enhanced for lazy-loading? - false
w2022-03-15 20:09:54 DEBUG Processing attribute `ticket` : value = 1
w2022-03-15 20:09:54 DEBUG Attribute (`ticket`)  - enhanced for lazy-loading? - false
w2022-03-15 20:09:54 DEBUG Processing attribute `user` : value = 2
w2022-03-15 20:09:54 DEBUG Attribute (`user`)  - enhanced for lazy-loading? - false
w2022-03-15 20:09:54 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Comment#4]
w2022-03-15 20:47:25 DEBUG Rendered criteria query -> select generatedAlias0 from Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 20:47:25 DEBUG select ticket0_.id as id1_1_, ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id where user1_.id=?
w2022-03-15 20:47:25 DEBUG Result set row: 0
w2022-03-15 20:47:25 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 20:47:25 DEBUG Result set row: 1
w2022-03-15 20:47:25 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 20:47:25 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 20:47:25 DEBUG Processing attribute `client` : value = 1
w2022-03-15 20:47:25 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 20:47:25 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 20:47:25 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 20:47:25 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#1]
w2022-03-15 20:47:25 DEBUG Processing attribute `firstName` : value = admin
w2022-03-15 20:47:25 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 20:47:25 DEBUG Processing attribute `lastName` : value = admin
w2022-03-15 20:47:25 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 20:47:25 DEBUG Processing attribute `login` : value = admin
w2022-03-15 20:47:25 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 20:47:25 DEBUG Processing attribute `password` : value = admin
w2022-03-15 20:47:25 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 20:47:25 DEBUG Processing attribute `role` : value = ADMIN
w2022-03-15 20:47:25 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 20:47:25 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#1]
w2022-03-15 20:47:25 DEBUG Done entity load : ru.edu.helpdesk.entity.User#1
w2022-03-15 20:47:25 DEBUG Processing attribute `status` : value = WORKING
w2022-03-15 20:47:25 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 20:47:25 DEBUG Processing attribute `support` : value = 2
w2022-03-15 20:47:25 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 20:47:25 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 20:47:25 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 20:47:25 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#2]
w2022-03-15 20:47:25 DEBUG Processing attribute `firstName` : value = support
w2022-03-15 20:47:25 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 20:47:25 DEBUG Processing attribute `lastName` : value = support
w2022-03-15 20:47:25 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 20:47:25 DEBUG Processing attribute `login` : value = support
w2022-03-15 20:47:25 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 20:47:25 DEBUG Processing attribute `password` : value = support
w2022-03-15 20:47:25 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 20:47:25 DEBUG Processing attribute `role` : value = SUPPORT
w2022-03-15 20:47:25 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 20:47:25 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#2]
w2022-03-15 20:47:25 DEBUG Done entity load : ru.edu.helpdesk.entity.User#2
w2022-03-15 20:47:25 DEBUG Processing attribute `title` : value = Hello user1
w2022-03-15 20:47:25 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 20:47:25 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 20:47:25 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 20:47:25 DEBUG Processing attribute `client` : value = 1
w2022-03-15 20:47:25 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 20:47:25 DEBUG Processing attribute `status` : value = OPEN
w2022-03-15 20:47:25 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 20:47:25 DEBUG Processing attribute `support` : value = 2
w2022-03-15 20:47:25 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 20:47:25 DEBUG Processing attribute `title` : value = Title2
w2022-03-15 20:47:25 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 20:47:25 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 20:53:28 DEBUG Rendered criteria query -> select generatedAlias0 from Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 20:53:28 DEBUG select ticket0_.id as id1_1_, ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id where user1_.id=?
w2022-03-15 20:53:28 DEBUG Result set row: 0
w2022-03-15 20:53:28 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 20:53:28 DEBUG Result set row: 1
w2022-03-15 20:53:28 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 20:53:28 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 20:53:28 DEBUG Processing attribute `client` : value = 1
w2022-03-15 20:53:28 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 20:53:28 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 20:53:28 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 20:53:28 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#1]
w2022-03-15 20:53:28 DEBUG Processing attribute `firstName` : value = admin
w2022-03-15 20:53:28 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 20:53:28 DEBUG Processing attribute `lastName` : value = admin
w2022-03-15 20:53:28 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 20:53:28 DEBUG Processing attribute `login` : value = admin
w2022-03-15 20:53:28 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 20:53:28 DEBUG Processing attribute `password` : value = admin
w2022-03-15 20:53:28 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 20:53:28 DEBUG Processing attribute `role` : value = ADMIN
w2022-03-15 20:53:28 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 20:53:28 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#1]
w2022-03-15 20:53:28 DEBUG Done entity load : ru.edu.helpdesk.entity.User#1
w2022-03-15 20:53:28 DEBUG Processing attribute `status` : value = WORKING
w2022-03-15 20:53:28 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 20:53:28 DEBUG Processing attribute `support` : value = 2
w2022-03-15 20:53:28 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 20:53:28 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 20:53:28 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 20:53:28 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#2]
w2022-03-15 20:53:28 DEBUG Processing attribute `firstName` : value = support
w2022-03-15 20:53:28 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 20:53:28 DEBUG Processing attribute `lastName` : value = support
w2022-03-15 20:53:28 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 20:53:28 DEBUG Processing attribute `login` : value = support
w2022-03-15 20:53:28 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 20:53:28 DEBUG Processing attribute `password` : value = support
w2022-03-15 20:53:28 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 20:53:28 DEBUG Processing attribute `role` : value = SUPPORT
w2022-03-15 20:53:28 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 20:53:28 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#2]
w2022-03-15 20:53:28 DEBUG Done entity load : ru.edu.helpdesk.entity.User#2
w2022-03-15 20:53:28 DEBUG Processing attribute `title` : value = Hello user1
w2022-03-15 20:53:28 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 20:53:28 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 20:53:28 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 20:53:28 DEBUG Processing attribute `client` : value = 1
w2022-03-15 20:53:28 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 20:53:28 DEBUG Processing attribute `status` : value = OPEN
w2022-03-15 20:53:28 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 20:53:28 DEBUG Processing attribute `support` : value = 2
w2022-03-15 20:53:28 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 20:53:28 DEBUG Processing attribute `title` : value = Title2
w2022-03-15 20:53:28 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 20:53:28 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 20:54:27 DEBUG Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.login=:param0
w2022-03-15 20:54:27 DEBUG select user0_.id as id1_2_, user0_.first_name as first_na2_2_, user0_.last_name as last_nam3_2_, user0_.login as login4_2_, user0_.password as password5_2_, user0_.role as role6_2_ from user user0_ where user0_.login=?
w2022-03-15 20:54:27 DEBUG Result set row: 0
w2022-03-15 20:54:27 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.User#1]
w2022-03-15 20:54:27 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#1]
w2022-03-15 20:54:27 DEBUG Processing attribute `firstName` : value = admin
w2022-03-15 20:54:27 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 20:54:27 DEBUG Processing attribute `lastName` : value = admin
w2022-03-15 20:54:27 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 20:54:27 DEBUG Processing attribute `login` : value = admin
w2022-03-15 20:54:27 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 20:54:27 DEBUG Processing attribute `password` : value = admin
w2022-03-15 20:54:27 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 20:54:27 DEBUG Processing attribute `role` : value = ADMIN
w2022-03-15 20:54:27 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 20:54:27 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#1]
w2022-03-15 20:54:27 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 20:54:27 DEBUG begin
w2022-03-15 20:54:27 DEBUG committing
w2022-03-15 20:54:27 DEBUG Rendered criteria query -> select generatedAlias0 from Comment as generatedAlias0 left join generatedAlias0.ticket as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 20:54:27 DEBUG select comment0_.id as id1_0_, comment0_.message as message2_0_, comment0_.ticket_id as ticket_i3_0_, comment0_.user_id as user_id4_0_ from comment comment0_ left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id where ticket1_.id=?
w2022-03-15 20:54:27 DEBUG Result set row: 0
w2022-03-15 20:54:27 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Comment#1]
w2022-03-15 20:54:27 DEBUG Result set row: 1
w2022-03-15 20:54:27 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Comment#3]
w2022-03-15 20:54:27 DEBUG Result set row: 2
w2022-03-15 20:54:27 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Comment#4]
w2022-03-15 20:54:27 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Comment#1]
w2022-03-15 20:54:27 DEBUG Processing attribute `message` : value = comment ticket1
w2022-03-15 20:54:27 DEBUG Attribute (`message`)  - enhanced for lazy-loading? - false
w2022-03-15 20:54:27 DEBUG Processing attribute `ticket` : value = 1
w2022-03-15 20:54:27 DEBUG Attribute (`ticket`)  - enhanced for lazy-loading? - false
w2022-03-15 20:54:27 DEBUG select ticket0_.id as id1_1_0_, ticket0_.client_id as client_i4_1_0_, ticket0_.status as status2_1_0_, ticket0_.support_id as support_5_1_0_, ticket0_.title as title3_1_0_, user1_.id as id1_2_1_, user1_.first_name as first_na2_2_1_, user1_.last_name as last_nam3_2_1_, user1_.login as login4_2_1_, user1_.password as password5_2_1_, user1_.role as role6_2_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id left outer join user user2_ on ticket0_.support_id=user2_.id where ticket0_.id=?
w2022-03-15 20:54:27 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 20:54:27 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 20:54:27 DEBUG Processing attribute `client` : value = 1
w2022-03-15 20:54:27 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 20:54:27 DEBUG Processing attribute `status` : value = WORKING
w2022-03-15 20:54:27 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 20:54:27 DEBUG Processing attribute `support` : value = 2
w2022-03-15 20:54:27 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 20:54:27 DEBUG Processing attribute `title` : value = Hello user1
w2022-03-15 20:54:27 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 20:54:27 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 20:54:27 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#1]
w2022-03-15 20:54:27 DEBUG Processing attribute `firstName` : value = admin
w2022-03-15 20:54:27 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 20:54:27 DEBUG Processing attribute `lastName` : value = admin
w2022-03-15 20:54:27 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 20:54:27 DEBUG Processing attribute `login` : value = admin
w2022-03-15 20:54:27 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 20:54:27 DEBUG Processing attribute `password` : value = admin
w2022-03-15 20:54:27 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 20:54:27 DEBUG Processing attribute `role` : value = ADMIN
w2022-03-15 20:54:27 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 20:54:27 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#1]
w2022-03-15 20:54:27 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#2]
w2022-03-15 20:54:27 DEBUG Processing attribute `firstName` : value = support
w2022-03-15 20:54:27 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 20:54:27 DEBUG Processing attribute `lastName` : value = support
w2022-03-15 20:54:27 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 20:54:27 DEBUG Processing attribute `login` : value = support
w2022-03-15 20:54:27 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 20:54:27 DEBUG Processing attribute `password` : value = support
w2022-03-15 20:54:27 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 20:54:27 DEBUG Processing attribute `role` : value = SUPPORT
w2022-03-15 20:54:27 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 20:54:27 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#2]
w2022-03-15 20:54:27 DEBUG Done entity load : ru.edu.helpdesk.entity.Ticket#1
w2022-03-15 20:54:27 DEBUG Processing attribute `user` : value = 3
w2022-03-15 20:54:27 DEBUG Attribute (`user`)  - enhanced for lazy-loading? - false
w2022-03-15 20:54:27 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 20:54:27 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 20:54:27 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#3]
w2022-03-15 20:54:27 DEBUG Processing attribute `firstName` : value = user1
w2022-03-15 20:54:27 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 20:54:27 DEBUG Processing attribute `lastName` : value = user1
w2022-03-15 20:54:27 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 20:54:27 DEBUG Processing attribute `login` : value = user1
w2022-03-15 20:54:27 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 20:54:27 DEBUG Processing attribute `password` : value = user1
w2022-03-15 20:54:27 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 20:54:27 DEBUG Processing attribute `role` : value = USER
w2022-03-15 20:54:27 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 20:54:27 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#3]
w2022-03-15 20:54:27 DEBUG Done entity load : ru.edu.helpdesk.entity.User#3
w2022-03-15 20:54:27 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Comment#1]
w2022-03-15 20:54:27 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Comment#3]
w2022-03-15 20:54:27 DEBUG Processing attribute `message` : value = comment ticket11
w2022-03-15 20:54:27 DEBUG Attribute (`message`)  - enhanced for lazy-loading? - false
w2022-03-15 20:54:27 DEBUG Processing attribute `ticket` : value = 1
w2022-03-15 20:54:27 DEBUG Attribute (`ticket`)  - enhanced for lazy-loading? - false
w2022-03-15 20:54:27 DEBUG Processing attribute `user` : value = 2
w2022-03-15 20:54:27 DEBUG Attribute (`user`)  - enhanced for lazy-loading? - false
w2022-03-15 20:54:27 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Comment#3]
w2022-03-15 20:54:27 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Comment#4]
w2022-03-15 20:54:27 DEBUG Processing attribute `message` : value = comment ticket111
w2022-03-15 20:54:27 DEBUG Attribute (`message`)  - enhanced for lazy-loading? - false
w2022-03-15 20:54:27 DEBUG Processing attribute `ticket` : value = 1
w2022-03-15 20:54:27 DEBUG Attribute (`ticket`)  - enhanced for lazy-loading? - false
w2022-03-15 20:54:27 DEBUG Processing attribute `user` : value = 2
w2022-03-15 20:54:27 DEBUG Attribute (`user`)  - enhanced for lazy-loading? - false
w2022-03-15 20:54:27 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Comment#4]
w2022-03-15 21:25:40 DEBUG Logging Provider: org.jboss.logging.Log4j2LoggerProvider
w2022-03-15 21:25:40 DEBUG PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@6c202846
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/%d0%9e%d0%bb%d1%8c%d0%b3%d0%b0/Desktop/Java/Project/Project1/helpdeskproject/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		ru.edu.helpdesk.entity.Comment
		ru.edu.helpdesk.entity.Ticket
		ru.edu.helpdesk.entity.User]
	Mapping files names []
	Properties []
w2022-03-15 21:25:40 DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
w2022-03-15 21:25:40 DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
w2022-03-15 21:25:40 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
w2022-03-15 21:25:40 INFO  HHH000412: Hibernate ORM core version 5.6.5.Final
w2022-03-15 21:25:40 DEBUG HHH000206: hibernate.properties not found
w2022-03-15 21:25:40 DEBUG Overriding existing service binding [org.hibernate.secure.spi.JaccService]
w2022-03-15 21:25:40 DEBUG Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
w2022-03-15 21:25:40 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
w2022-03-15 21:25:40 INFO  HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
w2022-03-15 21:25:40 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@6c9f0057
w2022-03-15 21:25:40 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@6c9f0057
w2022-03-15 21:25:40 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6c9f0057
w2022-03-15 21:25:40 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3246571b
w2022-03-15 21:25:40 DEBUG Adding type registration true_false -> org.hibernate.type.TrueFalseType@98ba013
w2022-03-15 21:25:40 DEBUG Adding type registration yes_no -> org.hibernate.type.YesNoType@16b4d88f
w2022-03-15 21:25:40 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@3891b1cf
w2022-03-15 21:25:40 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@3891b1cf
w2022-03-15 21:25:40 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3891b1cf
w2022-03-15 21:25:40 DEBUG Adding type registration character -> org.hibernate.type.CharacterType@70896fce
w2022-03-15 21:25:40 DEBUG Adding type registration char -> org.hibernate.type.CharacterType@70896fce
w2022-03-15 21:25:40 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@70896fce
w2022-03-15 21:25:40 DEBUG Adding type registration short -> org.hibernate.type.ShortType@5f748592
w2022-03-15 21:25:40 DEBUG Adding type registration short -> org.hibernate.type.ShortType@5f748592
w2022-03-15 21:25:40 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5f748592
w2022-03-15 21:25:40 DEBUG Adding type registration integer -> org.hibernate.type.IntegerType@74567880
w2022-03-15 21:25:40 DEBUG Adding type registration int -> org.hibernate.type.IntegerType@74567880
w2022-03-15 21:25:40 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@74567880
w2022-03-15 21:25:40 DEBUG Adding type registration long -> org.hibernate.type.LongType@1111915c
w2022-03-15 21:25:40 DEBUG Adding type registration long -> org.hibernate.type.LongType@1111915c
w2022-03-15 21:25:40 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.LongType@1111915c
w2022-03-15 21:25:40 DEBUG Adding type registration float -> org.hibernate.type.FloatType@3cb67654
w2022-03-15 21:25:40 DEBUG Adding type registration float -> org.hibernate.type.FloatType@3cb67654
w2022-03-15 21:25:40 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3cb67654
w2022-03-15 21:25:40 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@5f47400e
w2022-03-15 21:25:40 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@5f47400e
w2022-03-15 21:25:40 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5f47400e
w2022-03-15 21:25:40 DEBUG Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2c5a5be8
w2022-03-15 21:25:40 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2c5a5be8
w2022-03-15 21:25:40 DEBUG Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1d5fd6ba
w2022-03-15 21:25:40 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1d5fd6ba
w2022-03-15 21:25:40 DEBUG Adding type registration string -> org.hibernate.type.StringType@5861e76b
w2022-03-15 21:25:40 DEBUG Adding type registration java.lang.String -> org.hibernate.type.StringType@5861e76b
w2022-03-15 21:25:40 DEBUG Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5c872311
w2022-03-15 21:25:40 DEBUG Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1380cea8
w2022-03-15 21:25:40 DEBUG Adding type registration url -> org.hibernate.type.UrlType@6f173842
w2022-03-15 21:25:40 DEBUG Adding type registration java.net.URL -> org.hibernate.type.UrlType@6f173842
w2022-03-15 21:25:40 DEBUG Adding type registration Duration -> org.hibernate.type.DurationType@7e2e875
w2022-03-15 21:25:40 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7e2e875
w2022-03-15 21:25:40 DEBUG Adding type registration Instant -> org.hibernate.type.InstantType@78dcf88e
w2022-03-15 21:25:40 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.InstantType@78dcf88e
w2022-03-15 21:25:40 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4ca058d0
w2022-03-15 21:25:40 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4ca058d0
w2022-03-15 21:25:40 DEBUG Adding type registration LocalDate -> org.hibernate.type.LocalDateType@13b33076
w2022-03-15 21:25:40 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@13b33076
w2022-03-15 21:25:40 DEBUG Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@51a5d1cc
w2022-03-15 21:25:40 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@51a5d1cc
w2022-03-15 21:25:40 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5c343b43
w2022-03-15 21:25:40 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5c343b43
w2022-03-15 21:25:40 DEBUG Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4c32479b
w2022-03-15 21:25:40 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4c32479b
w2022-03-15 21:25:40 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@763eff35
w2022-03-15 21:25:40 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@763eff35
w2022-03-15 21:25:40 DEBUG Adding type registration date -> org.hibernate.type.DateType@7c6cdbaf
w2022-03-15 21:25:40 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.DateType@7c6cdbaf
w2022-03-15 21:25:40 DEBUG Adding type registration time -> org.hibernate.type.TimeType@5df91530
w2022-03-15 21:25:40 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5df91530
w2022-03-15 21:25:40 DEBUG Adding type registration timestamp -> org.hibernate.type.TimestampType@647cda88
w2022-03-15 21:25:40 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@647cda88
w2022-03-15 21:25:40 DEBUG Adding type registration java.util.Date -> org.hibernate.type.TimestampType@647cda88
w2022-03-15 21:25:40 DEBUG Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@59d3cd81
w2022-03-15 21:25:40 DEBUG Adding type registration calendar -> org.hibernate.type.CalendarType@69a75ad5
w2022-03-15 21:25:40 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@69a75ad5
w2022-03-15 21:25:40 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@69a75ad5
w2022-03-15 21:25:40 DEBUG Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1eabaefd
w2022-03-15 21:25:40 DEBUG Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@109c98a9
w2022-03-15 21:25:40 DEBUG Adding type registration locale -> org.hibernate.type.LocaleType@1dfca3fa
w2022-03-15 21:25:40 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1dfca3fa
w2022-03-15 21:25:40 DEBUG Adding type registration currency -> org.hibernate.type.CurrencyType@28153921
w2022-03-15 21:25:40 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@28153921
w2022-03-15 21:25:40 DEBUG Adding type registration timezone -> org.hibernate.type.TimeZoneType@144871b5
w2022-03-15 21:25:40 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@144871b5
w2022-03-15 21:25:40 DEBUG Adding type registration class -> org.hibernate.type.ClassType@31bcc470
w2022-03-15 21:25:40 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.ClassType@31bcc470
w2022-03-15 21:25:40 DEBUG Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1c80fcbc
w2022-03-15 21:25:40 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1c80fcbc
w2022-03-15 21:25:40 DEBUG Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6143315a
w2022-03-15 21:25:40 DEBUG Adding type registration binary -> org.hibernate.type.BinaryType@241f883
w2022-03-15 21:25:40 DEBUG Adding type registration byte[] -> org.hibernate.type.BinaryType@241f883
w2022-03-15 21:25:40 DEBUG Adding type registration [B -> org.hibernate.type.BinaryType@241f883
w2022-03-15 21:25:40 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@75697820
w2022-03-15 21:25:40 DEBUG Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@75697820
w2022-03-15 21:25:40 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@75697820
w2022-03-15 21:25:40 DEBUG Adding type registration row_version -> org.hibernate.type.RowVersionType@3a48d62a
w2022-03-15 21:25:40 DEBUG Adding type registration image -> org.hibernate.type.ImageType@f5d2782
w2022-03-15 21:25:40 DEBUG Adding type registration characters -> org.hibernate.type.CharArrayType@1c8b1ad
w2022-03-15 21:25:40 DEBUG Adding type registration char[] -> org.hibernate.type.CharArrayType@1c8b1ad
w2022-03-15 21:25:40 DEBUG Adding type registration [C -> org.hibernate.type.CharArrayType@1c8b1ad
w2022-03-15 21:25:40 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@61041cfe
w2022-03-15 21:25:40 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@61041cfe
w2022-03-15 21:25:40 DEBUG Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@61041cfe
w2022-03-15 21:25:40 DEBUG Adding type registration text -> org.hibernate.type.TextType@24bcb1a2
w2022-03-15 21:25:40 DEBUG Adding type registration ntext -> org.hibernate.type.NTextType@9ddd623
w2022-03-15 21:25:40 DEBUG Adding type registration blob -> org.hibernate.type.BlobType@31d1d62b
w2022-03-15 21:25:40 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@31d1d62b
w2022-03-15 21:25:40 DEBUG Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@8aa1172
w2022-03-15 21:25:40 DEBUG Adding type registration clob -> org.hibernate.type.ClobType@18f72d9a
w2022-03-15 21:25:40 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@18f72d9a
w2022-03-15 21:25:40 DEBUG Adding type registration nclob -> org.hibernate.type.NClobType@6e956e75
w2022-03-15 21:25:40 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6e956e75
w2022-03-15 21:25:40 DEBUG Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5ca21884
w2022-03-15 21:25:40 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3b3b67dd
w2022-03-15 21:25:40 DEBUG Adding type registration serializable -> org.hibernate.type.SerializableType@2bc57037
w2022-03-15 21:25:40 DEBUG Adding type registration object -> org.hibernate.type.ObjectType@469172bb
w2022-03-15 21:25:40 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@469172bb
w2022-03-15 21:25:40 DEBUG Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3277c450
w2022-03-15 21:25:40 DEBUG Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7fbe6c0f
w2022-03-15 21:25:40 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@37bb6480
w2022-03-15 21:25:40 DEBUG Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6c65419a
w2022-03-15 21:25:40 DEBUG Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@60bc4d02
w2022-03-15 21:25:40 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6c6e8b0e
w2022-03-15 21:25:40 DEBUG Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1d7d67
w2022-03-15 21:25:40 DEBUG Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@46b2956f
w2022-03-15 21:25:40 INFO  HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
w2022-03-15 21:25:40 DEBUG Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@26d1dcbb] into BootstrapContext; was [null]
w2022-03-15 21:25:40 DEBUG ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@26d1dcbb) [was null]
w2022-03-15 21:25:40 DEBUG Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@45651c6e] into BootstrapContext; was [null]
w2022-03-15 21:25:40 DEBUG Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@12285fe1] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@7eed7043]
w2022-03-15 21:25:40 DEBUG Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@26d1dcbb]
w2022-03-15 21:25:40 DEBUG ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@26d1dcbb]
w2022-03-15 21:25:40 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
w2022-03-15 21:25:40 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
w2022-03-15 21:25:40 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
w2022-03-15 21:25:40 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
w2022-03-15 21:25:40 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
w2022-03-15 21:25:40 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
w2022-03-15 21:25:40 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
w2022-03-15 21:25:40 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
w2022-03-15 21:25:40 DEBUG Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
w2022-03-15 21:25:40 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
w2022-03-15 21:25:40 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
w2022-03-15 21:25:40 DEBUG Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
w2022-03-15 21:25:40 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
w2022-03-15 21:25:40 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
w2022-03-15 21:25:40 DEBUG Database ->
       name : SQLite
    version : 3.36.0
      major : 3
      minor : 36
w2022-03-15 21:25:40 DEBUG Driver ->
       name : SQLite JDBC
    version : 3.36.0.3
      major : 3
      minor : 36
w2022-03-15 21:25:40 DEBUG JDBC version : 2.1
w2022-03-15 21:25:40 INFO  HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
w2022-03-15 21:25:40 DEBUG JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
w2022-03-15 21:25:40 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
w2022-03-15 21:25:40 DEBUG HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [2] less than 4
w2022-03-15 21:25:40 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@65928e4c] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@60daedc3]
w2022-03-15 21:25:40 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
w2022-03-15 21:25:40 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.Comment
w2022-03-15 21:25:40 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 21:25:40 DEBUG Import with entity name Comment
w2022-03-15 21:25:40 DEBUG Bind entity ru.edu.helpdesk.entity.Comment on table comment
w2022-03-15 21:25:40 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 21:25:40 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Comment] is safe
w2022-03-15 21:25:40 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Comment
w2022-03-15 21:25:40 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 21:25:40 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Comment:id]
w2022-03-15 21:25:40 DEBUG building SimpleValue for id
w2022-03-15 21:25:40 DEBUG Building property id
w2022-03-15 21:25:40 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 21:25:40 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=message, insertable=true, updatable=true, unique=false}
w2022-03-15 21:25:40 DEBUG MetadataSourceProcessor property message with lazy=false
w2022-03-15 21:25:40 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Comment:message]
w2022-03-15 21:25:40 DEBUG building SimpleValue for message
w2022-03-15 21:25:40 DEBUG Building property message
w2022-03-15 21:25:40 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 21:25:40 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=ticket, insertable=true, updatable=true, unique=false}
w2022-03-15 21:25:40 DEBUG Building property ticket
w2022-03-15 21:25:40 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 21:25:40 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=user, insertable=true, updatable=true, unique=false}
w2022-03-15 21:25:40 DEBUG Building property user
w2022-03-15 21:25:40 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 21:25:40 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 21:25:40 DEBUG Import with entity name Ticket
w2022-03-15 21:25:40 DEBUG Bind entity ru.edu.helpdesk.entity.Ticket on table ticket
w2022-03-15 21:25:41 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 21:25:41 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Ticket] is safe
w2022-03-15 21:25:41 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Ticket
w2022-03-15 21:25:41 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 21:25:41 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:id]
w2022-03-15 21:25:41 DEBUG building SimpleValue for id
w2022-03-15 21:25:41 DEBUG Building property id
w2022-03-15 21:25:41 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 21:25:41 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 21:25:41 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=client, insertable=true, updatable=true, unique=false}
w2022-03-15 21:25:41 DEBUG Building property client
w2022-03-15 21:25:41 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=status, insertable=true, updatable=true, unique=false}
w2022-03-15 21:25:41 DEBUG MetadataSourceProcessor property status with lazy=false
w2022-03-15 21:25:41 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:status]
w2022-03-15 21:25:41 DEBUG building SimpleValue for status
w2022-03-15 21:25:41 DEBUG Building property status
w2022-03-15 21:25:41 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 21:25:41 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=support, insertable=true, updatable=true, unique=false}
w2022-03-15 21:25:41 DEBUG Building property support
w2022-03-15 21:25:41 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=title, insertable=true, updatable=true, unique=false}
w2022-03-15 21:25:41 DEBUG MetadataSourceProcessor property title with lazy=false
w2022-03-15 21:25:41 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:title]
w2022-03-15 21:25:41 DEBUG building SimpleValue for title
w2022-03-15 21:25:41 DEBUG Building property title
w2022-03-15 21:25:41 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.User
w2022-03-15 21:25:41 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 21:25:41 DEBUG Import with entity name User
w2022-03-15 21:25:41 DEBUG Bind entity ru.edu.helpdesk.entity.User on table user
w2022-03-15 21:25:41 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 21:25:41 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.User] is safe
w2022-03-15 21:25:41 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.User
w2022-03-15 21:25:41 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 21:25:41 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:id]
w2022-03-15 21:25:41 DEBUG building SimpleValue for id
w2022-03-15 21:25:41 DEBUG Building property id
w2022-03-15 21:25:41 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 21:25:41 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
w2022-03-15 21:25:41 DEBUG MetadataSourceProcessor property firstName with lazy=false
w2022-03-15 21:25:41 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:firstName]
w2022-03-15 21:25:41 DEBUG building SimpleValue for firstName
w2022-03-15 21:25:41 DEBUG Building property firstName
w2022-03-15 21:25:41 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
w2022-03-15 21:25:41 DEBUG MetadataSourceProcessor property lastName with lazy=false
w2022-03-15 21:25:41 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:lastName]
w2022-03-15 21:25:41 DEBUG building SimpleValue for lastName
w2022-03-15 21:25:41 DEBUG Building property lastName
w2022-03-15 21:25:41 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=login, insertable=true, updatable=true, unique=false}
w2022-03-15 21:25:41 DEBUG MetadataSourceProcessor property login with lazy=false
w2022-03-15 21:25:41 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:login]
w2022-03-15 21:25:41 DEBUG building SimpleValue for login
w2022-03-15 21:25:41 DEBUG Building property login
w2022-03-15 21:25:41 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
w2022-03-15 21:25:41 DEBUG MetadataSourceProcessor property password with lazy=false
w2022-03-15 21:25:41 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:password]
w2022-03-15 21:25:41 DEBUG building SimpleValue for password
w2022-03-15 21:25:41 DEBUG Building property password
w2022-03-15 21:25:41 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=role, insertable=true, updatable=true, unique=false}
w2022-03-15 21:25:41 DEBUG MetadataSourceProcessor property role with lazy=false
w2022-03-15 21:25:41 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:role]
w2022-03-15 21:25:41 DEBUG building SimpleValue for role
w2022-03-15 21:25:41 DEBUG Building property role
w2022-03-15 21:25:41 DEBUG Starting fillSimpleValue for id
w2022-03-15 21:25:41 DEBUG Starting fillSimpleValue for message
w2022-03-15 21:25:41 DEBUG Starting fillSimpleValue for id
w2022-03-15 21:25:41 DEBUG Starting fillSimpleValue for status
w2022-03-15 21:25:41 DEBUG Starting fillSimpleValue for title
w2022-03-15 21:25:41 DEBUG Starting fillSimpleValue for id
w2022-03-15 21:25:41 DEBUG Starting fillSimpleValue for firstName
w2022-03-15 21:25:41 DEBUG Starting fillSimpleValue for lastName
w2022-03-15 21:25:41 DEBUG Starting fillSimpleValue for login
w2022-03-15 21:25:41 DEBUG Starting fillSimpleValue for password
w2022-03-15 21:25:41 DEBUG Starting fillSimpleValue for role
w2022-03-15 21:25:41 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [comment]
w2022-03-15 21:25:41 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [ticket]
w2022-03-15 21:25:41 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [user]
w2022-03-15 21:25:41 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 21:25:41 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 21:25:41 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 21:25:41 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 21:25:41 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 21:25:41 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 21:25:41 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 21:25:41 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 21:25:41 DEBUG Building session factory
w2022-03-15 21:25:41 DEBUG SessionFactory name : null
w2022-03-15 21:25:41 DEBUG Automatic flush during beforeCompletion(): enabled
w2022-03-15 21:25:41 DEBUG Automatic session close at end of transaction: disabled
w2022-03-15 21:25:41 DEBUG Statistics: disabled
w2022-03-15 21:25:41 DEBUG Deleted entity synthetic identifier rollback: disabled
w2022-03-15 21:25:41 DEBUG Default entity-mode: pojo
w2022-03-15 21:25:41 DEBUG Check Nullability in Core (should be disabled when Bean Validation is on): enabled
w2022-03-15 21:25:41 DEBUG Allow initialization of lazy state outside session : disabled
w2022-03-15 21:25:41 DEBUG Using BatchFetchStyle : LEGACY
w2022-03-15 21:25:41 DEBUG Default batch fetch size: -1
w2022-03-15 21:25:41 DEBUG Maximum outer join fetch depth: null
w2022-03-15 21:25:41 DEBUG Default null ordering: NONE
w2022-03-15 21:25:41 DEBUG Order SQL updates by primary key: disabled
w2022-03-15 21:25:41 DEBUG Order SQL inserts for batching: disabled
w2022-03-15 21:25:41 DEBUG multi-tenancy strategy : NONE
w2022-03-15 21:25:41 DEBUG JTA Track by Thread: enabled
w2022-03-15 21:25:41 DEBUG Query language substitutions: {}
w2022-03-15 21:25:41 DEBUG Named query checking : enabled
w2022-03-15 21:25:41 DEBUG Second-level cache: disabled
w2022-03-15 21:25:41 DEBUG Second-level query cache: disabled
w2022-03-15 21:25:41 DEBUG Second-level query cache factory: null
w2022-03-15 21:25:41 DEBUG Second-level cache region prefix: null
w2022-03-15 21:25:41 DEBUG Optimize second-level cache for minimal puts: disabled
w2022-03-15 21:25:41 DEBUG Structured second-level cache entries: disabled
w2022-03-15 21:25:41 DEBUG Second-level cache direct-reference entries: disabled
w2022-03-15 21:25:41 DEBUG Automatic eviction of collection cache: disabled
w2022-03-15 21:25:41 DEBUG JDBC batch size: 1
w2022-03-15 21:25:41 DEBUG JDBC batch updates for versioned data: enabled
w2022-03-15 21:25:41 DEBUG Scrollable result sets: disabled
w2022-03-15 21:25:41 DEBUG Wrap result sets: disabled
w2022-03-15 21:25:41 DEBUG JDBC3 getGeneratedKeys(): enabled
w2022-03-15 21:25:41 DEBUG JDBC result set fetch size: null
w2022-03-15 21:25:41 DEBUG Connection release mode: ON_CLOSE
w2022-03-15 21:25:41 DEBUG Generate SQL with comments: disabled
w2022-03-15 21:25:41 DEBUG JPA compliance - query : disabled
w2022-03-15 21:25:41 DEBUG JPA compliance - closed-handling : disabled
w2022-03-15 21:25:41 DEBUG JPA compliance - lists : disabled
w2022-03-15 21:25:41 DEBUG JPA compliance - transactions : disabled
w2022-03-15 21:25:41 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 21:25:41 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 21:25:41 DEBUG Session factory constructed with filter configurations : {}
w2022-03-15 21:25:41 DEBUG Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=true, java.specification.version=1.8, file.encoding.pkg=sun.io, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@77a53b95, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.SQLiteDialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\charsets.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\cldrdata.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\dnsns.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\jaccess.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\localedata.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\nashorn.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunec.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunmscapi.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\zipfs.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jce.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jfr.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jsse.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\management-agent.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\resources.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\rt.jar;C:\Users\Ольга\Desktop\Java\Project\Project1\helpdeskproject\target\classes;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\2.6.4\spring-boot-starter-data-jpa-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\2.6.4\spring-boot-starter-jdbc-2.6.4.jar;C:\Users\Ольга\.m2\repository\com\zaxxer\HikariCP\4.0.3\HikariCP-4.0.3.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-jdbc\5.3.16\spring-jdbc-5.3.16.jar;C:\Users\Ольга\.m2\repository\jakarta\transaction\jakarta.transaction-api\1.3.3\jakarta.transaction-api-1.3.3.jar;C:\Users\Ольга\.m2\repository\jakarta\persistence\jakarta.persistence-api\2.2.3\jakarta.persistence-api-2.2.3.jar;C:\Users\Ольга\.m2\repository\org\hibernate\hibernate-core\5.6.5.Final\hibernate-core-5.6.5.Final.jar;C:\Users\Ольга\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy\1.11.22\byte-buddy-1.11.22.jar;C:\Users\Ольга\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ольга\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Ольга\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.6\jaxb-runtime-2.3.6.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\txw2\2.3.6\txw2-2.3.6.jar;C:\Users\Ольга\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.12\istack-commons-runtime-3.0.12.jar;C:\Users\Ольга\.m2\repository\com\sun\activation\jakarta.activation\1.2.2\jakarta.activation-1.2.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\data\spring-data-jpa\2.6.2\spring-data-jpa-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\data\spring-data-commons\2.6.2\spring-data-commons-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-orm\5.3.16\spring-orm-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-context\5.3.16\spring-context-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-tx\5.3.16\spring-tx-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-beans\5.3.16\spring-beans-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-aspects\5.3.16\spring-aspects-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-security\2.6.4\spring-boot-starter-security-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter\2.6.4\spring-boot-starter-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-logging\2.6.4\spring-boot-starter-logging-2.6.4.jar;C:\Users\Ольга\.m2\repository\ch\qos\logback\logback-classic\1.2.10\logback-classic-1.2.10.jar;C:\Users\Ольга\.m2\repository\ch\qos\logback\logback-core\1.2.10\logback-core-1.2.10.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.17.1\log4j-to-slf4j-2.17.1.jar;C:\Users\Ольга\.m2\repository\org\slf4j\jul-to-slf4j\1.7.36\jul-to-slf4j-1.7.36.jar;C:\Users\Ольга\.m2\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;C:\Users\Ольга\.m2\repository\org\yaml\snakeyaml\1.29\snakeyaml-1.29.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-aop\5.3.16\spring-aop-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-config\5.6.2\spring-security-config-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-web\5.6.2\spring-security-web-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-expression\5.3.16\spring-expression-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-web\2.6.4\spring-boot-starter-web-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-json\2.6.4\spring-boot-starter-json-2.6.4.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.13.1\jackson-datatype-jdk8-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.13.1\jackson-datatype-jsr310-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.13.1\jackson-module-parameter-names-2.13.1.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\2.6.4\spring-boot-starter-tomcat-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.58\tomcat-embed-core-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\9.0.58\tomcat-embed-el-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.58\tomcat-embed-websocket-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-web\5.3.16\spring-web-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-webmvc\5.3.16\spring-webmvc-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-devtools\2.6.4\spring-boot-devtools-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot\2.6.4\spring-boot-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\2.6.4\spring-boot-autoconfigure-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\xerial\sqlite-jdbc\3.36.0.3\sqlite-jdbc-3.36.0.3.jar;C:\Users\Ольга\.m2\repository\com\zsoltfabok\sqlite-dialect\1.0\sqlite-dialect-1.0.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-aop\2.6.2\spring-boot-starter-aop-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\aspectj\aspectjweaver\1.9.7\aspectjweaver-1.9.7.jar;C:\Users\Ольга\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.3\jakarta.xml.bind-api-2.3.3.jar;C:\Users\Ольга\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.2\jakarta.activation-api-1.2.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-core\5.3.16\spring-core-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-jcl\5.3.16\spring-jcl-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-core\5.6.2\spring-security-core-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-crypto\5.6.2\spring-security-crypto-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\projectlombok\lombok\1.18.22\lombok-1.18.22.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\2.6.4\spring-boot-starter-thymeleaf-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\thymeleaf-spring5\3.0.15.RELEASE\thymeleaf-spring5-3.0.15.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\thymeleaf\3.0.15.RELEASE\thymeleaf-3.0.15.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\attoparser\attoparser\2.0.5.RELEASE\attoparser-2.0.5.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-java8time\3.0.4.RELEASE\thymeleaf-extras-java8time-3.0.4.RELEASE.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.1\jackson-databind-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.1\jackson-annotations-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.1\jackson-core-2.13.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-api\2.4.1\log4j-api-2.4.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-core\2.4.1\log4j-core-2.4.1.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.2\lib\idea_rt.jar, java.vm.vendor=Temurin, sun.arch.data.model=64, user.variant=, java.vendor.url=https://adoptium.net/, catalina.useNaming=false, user.timezone=Europe/Moscow, jakarta.persistence.sharedCache.mode=UNSPECIFIED, os.name=Windows 10, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), user.country=RU, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\bin, sun.java.command=ru.edu.helpdesk.HelpdeskApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@3a8444cf, com.sun.management.jmxremote=, javax.persistence.sharedCache.mode=UNSPECIFIED, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, user.home=C:\Users\Ольга, user.language=ru, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre, file.separator=\, spring.output.ansi.enabled=always, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, sun.boot.class.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\resources.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\rt.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\sunrsasign.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jsse.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jce.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\charsets.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jfr.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\classes, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_312-b07, user.name=Эльдорадо, spring.jmx.enabled=true, path.separator=;, os.version=10.0, java.endorsed.dirs=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\endorsed, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=default, spring.beaninfo.ignore=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=C:\Users\134E~1\AppData\Local\Temp\, catalina.home=C:\Users\Ольга\AppData\Local\Temp\tomcat.8080.4577574647528057266, java.version=1.8.0_312, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\Ольга\Desktop\Java\Project\Project1\helpdeskproject, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=10912, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\Ольга\AppData\Local\Temp\tomcat.8080.4577574647528057266, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@434d6dc4, java.library.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\windows\System32\OpenSSH\;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\Program Files\apache-maven-3.8.4\bin;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Ольга\AppData\Local\Microsoft\WindowsApps;C:\Users\Ольга\AppData\Local\Programs\Microsoft VS Code\bin;C:\SQLite;C:\Users\Ольга\AppData\Roaming\npm;C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.2\bin;;., java.vendor=Temurin, java.vm.info=mixed mode, java.vm.version=25.312-b07, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, java.ext.dirs=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext;C:\windows\Sun\Java\lib\ext, hibernate.connection.datasource=HikariDataSource (HikariPool-1), hibernate.hbm2ddl.import_files=data/import.sql, java.class.version=52.0}
w2022-03-15 21:25:41 DEBUG Skipping JACC integration as it was not enabled
w2022-03-15 21:25:41 DEBUG Using ORDINAL-based conversion for Enum ru.edu.helpdesk.entity.UserRole
w2022-03-15 21:25:41 DEBUG Using ORDINAL-based conversion for Enum ru.edu.helpdesk.entity.TicketStatus
w2022-03-15 21:25:41 DEBUG Instantiated session factory
w2022-03-15 21:25:41 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@65928e4c] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@d3717f6]
w2022-03-15 21:25:41 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.User] is safe
w2022-03-15 21:25:41 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.User
w2022-03-15 21:25:41 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 21:25:41 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 21:25:41 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 21:25:41 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 21:25:41 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Ticket] is safe
w2022-03-15 21:25:41 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Ticket
w2022-03-15 21:25:41 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 21:25:41 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 21:25:41 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 21:25:41 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 21:25:41 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 21:25:41 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 21:25:41 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 21:25:41 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 21:25:41 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Comment] is safe
w2022-03-15 21:25:41 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Comment
w2022-03-15 21:25:41 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 21:25:41 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 21:25:41 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 21:25:41 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 21:25:41 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.User
w2022-03-15 21:25:41 DEBUG  Version select: select id from user where id =?
w2022-03-15 21:25:41 DEBUG  Snapshot select: select user_.id, user_.first_name as first_na2_2_, user_.last_name as last_nam3_2_, user_.login as login4_2_, user_.password as password5_2_, user_.role as role6_2_ from user user_ where user_.id=?
w2022-03-15 21:25:41 DEBUG  Insert 0: insert into user (first_name, last_name, login, password, role, id) values (?, ?, ?, ?, ?, ?)
w2022-03-15 21:25:41 DEBUG  Update 0: update user set first_name=?, last_name=?, login=?, password=?, role=? where id=?
w2022-03-15 21:25:41 DEBUG  Delete 0: delete from user where id=?
w2022-03-15 21:25:41 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@91ff71c]
w2022-03-15 21:25:41 DEBUG Visiting attribute path : firstName
w2022-03-15 21:25:41 DEBUG Visiting attribute path : lastName
w2022-03-15 21:25:41 DEBUG Visiting attribute path : login
w2022-03-15 21:25:41 DEBUG Visiting attribute path : password
w2022-03-15 21:25:41 DEBUG Visiting attribute path : role
w2022-03-15 21:25:41 DEBUG Building LoadPlan...
w2022-03-15 21:25:41 DEBUG processing queryspace <gen:0>
w2022-03-15 21:25:41 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.User)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

w2022-03-15 21:25:41 DEBUG Static select for entity ru.edu.helpdesk.entity.User [NONE]: select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 21:25:41 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.Ticket
w2022-03-15 21:25:41 DEBUG  Version select: select id from ticket where id =?
w2022-03-15 21:25:41 DEBUG  Snapshot select: select ticket_.id, ticket_.client_id as client_i4_1_, ticket_.status as status2_1_, ticket_.support_id as support_5_1_, ticket_.title as title3_1_ from ticket ticket_ where ticket_.id=?
w2022-03-15 21:25:41 DEBUG  Insert 0: insert into ticket (client_id, status, support_id, title, id) values (?, ?, ?, ?, ?)
w2022-03-15 21:25:41 DEBUG  Update 0: update ticket set client_id=?, status=?, support_id=?, title=? where id=?
w2022-03-15 21:25:41 DEBUG  Delete 0: delete from ticket where id=?
w2022-03-15 21:25:41 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@19d546f8]
w2022-03-15 21:25:41 DEBUG Visiting attribute path : client
w2022-03-15 21:25:41 DEBUG Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58cd00af]
w2022-03-15 21:25:41 DEBUG Visiting attribute path : client.firstName
w2022-03-15 21:25:41 DEBUG Visiting attribute path : client.lastName
w2022-03-15 21:25:41 DEBUG Visiting attribute path : client.login
w2022-03-15 21:25:41 DEBUG Visiting attribute path : client.password
w2022-03-15 21:25:41 DEBUG Visiting attribute path : client.role
w2022-03-15 21:25:41 DEBUG Visiting attribute path : status
w2022-03-15 21:25:41 DEBUG Visiting attribute path : support
w2022-03-15 21:25:41 DEBUG Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33e09799]
w2022-03-15 21:25:41 DEBUG Visiting attribute path : support.firstName
w2022-03-15 21:25:41 DEBUG Visiting attribute path : support.lastName
w2022-03-15 21:25:41 DEBUG Visiting attribute path : support.login
w2022-03-15 21:25:41 DEBUG Visiting attribute path : support.password
w2022-03-15 21:25:41 DEBUG Visiting attribute path : support.role
w2022-03-15 21:25:41 DEBUG Visiting attribute path : title
w2022-03-15 21:25:41 DEBUG Building LoadPlan...
w2022-03-15 21:25:41 DEBUG processing queryspace <gen:0>
w2022-03-15 21:25:41 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.Ticket)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.Ticket, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.Ticket)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:1>, path=ru.edu.helpdesk.entity.Ticket.client)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:2>, path=ru.edu.helpdesk.entity.Ticket.support)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.Ticket)
          - SQL table alias mapping - ticket0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(client)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
          - JOIN (JoinDefinedByMetadata(support)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user2_
                - alias suffix - 2_
                - suffixed key columns - {id1_2_2_}

w2022-03-15 21:25:41 DEBUG Static select for entity ru.edu.helpdesk.entity.Ticket [NONE]: select ticket0_.id as id1_1_0_, ticket0_.client_id as client_i4_1_0_, ticket0_.status as status2_1_0_, ticket0_.support_id as support_5_1_0_, ticket0_.title as title3_1_0_, user1_.id as id1_2_1_, user1_.first_name as first_na2_2_1_, user1_.last_name as last_nam3_2_1_, user1_.login as login4_2_1_, user1_.password as password5_2_1_, user1_.role as role6_2_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id left outer join user user2_ on ticket0_.support_id=user2_.id where ticket0_.id=?
w2022-03-15 21:25:41 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.Comment
w2022-03-15 21:25:41 DEBUG  Version select: select id from comment where id =?
w2022-03-15 21:25:41 DEBUG  Snapshot select: select comment_.id, comment_.message as message2_0_, comment_.ticket_id as ticket_i3_0_, comment_.user_id as user_id4_0_ from comment comment_ where comment_.id=?
w2022-03-15 21:25:41 DEBUG  Insert 0: insert into comment (message, ticket_id, user_id, id) values (?, ?, ?, ?)
w2022-03-15 21:25:41 DEBUG  Update 0: update comment set message=?, ticket_id=?, user_id=? where id=?
w2022-03-15 21:25:41 DEBUG  Delete 0: delete from comment where id=?
w2022-03-15 21:25:41 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41c96984]
w2022-03-15 21:25:41 DEBUG Visiting attribute path : message
w2022-03-15 21:25:41 DEBUG Visiting attribute path : ticket
w2022-03-15 21:25:41 DEBUG Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@596302d4]
w2022-03-15 21:25:41 DEBUG Visiting attribute path : ticket.client
w2022-03-15 21:25:41 DEBUG Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5be0b628]
w2022-03-15 21:25:41 DEBUG Visiting attribute path : ticket.client.firstName
w2022-03-15 21:25:41 DEBUG Visiting attribute path : ticket.client.lastName
w2022-03-15 21:25:41 DEBUG Visiting attribute path : ticket.client.login
w2022-03-15 21:25:41 DEBUG Visiting attribute path : ticket.client.password
w2022-03-15 21:25:41 DEBUG Visiting attribute path : ticket.client.role
w2022-03-15 21:25:41 DEBUG Visiting attribute path : ticket.status
w2022-03-15 21:25:41 DEBUG Visiting attribute path : ticket.support
w2022-03-15 21:25:41 DEBUG Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75c878c1]
w2022-03-15 21:25:41 DEBUG Visiting attribute path : ticket.support.firstName
w2022-03-15 21:25:41 DEBUG Visiting attribute path : ticket.support.lastName
w2022-03-15 21:25:41 DEBUG Visiting attribute path : ticket.support.login
w2022-03-15 21:25:41 DEBUG Visiting attribute path : ticket.support.password
w2022-03-15 21:25:41 DEBUG Visiting attribute path : ticket.support.role
w2022-03-15 21:25:41 DEBUG Visiting attribute path : ticket.title
w2022-03-15 21:25:41 DEBUG Visiting attribute path : user
w2022-03-15 21:25:41 DEBUG Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@104033f]
w2022-03-15 21:25:41 DEBUG Visiting attribute path : user.firstName
w2022-03-15 21:25:41 DEBUG Visiting attribute path : user.lastName
w2022-03-15 21:25:41 DEBUG Visiting attribute path : user.login
w2022-03-15 21:25:41 DEBUG Visiting attribute path : user.password
w2022-03-15 21:25:41 DEBUG Visiting attribute path : user.role
w2022-03-15 21:25:41 DEBUG Building LoadPlan...
w2022-03-15 21:25:41 DEBUG processing queryspace <gen:0>
w2022-03-15 21:25:41 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.Comment)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.Comment, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.Comment)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.Ticket, querySpaceUid=<gen:1>, path=ru.edu.helpdesk.entity.Comment.ticket)
             - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:2>, path=ru.edu.helpdesk.entity.Comment.ticket.client)
             - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:3>, path=ru.edu.helpdesk.entity.Comment.ticket.support)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:4>, path=ru.edu.helpdesk.entity.Comment.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(ticket)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ru.edu.helpdesk.entity.Ticket)
                - SQL table alias mapping - ticket1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(client)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=ru.edu.helpdesk.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}
                - JOIN (JoinDefinedByMetadata(support)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=ru.edu.helpdesk.entity.User)
                      - SQL table alias mapping - user3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_2_3_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user4_
                - alias suffix - 4_
                - suffixed key columns - {id1_2_4_}

w2022-03-15 21:25:41 DEBUG Static select for entity ru.edu.helpdesk.entity.Comment [NONE]: select comment0_.id as id1_0_0_, comment0_.message as message2_0_0_, comment0_.ticket_id as ticket_i3_0_0_, comment0_.user_id as user_id4_0_0_, ticket1_.id as id1_1_1_, ticket1_.client_id as client_i4_1_1_, ticket1_.status as status2_1_1_, ticket1_.support_id as support_5_1_1_, ticket1_.title as title3_1_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_, user3_.id as id1_2_3_, user3_.first_name as first_na2_2_3_, user3_.last_name as last_nam3_2_3_, user3_.login as login4_2_3_, user3_.password as password5_2_3_, user3_.role as role6_2_3_, user4_.id as id1_2_4_, user4_.first_name as first_na2_2_4_, user4_.last_name as last_nam3_2_4_, user4_.login as login4_2_4_, user4_.password as password5_2_4_, user4_.role as role6_2_4_ from comment comment0_ left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id left outer join user user2_ on ticket1_.client_id=user2_.id left outer join user user3_ on ticket1_.support_id=user3_.id left outer join user user4_ on comment0_.user_id=user4_.id where comment0_.id=?
w2022-03-15 21:25:41 DEBUG drop table if exists comment
w2022-03-15 21:25:41 DEBUG drop table if exists hibernate_sequence
w2022-03-15 21:25:41 DEBUG drop table if exists ticket
w2022-03-15 21:25:41 DEBUG drop table if exists user
w2022-03-15 21:25:41 DEBUG create table comment (id bigint not null, message varchar(255) not null, ticket_id bigint, user_id bigint, primary key (id))
w2022-03-15 21:25:41 DEBUG create table hibernate_sequence (next_val bigint)
w2022-03-15 21:25:41 DEBUG insert into hibernate_sequence values ( 1 )
w2022-03-15 21:25:41 DEBUG create table ticket (id bigint not null, status integer, title varchar(255) not null, client_id bigint, support_id bigint, primary key (id))
w2022-03-15 21:25:41 DEBUG create table user (id bigint not null, first_name varchar(255), last_name varchar(255), login varchar(255) not null, password varchar(255) not null, role integer, primary key (id))
w2022-03-15 21:25:41 INFO  HHH000476: Executing import script 'file:/C:/Users/%d0%9e%d0%bb%d1%8c%d0%b3%d0%b0/Desktop/Java/Project/Project1/helpdeskproject/target/classes/data/import.sql'
w2022-03-15 21:25:41 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (1, 'admin', 'admin', 'admin', 'admin', 0)
w2022-03-15 21:25:41 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (2, 'support', 'support', 'support', 'support', 1)
w2022-03-15 21:25:41 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (3, 'user1', 'user1', 'user1', 'user1', 2)
w2022-03-15 21:25:41 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (4, 'user2', 'user2', 'user2', 'user2', 2)
w2022-03-15 21:25:41 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (1, 1, 'Hello user1',1, 2)
w2022-03-15 21:25:41 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (2, 0, 'Title2', 1, 2)
w2022-03-15 21:25:41 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (3, 0, 'Message user2', 4, NULL)
w2022-03-15 21:25:41 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (1, "comment ticket1", 1, 3)
w2022-03-15 21:25:41 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (2, "comment ticket2", 2, 3)
w2022-03-15 21:25:41 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (3, "comment ticket11", 1, 2)
w2022-03-15 21:25:41 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (4, "comment ticket111", 1, 2)
w2022-03-15 21:25:41 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (5, "comment ticket22", 2, 2)
w2022-03-15 21:25:41 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (6, "comment ticket3", 3, 4)
w2022-03-15 21:25:41 DEBUG UPDATE hibernate_sequence SET next_val = 8 WHERE next_val = 1
w2022-03-15 21:25:41 INFO  HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
w2022-03-15 21:25:41 DEBUG Checking 0 named HQL queries
w2022-03-15 21:25:41 DEBUG Checking 0 named SQL queries
w2022-03-15 21:25:41 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 21:25:41 DEBUG Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@50a77066
w2022-03-15 21:25:41 DEBUG Registering SessionFactory: 646b6c19-8e6a-4815-95b0-ead7abc35d88 (<unnamed>)
w2022-03-15 21:25:41 DEBUG Not binding SessionFactory to JNDI, no JNDI name configured
w2022-03-15 21:25:41 DEBUG Statistics initialized [enabled=false]
w2022-03-15 21:25:41 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 21:25:41 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 21:25:41 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 21:25:49 DEBUG Rendered criteria query -> select generatedAlias0 from Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 21:25:49 DEBUG QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@7e3c660
w2022-03-15 21:25:49 DEBUG parse() - HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 21:25:49 DEBUG throwQueryException() : no errors
w2022-03-15 21:25:49 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[IDENT] Node: 'ru'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'edu'
    |  |  |  |  |  |  \-[IDENT] Node: 'helpdesk'
    |  |  |  |  |  \-[IDENT] Node: 'entity'
    |  |  |  |  \-[IDENT] Node: 'Ticket'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'client'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias1'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

w2022-03-15 21:25:49 DEBUG select << begin [level=1, statement=select]
w2022-03-15 21:25:49 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.Ticket (generatedAlias0) -> ticket0_
w2022-03-15 21:25:49 DEBUG Resolved : generatedAlias0 -> ticket0_.id
w2022-03-15 21:25:49 DEBUG getDataType() : client -> org.hibernate.type.ManyToOneType(ru.edu.helpdesk.entity.User)
w2022-03-15 21:25:49 DEBUG dereferenceEntityJoin() : generating join for client in ru.edu.helpdesk.entity.Ticket (generatedAlias1) parent = [ {null} ]
w2022-03-15 21:25:49 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.User (generatedAlias1) -> user1_
w2022-03-15 21:25:49 DEBUG addJoinByPathMap() : generatedAlias0.client -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}
w2022-03-15 21:25:49 DEBUG Resolved : generatedAlias0.client -> ticket0_.client_id
w2022-03-15 21:25:49 DEBUG createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'user user1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Ticket.client,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}

w2022-03-15 21:25:49 DEBUG Resolved : generatedAlias0 -> ticket0_.id
w2022-03-15 21:25:49 DEBUG Resolved : generatedAlias1 -> user1_.id
w2022-03-15 21:25:49 DEBUG getDataType() : id -> org.hibernate.type.LongType@1111915c
w2022-03-15 21:25:49 DEBUG Resolved : generatedAlias1.id -> user1_.id
w2022-03-15 21:25:49 DEBUG select : finishing up [level=1, statement=select]
w2022-03-15 21:25:49 DEBUG processQuery() :  ( SELECT ( {select clause} ticket0_.id ) ( FromClause{level=1} ( ticket ticket0_ user user1_ ) ) ( where ( = ( user1_.id user1_.id id ) ? ) ) )
w2022-03-15 21:25:49 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Ticket): [ticket]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.Ticket)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.User)
          | path: generatedAlias1.id
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.User)
          |  | originalText: generatedAlias1
          |  \-IdentNode
          |    persister: null
          |    originalText: id
          \-ParameterNode

w2022-03-15 21:25:49 DEBUG Using FROM fragment [ticket ticket0_]
w2022-03-15 21:25:49 DEBUG Using FROM fragment [left outer join user user1_ on ticket0_.client_id=user1_.id]
w2022-03-15 21:25:49 DEBUG select >> end [level=1, statement=select]
w2022-03-15 21:25:49 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (ticket,user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'ticket0_.id as id1_1_' {alias=generatedAlias0, className=ru.edu.helpdesk.entity.Ticket, tableAlias=ticket0_}
    |  \-[SQL_TOKEN] SqlFragment: 'ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[ticket0_, user1_], fromElementsByPath=[generatedAlias0.client], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'ticket ticket0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=ticket,tableAlias=ticket0_,origin=null,columns={,className=ru.edu.helpdesk.entity.Ticket}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join user user1_ on ticket0_.client_id=user1_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Ticket.client,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user1_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias1.id,tableAlias=user1_,className=ru.edu.helpdesk.entity.User,classAlias=generatedAlias1}
          |  +-[ALIAS_REF] IdentNode: 'user1_.id' {alias=generatedAlias1, className=ru.edu.helpdesk.entity.User, tableAlias=user1_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LongType@1111915c}

w2022-03-15 21:25:49 DEBUG throwQueryException() : no errors
w2022-03-15 21:25:49 DEBUG HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 21:25:49 DEBUG SQL: select ticket0_.id as id1_1_, ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id where user1_.id=?
w2022-03-15 21:25:49 DEBUG throwQueryException() : no errors
w2022-03-15 21:25:49 DEBUG select ticket0_.id as id1_1_, ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id where user1_.id=?
w2022-03-15 21:25:49 DEBUG Result set row: 0
w2022-03-15 21:25:49 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 21:25:49 DEBUG Result set row: 1
w2022-03-15 21:25:49 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 21:25:49 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 21:25:49 DEBUG Processing attribute `client` : value = 1
w2022-03-15 21:25:49 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 21:25:49 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 21:25:49 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 21:25:49 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#1]
w2022-03-15 21:25:49 DEBUG Processing attribute `firstName` : value = admin
w2022-03-15 21:25:49 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 21:25:49 DEBUG Processing attribute `lastName` : value = admin
w2022-03-15 21:25:49 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 21:25:49 DEBUG Processing attribute `login` : value = admin
w2022-03-15 21:25:49 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 21:25:49 DEBUG Processing attribute `password` : value = admin
w2022-03-15 21:25:49 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 21:25:49 DEBUG Processing attribute `role` : value = ADMIN
w2022-03-15 21:25:49 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 21:25:49 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#1]
w2022-03-15 21:25:49 DEBUG Done entity load : ru.edu.helpdesk.entity.User#1
w2022-03-15 21:25:49 DEBUG Processing attribute `status` : value = WORKING
w2022-03-15 21:25:49 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 21:25:49 DEBUG Processing attribute `support` : value = 2
w2022-03-15 21:25:49 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 21:25:49 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 21:25:49 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 21:25:49 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#2]
w2022-03-15 21:25:49 DEBUG Processing attribute `firstName` : value = support
w2022-03-15 21:25:49 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 21:25:49 DEBUG Processing attribute `lastName` : value = support
w2022-03-15 21:25:49 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 21:25:49 DEBUG Processing attribute `login` : value = support
w2022-03-15 21:25:49 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 21:25:49 DEBUG Processing attribute `password` : value = support
w2022-03-15 21:25:49 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 21:25:49 DEBUG Processing attribute `role` : value = SUPPORT
w2022-03-15 21:25:49 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 21:25:49 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#2]
w2022-03-15 21:25:49 DEBUG Done entity load : ru.edu.helpdesk.entity.User#2
w2022-03-15 21:25:49 DEBUG Processing attribute `title` : value = Hello user1
w2022-03-15 21:25:49 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 21:25:49 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 21:25:49 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 21:25:49 DEBUG Processing attribute `client` : value = 1
w2022-03-15 21:25:49 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 21:25:49 DEBUG Processing attribute `status` : value = OPEN
w2022-03-15 21:25:49 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 21:25:49 DEBUG Processing attribute `support` : value = 2
w2022-03-15 21:25:49 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 21:25:49 DEBUG Processing attribute `title` : value = Title2
w2022-03-15 21:25:49 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 21:25:49 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 21:26:00 DEBUG Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.login=:param0
w2022-03-15 21:26:00 DEBUG parse() - HQL: select generatedAlias0 from ru.edu.helpdesk.entity.User as generatedAlias0 where generatedAlias0.login=:param0
w2022-03-15 21:26:00 DEBUG throwQueryException() : no errors
w2022-03-15 21:26:00 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'ru'
    |  |     |  |  |  |  \-[IDENT] Node: 'edu'
    |  |     |  |  |  \-[IDENT] Node: 'helpdesk'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'login'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

w2022-03-15 21:26:00 DEBUG select << begin [level=1, statement=select]
w2022-03-15 21:26:00 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.User (generatedAlias0) -> user0_
w2022-03-15 21:26:00 DEBUG Resolved : generatedAlias0 -> user0_.id
w2022-03-15 21:26:00 DEBUG Resolved : generatedAlias0 -> user0_.id
w2022-03-15 21:26:00 DEBUG getDataType() : login -> org.hibernate.type.StringType@5861e76b
w2022-03-15 21:26:00 DEBUG Resolved : generatedAlias0.login -> user0_.login
w2022-03-15 21:26:00 DEBUG select : finishing up [level=1, statement=select]
w2022-03-15 21:26:00 DEBUG processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) ( where ( = ( user0_.login user0_.id login ) ? ) ) )
w2022-03-15 21:26:00 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity User): [user]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.User)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.User)
          | path: generatedAlias0.login
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.User)
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    originalText: login
          \-ParameterNode

w2022-03-15 21:26:00 DEBUG Using FROM fragment [user user0_]
w2022-03-15 21:26:00 DEBUG select >> end [level=1, statement=select]
w2022-03-15 21:26:00 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_2_' {alias=generatedAlias0, className=ru.edu.helpdesk.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.first_name as first_na2_2_, user0_.last_name as last_nam3_2_, user0_.login as login4_2_, user0_.password as password5_2_, user0_.role as role6_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=ru.edu.helpdesk.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.login' {propertyName=login,dereferenceType=PRIMITIVE,getPropertyPath=login,path=generatedAlias0.login,tableAlias=user0_,className=ru.edu.helpdesk.entity.User,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=generatedAlias0, className=ru.edu.helpdesk.entity.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'login' {originalText=login}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@5861e76b}

w2022-03-15 21:26:00 DEBUG throwQueryException() : no errors
w2022-03-15 21:26:00 DEBUG HQL: select generatedAlias0 from ru.edu.helpdesk.entity.User as generatedAlias0 where generatedAlias0.login=:param0
w2022-03-15 21:26:00 DEBUG SQL: select user0_.id as id1_2_, user0_.first_name as first_na2_2_, user0_.last_name as last_nam3_2_, user0_.login as login4_2_, user0_.password as password5_2_, user0_.role as role6_2_ from user user0_ where user0_.login=?
w2022-03-15 21:26:00 DEBUG throwQueryException() : no errors
w2022-03-15 21:26:00 DEBUG select user0_.id as id1_2_, user0_.first_name as first_na2_2_, user0_.last_name as last_nam3_2_, user0_.login as login4_2_, user0_.password as password5_2_, user0_.role as role6_2_ from user user0_ where user0_.login=?
w2022-03-15 21:26:00 DEBUG Result set row: 0
w2022-03-15 21:26:00 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.User#1]
w2022-03-15 21:26:00 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#1]
w2022-03-15 21:26:00 DEBUG Processing attribute `firstName` : value = admin
w2022-03-15 21:26:00 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:00 DEBUG Processing attribute `lastName` : value = admin
w2022-03-15 21:26:00 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:00 DEBUG Processing attribute `login` : value = admin
w2022-03-15 21:26:00 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:00 DEBUG Processing attribute `password` : value = admin
w2022-03-15 21:26:00 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:00 DEBUG Processing attribute `role` : value = ADMIN
w2022-03-15 21:26:00 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:00 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#1]
w2022-03-15 21:26:00 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 21:26:00 DEBUG begin
w2022-03-15 21:26:00 DEBUG committing
w2022-03-15 21:26:00 DEBUG Rendered criteria query -> select generatedAlias0 from Comment as generatedAlias0 left join generatedAlias0.ticket as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 21:26:00 DEBUG parse() - HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Comment as generatedAlias0 left join generatedAlias0.ticket as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 21:26:00 DEBUG throwQueryException() : no errors
w2022-03-15 21:26:00 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[IDENT] Node: 'ru'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'edu'
    |  |  |  |  |  |  \-[IDENT] Node: 'helpdesk'
    |  |  |  |  |  \-[IDENT] Node: 'entity'
    |  |  |  |  \-[IDENT] Node: 'Comment'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'ticket'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias1'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

w2022-03-15 21:26:00 DEBUG select << begin [level=1, statement=select]
w2022-03-15 21:26:00 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.Comment (generatedAlias0) -> comment0_
w2022-03-15 21:26:00 DEBUG Resolved : generatedAlias0 -> comment0_.id
w2022-03-15 21:26:00 DEBUG getDataType() : ticket -> org.hibernate.type.ManyToOneType(ru.edu.helpdesk.entity.Ticket)
w2022-03-15 21:26:00 DEBUG dereferenceEntityJoin() : generating join for ticket in ru.edu.helpdesk.entity.Comment (generatedAlias1) parent = [ {null} ]
w2022-03-15 21:26:00 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.Ticket (generatedAlias1) -> ticket1_
w2022-03-15 21:26:00 DEBUG addJoinByPathMap() : generatedAlias0.ticket -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=ticket,tableAlias=ticket1_,origin=comment comment0_,columns={comment0_.ticket_id,className=ru.edu.helpdesk.entity.Ticket}}
w2022-03-15 21:26:00 DEBUG Resolved : generatedAlias0.ticket -> comment0_.ticket_id
w2022-03-15 21:26:00 DEBUG createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'ticket ticket1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Comment.ticket,tableName=ticket,tableAlias=ticket1_,origin=comment comment0_,columns={comment0_.ticket_id,className=ru.edu.helpdesk.entity.Ticket}}

w2022-03-15 21:26:00 DEBUG Resolved : generatedAlias0 -> comment0_.id
w2022-03-15 21:26:00 DEBUG Resolved : generatedAlias1 -> ticket1_.id
w2022-03-15 21:26:00 DEBUG getDataType() : id -> org.hibernate.type.LongType@1111915c
w2022-03-15 21:26:00 DEBUG Resolved : generatedAlias1.id -> ticket1_.id
w2022-03-15 21:26:00 DEBUG select : finishing up [level=1, statement=select]
w2022-03-15 21:26:00 DEBUG processQuery() :  ( SELECT ( {select clause} comment0_.id ) ( FromClause{level=1} ( comment comment0_ ticket ticket1_ ) ) ( where ( = ( ticket1_.id ticket1_.id id ) ? ) ) )
w2022-03-15 21:26:00 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Comment): [comment]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.Comment)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.Ticket)
          | path: generatedAlias1.id
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.Ticket)
          |  | originalText: generatedAlias1
          |  \-IdentNode
          |    persister: null
          |    originalText: id
          \-ParameterNode

w2022-03-15 21:26:00 DEBUG Using FROM fragment [comment comment0_]
w2022-03-15 21:26:00 DEBUG Using FROM fragment [left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id]
w2022-03-15 21:26:00 DEBUG select >> end [level=1, statement=select]
w2022-03-15 21:26:00 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (ticket,comment)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'comment0_.id as id1_0_' {alias=generatedAlias0, className=ru.edu.helpdesk.entity.Comment, tableAlias=comment0_}
    |  \-[SQL_TOKEN] SqlFragment: 'comment0_.message as message2_0_, comment0_.ticket_id as ticket_i3_0_, comment0_.user_id as user_id4_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[ticket1_, comment0_], fromElementsByPath=[generatedAlias0.ticket], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'comment comment0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=comment,tableAlias=comment0_,origin=null,columns={,className=ru.edu.helpdesk.entity.Comment}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Comment.ticket,tableName=ticket,tableAlias=ticket1_,origin=comment comment0_,columns={comment0_.ticket_id,className=ru.edu.helpdesk.entity.Ticket}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'ticket1_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias1.id,tableAlias=ticket1_,className=ru.edu.helpdesk.entity.Ticket,classAlias=generatedAlias1}
          |  +-[ALIAS_REF] IdentNode: 'ticket1_.id' {alias=generatedAlias1, className=ru.edu.helpdesk.entity.Ticket, tableAlias=ticket1_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LongType@1111915c}

w2022-03-15 21:26:00 DEBUG throwQueryException() : no errors
w2022-03-15 21:26:00 DEBUG HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Comment as generatedAlias0 left join generatedAlias0.ticket as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 21:26:00 DEBUG SQL: select comment0_.id as id1_0_, comment0_.message as message2_0_, comment0_.ticket_id as ticket_i3_0_, comment0_.user_id as user_id4_0_ from comment comment0_ left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id where ticket1_.id=?
w2022-03-15 21:26:00 DEBUG throwQueryException() : no errors
w2022-03-15 21:26:00 DEBUG select comment0_.id as id1_0_, comment0_.message as message2_0_, comment0_.ticket_id as ticket_i3_0_, comment0_.user_id as user_id4_0_ from comment comment0_ left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id where ticket1_.id=?
w2022-03-15 21:26:00 DEBUG Result set row: 0
w2022-03-15 21:26:00 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Comment#1]
w2022-03-15 21:26:00 DEBUG Result set row: 1
w2022-03-15 21:26:00 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Comment#3]
w2022-03-15 21:26:00 DEBUG Result set row: 2
w2022-03-15 21:26:00 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Comment#4]
w2022-03-15 21:26:00 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Comment#1]
w2022-03-15 21:26:00 DEBUG Processing attribute `message` : value = comment ticket1
w2022-03-15 21:26:00 DEBUG Attribute (`message`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:00 DEBUG Processing attribute `ticket` : value = 1
w2022-03-15 21:26:00 DEBUG Attribute (`ticket`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:00 DEBUG select ticket0_.id as id1_1_0_, ticket0_.client_id as client_i4_1_0_, ticket0_.status as status2_1_0_, ticket0_.support_id as support_5_1_0_, ticket0_.title as title3_1_0_, user1_.id as id1_2_1_, user1_.first_name as first_na2_2_1_, user1_.last_name as last_nam3_2_1_, user1_.login as login4_2_1_, user1_.password as password5_2_1_, user1_.role as role6_2_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id left outer join user user2_ on ticket0_.support_id=user2_.id where ticket0_.id=?
w2022-03-15 21:26:00 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 21:26:00 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 21:26:00 DEBUG Processing attribute `client` : value = 1
w2022-03-15 21:26:00 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:00 DEBUG Processing attribute `status` : value = WORKING
w2022-03-15 21:26:00 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:00 DEBUG Processing attribute `support` : value = 2
w2022-03-15 21:26:00 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:00 DEBUG Processing attribute `title` : value = Hello user1
w2022-03-15 21:26:00 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:00 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 21:26:00 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#1]
w2022-03-15 21:26:00 DEBUG Processing attribute `firstName` : value = admin
w2022-03-15 21:26:00 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:00 DEBUG Processing attribute `lastName` : value = admin
w2022-03-15 21:26:00 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:00 DEBUG Processing attribute `login` : value = admin
w2022-03-15 21:26:00 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:00 DEBUG Processing attribute `password` : value = admin
w2022-03-15 21:26:00 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:00 DEBUG Processing attribute `role` : value = ADMIN
w2022-03-15 21:26:00 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:00 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#1]
w2022-03-15 21:26:00 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#2]
w2022-03-15 21:26:00 DEBUG Processing attribute `firstName` : value = support
w2022-03-15 21:26:00 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:00 DEBUG Processing attribute `lastName` : value = support
w2022-03-15 21:26:00 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:00 DEBUG Processing attribute `login` : value = support
w2022-03-15 21:26:00 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:00 DEBUG Processing attribute `password` : value = support
w2022-03-15 21:26:00 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:00 DEBUG Processing attribute `role` : value = SUPPORT
w2022-03-15 21:26:00 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:00 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#2]
w2022-03-15 21:26:00 DEBUG Done entity load : ru.edu.helpdesk.entity.Ticket#1
w2022-03-15 21:26:00 DEBUG Processing attribute `user` : value = 3
w2022-03-15 21:26:00 DEBUG Attribute (`user`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:00 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 21:26:00 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 21:26:00 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#3]
w2022-03-15 21:26:00 DEBUG Processing attribute `firstName` : value = user1
w2022-03-15 21:26:00 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:00 DEBUG Processing attribute `lastName` : value = user1
w2022-03-15 21:26:00 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:00 DEBUG Processing attribute `login` : value = user1
w2022-03-15 21:26:00 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:00 DEBUG Processing attribute `password` : value = user1
w2022-03-15 21:26:00 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:00 DEBUG Processing attribute `role` : value = USER
w2022-03-15 21:26:00 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:00 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#3]
w2022-03-15 21:26:00 DEBUG Done entity load : ru.edu.helpdesk.entity.User#3
w2022-03-15 21:26:00 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Comment#1]
w2022-03-15 21:26:00 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Comment#3]
w2022-03-15 21:26:00 DEBUG Processing attribute `message` : value = comment ticket11
w2022-03-15 21:26:00 DEBUG Attribute (`message`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:00 DEBUG Processing attribute `ticket` : value = 1
w2022-03-15 21:26:00 DEBUG Attribute (`ticket`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:00 DEBUG Processing attribute `user` : value = 2
w2022-03-15 21:26:00 DEBUG Attribute (`user`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:00 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Comment#3]
w2022-03-15 21:26:00 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Comment#4]
w2022-03-15 21:26:00 DEBUG Processing attribute `message` : value = comment ticket111
w2022-03-15 21:26:00 DEBUG Attribute (`message`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:00 DEBUG Processing attribute `ticket` : value = 1
w2022-03-15 21:26:00 DEBUG Attribute (`ticket`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:00 DEBUG Processing attribute `user` : value = 2
w2022-03-15 21:26:00 DEBUG Attribute (`user`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:00 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Comment#4]
w2022-03-15 21:26:18 DEBUG Rendered criteria query -> select generatedAlias0 from Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 21:26:18 DEBUG select ticket0_.id as id1_1_, ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id where user1_.id=?
w2022-03-15 21:26:18 DEBUG Result set row: 0
w2022-03-15 21:26:18 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 21:26:18 DEBUG Result set row: 1
w2022-03-15 21:26:18 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 21:26:18 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 21:26:18 DEBUG Processing attribute `client` : value = 1
w2022-03-15 21:26:18 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:18 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 21:26:18 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 21:26:18 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#1]
w2022-03-15 21:26:18 DEBUG Processing attribute `firstName` : value = admin
w2022-03-15 21:26:18 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:18 DEBUG Processing attribute `lastName` : value = admin
w2022-03-15 21:26:18 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:18 DEBUG Processing attribute `login` : value = admin
w2022-03-15 21:26:18 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:18 DEBUG Processing attribute `password` : value = admin
w2022-03-15 21:26:18 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:18 DEBUG Processing attribute `role` : value = ADMIN
w2022-03-15 21:26:18 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:18 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#1]
w2022-03-15 21:26:18 DEBUG Done entity load : ru.edu.helpdesk.entity.User#1
w2022-03-15 21:26:18 DEBUG Processing attribute `status` : value = WORKING
w2022-03-15 21:26:18 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:18 DEBUG Processing attribute `support` : value = 2
w2022-03-15 21:26:18 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:18 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 21:26:18 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 21:26:18 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#2]
w2022-03-15 21:26:18 DEBUG Processing attribute `firstName` : value = support
w2022-03-15 21:26:18 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:18 DEBUG Processing attribute `lastName` : value = support
w2022-03-15 21:26:18 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:18 DEBUG Processing attribute `login` : value = support
w2022-03-15 21:26:18 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:18 DEBUG Processing attribute `password` : value = support
w2022-03-15 21:26:18 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:18 DEBUG Processing attribute `role` : value = SUPPORT
w2022-03-15 21:26:18 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:18 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#2]
w2022-03-15 21:26:18 DEBUG Done entity load : ru.edu.helpdesk.entity.User#2
w2022-03-15 21:26:18 DEBUG Processing attribute `title` : value = Hello user1
w2022-03-15 21:26:18 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:18 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 21:26:18 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 21:26:18 DEBUG Processing attribute `client` : value = 1
w2022-03-15 21:26:18 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:18 DEBUG Processing attribute `status` : value = OPEN
w2022-03-15 21:26:18 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:18 DEBUG Processing attribute `support` : value = 2
w2022-03-15 21:26:18 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:18 DEBUG Processing attribute `title` : value = Title2
w2022-03-15 21:26:18 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:18 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 21:26:42 DEBUG Logging Provider: org.jboss.logging.Log4j2LoggerProvider
w2022-03-15 21:26:42 DEBUG PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@7aa52917
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/%d0%9e%d0%bb%d1%8c%d0%b3%d0%b0/Desktop/Java/Project/Project1/helpdeskproject/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		ru.edu.helpdesk.entity.Comment
		ru.edu.helpdesk.entity.Ticket
		ru.edu.helpdesk.entity.User]
	Mapping files names []
	Properties []
w2022-03-15 21:26:42 DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
w2022-03-15 21:26:42 DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
w2022-03-15 21:26:42 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
w2022-03-15 21:26:42 INFO  HHH000412: Hibernate ORM core version 5.6.5.Final
w2022-03-15 21:26:42 DEBUG HHH000206: hibernate.properties not found
w2022-03-15 21:26:42 DEBUG Overriding existing service binding [org.hibernate.secure.spi.JaccService]
w2022-03-15 21:26:42 DEBUG Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
w2022-03-15 21:26:42 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
w2022-03-15 21:26:42 INFO  HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
w2022-03-15 21:26:42 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@362edd0a
w2022-03-15 21:26:42 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@362edd0a
w2022-03-15 21:26:42 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@362edd0a
w2022-03-15 21:26:42 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7d113337
w2022-03-15 21:26:42 DEBUG Adding type registration true_false -> org.hibernate.type.TrueFalseType@6f6c0414
w2022-03-15 21:26:42 DEBUG Adding type registration yes_no -> org.hibernate.type.YesNoType@22066f41
w2022-03-15 21:26:42 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@25fac090
w2022-03-15 21:26:42 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@25fac090
w2022-03-15 21:26:42 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@25fac090
w2022-03-15 21:26:42 DEBUG Adding type registration character -> org.hibernate.type.CharacterType@6ec2c5
w2022-03-15 21:26:42 DEBUG Adding type registration char -> org.hibernate.type.CharacterType@6ec2c5
w2022-03-15 21:26:42 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6ec2c5
w2022-03-15 21:26:42 DEBUG Adding type registration short -> org.hibernate.type.ShortType@12cfd7ce
w2022-03-15 21:26:42 DEBUG Adding type registration short -> org.hibernate.type.ShortType@12cfd7ce
w2022-03-15 21:26:42 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.ShortType@12cfd7ce
w2022-03-15 21:26:42 DEBUG Adding type registration integer -> org.hibernate.type.IntegerType@3b2bce48
w2022-03-15 21:26:42 DEBUG Adding type registration int -> org.hibernate.type.IntegerType@3b2bce48
w2022-03-15 21:26:42 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3b2bce48
w2022-03-15 21:26:42 DEBUG Adding type registration long -> org.hibernate.type.LongType@24fc305f
w2022-03-15 21:26:42 DEBUG Adding type registration long -> org.hibernate.type.LongType@24fc305f
w2022-03-15 21:26:42 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.LongType@24fc305f
w2022-03-15 21:26:42 DEBUG Adding type registration float -> org.hibernate.type.FloatType@56d0b486
w2022-03-15 21:26:42 DEBUG Adding type registration float -> org.hibernate.type.FloatType@56d0b486
w2022-03-15 21:26:42 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.FloatType@56d0b486
w2022-03-15 21:26:42 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@7d8d58b8
w2022-03-15 21:26:42 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@7d8d58b8
w2022-03-15 21:26:42 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7d8d58b8
w2022-03-15 21:26:42 DEBUG Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@63ba126c
w2022-03-15 21:26:42 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@63ba126c
w2022-03-15 21:26:42 DEBUG Adding type registration big_integer -> org.hibernate.type.BigIntegerType@552d07a9
w2022-03-15 21:26:42 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@552d07a9
w2022-03-15 21:26:42 DEBUG Adding type registration string -> org.hibernate.type.StringType@3689d97f
w2022-03-15 21:26:42 DEBUG Adding type registration java.lang.String -> org.hibernate.type.StringType@3689d97f
w2022-03-15 21:26:42 DEBUG Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7b7a578
w2022-03-15 21:26:42 DEBUG Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5aa43de3
w2022-03-15 21:26:42 DEBUG Adding type registration url -> org.hibernate.type.UrlType@3ab28cbc
w2022-03-15 21:26:42 DEBUG Adding type registration java.net.URL -> org.hibernate.type.UrlType@3ab28cbc
w2022-03-15 21:26:42 DEBUG Adding type registration Duration -> org.hibernate.type.DurationType@a42ed55
w2022-03-15 21:26:42 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.DurationType@a42ed55
w2022-03-15 21:26:42 DEBUG Adding type registration Instant -> org.hibernate.type.InstantType@733b2c92
w2022-03-15 21:26:42 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.InstantType@733b2c92
w2022-03-15 21:26:42 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1f410e36
w2022-03-15 21:26:42 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1f410e36
w2022-03-15 21:26:42 DEBUG Adding type registration LocalDate -> org.hibernate.type.LocalDateType@22d333d5
w2022-03-15 21:26:42 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@22d333d5
w2022-03-15 21:26:42 DEBUG Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@48e0fb9
w2022-03-15 21:26:42 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@48e0fb9
w2022-03-15 21:26:42 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2ccbb1f7
w2022-03-15 21:26:42 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2ccbb1f7
w2022-03-15 21:26:42 DEBUG Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@48dab76b
w2022-03-15 21:26:42 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@48dab76b
w2022-03-15 21:26:42 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@239efcb7
w2022-03-15 21:26:42 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@239efcb7
w2022-03-15 21:26:42 DEBUG Adding type registration date -> org.hibernate.type.DateType@3edd217f
w2022-03-15 21:26:42 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.DateType@3edd217f
w2022-03-15 21:26:42 DEBUG Adding type registration time -> org.hibernate.type.TimeType@4913655b
w2022-03-15 21:26:42 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4913655b
w2022-03-15 21:26:42 DEBUG Adding type registration timestamp -> org.hibernate.type.TimestampType@234f846
w2022-03-15 21:26:42 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@234f846
w2022-03-15 21:26:42 DEBUG Adding type registration java.util.Date -> org.hibernate.type.TimestampType@234f846
w2022-03-15 21:26:42 DEBUG Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4b05c7e6
w2022-03-15 21:26:42 DEBUG Adding type registration calendar -> org.hibernate.type.CalendarType@556f356e
w2022-03-15 21:26:42 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@556f356e
w2022-03-15 21:26:42 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@556f356e
w2022-03-15 21:26:42 DEBUG Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@e0811eb
w2022-03-15 21:26:42 DEBUG Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@3cb3f31d
w2022-03-15 21:26:42 DEBUG Adding type registration locale -> org.hibernate.type.LocaleType@50e426a
w2022-03-15 21:26:42 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@50e426a
w2022-03-15 21:26:42 DEBUG Adding type registration currency -> org.hibernate.type.CurrencyType@567cb79
w2022-03-15 21:26:42 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@567cb79
w2022-03-15 21:26:42 DEBUG Adding type registration timezone -> org.hibernate.type.TimeZoneType@451efef8
w2022-03-15 21:26:42 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@451efef8
w2022-03-15 21:26:42 DEBUG Adding type registration class -> org.hibernate.type.ClassType@50a36034
w2022-03-15 21:26:42 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.ClassType@50a36034
w2022-03-15 21:26:42 DEBUG Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7feb6aaf
w2022-03-15 21:26:42 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7feb6aaf
w2022-03-15 21:26:42 DEBUG Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@47624f1c
w2022-03-15 21:26:42 DEBUG Adding type registration binary -> org.hibernate.type.BinaryType@1a6625cf
w2022-03-15 21:26:42 DEBUG Adding type registration byte[] -> org.hibernate.type.BinaryType@1a6625cf
w2022-03-15 21:26:42 DEBUG Adding type registration [B -> org.hibernate.type.BinaryType@1a6625cf
w2022-03-15 21:26:42 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@28ab6c7b
w2022-03-15 21:26:42 DEBUG Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@28ab6c7b
w2022-03-15 21:26:42 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@28ab6c7b
w2022-03-15 21:26:42 DEBUG Adding type registration row_version -> org.hibernate.type.RowVersionType@350a846
w2022-03-15 21:26:42 DEBUG Adding type registration image -> org.hibernate.type.ImageType@7fe994ae
w2022-03-15 21:26:42 DEBUG Adding type registration characters -> org.hibernate.type.CharArrayType@10380f3e
w2022-03-15 21:26:42 DEBUG Adding type registration char[] -> org.hibernate.type.CharArrayType@10380f3e
w2022-03-15 21:26:42 DEBUG Adding type registration [C -> org.hibernate.type.CharArrayType@10380f3e
w2022-03-15 21:26:42 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@bd7b8bf
w2022-03-15 21:26:42 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@bd7b8bf
w2022-03-15 21:26:42 DEBUG Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@bd7b8bf
w2022-03-15 21:26:42 DEBUG Adding type registration text -> org.hibernate.type.TextType@16eec75
w2022-03-15 21:26:42 DEBUG Adding type registration ntext -> org.hibernate.type.NTextType@3aca79ea
w2022-03-15 21:26:42 DEBUG Adding type registration blob -> org.hibernate.type.BlobType@1ff4c880
w2022-03-15 21:26:42 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1ff4c880
w2022-03-15 21:26:42 DEBUG Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1a009173
w2022-03-15 21:26:42 DEBUG Adding type registration clob -> org.hibernate.type.ClobType@681e1cd6
w2022-03-15 21:26:42 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@681e1cd6
w2022-03-15 21:26:42 DEBUG Adding type registration nclob -> org.hibernate.type.NClobType@714febd2
w2022-03-15 21:26:42 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@714febd2
w2022-03-15 21:26:42 DEBUG Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@48390971
w2022-03-15 21:26:42 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@159d5dcc
w2022-03-15 21:26:42 DEBUG Adding type registration serializable -> org.hibernate.type.SerializableType@28dc495f
w2022-03-15 21:26:42 DEBUG Adding type registration object -> org.hibernate.type.ObjectType@114cfc1c
w2022-03-15 21:26:42 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@114cfc1c
w2022-03-15 21:26:42 DEBUG Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@13308feb
w2022-03-15 21:26:42 DEBUG Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@65ea2d8d
w2022-03-15 21:26:42 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1523d79f
w2022-03-15 21:26:42 DEBUG Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2e9c0478
w2022-03-15 21:26:42 DEBUG Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@39c48997
w2022-03-15 21:26:42 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@df65d67
w2022-03-15 21:26:42 DEBUG Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6e2ec69
w2022-03-15 21:26:42 DEBUG Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@48138709
w2022-03-15 21:26:42 INFO  HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
w2022-03-15 21:26:42 DEBUG Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@75a33372] into BootstrapContext; was [null]
w2022-03-15 21:26:42 DEBUG ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@75a33372) [was null]
w2022-03-15 21:26:42 DEBUG Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@60033847] into BootstrapContext; was [null]
w2022-03-15 21:26:42 DEBUG Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@13d2b2b7] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@1f6c2b6e]
w2022-03-15 21:26:42 DEBUG Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@75a33372]
w2022-03-15 21:26:42 DEBUG ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@75a33372]
w2022-03-15 21:26:42 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
w2022-03-15 21:26:42 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
w2022-03-15 21:26:42 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
w2022-03-15 21:26:42 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
w2022-03-15 21:26:42 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
w2022-03-15 21:26:42 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
w2022-03-15 21:26:42 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
w2022-03-15 21:26:42 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
w2022-03-15 21:26:42 DEBUG Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
w2022-03-15 21:26:42 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
w2022-03-15 21:26:42 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
w2022-03-15 21:26:42 DEBUG Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
w2022-03-15 21:26:42 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
w2022-03-15 21:26:42 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
w2022-03-15 21:26:42 DEBUG Database ->
       name : SQLite
    version : 3.36.0
      major : 3
      minor : 36
w2022-03-15 21:26:42 DEBUG Driver ->
       name : SQLite JDBC
    version : 3.36.0.3
      major : 3
      minor : 36
w2022-03-15 21:26:42 DEBUG JDBC version : 2.1
w2022-03-15 21:26:42 INFO  HHH000400: Using dialect: org.hibernate.dialect.SQLiteDialect
w2022-03-15 21:26:42 DEBUG JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
w2022-03-15 21:26:42 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
w2022-03-15 21:26:42 DEBUG HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [2] less than 4
w2022-03-15 21:26:42 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@64d09606] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@154d13d0]
w2022-03-15 21:26:42 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
w2022-03-15 21:26:42 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.Comment
w2022-03-15 21:26:42 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 21:26:42 DEBUG Import with entity name Comment
w2022-03-15 21:26:42 DEBUG Bind entity ru.edu.helpdesk.entity.Comment on table comment
w2022-03-15 21:26:42 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 21:26:42 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Comment] is safe
w2022-03-15 21:26:42 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Comment
w2022-03-15 21:26:42 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 21:26:42 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Comment:id]
w2022-03-15 21:26:42 DEBUG building SimpleValue for id
w2022-03-15 21:26:42 DEBUG Building property id
w2022-03-15 21:26:42 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 21:26:42 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=message, insertable=true, updatable=true, unique=false}
w2022-03-15 21:26:42 DEBUG MetadataSourceProcessor property message with lazy=false
w2022-03-15 21:26:42 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Comment:message]
w2022-03-15 21:26:42 DEBUG building SimpleValue for message
w2022-03-15 21:26:42 DEBUG Building property message
w2022-03-15 21:26:42 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 21:26:42 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=ticket, insertable=true, updatable=true, unique=false}
w2022-03-15 21:26:42 DEBUG Building property ticket
w2022-03-15 21:26:42 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 21:26:42 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(comment), mappingColumn=user, insertable=true, updatable=true, unique=false}
w2022-03-15 21:26:42 DEBUG Building property user
w2022-03-15 21:26:42 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 21:26:42 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 21:26:42 DEBUG Import with entity name Ticket
w2022-03-15 21:26:42 DEBUG Bind entity ru.edu.helpdesk.entity.Ticket on table ticket
w2022-03-15 21:26:42 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 21:26:42 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Ticket] is safe
w2022-03-15 21:26:42 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Ticket
w2022-03-15 21:26:42 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 21:26:42 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:id]
w2022-03-15 21:26:42 DEBUG building SimpleValue for id
w2022-03-15 21:26:42 DEBUG Building property id
w2022-03-15 21:26:42 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 21:26:42 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 21:26:42 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=client, insertable=true, updatable=true, unique=false}
w2022-03-15 21:26:42 DEBUG Building property client
w2022-03-15 21:26:42 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=status, insertable=true, updatable=true, unique=false}
w2022-03-15 21:26:42 DEBUG MetadataSourceProcessor property status with lazy=false
w2022-03-15 21:26:42 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:status]
w2022-03-15 21:26:42 DEBUG building SimpleValue for status
w2022-03-15 21:26:42 DEBUG Building property status
w2022-03-15 21:26:42 DEBUG Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
w2022-03-15 21:26:42 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=support, insertable=true, updatable=true, unique=false}
w2022-03-15 21:26:42 DEBUG Building property support
w2022-03-15 21:26:42 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ticket), mappingColumn=title, insertable=true, updatable=true, unique=false}
w2022-03-15 21:26:42 DEBUG MetadataSourceProcessor property title with lazy=false
w2022-03-15 21:26:42 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.Ticket:title]
w2022-03-15 21:26:42 DEBUG building SimpleValue for title
w2022-03-15 21:26:42 DEBUG Building property title
w2022-03-15 21:26:42 DEBUG Binding entity from annotated class: ru.edu.helpdesk.entity.User
w2022-03-15 21:26:42 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
w2022-03-15 21:26:42 DEBUG Import with entity name User
w2022-03-15 21:26:42 DEBUG Bind entity ru.edu.helpdesk.entity.User on table user
w2022-03-15 21:26:42 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
w2022-03-15 21:26:42 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.User] is safe
w2022-03-15 21:26:42 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.User
w2022-03-15 21:26:42 DEBUG MetadataSourceProcessor property id with lazy=false
w2022-03-15 21:26:42 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:id]
w2022-03-15 21:26:42 DEBUG building SimpleValue for id
w2022-03-15 21:26:42 DEBUG Building property id
w2022-03-15 21:26:42 DEBUG #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
w2022-03-15 21:26:42 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
w2022-03-15 21:26:42 DEBUG MetadataSourceProcessor property firstName with lazy=false
w2022-03-15 21:26:42 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:firstName]
w2022-03-15 21:26:42 DEBUG building SimpleValue for firstName
w2022-03-15 21:26:42 DEBUG Building property firstName
w2022-03-15 21:26:42 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
w2022-03-15 21:26:42 DEBUG MetadataSourceProcessor property lastName with lazy=false
w2022-03-15 21:26:42 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:lastName]
w2022-03-15 21:26:42 DEBUG building SimpleValue for lastName
w2022-03-15 21:26:42 DEBUG Building property lastName
w2022-03-15 21:26:42 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=login, insertable=true, updatable=true, unique=false}
w2022-03-15 21:26:42 DEBUG MetadataSourceProcessor property login with lazy=false
w2022-03-15 21:26:42 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:login]
w2022-03-15 21:26:42 DEBUG building SimpleValue for login
w2022-03-15 21:26:42 DEBUG Building property login
w2022-03-15 21:26:42 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
w2022-03-15 21:26:42 DEBUG MetadataSourceProcessor property password with lazy=false
w2022-03-15 21:26:42 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:password]
w2022-03-15 21:26:42 DEBUG building SimpleValue for password
w2022-03-15 21:26:42 DEBUG Building property password
w2022-03-15 21:26:42 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=role, insertable=true, updatable=true, unique=false}
w2022-03-15 21:26:42 DEBUG MetadataSourceProcessor property role with lazy=false
w2022-03-15 21:26:42 DEBUG Attempting to locate auto-apply AttributeConverter for property [ru.edu.helpdesk.entity.User:role]
w2022-03-15 21:26:42 DEBUG building SimpleValue for role
w2022-03-15 21:26:42 DEBUG Building property role
w2022-03-15 21:26:42 DEBUG Starting fillSimpleValue for id
w2022-03-15 21:26:42 DEBUG Starting fillSimpleValue for message
w2022-03-15 21:26:42 DEBUG Starting fillSimpleValue for id
w2022-03-15 21:26:42 DEBUG Starting fillSimpleValue for status
w2022-03-15 21:26:42 DEBUG Starting fillSimpleValue for title
w2022-03-15 21:26:42 DEBUG Starting fillSimpleValue for id
w2022-03-15 21:26:42 DEBUG Starting fillSimpleValue for firstName
w2022-03-15 21:26:42 DEBUG Starting fillSimpleValue for lastName
w2022-03-15 21:26:42 DEBUG Starting fillSimpleValue for login
w2022-03-15 21:26:42 DEBUG Starting fillSimpleValue for password
w2022-03-15 21:26:42 DEBUG Starting fillSimpleValue for role
w2022-03-15 21:26:42 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [comment]
w2022-03-15 21:26:42 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [ticket]
w2022-03-15 21:26:42 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [user]
w2022-03-15 21:26:42 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 21:26:42 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 21:26:42 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 21:26:42 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 21:26:42 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.Ticket
w2022-03-15 21:26:42 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 21:26:42 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 21:26:42 DEBUG Resolving reference to class: ru.edu.helpdesk.entity.User
w2022-03-15 21:26:42 DEBUG Building session factory
w2022-03-15 21:26:42 DEBUG SessionFactory name : null
w2022-03-15 21:26:42 DEBUG Automatic flush during beforeCompletion(): enabled
w2022-03-15 21:26:42 DEBUG Automatic session close at end of transaction: disabled
w2022-03-15 21:26:42 DEBUG Statistics: disabled
w2022-03-15 21:26:42 DEBUG Deleted entity synthetic identifier rollback: disabled
w2022-03-15 21:26:42 DEBUG Default entity-mode: pojo
w2022-03-15 21:26:42 DEBUG Check Nullability in Core (should be disabled when Bean Validation is on): enabled
w2022-03-15 21:26:42 DEBUG Allow initialization of lazy state outside session : disabled
w2022-03-15 21:26:42 DEBUG Using BatchFetchStyle : LEGACY
w2022-03-15 21:26:42 DEBUG Default batch fetch size: -1
w2022-03-15 21:26:42 DEBUG Maximum outer join fetch depth: null
w2022-03-15 21:26:42 DEBUG Default null ordering: NONE
w2022-03-15 21:26:42 DEBUG Order SQL updates by primary key: disabled
w2022-03-15 21:26:42 DEBUG Order SQL inserts for batching: disabled
w2022-03-15 21:26:42 DEBUG multi-tenancy strategy : NONE
w2022-03-15 21:26:42 DEBUG JTA Track by Thread: enabled
w2022-03-15 21:26:42 DEBUG Query language substitutions: {}
w2022-03-15 21:26:42 DEBUG Named query checking : enabled
w2022-03-15 21:26:42 DEBUG Second-level cache: disabled
w2022-03-15 21:26:42 DEBUG Second-level query cache: disabled
w2022-03-15 21:26:42 DEBUG Second-level query cache factory: null
w2022-03-15 21:26:42 DEBUG Second-level cache region prefix: null
w2022-03-15 21:26:42 DEBUG Optimize second-level cache for minimal puts: disabled
w2022-03-15 21:26:42 DEBUG Structured second-level cache entries: disabled
w2022-03-15 21:26:42 DEBUG Second-level cache direct-reference entries: disabled
w2022-03-15 21:26:42 DEBUG Automatic eviction of collection cache: disabled
w2022-03-15 21:26:42 DEBUG JDBC batch size: 1
w2022-03-15 21:26:42 DEBUG JDBC batch updates for versioned data: enabled
w2022-03-15 21:26:42 DEBUG Scrollable result sets: disabled
w2022-03-15 21:26:42 DEBUG Wrap result sets: disabled
w2022-03-15 21:26:42 DEBUG JDBC3 getGeneratedKeys(): enabled
w2022-03-15 21:26:42 DEBUG JDBC result set fetch size: null
w2022-03-15 21:26:42 DEBUG Connection release mode: ON_CLOSE
w2022-03-15 21:26:42 DEBUG Generate SQL with comments: disabled
w2022-03-15 21:26:42 DEBUG JPA compliance - query : disabled
w2022-03-15 21:26:42 DEBUG JPA compliance - closed-handling : disabled
w2022-03-15 21:26:42 DEBUG JPA compliance - lists : disabled
w2022-03-15 21:26:42 DEBUG JPA compliance - transactions : disabled
w2022-03-15 21:26:42 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 21:26:42 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 21:26:42 DEBUG Session factory constructed with filter configurations : {}
w2022-03-15 21:26:42 DEBUG Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=true, java.specification.version=1.8, file.encoding.pkg=sun.io, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@78ee624, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.SQLiteDialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\charsets.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\cldrdata.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\dnsns.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\jaccess.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\localedata.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\nashorn.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunec.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunmscapi.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext\zipfs.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jce.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jfr.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jsse.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\management-agent.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\resources.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\rt.jar;C:\Users\Ольга\Desktop\Java\Project\Project1\helpdeskproject\target\classes;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\2.6.4\spring-boot-starter-data-jpa-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\2.6.4\spring-boot-starter-jdbc-2.6.4.jar;C:\Users\Ольга\.m2\repository\com\zaxxer\HikariCP\4.0.3\HikariCP-4.0.3.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-jdbc\5.3.16\spring-jdbc-5.3.16.jar;C:\Users\Ольга\.m2\repository\jakarta\transaction\jakarta.transaction-api\1.3.3\jakarta.transaction-api-1.3.3.jar;C:\Users\Ольга\.m2\repository\jakarta\persistence\jakarta.persistence-api\2.2.3\jakarta.persistence-api-2.2.3.jar;C:\Users\Ольга\.m2\repository\org\hibernate\hibernate-core\5.6.5.Final\hibernate-core-5.6.5.Final.jar;C:\Users\Ольга\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\Ольга\.m2\repository\net\bytebuddy\byte-buddy\1.11.22\byte-buddy-1.11.22.jar;C:\Users\Ольга\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ольга\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Ольга\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.6\jaxb-runtime-2.3.6.jar;C:\Users\Ольга\.m2\repository\org\glassfish\jaxb\txw2\2.3.6\txw2-2.3.6.jar;C:\Users\Ольга\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.12\istack-commons-runtime-3.0.12.jar;C:\Users\Ольга\.m2\repository\com\sun\activation\jakarta.activation\1.2.2\jakarta.activation-1.2.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\data\spring-data-jpa\2.6.2\spring-data-jpa-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\data\spring-data-commons\2.6.2\spring-data-commons-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-orm\5.3.16\spring-orm-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-context\5.3.16\spring-context-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-tx\5.3.16\spring-tx-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-beans\5.3.16\spring-beans-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-aspects\5.3.16\spring-aspects-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-security\2.6.4\spring-boot-starter-security-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter\2.6.4\spring-boot-starter-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-logging\2.6.4\spring-boot-starter-logging-2.6.4.jar;C:\Users\Ольга\.m2\repository\ch\qos\logback\logback-classic\1.2.10\logback-classic-1.2.10.jar;C:\Users\Ольга\.m2\repository\ch\qos\logback\logback-core\1.2.10\logback-core-1.2.10.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.17.1\log4j-to-slf4j-2.17.1.jar;C:\Users\Ольга\.m2\repository\org\slf4j\jul-to-slf4j\1.7.36\jul-to-slf4j-1.7.36.jar;C:\Users\Ольга\.m2\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;C:\Users\Ольга\.m2\repository\org\yaml\snakeyaml\1.29\snakeyaml-1.29.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-aop\5.3.16\spring-aop-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-config\5.6.2\spring-security-config-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-web\5.6.2\spring-security-web-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-expression\5.3.16\spring-expression-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-web\2.6.4\spring-boot-starter-web-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-json\2.6.4\spring-boot-starter-json-2.6.4.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.13.1\jackson-datatype-jdk8-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.13.1\jackson-datatype-jsr310-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.13.1\jackson-module-parameter-names-2.13.1.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\2.6.4\spring-boot-starter-tomcat-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.58\tomcat-embed-core-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\9.0.58\tomcat-embed-el-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.58\tomcat-embed-websocket-9.0.58.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-web\5.3.16\spring-web-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-webmvc\5.3.16\spring-webmvc-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-devtools\2.6.4\spring-boot-devtools-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot\2.6.4\spring-boot-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\2.6.4\spring-boot-autoconfigure-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\xerial\sqlite-jdbc\3.36.0.3\sqlite-jdbc-3.36.0.3.jar;C:\Users\Ольга\.m2\repository\com\zsoltfabok\sqlite-dialect\1.0\sqlite-dialect-1.0.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-aop\2.6.2\spring-boot-starter-aop-2.6.2.jar;C:\Users\Ольга\.m2\repository\org\aspectj\aspectjweaver\1.9.7\aspectjweaver-1.9.7.jar;C:\Users\Ольга\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.3\jakarta.xml.bind-api-2.3.3.jar;C:\Users\Ольга\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.2\jakarta.activation-api-1.2.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-core\5.3.16\spring-core-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\spring-jcl\5.3.16\spring-jcl-5.3.16.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-core\5.6.2\spring-security-core-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\springframework\security\spring-security-crypto\5.6.2\spring-security-crypto-5.6.2.jar;C:\Users\Ольга\.m2\repository\org\projectlombok\lombok\1.18.22\lombok-1.18.22.jar;C:\Users\Ольга\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\2.6.4\spring-boot-starter-thymeleaf-2.6.4.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\thymeleaf-spring5\3.0.15.RELEASE\thymeleaf-spring5-3.0.15.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\thymeleaf\3.0.15.RELEASE\thymeleaf-3.0.15.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\attoparser\attoparser\2.0.5.RELEASE\attoparser-2.0.5.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\Ольга\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-java8time\3.0.4.RELEASE\thymeleaf-extras-java8time-3.0.4.RELEASE.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.1\jackson-databind-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.1\jackson-annotations-2.13.1.jar;C:\Users\Ольга\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.1\jackson-core-2.13.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-api\2.4.1\log4j-api-2.4.1.jar;C:\Users\Ольга\.m2\repository\org\apache\logging\log4j\log4j-core\2.4.1\log4j-core-2.4.1.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.2\lib\idea_rt.jar, java.vm.vendor=Temurin, sun.arch.data.model=64, user.variant=, java.vendor.url=https://adoptium.net/, catalina.useNaming=false, user.timezone=Europe/Moscow, jakarta.persistence.sharedCache.mode=UNSPECIFIED, os.name=Windows 10, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), user.country=RU, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\bin, sun.java.command=ru.edu.helpdesk.HelpdeskApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@2912e8b5, com.sun.management.jmxremote=, javax.persistence.sharedCache.mode=UNSPECIFIED, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, user.home=C:\Users\Ольга, user.language=ru, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre, file.separator=\, spring.output.ansi.enabled=always, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, sun.boot.class.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\resources.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\rt.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\sunrsasign.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jsse.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jce.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\charsets.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\jfr.jar;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\classes, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_312-b07, user.name=Эльдорадо, spring.jmx.enabled=true, path.separator=;, os.version=10.0, java.endorsed.dirs=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\endorsed, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=default, spring.beaninfo.ignore=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=C:\Users\134E~1\AppData\Local\Temp\, catalina.home=C:\Users\Ольга\AppData\Local\Temp\tomcat.8080.1628292645811053207, java.version=1.8.0_312, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\Ольга\Desktop\Java\Project\Project1\helpdeskproject, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=8600, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\Ольга\AppData\Local\Temp\tomcat.8080.1628292645811053207, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@5fa64013, java.library.path=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\windows\System32\OpenSSH\;C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\bin;C:\Program Files\apache-maven-3.8.4\bin;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Ольга\AppData\Local\Microsoft\WindowsApps;C:\Users\Ольга\AppData\Local\Programs\Microsoft VS Code\bin;C:\SQLite;C:\Users\Ольга\AppData\Roaming\npm;C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.2\bin;;., java.vendor=Temurin, java.vm.info=mixed mode, java.vm.version=25.312-b07, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, java.ext.dirs=C:\Program Files\Eclipse Adoptium\jdk-8.0.312.7-hotspot\jre\lib\ext;C:\windows\Sun\Java\lib\ext, hibernate.connection.datasource=HikariDataSource (HikariPool-1), hibernate.hbm2ddl.import_files=data/import.sql, java.class.version=52.0}
w2022-03-15 21:26:42 DEBUG Skipping JACC integration as it was not enabled
w2022-03-15 21:26:42 DEBUG Using ORDINAL-based conversion for Enum ru.edu.helpdesk.entity.UserRole
w2022-03-15 21:26:42 DEBUG Using ORDINAL-based conversion for Enum ru.edu.helpdesk.entity.TicketStatus
w2022-03-15 21:26:42 DEBUG Instantiated session factory
w2022-03-15 21:26:42 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@64d09606] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@4f3a250f]
w2022-03-15 21:26:42 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.User] is safe
w2022-03-15 21:26:42 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.User
w2022-03-15 21:26:43 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 21:26:43 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 21:26:43 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 21:26:43 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 21:26:43 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Ticket] is safe
w2022-03-15 21:26:43 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Ticket
w2022-03-15 21:26:43 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 21:26:43 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 21:26:43 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 21:26:43 DEBUG To-one property `ru.edu.helpdesk.entity.Ticket#support` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 21:26:43 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 21:26:43 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 21:26:43 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 21:26:43 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 21:26:43 DEBUG Not known whether passed class name [ru.edu.helpdesk.entity.Comment] is safe
w2022-03-15 21:26:43 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.edu.helpdesk.entity.Comment
w2022-03-15 21:26:43 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 21:26:43 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 21:26:43 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#ticket` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 21:26:43 DEBUG To-one property `ru.edu.helpdesk.entity.Comment#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
w2022-03-15 21:26:43 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.User
w2022-03-15 21:26:43 DEBUG  Version select: select id from user where id =?
w2022-03-15 21:26:43 DEBUG  Snapshot select: select user_.id, user_.first_name as first_na2_2_, user_.last_name as last_nam3_2_, user_.login as login4_2_, user_.password as password5_2_, user_.role as role6_2_ from user user_ where user_.id=?
w2022-03-15 21:26:43 DEBUG  Insert 0: insert into user (first_name, last_name, login, password, role, id) values (?, ?, ?, ?, ?, ?)
w2022-03-15 21:26:43 DEBUG  Update 0: update user set first_name=?, last_name=?, login=?, password=?, role=? where id=?
w2022-03-15 21:26:43 DEBUG  Delete 0: delete from user where id=?
w2022-03-15 21:26:43 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11d4cea3]
w2022-03-15 21:26:43 DEBUG Visiting attribute path : firstName
w2022-03-15 21:26:43 DEBUG Visiting attribute path : lastName
w2022-03-15 21:26:43 DEBUG Visiting attribute path : login
w2022-03-15 21:26:43 DEBUG Visiting attribute path : password
w2022-03-15 21:26:43 DEBUG Visiting attribute path : role
w2022-03-15 21:26:43 DEBUG Building LoadPlan...
w2022-03-15 21:26:43 DEBUG processing queryspace <gen:0>
w2022-03-15 21:26:43 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.User)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

w2022-03-15 21:26:43 DEBUG Static select for entity ru.edu.helpdesk.entity.User [NONE]: select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 21:26:43 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.Ticket
w2022-03-15 21:26:43 DEBUG  Version select: select id from ticket where id =?
w2022-03-15 21:26:43 DEBUG  Snapshot select: select ticket_.id, ticket_.client_id as client_i4_1_, ticket_.status as status2_1_, ticket_.support_id as support_5_1_, ticket_.title as title3_1_ from ticket ticket_ where ticket_.id=?
w2022-03-15 21:26:43 DEBUG  Insert 0: insert into ticket (client_id, status, support_id, title, id) values (?, ?, ?, ?, ?)
w2022-03-15 21:26:43 DEBUG  Update 0: update ticket set client_id=?, status=?, support_id=?, title=? where id=?
w2022-03-15 21:26:43 DEBUG  Delete 0: delete from ticket where id=?
w2022-03-15 21:26:43 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a1954a2]
w2022-03-15 21:26:43 DEBUG Visiting attribute path : client
w2022-03-15 21:26:43 DEBUG Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4263c6df]
w2022-03-15 21:26:43 DEBUG Visiting attribute path : client.firstName
w2022-03-15 21:26:43 DEBUG Visiting attribute path : client.lastName
w2022-03-15 21:26:43 DEBUG Visiting attribute path : client.login
w2022-03-15 21:26:43 DEBUG Visiting attribute path : client.password
w2022-03-15 21:26:43 DEBUG Visiting attribute path : client.role
w2022-03-15 21:26:43 DEBUG Visiting attribute path : status
w2022-03-15 21:26:43 DEBUG Visiting attribute path : support
w2022-03-15 21:26:43 DEBUG Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b335620]
w2022-03-15 21:26:43 DEBUG Visiting attribute path : support.firstName
w2022-03-15 21:26:43 DEBUG Visiting attribute path : support.lastName
w2022-03-15 21:26:43 DEBUG Visiting attribute path : support.login
w2022-03-15 21:26:43 DEBUG Visiting attribute path : support.password
w2022-03-15 21:26:43 DEBUG Visiting attribute path : support.role
w2022-03-15 21:26:43 DEBUG Visiting attribute path : title
w2022-03-15 21:26:43 DEBUG Building LoadPlan...
w2022-03-15 21:26:43 DEBUG processing queryspace <gen:0>
w2022-03-15 21:26:43 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.Ticket)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.Ticket, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.Ticket)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:1>, path=ru.edu.helpdesk.entity.Ticket.client)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:2>, path=ru.edu.helpdesk.entity.Ticket.support)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.Ticket)
          - SQL table alias mapping - ticket0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(client)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
          - JOIN (JoinDefinedByMetadata(support)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user2_
                - alias suffix - 2_
                - suffixed key columns - {id1_2_2_}

w2022-03-15 21:26:43 DEBUG Static select for entity ru.edu.helpdesk.entity.Ticket [NONE]: select ticket0_.id as id1_1_0_, ticket0_.client_id as client_i4_1_0_, ticket0_.status as status2_1_0_, ticket0_.support_id as support_5_1_0_, ticket0_.title as title3_1_0_, user1_.id as id1_2_1_, user1_.first_name as first_na2_2_1_, user1_.last_name as last_nam3_2_1_, user1_.login as login4_2_1_, user1_.password as password5_2_1_, user1_.role as role6_2_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id left outer join user user2_ on ticket0_.support_id=user2_.id where ticket0_.id=?
w2022-03-15 21:26:43 DEBUG Static SQL for entity: ru.edu.helpdesk.entity.Comment
w2022-03-15 21:26:43 DEBUG  Version select: select id from comment where id =?
w2022-03-15 21:26:43 DEBUG  Snapshot select: select comment_.id, comment_.message as message2_0_, comment_.ticket_id as ticket_i3_0_, comment_.user_id as user_id4_0_ from comment comment_ where comment_.id=?
w2022-03-15 21:26:43 DEBUG  Insert 0: insert into comment (message, ticket_id, user_id, id) values (?, ?, ?, ?)
w2022-03-15 21:26:43 DEBUG  Update 0: update comment set message=?, ticket_id=?, user_id=? where id=?
w2022-03-15 21:26:43 DEBUG  Delete 0: delete from comment where id=?
w2022-03-15 21:26:43 DEBUG Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20fa09a3]
w2022-03-15 21:26:43 DEBUG Visiting attribute path : message
w2022-03-15 21:26:43 DEBUG Visiting attribute path : ticket
w2022-03-15 21:26:43 DEBUG Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71b1d240]
w2022-03-15 21:26:43 DEBUG Visiting attribute path : ticket.client
w2022-03-15 21:26:43 DEBUG Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2687b76f]
w2022-03-15 21:26:43 DEBUG Visiting attribute path : ticket.client.firstName
w2022-03-15 21:26:43 DEBUG Visiting attribute path : ticket.client.lastName
w2022-03-15 21:26:43 DEBUG Visiting attribute path : ticket.client.login
w2022-03-15 21:26:43 DEBUG Visiting attribute path : ticket.client.password
w2022-03-15 21:26:43 DEBUG Visiting attribute path : ticket.client.role
w2022-03-15 21:26:43 DEBUG Visiting attribute path : ticket.status
w2022-03-15 21:26:43 DEBUG Visiting attribute path : ticket.support
w2022-03-15 21:26:43 DEBUG Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@448ec5c9]
w2022-03-15 21:26:43 DEBUG Visiting attribute path : ticket.support.firstName
w2022-03-15 21:26:43 DEBUG Visiting attribute path : ticket.support.lastName
w2022-03-15 21:26:43 DEBUG Visiting attribute path : ticket.support.login
w2022-03-15 21:26:43 DEBUG Visiting attribute path : ticket.support.password
w2022-03-15 21:26:43 DEBUG Visiting attribute path : ticket.support.role
w2022-03-15 21:26:43 DEBUG Visiting attribute path : ticket.title
w2022-03-15 21:26:43 DEBUG Visiting attribute path : user
w2022-03-15 21:26:43 DEBUG Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9e79786]
w2022-03-15 21:26:43 DEBUG Visiting attribute path : user.firstName
w2022-03-15 21:26:43 DEBUG Visiting attribute path : user.lastName
w2022-03-15 21:26:43 DEBUG Visiting attribute path : user.login
w2022-03-15 21:26:43 DEBUG Visiting attribute path : user.password
w2022-03-15 21:26:43 DEBUG Visiting attribute path : user.role
w2022-03-15 21:26:43 DEBUG Building LoadPlan...
w2022-03-15 21:26:43 DEBUG processing queryspace <gen:0>
w2022-03-15 21:26:43 DEBUG LoadPlan(entity=ru.edu.helpdesk.entity.Comment)
    - Returns
       - EntityReturnImpl(entity=ru.edu.helpdesk.entity.Comment, querySpaceUid=<gen:0>, path=ru.edu.helpdesk.entity.Comment)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.Ticket, querySpaceUid=<gen:1>, path=ru.edu.helpdesk.entity.Comment.ticket)
             - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:2>, path=ru.edu.helpdesk.entity.Comment.ticket.client)
             - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:3>, path=ru.edu.helpdesk.entity.Comment.ticket.support)
          - EntityAttributeFetchImpl(entity=ru.edu.helpdesk.entity.User, querySpaceUid=<gen:4>, path=ru.edu.helpdesk.entity.Comment.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.edu.helpdesk.entity.Comment)
          - SQL table alias mapping - comment0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(ticket)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ru.edu.helpdesk.entity.Ticket)
                - SQL table alias mapping - ticket1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(client)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=ru.edu.helpdesk.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}
                - JOIN (JoinDefinedByMetadata(support)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=ru.edu.helpdesk.entity.User)
                      - SQL table alias mapping - user3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_2_3_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=ru.edu.helpdesk.entity.User)
                - SQL table alias mapping - user4_
                - alias suffix - 4_
                - suffixed key columns - {id1_2_4_}

w2022-03-15 21:26:43 DEBUG Static select for entity ru.edu.helpdesk.entity.Comment [NONE]: select comment0_.id as id1_0_0_, comment0_.message as message2_0_0_, comment0_.ticket_id as ticket_i3_0_0_, comment0_.user_id as user_id4_0_0_, ticket1_.id as id1_1_1_, ticket1_.client_id as client_i4_1_1_, ticket1_.status as status2_1_1_, ticket1_.support_id as support_5_1_1_, ticket1_.title as title3_1_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_, user3_.id as id1_2_3_, user3_.first_name as first_na2_2_3_, user3_.last_name as last_nam3_2_3_, user3_.login as login4_2_3_, user3_.password as password5_2_3_, user3_.role as role6_2_3_, user4_.id as id1_2_4_, user4_.first_name as first_na2_2_4_, user4_.last_name as last_nam3_2_4_, user4_.login as login4_2_4_, user4_.password as password5_2_4_, user4_.role as role6_2_4_ from comment comment0_ left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id left outer join user user2_ on ticket1_.client_id=user2_.id left outer join user user3_ on ticket1_.support_id=user3_.id left outer join user user4_ on comment0_.user_id=user4_.id where comment0_.id=?
w2022-03-15 21:26:43 DEBUG drop table if exists comment
w2022-03-15 21:26:43 DEBUG drop table if exists hibernate_sequence
w2022-03-15 21:26:43 DEBUG drop table if exists ticket
w2022-03-15 21:26:43 DEBUG drop table if exists user
w2022-03-15 21:26:43 DEBUG create table comment (id bigint not null, message varchar(255) not null, ticket_id bigint, user_id bigint, primary key (id))
w2022-03-15 21:26:43 DEBUG create table hibernate_sequence (next_val bigint)
w2022-03-15 21:26:43 DEBUG insert into hibernate_sequence values ( 1 )
w2022-03-15 21:26:43 DEBUG create table ticket (id bigint not null, status integer, title varchar(255) not null, client_id bigint, support_id bigint, primary key (id))
w2022-03-15 21:26:43 DEBUG create table user (id bigint not null, first_name varchar(255), last_name varchar(255), login varchar(255) not null, password varchar(255) not null, role integer, primary key (id))
w2022-03-15 21:26:43 INFO  HHH000476: Executing import script 'file:/C:/Users/%d0%9e%d0%bb%d1%8c%d0%b3%d0%b0/Desktop/Java/Project/Project1/helpdeskproject/target/classes/data/import.sql'
w2022-03-15 21:26:43 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (1, 'admin', 'admin', 'admin', 'admin', 0)
w2022-03-15 21:26:43 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (2, 'support', 'support', 'support', 'support', 1)
w2022-03-15 21:26:43 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (3, 'user1', 'user1', 'user1', 'user1', 2)
w2022-03-15 21:26:43 DEBUG INSERT INTO user (id, first_name, last_name, login, password, role) VALUES (4, 'user2', 'user2', 'user2', 'user2', 2)
w2022-03-15 21:26:43 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (1, 1, 'Hello user1',1, 2)
w2022-03-15 21:26:43 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (2, 0, 'Title2', 1, 2)
w2022-03-15 21:26:43 DEBUG INSERT INTO ticket (id, status, title, client_id, support_id) VALUES (3, 0, 'Message user2', 4, NULL)
w2022-03-15 21:26:43 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (1, "comment ticket1", 1, 3)
w2022-03-15 21:26:43 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (2, "comment ticket2", 2, 3)
w2022-03-15 21:26:43 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (3, "comment ticket11", 1, 2)
w2022-03-15 21:26:43 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (4, "comment ticket111", 1, 2)
w2022-03-15 21:26:43 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (5, "comment ticket22", 2, 2)
w2022-03-15 21:26:43 DEBUG INSERT INTO comment (id, message, ticket_id, user_id) VALUES (6, "comment ticket3", 3, 4)
w2022-03-15 21:26:43 DEBUG UPDATE hibernate_sequence SET next_val = 8 WHERE next_val = 1
w2022-03-15 21:26:43 INFO  HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
w2022-03-15 21:26:43 DEBUG Checking 0 named HQL queries
w2022-03-15 21:26:43 DEBUG Checking 0 named SQL queries
w2022-03-15 21:26:43 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
w2022-03-15 21:26:43 DEBUG Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1e147a52
w2022-03-15 21:26:43 DEBUG Registering SessionFactory: 72dc684b-4fe0-4689-8030-6e1eea3445c6 (<unnamed>)
w2022-03-15 21:26:43 DEBUG Not binding SessionFactory to JNDI, no JNDI name configured
w2022-03-15 21:26:43 DEBUG Statistics initialized [enabled=false]
w2022-03-15 21:26:43 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 21:26:43 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 21:26:43 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 21:26:49 DEBUG Rendered criteria query -> select generatedAlias0 from Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 21:26:49 DEBUG QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@7177d538
w2022-03-15 21:26:49 DEBUG parse() - HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 21:26:49 DEBUG throwQueryException() : no errors
w2022-03-15 21:26:49 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[IDENT] Node: 'ru'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'edu'
    |  |  |  |  |  |  \-[IDENT] Node: 'helpdesk'
    |  |  |  |  |  \-[IDENT] Node: 'entity'
    |  |  |  |  \-[IDENT] Node: 'Ticket'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'client'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias1'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

w2022-03-15 21:26:49 DEBUG select << begin [level=1, statement=select]
w2022-03-15 21:26:49 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.Ticket (generatedAlias0) -> ticket0_
w2022-03-15 21:26:49 DEBUG Resolved : generatedAlias0 -> ticket0_.id
w2022-03-15 21:26:49 DEBUG getDataType() : client -> org.hibernate.type.ManyToOneType(ru.edu.helpdesk.entity.User)
w2022-03-15 21:26:49 DEBUG dereferenceEntityJoin() : generating join for client in ru.edu.helpdesk.entity.Ticket (generatedAlias1) parent = [ {null} ]
w2022-03-15 21:26:49 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.User (generatedAlias1) -> user1_
w2022-03-15 21:26:49 DEBUG addJoinByPathMap() : generatedAlias0.client -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}
w2022-03-15 21:26:49 DEBUG Resolved : generatedAlias0.client -> ticket0_.client_id
w2022-03-15 21:26:49 DEBUG createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'user user1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Ticket.client,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}

w2022-03-15 21:26:49 DEBUG Resolved : generatedAlias0 -> ticket0_.id
w2022-03-15 21:26:49 DEBUG Resolved : generatedAlias1 -> user1_.id
w2022-03-15 21:26:49 DEBUG getDataType() : id -> org.hibernate.type.LongType@24fc305f
w2022-03-15 21:26:49 DEBUG Resolved : generatedAlias1.id -> user1_.id
w2022-03-15 21:26:49 DEBUG select : finishing up [level=1, statement=select]
w2022-03-15 21:26:49 DEBUG processQuery() :  ( SELECT ( {select clause} ticket0_.id ) ( FromClause{level=1} ( ticket ticket0_ user user1_ ) ) ( where ( = ( user1_.id user1_.id id ) ? ) ) )
w2022-03-15 21:26:49 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Ticket): [ticket]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.Ticket)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.User)
          | path: generatedAlias1.id
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.User)
          |  | originalText: generatedAlias1
          |  \-IdentNode
          |    persister: null
          |    originalText: id
          \-ParameterNode

w2022-03-15 21:26:49 DEBUG Using FROM fragment [ticket ticket0_]
w2022-03-15 21:26:49 DEBUG Using FROM fragment [left outer join user user1_ on ticket0_.client_id=user1_.id]
w2022-03-15 21:26:49 DEBUG select >> end [level=1, statement=select]
w2022-03-15 21:26:49 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (ticket,user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'ticket0_.id as id1_1_' {alias=generatedAlias0, className=ru.edu.helpdesk.entity.Ticket, tableAlias=ticket0_}
    |  \-[SQL_TOKEN] SqlFragment: 'ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[ticket0_, user1_], fromElementsByPath=[generatedAlias0.client], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'ticket ticket0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=ticket,tableAlias=ticket0_,origin=null,columns={,className=ru.edu.helpdesk.entity.Ticket}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join user user1_ on ticket0_.client_id=user1_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Ticket.client,tableName=user,tableAlias=user1_,origin=ticket ticket0_,columns={ticket0_.client_id,className=ru.edu.helpdesk.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user1_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias1.id,tableAlias=user1_,className=ru.edu.helpdesk.entity.User,classAlias=generatedAlias1}
          |  +-[ALIAS_REF] IdentNode: 'user1_.id' {alias=generatedAlias1, className=ru.edu.helpdesk.entity.User, tableAlias=user1_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LongType@24fc305f}

w2022-03-15 21:26:49 DEBUG throwQueryException() : no errors
w2022-03-15 21:26:49 DEBUG HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 21:26:49 DEBUG SQL: select ticket0_.id as id1_1_, ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id where user1_.id=?
w2022-03-15 21:26:49 DEBUG throwQueryException() : no errors
w2022-03-15 21:26:49 DEBUG select ticket0_.id as id1_1_, ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id where user1_.id=?
w2022-03-15 21:26:49 DEBUG Result set row: 0
w2022-03-15 21:26:49 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 21:26:49 DEBUG Result set row: 1
w2022-03-15 21:26:49 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 21:26:49 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 21:26:49 DEBUG Processing attribute `client` : value = 1
w2022-03-15 21:26:49 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:49 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 21:26:49 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 21:26:49 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#1]
w2022-03-15 21:26:49 DEBUG Processing attribute `firstName` : value = admin
w2022-03-15 21:26:49 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:49 DEBUG Processing attribute `lastName` : value = admin
w2022-03-15 21:26:49 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:49 DEBUG Processing attribute `login` : value = admin
w2022-03-15 21:26:49 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:49 DEBUG Processing attribute `password` : value = admin
w2022-03-15 21:26:49 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:49 DEBUG Processing attribute `role` : value = ADMIN
w2022-03-15 21:26:49 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:49 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#1]
w2022-03-15 21:26:49 DEBUG Done entity load : ru.edu.helpdesk.entity.User#1
w2022-03-15 21:26:49 DEBUG Processing attribute `status` : value = WORKING
w2022-03-15 21:26:49 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:49 DEBUG Processing attribute `support` : value = 2
w2022-03-15 21:26:49 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:49 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 21:26:49 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 21:26:49 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#2]
w2022-03-15 21:26:49 DEBUG Processing attribute `firstName` : value = support
w2022-03-15 21:26:49 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:49 DEBUG Processing attribute `lastName` : value = support
w2022-03-15 21:26:49 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:49 DEBUG Processing attribute `login` : value = support
w2022-03-15 21:26:49 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:49 DEBUG Processing attribute `password` : value = support
w2022-03-15 21:26:49 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:49 DEBUG Processing attribute `role` : value = SUPPORT
w2022-03-15 21:26:49 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:49 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#2]
w2022-03-15 21:26:49 DEBUG Done entity load : ru.edu.helpdesk.entity.User#2
w2022-03-15 21:26:49 DEBUG Processing attribute `title` : value = Hello user1
w2022-03-15 21:26:49 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:49 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 21:26:49 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 21:26:49 DEBUG Processing attribute `client` : value = 1
w2022-03-15 21:26:49 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:49 DEBUG Processing attribute `status` : value = OPEN
w2022-03-15 21:26:49 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:49 DEBUG Processing attribute `support` : value = 2
w2022-03-15 21:26:49 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:49 DEBUG Processing attribute `title` : value = Title2
w2022-03-15 21:26:49 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:49 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 21:26:51 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 21:26:51 DEBUG begin
w2022-03-15 21:26:51 DEBUG committing
w2022-03-15 21:26:51 DEBUG Rendered criteria query -> select generatedAlias0 from Comment as generatedAlias0 left join generatedAlias0.ticket as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 21:26:51 DEBUG parse() - HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Comment as generatedAlias0 left join generatedAlias0.ticket as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 21:26:51 DEBUG throwQueryException() : no errors
w2022-03-15 21:26:51 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[IDENT] Node: 'ru'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'edu'
    |  |  |  |  |  |  \-[IDENT] Node: 'helpdesk'
    |  |  |  |  |  \-[IDENT] Node: 'entity'
    |  |  |  |  \-[IDENT] Node: 'Comment'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'ticket'
    |  |     \-[ALIAS] Node: 'generatedAlias1'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias1'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

w2022-03-15 21:26:51 DEBUG select << begin [level=1, statement=select]
w2022-03-15 21:26:51 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.Comment (generatedAlias0) -> comment0_
w2022-03-15 21:26:51 DEBUG Resolved : generatedAlias0 -> comment0_.id
w2022-03-15 21:26:51 DEBUG getDataType() : ticket -> org.hibernate.type.ManyToOneType(ru.edu.helpdesk.entity.Ticket)
w2022-03-15 21:26:51 DEBUG dereferenceEntityJoin() : generating join for ticket in ru.edu.helpdesk.entity.Comment (generatedAlias1) parent = [ {null} ]
w2022-03-15 21:26:51 DEBUG FromClause{level=1} : ru.edu.helpdesk.entity.Ticket (generatedAlias1) -> ticket1_
w2022-03-15 21:26:51 DEBUG addJoinByPathMap() : generatedAlias0.ticket -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=ticket,tableAlias=ticket1_,origin=comment comment0_,columns={comment0_.ticket_id,className=ru.edu.helpdesk.entity.Ticket}}
w2022-03-15 21:26:51 DEBUG Resolved : generatedAlias0.ticket -> comment0_.ticket_id
w2022-03-15 21:26:51 DEBUG createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'ticket ticket1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Comment.ticket,tableName=ticket,tableAlias=ticket1_,origin=comment comment0_,columns={comment0_.ticket_id,className=ru.edu.helpdesk.entity.Ticket}}

w2022-03-15 21:26:51 DEBUG Resolved : generatedAlias0 -> comment0_.id
w2022-03-15 21:26:51 DEBUG Resolved : generatedAlias1 -> ticket1_.id
w2022-03-15 21:26:51 DEBUG getDataType() : id -> org.hibernate.type.LongType@24fc305f
w2022-03-15 21:26:51 DEBUG Resolved : generatedAlias1.id -> ticket1_.id
w2022-03-15 21:26:51 DEBUG select : finishing up [level=1, statement=select]
w2022-03-15 21:26:51 DEBUG processQuery() :  ( SELECT ( {select clause} comment0_.id ) ( FromClause{level=1} ( comment comment0_ ticket ticket1_ ) ) ( where ( = ( ticket1_.id ticket1_.id id ) ? ) ) )
w2022-03-15 21:26:51 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Comment): [comment]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.Comment)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.Ticket)
          | path: generatedAlias1.id
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(ru.edu.helpdesk.entity.Ticket)
          |  | originalText: generatedAlias1
          |  \-IdentNode
          |    persister: null
          |    originalText: id
          \-ParameterNode

w2022-03-15 21:26:51 DEBUG Using FROM fragment [comment comment0_]
w2022-03-15 21:26:51 DEBUG Using FROM fragment [left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id]
w2022-03-15 21:26:51 DEBUG select >> end [level=1, statement=select]
w2022-03-15 21:26:51 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (ticket,comment)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'comment0_.id as id1_0_' {alias=generatedAlias0, className=ru.edu.helpdesk.entity.Comment, tableAlias=comment0_}
    |  \-[SQL_TOKEN] SqlFragment: 'comment0_.message as message2_0_, comment0_.ticket_id as ticket_i3_0_, comment0_.user_id as user_id4_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0, generatedAlias1], fromElementByTableAlias=[ticket1_, comment0_], fromElementsByPath=[generatedAlias0.ticket], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'comment comment0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=comment,tableAlias=comment0_,origin=null,columns={,className=ru.edu.helpdesk.entity.Comment}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=ru.edu.helpdesk.entity.Comment.ticket,tableName=ticket,tableAlias=ticket1_,origin=comment comment0_,columns={comment0_.ticket_id,className=ru.edu.helpdesk.entity.Ticket}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'ticket1_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias1.id,tableAlias=ticket1_,className=ru.edu.helpdesk.entity.Ticket,classAlias=generatedAlias1}
          |  +-[ALIAS_REF] IdentNode: 'ticket1_.id' {alias=generatedAlias1, className=ru.edu.helpdesk.entity.Ticket, tableAlias=ticket1_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LongType@24fc305f}

w2022-03-15 21:26:51 DEBUG throwQueryException() : no errors
w2022-03-15 21:26:51 DEBUG HQL: select generatedAlias0 from ru.edu.helpdesk.entity.Comment as generatedAlias0 left join generatedAlias0.ticket as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 21:26:51 DEBUG SQL: select comment0_.id as id1_0_, comment0_.message as message2_0_, comment0_.ticket_id as ticket_i3_0_, comment0_.user_id as user_id4_0_ from comment comment0_ left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id where ticket1_.id=?
w2022-03-15 21:26:51 DEBUG throwQueryException() : no errors
w2022-03-15 21:26:51 DEBUG select comment0_.id as id1_0_, comment0_.message as message2_0_, comment0_.ticket_id as ticket_i3_0_, comment0_.user_id as user_id4_0_ from comment comment0_ left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id where ticket1_.id=?
w2022-03-15 21:26:51 DEBUG Result set row: 0
w2022-03-15 21:26:51 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Comment#1]
w2022-03-15 21:26:51 DEBUG Result set row: 1
w2022-03-15 21:26:51 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Comment#3]
w2022-03-15 21:26:51 DEBUG Result set row: 2
w2022-03-15 21:26:51 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Comment#4]
w2022-03-15 21:26:51 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Comment#1]
w2022-03-15 21:26:51 DEBUG Processing attribute `message` : value = comment ticket1
w2022-03-15 21:26:51 DEBUG Attribute (`message`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:51 DEBUG Processing attribute `ticket` : value = 1
w2022-03-15 21:26:51 DEBUG Attribute (`ticket`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:51 DEBUG select ticket0_.id as id1_1_0_, ticket0_.client_id as client_i4_1_0_, ticket0_.status as status2_1_0_, ticket0_.support_id as support_5_1_0_, ticket0_.title as title3_1_0_, user1_.id as id1_2_1_, user1_.first_name as first_na2_2_1_, user1_.last_name as last_nam3_2_1_, user1_.login as login4_2_1_, user1_.password as password5_2_1_, user1_.role as role6_2_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id left outer join user user2_ on ticket0_.support_id=user2_.id where ticket0_.id=?
w2022-03-15 21:26:51 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 21:26:51 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 21:26:51 DEBUG Processing attribute `client` : value = 1
w2022-03-15 21:26:51 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:51 DEBUG Processing attribute `status` : value = WORKING
w2022-03-15 21:26:51 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:51 DEBUG Processing attribute `support` : value = 2
w2022-03-15 21:26:51 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:51 DEBUG Processing attribute `title` : value = Hello user1
w2022-03-15 21:26:51 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:51 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 21:26:51 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#1]
w2022-03-15 21:26:51 DEBUG Processing attribute `firstName` : value = admin
w2022-03-15 21:26:51 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:51 DEBUG Processing attribute `lastName` : value = admin
w2022-03-15 21:26:51 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:51 DEBUG Processing attribute `login` : value = admin
w2022-03-15 21:26:51 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:51 DEBUG Processing attribute `password` : value = admin
w2022-03-15 21:26:51 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:51 DEBUG Processing attribute `role` : value = ADMIN
w2022-03-15 21:26:51 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:51 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#1]
w2022-03-15 21:26:51 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#2]
w2022-03-15 21:26:51 DEBUG Processing attribute `firstName` : value = support
w2022-03-15 21:26:51 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:51 DEBUG Processing attribute `lastName` : value = support
w2022-03-15 21:26:51 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:51 DEBUG Processing attribute `login` : value = support
w2022-03-15 21:26:51 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:51 DEBUG Processing attribute `password` : value = support
w2022-03-15 21:26:51 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:51 DEBUG Processing attribute `role` : value = SUPPORT
w2022-03-15 21:26:51 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:51 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#2]
w2022-03-15 21:26:51 DEBUG Done entity load : ru.edu.helpdesk.entity.Ticket#1
w2022-03-15 21:26:51 DEBUG Processing attribute `user` : value = 3
w2022-03-15 21:26:51 DEBUG Attribute (`user`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:51 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 21:26:51 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 21:26:51 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#3]
w2022-03-15 21:26:51 DEBUG Processing attribute `firstName` : value = user1
w2022-03-15 21:26:51 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:51 DEBUG Processing attribute `lastName` : value = user1
w2022-03-15 21:26:51 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:51 DEBUG Processing attribute `login` : value = user1
w2022-03-15 21:26:51 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:51 DEBUG Processing attribute `password` : value = user1
w2022-03-15 21:26:51 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:51 DEBUG Processing attribute `role` : value = USER
w2022-03-15 21:26:51 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:51 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#3]
w2022-03-15 21:26:51 DEBUG Done entity load : ru.edu.helpdesk.entity.User#3
w2022-03-15 21:26:51 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Comment#1]
w2022-03-15 21:26:51 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Comment#3]
w2022-03-15 21:26:51 DEBUG Processing attribute `message` : value = comment ticket11
w2022-03-15 21:26:51 DEBUG Attribute (`message`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:51 DEBUG Processing attribute `ticket` : value = 1
w2022-03-15 21:26:51 DEBUG Attribute (`ticket`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:51 DEBUG Processing attribute `user` : value = 2
w2022-03-15 21:26:51 DEBUG Attribute (`user`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:51 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Comment#3]
w2022-03-15 21:26:51 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Comment#4]
w2022-03-15 21:26:51 DEBUG Processing attribute `message` : value = comment ticket111
w2022-03-15 21:26:51 DEBUG Attribute (`message`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:51 DEBUG Processing attribute `ticket` : value = 1
w2022-03-15 21:26:51 DEBUG Attribute (`ticket`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:51 DEBUG Processing attribute `user` : value = 2
w2022-03-15 21:26:51 DEBUG Attribute (`user`)  - enhanced for lazy-loading? - false
w2022-03-15 21:26:51 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Comment#4]
w2022-03-15 21:27:18 DEBUG Rendered criteria query -> select generatedAlias0 from Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 21:27:18 DEBUG select ticket0_.id as id1_1_, ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id where user1_.id=?
w2022-03-15 21:27:18 DEBUG Result set row: 0
w2022-03-15 21:27:18 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 21:27:18 DEBUG Result set row: 1
w2022-03-15 21:27:18 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 21:27:18 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 21:27:18 DEBUG Processing attribute `client` : value = 1
w2022-03-15 21:27:18 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 21:27:18 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 21:27:18 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 21:27:18 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#1]
w2022-03-15 21:27:18 DEBUG Processing attribute `firstName` : value = admin
w2022-03-15 21:27:18 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 21:27:18 DEBUG Processing attribute `lastName` : value = admin
w2022-03-15 21:27:18 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 21:27:18 DEBUG Processing attribute `login` : value = admin
w2022-03-15 21:27:18 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 21:27:18 DEBUG Processing attribute `password` : value = admin
w2022-03-15 21:27:18 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 21:27:18 DEBUG Processing attribute `role` : value = ADMIN
w2022-03-15 21:27:18 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 21:27:18 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#1]
w2022-03-15 21:27:18 DEBUG Done entity load : ru.edu.helpdesk.entity.User#1
w2022-03-15 21:27:18 DEBUG Processing attribute `status` : value = WORKING
w2022-03-15 21:27:18 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 21:27:18 DEBUG Processing attribute `support` : value = 2
w2022-03-15 21:27:18 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 21:27:18 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 21:27:18 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 21:27:18 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#2]
w2022-03-15 21:27:18 DEBUG Processing attribute `firstName` : value = support
w2022-03-15 21:27:18 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 21:27:18 DEBUG Processing attribute `lastName` : value = support
w2022-03-15 21:27:18 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 21:27:18 DEBUG Processing attribute `login` : value = support
w2022-03-15 21:27:18 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 21:27:18 DEBUG Processing attribute `password` : value = support
w2022-03-15 21:27:18 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 21:27:18 DEBUG Processing attribute `role` : value = SUPPORT
w2022-03-15 21:27:18 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 21:27:18 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#2]
w2022-03-15 21:27:18 DEBUG Done entity load : ru.edu.helpdesk.entity.User#2
w2022-03-15 21:27:18 DEBUG Processing attribute `title` : value = Hello user1
w2022-03-15 21:27:18 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 21:27:18 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 21:27:18 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 21:27:18 DEBUG Processing attribute `client` : value = 1
w2022-03-15 21:27:18 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 21:27:18 DEBUG Processing attribute `status` : value = OPEN
w2022-03-15 21:27:18 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 21:27:18 DEBUG Processing attribute `support` : value = 2
w2022-03-15 21:27:18 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 21:27:18 DEBUG Processing attribute `title` : value = Title2
w2022-03-15 21:27:18 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 21:27:18 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 21:27:19 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
w2022-03-15 21:27:19 DEBUG begin
w2022-03-15 21:27:19 DEBUG committing
w2022-03-15 21:27:19 DEBUG Rendered criteria query -> select generatedAlias0 from Comment as generatedAlias0 left join generatedAlias0.ticket as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 21:27:19 DEBUG select comment0_.id as id1_0_, comment0_.message as message2_0_, comment0_.ticket_id as ticket_i3_0_, comment0_.user_id as user_id4_0_ from comment comment0_ left outer join ticket ticket1_ on comment0_.ticket_id=ticket1_.id where ticket1_.id=?
w2022-03-15 21:27:19 DEBUG Result set row: 0
w2022-03-15 21:27:19 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Comment#2]
w2022-03-15 21:27:19 DEBUG Result set row: 1
w2022-03-15 21:27:19 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Comment#5]
w2022-03-15 21:27:19 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Comment#2]
w2022-03-15 21:27:19 DEBUG Processing attribute `message` : value = comment ticket2
w2022-03-15 21:27:19 DEBUG Attribute (`message`)  - enhanced for lazy-loading? - false
w2022-03-15 21:27:19 DEBUG Processing attribute `ticket` : value = 2
w2022-03-15 21:27:19 DEBUG Attribute (`ticket`)  - enhanced for lazy-loading? - false
w2022-03-15 21:27:19 DEBUG select ticket0_.id as id1_1_0_, ticket0_.client_id as client_i4_1_0_, ticket0_.status as status2_1_0_, ticket0_.support_id as support_5_1_0_, ticket0_.title as title3_1_0_, user1_.id as id1_2_1_, user1_.first_name as first_na2_2_1_, user1_.last_name as last_nam3_2_1_, user1_.login as login4_2_1_, user1_.password as password5_2_1_, user1_.role as role6_2_1_, user2_.id as id1_2_2_, user2_.first_name as first_na2_2_2_, user2_.last_name as last_nam3_2_2_, user2_.login as login4_2_2_, user2_.password as password5_2_2_, user2_.role as role6_2_2_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id left outer join user user2_ on ticket0_.support_id=user2_.id where ticket0_.id=?
w2022-03-15 21:27:19 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 21:27:19 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 21:27:19 DEBUG Processing attribute `client` : value = 1
w2022-03-15 21:27:19 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 21:27:19 DEBUG Processing attribute `status` : value = OPEN
w2022-03-15 21:27:19 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 21:27:19 DEBUG Processing attribute `support` : value = 2
w2022-03-15 21:27:19 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 21:27:19 DEBUG Processing attribute `title` : value = Title2
w2022-03-15 21:27:19 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 21:27:19 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 21:27:19 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#1]
w2022-03-15 21:27:19 DEBUG Processing attribute `firstName` : value = admin
w2022-03-15 21:27:19 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 21:27:19 DEBUG Processing attribute `lastName` : value = admin
w2022-03-15 21:27:19 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 21:27:19 DEBUG Processing attribute `login` : value = admin
w2022-03-15 21:27:19 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 21:27:19 DEBUG Processing attribute `password` : value = admin
w2022-03-15 21:27:19 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 21:27:19 DEBUG Processing attribute `role` : value = ADMIN
w2022-03-15 21:27:19 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 21:27:19 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#1]
w2022-03-15 21:27:19 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#2]
w2022-03-15 21:27:19 DEBUG Processing attribute `firstName` : value = support
w2022-03-15 21:27:19 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 21:27:19 DEBUG Processing attribute `lastName` : value = support
w2022-03-15 21:27:19 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 21:27:19 DEBUG Processing attribute `login` : value = support
w2022-03-15 21:27:19 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 21:27:19 DEBUG Processing attribute `password` : value = support
w2022-03-15 21:27:19 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 21:27:19 DEBUG Processing attribute `role` : value = SUPPORT
w2022-03-15 21:27:19 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 21:27:19 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#2]
w2022-03-15 21:27:19 DEBUG Done entity load : ru.edu.helpdesk.entity.Ticket#2
w2022-03-15 21:27:19 DEBUG Processing attribute `user` : value = 3
w2022-03-15 21:27:19 DEBUG Attribute (`user`)  - enhanced for lazy-loading? - false
w2022-03-15 21:27:19 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 21:27:19 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 21:27:19 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#3]
w2022-03-15 21:27:19 DEBUG Processing attribute `firstName` : value = user1
w2022-03-15 21:27:19 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 21:27:19 DEBUG Processing attribute `lastName` : value = user1
w2022-03-15 21:27:19 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 21:27:19 DEBUG Processing attribute `login` : value = user1
w2022-03-15 21:27:19 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 21:27:19 DEBUG Processing attribute `password` : value = user1
w2022-03-15 21:27:19 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 21:27:19 DEBUG Processing attribute `role` : value = USER
w2022-03-15 21:27:19 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 21:27:19 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#3]
w2022-03-15 21:27:19 DEBUG Done entity load : ru.edu.helpdesk.entity.User#3
w2022-03-15 21:27:19 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Comment#2]
w2022-03-15 21:27:19 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Comment#5]
w2022-03-15 21:27:19 DEBUG Processing attribute `message` : value = comment ticket22
w2022-03-15 21:27:19 DEBUG Attribute (`message`)  - enhanced for lazy-loading? - false
w2022-03-15 21:27:19 DEBUG Processing attribute `ticket` : value = 2
w2022-03-15 21:27:19 DEBUG Attribute (`ticket`)  - enhanced for lazy-loading? - false
w2022-03-15 21:27:19 DEBUG Processing attribute `user` : value = 2
w2022-03-15 21:27:19 DEBUG Attribute (`user`)  - enhanced for lazy-loading? - false
w2022-03-15 21:27:19 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Comment#5]
w2022-03-15 21:28:41 DEBUG Rendered criteria query -> select generatedAlias0 from Ticket as generatedAlias0 left join generatedAlias0.client as generatedAlias1 where generatedAlias1.id=:param0
w2022-03-15 21:28:41 DEBUG select ticket0_.id as id1_1_, ticket0_.client_id as client_i4_1_, ticket0_.status as status2_1_, ticket0_.support_id as support_5_1_, ticket0_.title as title3_1_ from ticket ticket0_ left outer join user user1_ on ticket0_.client_id=user1_.id where user1_.id=?
w2022-03-15 21:28:41 DEBUG Result set row: 0
w2022-03-15 21:28:41 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 21:28:41 DEBUG Result set row: 1
w2022-03-15 21:28:41 DEBUG Result row: EntityKey[ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 21:28:41 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 21:28:41 DEBUG Processing attribute `client` : value = 1
w2022-03-15 21:28:41 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 21:28:41 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 21:28:41 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 21:28:41 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#1]
w2022-03-15 21:28:41 DEBUG Processing attribute `firstName` : value = admin
w2022-03-15 21:28:41 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 21:28:41 DEBUG Processing attribute `lastName` : value = admin
w2022-03-15 21:28:41 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 21:28:41 DEBUG Processing attribute `login` : value = admin
w2022-03-15 21:28:41 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 21:28:41 DEBUG Processing attribute `password` : value = admin
w2022-03-15 21:28:41 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 21:28:41 DEBUG Processing attribute `role` : value = ADMIN
w2022-03-15 21:28:41 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 21:28:41 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#1]
w2022-03-15 21:28:41 DEBUG Done entity load : ru.edu.helpdesk.entity.User#1
w2022-03-15 21:28:41 DEBUG Processing attribute `status` : value = WORKING
w2022-03-15 21:28:41 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 21:28:41 DEBUG Processing attribute `support` : value = 2
w2022-03-15 21:28:41 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 21:28:41 DEBUG select user0_.id as id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.login as login4_2_0_, user0_.password as password5_2_0_, user0_.role as role6_2_0_ from user user0_ where user0_.id=?
w2022-03-15 21:28:41 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
w2022-03-15 21:28:41 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.User#2]
w2022-03-15 21:28:41 DEBUG Processing attribute `firstName` : value = support
w2022-03-15 21:28:41 DEBUG Attribute (`firstName`)  - enhanced for lazy-loading? - false
w2022-03-15 21:28:41 DEBUG Processing attribute `lastName` : value = support
w2022-03-15 21:28:41 DEBUG Attribute (`lastName`)  - enhanced for lazy-loading? - false
w2022-03-15 21:28:41 DEBUG Processing attribute `login` : value = support
w2022-03-15 21:28:41 DEBUG Attribute (`login`)  - enhanced for lazy-loading? - false
w2022-03-15 21:28:41 DEBUG Processing attribute `password` : value = support
w2022-03-15 21:28:41 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
w2022-03-15 21:28:41 DEBUG Processing attribute `role` : value = SUPPORT
w2022-03-15 21:28:41 DEBUG Attribute (`role`)  - enhanced for lazy-loading? - false
w2022-03-15 21:28:41 DEBUG Done materializing entity [ru.edu.helpdesk.entity.User#2]
w2022-03-15 21:28:41 DEBUG Done entity load : ru.edu.helpdesk.entity.User#2
w2022-03-15 21:28:41 DEBUG Processing attribute `title` : value = Hello user1
w2022-03-15 21:28:41 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 21:28:41 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#1]
w2022-03-15 21:28:41 DEBUG Resolving attributes for [ru.edu.helpdesk.entity.Ticket#2]
w2022-03-15 21:28:41 DEBUG Processing attribute `client` : value = 1
w2022-03-15 21:28:41 DEBUG Attribute (`client`)  - enhanced for lazy-loading? - false
w2022-03-15 21:28:41 DEBUG Processing attribute `status` : value = OPEN
w2022-03-15 21:28:41 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
w2022-03-15 21:28:41 DEBUG Processing attribute `support` : value = 2
w2022-03-15 21:28:41 DEBUG Attribute (`support`)  - enhanced for lazy-loading? - false
w2022-03-15 21:28:41 DEBUG Processing attribute `title` : value = Title2
w2022-03-15 21:28:41 DEBUG Attribute (`title`)  - enhanced for lazy-loading? - false
w2022-03-15 21:28:41 DEBUG Done materializing entity [ru.edu.helpdesk.entity.Ticket#2]
w